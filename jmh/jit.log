<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='11764' time_ms='1666607995435'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
25.345-b01
</release>
<info>
OpenJDK 64-Bit Server VM (25.345-b01) for windows-amd64 JRE (1.8.0_345-b01), built on Aug  2 2022 10:16:38 by &quot;jenkins&quot; with MS VC++ 12.0 (VS2013)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log -javaagent:D:\Soft\idea\apps\IDEA-C\ch-1\222.4345.14\lib\idea_rt.jar=6592:D:\Soft\idea\apps\IDEA-C\ch-1\222.4345.14\bin -Dfile.encoding=UTF-8 
</args>
<command>
pers.mine.scratchpad.other.SafepointTest
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.345-b01
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\Soft\java\temurin1.8\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=D:\Soft\java\temurin1.8\jre\lib\endorsed
sun.boot.library.path=D:\Soft\java\temurin1.8\jre\bin
java.library.path=D:\Soft\java\temurin1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Soft\python\;D:\Soft\python\Scripts;D:\Soft\maven\apache-maven-3.6.3\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;D:\Soft\java\1.8\bin;D:\Soft\Fancy\protoc-3.10.0-win64\bin;D:\Soft\Fancy\protoc2;D:\Soft\Fancy\protoc-3.0.0-alpha-3-win32;D:\Soft\Fancy\protoc-3.0.0-beta-4-win32\bin;D:\Soft\mysql\mysql-5.7.31-winx64\bin;D:\Soft\tortoise\bin;D:\Soft\git\Git\cmd;D:\Soft\Hugo\hugo_0.82.0_Windows-64bit;D:\Soft\Go\go1.16.2.windows-amd64\bin;D:\Data\GoPath\bin;C:\Program Files (x86)\Prince\engine\bin;D:\Soft\Fancy\protoc-21.1-win64\bin;D:\Soft\nodejs\node-v16.16.0-win-x64;D:\iWork\nodepkg\node_cache;D:\iWork\nodepkg\node_global;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;D:\Soft\Microsoft VS Code\bin;C:\Users\admin\AppData\Local\JetBrains\Toolbox\scripts;.
java.home=D:\Soft\java\temurin1.8\jre
java.class.path=D:\Soft\java\temurin1.8\jre\lib\charsets.jar;D:\Soft\java\temurin1.8\jre\lib\ext\access-bridge-64.jar;D:\Soft\java\temurin1.8\jre\lib\ext\cldrdata.jar;D:\Soft\java\temurin1.8\jre\lib\ext\dnsns.jar;D:\Soft\java\temurin1.8\jre\lib\ext\jaccess.jar;D:\Soft\java\temurin1.8\jre\lib\ext\localedata.jar;D:\Soft\java\temurin1.8\jre\lib\ext\nashorn.jar;D:\Soft\java\temurin1.8\jre\lib\ext\sunec.jar;D:\Soft\java\temurin1.8\jre\lib\ext\sunjce_provider.jar;D:\Soft\java\temurin1.8\jre\lib\ext\sunmscapi.jar;D:\Soft\java\temurin1.8\jre\lib\ext\sunpkcs11.jar;D:\Soft\java\temurin1.8\jre\lib\ext\zipfs.jar;D:\Soft\java\temurin1.8\jre\lib\jce.jar;D:\Soft\java\temurin1.8\jre\lib\jfr.jar;D:\Soft\java\temurin1.8\jre\lib\jsse.jar;D:\Soft\java\temurin1.8\jre\lib\management-agent.jar;D:\Soft\java\temurin1.8\jre\lib\resources.jar;D:\Soft\java\temurin1.8\jre\lib\rt.jar;D:\iWork\pers\scratchpad\scratchpad-simple\target\classes;D:\iWork\maven\repository\com\atlassian\commonmark\commonmark\0.13.0\commonmark-0.13.0.jar;D:\iWork\maven\repository\com\atlassian\commonmark\commonmark-ext-gfm-tables\0.13.0\commonmark-ext-gfm-tables-0.13.0.jar;D:\iWork\maven\repository\org\openjdk\jol\jol-core\0.14\jol-core-0.14.jar;D:\iWork\maven\repository\com\vladsch\flexmark\flexmark-all\0.34.48\flexmark-all-0.34.48.jar;D:\iWork\maven\repository\com\vladsch\flexmark\flexmark\0.34.48\flexmark-0.34.48.jar;D:\iWork\maven\repository\com\vladsch\flexmark\flexmark-ext-abbreviation\0.34.48\flexmark-ext-abbreviation-0.34.48.jar;D:\iWork\maven\repository\com\vladsch\flexmark\flexmark-ext-admonition\0.34.48\flexmark-ext-admonition-0.34.48.jar;D:\iWork\maven\repository\com\vladsch\flexmark\flexmark-ext-anchorlink\0.34.48\flexmark-ext-anchorlink-0.34.48.jar;D:\iWork\maven\repository\com\vladsch\flexmark\flexmark-ext-aside\0.34.48\flexmark-ext-aside-0.34.48.jar;D:\iWork\maven\repository\com\vladsch\flexmark\flexmark-ext-attributes\0.34.48\flexmark-ext-attributes-0.34.48.jar;D:\iWork\maven\repository\com\vladsch\fl
sun.boot.class.path=D:\Soft\java\temurin1.8\jre\lib\resources.jar;D:\Soft\java\temurin1.8\jre\lib\rt.jar;D:\Soft\java\temurin1.8\jre\lib\sunrsasign.jar;D:\Soft\java\temurin1.8\jre\lib\jsse.jar;D:\Soft\java\temurin1.8\jre\lib\jce.jar;D:\Soft\java\temurin1.8\jre\lib\charsets.jar;D:\Soft\java\temurin1.8\jre\lib\jfr.jar;D:\Soft\java\temurin1.8\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Temurin
file.encoding=UTF-8
sun.java.command=pers.mine.scratchpad.other.SafepointTest
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='21600'/>
<task_queued compile_id='1' method='java/lang/Math min (II)I' bytes='11' count='5632' iicount='5632' stamp='0.524' comment='tiered' hot_count='5632'/>
<writer thread='27436'/>
Loaded disassembler from D:\Soft\java\temurin1.8\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x00000248073a1190:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x000002481fb198a0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x00000248073a1300: mov    0x8(%rdx),%r10d
  0x00000248073a1304: shl    $0x3,%r10
  0x00000248073a1308: cmp    %r10,%rax
  0x00000248073a130b: je     0x00000248073a1318
  0x00000248073a1311: jmp    0x0000024807375ca0  ;   {runtime_call}
  0x00000248073a1316: xchg   %ax,%ax
[Verified Entry Point]
  0x00000248073a1318: mov    %eax,-0x6000(%rsp)
  0x00000248073a131f: push   %rbp
  0x00000248073a1320: mov    %rsp,%rbp
  0x00000248073a1323: sub    $0x80,%rsp
  0x00000248073a132a: mov    %rsi,0x30(%rsp)
  0x00000248073a132f: mov    %rdi,0x28(%rsp)
  0x00000248073a1334: mov    %r9,0x48(%rsp)
  0x00000248073a1339: cmp    $0x0,%r9
  0x00000248073a133d: lea    0x48(%rsp),%rax
  0x00000248073a1342: cmove  0x48(%rsp),%rax
  0x00000248073a1348: mov    %rax,0x20(%rsp)
  0x00000248073a134d: mov    %r8,%r9
  0x00000248073a1350: mov    %rdx,0x38(%rsp)
  0x00000248073a1355: cmp    $0x0,%rdx
  0x00000248073a1359: lea    0x38(%rsp),%r8
  0x00000248073a135e: cmove  0x38(%rsp),%r8
  0x00000248073a1364: movabs $0x76b700c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000248073a136e: mov    %r14,0x68(%rsp)
  0x00000248073a1373: lea    0x68(%rsp),%r14
  0x00000248073a1378: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x00000248073a137b: movabs $0x248073a137b,%r10  ;   {section_word}
  0x00000248073a1385: mov    %r10,0x240(%r15)
  0x00000248073a138c: mov    %rsp,0x238(%r15)
  0x00000248073a1393: movabs $0x667e60d1,%r10   ;   {external_word}
  0x00000248073a139d: cmpb   $0x0,(%r10)
  0x00000248073a13a1: je     0x00000248073a13f9
  0x00000248073a13a7: push   %rdx
  0x00000248073a13a8: push   %r8
  0x00000248073a13aa: push   %r9
  0x00000248073a13ac: movabs $0x2481fb19898,%rdx  ;   {metadata({method} {0x000002481fb198a0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000248073a13b6: mov    %r15,%rcx
  0x00000248073a13b9: sub    $0x20,%rsp
  0x00000248073a13bd: test   $0xf,%esp
  0x00000248073a13c3: je     0x00000248073a13e3
  0x00000248073a13c9: sub    $0x8,%rsp
  0x00000248073a13cd: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x00000248073a13d7: call   *%r10
  0x00000248073a13da: add    $0x8,%rsp
  0x00000248073a13de: jmp    0x00000248073a13f0
  0x00000248073a13e3: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x00000248073a13ed: call   *%r10
  0x00000248073a13f0: add    $0x20,%rsp
  0x00000248073a13f4: pop    %r9
  0x00000248073a13f6: pop    %r8
  0x00000248073a13f8: pop    %rdx
  0x00000248073a13f9: lea    0x258(%r15),%rcx
  0x00000248073a1400: movl   $0x4,0x2d0(%r15)
  0x00000248073a140b: movabs $0x7ffe399905e2,%r10  ;   {runtime_call}
  0x00000248073a1415: call   *%r10
  0x00000248073a1418: vzeroupper 
  0x00000248073a141b: movl   $0x5,0x2d0(%r15)
  0x00000248073a1426: mov    %r15d,%ecx
  0x00000248073a1429: shr    $0x4,%ecx
  0x00000248073a142c: and    $0xffc,%ecx
  0x00000248073a1432: movabs $0x248055c0000,%r10  ;   {external_word}
  0x00000248073a143c: mov    %ecx,(%r10,%rcx,1)
  0x00000248073a1440: movabs $0x667e6b0c,%r10   ;   {external_word}
  0x00000248073a144a: cmpl   $0x0,(%r10)
  0x00000248073a1451: jne    0x00000248073a1465
  0x00000248073a1457: cmpl   $0x0,0x30(%r15)
  0x00000248073a145f: je     0x00000248073a1486
  0x00000248073a1465: mov    %r15,%rcx
  0x00000248073a1468: mov    %rsp,%r12
  0x00000248073a146b: sub    $0x20,%rsp
  0x00000248073a146f: and    $0xfffffffffffffff0,%rsp
  0x00000248073a1473: movabs $0x662139d0,%r10   ;   {runtime_call}
  0x00000248073a147d: call   *%r10
  0x00000248073a1480: mov    %r12,%rsp
  0x00000248073a1483: xor    %r12,%r12
  0x00000248073a1486: movl   $0x8,0x2d0(%r15)
  0x00000248073a1491: cmpl   $0x1,0x2fc(%r15)
  0x00000248073a149c: je     0x00000248073a1543
  0x00000248073a14a2: movabs $0x667e60d1,%r10   ;   {external_word}
  0x00000248073a14ac: cmpb   $0x0,(%r10)
  0x00000248073a14b0: je     0x00000248073a14fe
  0x00000248073a14b6: movabs $0x2481fb19898,%rdx  ;   {metadata({method} {0x000002481fb198a0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000248073a14c0: mov    %r15,%rcx
  0x00000248073a14c3: sub    $0x20,%rsp
  0x00000248073a14c7: test   $0xf,%esp
  0x00000248073a14cd: je     0x00000248073a14ed
  0x00000248073a14d3: sub    $0x8,%rsp
  0x00000248073a14d7: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x00000248073a14e1: call   *%r10
  0x00000248073a14e4: add    $0x8,%rsp
  0x00000248073a14e8: jmp    0x00000248073a14fa
  0x00000248073a14ed: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x00000248073a14f7: call   *%r10
  0x00000248073a14fa: add    $0x20,%rsp
  0x00000248073a14fe: movabs $0x0,%r10
  0x00000248073a1508: mov    %r10,0x238(%r15)
  0x00000248073a150f: movabs $0x0,%r10
  0x00000248073a1519: mov    %r10,0x240(%r15)
  0x00000248073a1520: mov    0x38(%r15),%rcx
  0x00000248073a1524: movl   $0x0,0x100(%rcx)
  0x00000248073a152e: leave  
  0x00000248073a152f: cmpq   $0x0,0x8(%r15)
  0x00000248073a1537: jne    0x00000248073a153e
  0x00000248073a153d: ret    
  0x00000248073a153e: jmp    Stub::forward exception  ;   {runtime_call}
  0x00000248073a1543: mov    %rsp,%r12
  0x00000248073a1546: sub    $0x20,%rsp
  0x00000248073a154a: and    $0xfffffffffffffff0,%rsp
  0x00000248073a154e: movabs $0x66203da0,%r10   ;   {runtime_call}
  0x00000248073a1558: call   *%r10
  0x00000248073a155b: mov    %r12,%rsp
  0x00000248073a155e: xor    %r12,%r12
  0x00000248073a1561: jmp    0x00000248073a14a2
  0x00000248073a1566: hlt    
  0x00000248073a1567: hlt    
<nmethod compile_id='2' compile_kind='c2n' level='0' entry='0x00000248073a1300' size='984' address='0x00000248073a1190' relocation_offset='288' consts_offset='984' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='7173' iicount='7173' stamp='0.546'/>
<writer thread='26148'/>
<thread_logfile thread='26148' filename='C:\Users\admin\AppData\Local\Temp\\hs_c26148_pid11764.log'/>
<writer thread='13612'/>
<thread_logfile thread='13612' filename='C:\Users\admin\AppData\Local\Temp\\hs_c13612_pid11764.log'/>
<writer thread='21600'/>
<task_queued compile_id='3' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='2324' backedge_count='61483' iicount='2324' osr_bci='24' stamp='0.546' comment='tiered' hot_count='61440'/>
<task_queued compile_id='4' method='java/lang/String length ()I' bytes='6' count='31872' iicount='31872' stamp='0.546' comment='tiered' hot_count='31872'/>
<task_queued compile_id='5' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='768' iicount='768' level='3' stamp='0.546' comment='tiered' hot_count='768'/>
<writer thread='12268'/>
<thread_logfile thread='12268' filename='C:\Users\admin\AppData\Local\Temp\\hs_c12268_pid11764.log'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807436690:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000024807436800: mov    %eax,-0x6000(%rsp)
  0x0000024807436807: push   %rbp
  0x0000024807436808: sub    $0x60,%rsp
  0x000002480743680c: mov    %rdx,%r9
  0x000002480743680f: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807436819: mov    0xdc(%rbx),%edx
  0x000002480743681f: add    $0x8,%edx
  0x0000024807436822: mov    %edx,0xdc(%rbx)
  0x0000024807436828: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807436832: and    $0x1ff8,%edx
  0x0000024807436838: cmp    $0x0,%edx
  0x000002480743683b: je     0x00000248074369f8  ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)

  0x0000024807436841: mov    %r8,%rbx
  0x0000024807436844: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480743684e: movslq %ebx,%rbx
  0x0000024807436851: mov    %rbx,%rdi
  0x0000024807436854: cmp    $0xffffff,%rbx
  0x000002480743685b: ja     0x0000024807436a0f
  0x0000024807436861: movabs $0x17,%rsi
  0x000002480743686b: lea    (%rsi,%rbx,2),%rsi
  0x000002480743686f: and    $0xfffffffffffffff8,%rsi
  0x0000024807436873: mov    0x60(%r15),%rax
  0x0000024807436877: lea    (%rax,%rsi,1),%rsi
  0x000002480743687b: cmp    0x70(%r15),%rsi
  0x000002480743687f: ja     0x0000024807436a0f
  0x0000024807436885: mov    %rsi,0x60(%r15)
  0x0000024807436889: sub    %rax,%rsi
  0x000002480743688c: movq   $0x1,(%rax)
  0x0000024807436893: mov    %rdx,%rcx
  0x0000024807436896: shr    $0x3,%rcx
  0x000002480743689a: mov    %ecx,0x8(%rax)
  0x000002480743689d: mov    %ebx,0xc(%rax)
  0x00000248074368a0: sub    $0x10,%rsi
  0x00000248074368a4: je     0x00000248074368bb
  0x00000248074368aa: xor    %rbx,%rbx
  0x00000248074368ad: shr    $0x3,%rsi
  0x00000248074368b1: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000248074368b6: dec    %rsi
  0x00000248074368b9: jne    0x00000248074368b1  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)

  0x00000248074368bb: mov    0xc(%r9),%edx      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; implicit exception: dispatches to 0x0000024807436a19
  0x00000248074368bf: movabs $0x2481fd58e70,%rdi  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000248074368c9: addq   $0x1,0x108(%rdi)
  0x00000248074368d1: movabs $0x2481fd13600,%rdi  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000248074368db: mov    0xdc(%rdi),%esi
  0x00000248074368e1: add    $0x8,%esi
  0x00000248074368e4: mov    %esi,0xdc(%rdi)
  0x00000248074368ea: movabs $0x2481fbf7590,%rdi  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000248074368f4: and    $0x7ffff8,%esi
  0x00000248074368fa: cmp    $0x0,%esi
  0x00000248074368fd: je     0x0000024807436a1e
  0x0000024807436903: cmp    %r8d,%edx
  0x0000024807436906: movabs $0x2481fd13600,%rdi  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807436910: movabs $0x108,%rsi
  0x000002480743691a: jg     0x000002480743692a
  0x0000024807436920: movabs $0x118,%rsi
  0x000002480743692a: mov    (%rdi,%rsi,1),%rbx
  0x000002480743692e: lea    0x1(%rbx),%rbx
  0x0000024807436932: mov    %rbx,(%rdi,%rsi,1)
  0x0000024807436936: jg     0x0000024807436955  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x000002480743693c: movabs $0x2481fd13600,%r8  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807436946: incl   0x128(%r8)
  0x000002480743694d: mov    %rdx,%rsi
  0x0000024807436950: jmp    0x0000024807436958  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000024807436955: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000024807436958: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807436962: addq   $0x1,0x118(%rdx)
  0x000002480743696a: mov    %r9,%rdx
  0x000002480743696d: mov    $0x0,%r8d
  0x0000024807436973: mov    %rax,%r9
  0x0000024807436976: mov    $0x0,%edi
  0x000002480743697b: mov    %rax,0x50(%rsp)
  0x0000024807436980: lea    (%r8,%rsi,1),%rcx
  0x0000024807436984: cmp    0xc(%rdx),%ecx
  0x0000024807436987: ja     0x0000024807436a35
  0x000002480743698d: lea    (%rdi,%rsi,1),%rcx
  0x0000024807436991: cmp    0xc(%r9),%ecx
  0x0000024807436995: ja     0x0000024807436a35
  0x000002480743699b: test   %esi,%esi
  0x000002480743699d: jl     0x0000024807436a35
  0x00000248074369a3: je     0x00000248074369e7
  0x00000248074369a9: movslq %r8d,%r8
  0x00000248074369ac: movslq %edi,%rdi
  0x00000248074369af: lea    0x10(%rdx,%r8,2),%rcx
  0x00000248074369b4: lea    0x10(%r9,%rdi,2),%rdx
  0x00000248074369b9: mov    %rsi,%r8
  0x00000248074369bc: sub    $0x20,%rsp
  0x00000248074369c0: test   $0xf,%esp
  0x00000248074369c6: je     0x00000248074369de
  0x00000248074369cc: sub    $0x8,%rsp
  0x00000248074369d0: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000248074369d5: add    $0x8,%rsp
  0x00000248074369d9: jmp    0x00000248074369e3
  0x00000248074369de: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000248074369e3: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)

  0x00000248074369e7: mov    0x50(%rsp),%rax
  0x00000248074369ec: add    $0x60,%rsp
  0x00000248074369f0: pop    %rbp
  0x00000248074369f1: test   %eax,-0x1e868f7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074369f7: ret    
  0x00000248074369f8: mov    %rbx,0x8(%rsp)
  0x00000248074369fd: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807436a05: call   0x0000024807433da0  ; OopMap{r9=Oop off=522}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ;   {runtime_call}
  0x0000024807436a0a: jmp    0x0000024807436841
  0x0000024807436a0f: call   0x0000024807430280  ; OopMap{r9=Oop off=532}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ;   {runtime_call}
  0x0000024807436a14: jmp    0x00000248074368bb
  0x0000024807436a19: call   0x000002480742f100  ; OopMap{r9=Oop rax=Oop off=542}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ;   {runtime_call}
  0x0000024807436a1e: mov    %rdi,0x8(%rsp)
  0x0000024807436a23: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807436a2b: call   0x0000024807433da0  ; OopMap{r9=Oop rax=Oop off=560}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ;   {runtime_call}
  0x0000024807436a30: jmp    0x0000024807436903
  0x0000024807436a35: nop
  0x0000024807436a36: nop
  0x0000024807436a37: call   0x0000024807376360  ; OopMap{[80]=Oop off=572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {static_call}
  0x0000024807436a3c: jmp    0x00000248074369e7
  0x0000024807436a3e: nop
  0x0000024807436a3f: nop
  0x0000024807436a40: mov    0x308(%r15),%rax
  0x0000024807436a47: movabs $0x0,%r10
  0x0000024807436a51: mov    %r10,0x308(%r15)
  0x0000024807436a58: movabs $0x0,%r10
  0x0000024807436a62: mov    %r10,0x310(%r15)
  0x0000024807436a69: add    $0x60,%rsp
  0x0000024807436a6d: pop    %rbp
  0x0000024807436a6e: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807436a73: hlt    
  0x0000024807436a74: hlt    
  0x0000024807436a75: hlt    
  0x0000024807436a76: hlt    
  0x0000024807436a77: hlt    
  0x0000024807436a78: hlt    
  0x0000024807436a79: hlt    
  0x0000024807436a7a: hlt    
  0x0000024807436a7b: hlt    
  0x0000024807436a7c: hlt    
  0x0000024807436a7d: hlt    
  0x0000024807436a7e: hlt    
  0x0000024807436a7f: hlt    
[Stub Code]
  0x0000024807436a80: nop                       ;   {no_reloc}
  0x0000024807436a81: nop
  0x0000024807436a82: nop
  0x0000024807436a83: nop
  0x0000024807436a84: nop
  0x0000024807436a85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807436a8f: jmp    0x0000024807436a8f  ;   {runtime_call}
[Exception Handler]
  0x0000024807436a94: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807436a99: mov    %rsp,-0x28(%rsp)
  0x0000024807436a9e: sub    $0x80,%rsp
  0x0000024807436aa5: mov    %rax,0x78(%rsp)
  0x0000024807436aaa: mov    %rcx,0x70(%rsp)
  0x0000024807436aaf: mov    %rdx,0x68(%rsp)
  0x0000024807436ab4: mov    %rbx,0x60(%rsp)
  0x0000024807436ab9: mov    %rbp,0x50(%rsp)
  0x0000024807436abe: mov    %rsi,0x48(%rsp)
  0x0000024807436ac3: mov    %rdi,0x40(%rsp)
  0x0000024807436ac8: mov    %r8,0x38(%rsp)
  0x0000024807436acd: mov    %r9,0x30(%rsp)
  0x0000024807436ad2: mov    %r10,0x28(%rsp)
  0x0000024807436ad7: mov    %r11,0x20(%rsp)
  0x0000024807436adc: mov    %r12,0x18(%rsp)
  0x0000024807436ae1: mov    %r13,0x10(%rsp)
  0x0000024807436ae6: mov    %r14,0x8(%rsp)
  0x0000024807436aeb: mov    %r15,(%rsp)
  0x0000024807436aef: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807436af9: movabs $0x24807436a99,%rdx  ;   {internal_word}
  0x0000024807436b03: mov    %rsp,%r8
  0x0000024807436b06: and    $0xfffffffffffffff0,%rsp
  0x0000024807436b0a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807436b14: call   *%r10
  0x0000024807436b17: hlt    
[Deopt Handler Code]
  0x0000024807436b18: movabs $0x24807436b18,%r10  ;   {section_word}
  0x0000024807436b22: push   %r10
  0x0000024807436b24: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807436b29: hlt    
  0x0000024807436b2a: hlt    
  0x0000024807436b2b: hlt    
  0x0000024807436b2c: hlt    
  0x0000024807436b2d: hlt    
  0x0000024807436b2e: hlt    
  0x0000024807436b2f: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000024807436800' size='1584' address='0x0000024807436690' relocation_offset='288' insts_offset='368' stub_offset='1008' scopes_data_offset='1200' scopes_pcs_offset='1336' dependencies_offset='1560' nul_chk_table_offset='1568' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='769' iicount='769' stamp='0.561'/>
<writer thread='19792'/>
<thread_logfile thread='19792' filename='C:\Users\admin\AppData\Local\Temp\\hs_c19792_pid11764.log'/>
<writer thread='21600'/>
<task_queued compile_id='6' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='35968' iicount='35968' stamp='0.562' comment='tiered' hot_count='35968'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='27436'/>
<task_queued compile_id='7' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1724' backedge_count='110592' iicount='1724' osr_bci='37' stamp='0.563' comment='tiered' hot_count='110592'/>
<task_queued compile_id='8' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='640' iicount='640' level='3' stamp='0.564' comment='tiered' hot_count='640'/>
<task_queued compile_id='9' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1361' backedge_count='7014' iicount='1361' level='3' stamp='0.564' comment='tiered' hot_count='1361'/>
<task_queued compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='174592' iicount='174592' stamp='0.564' comment='tiered' hot_count='174592'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807435f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb04f38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807436100: mov    0x8(%rdx),%r10d
  0x0000024807436104: shl    $0x3,%r10
  0x0000024807436108: cmp    %rax,%r10
  0x000002480743610b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807436111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480743611c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807436120: mov    %eax,-0x6000(%rsp)
  0x0000024807436127: push   %rbp
  0x0000024807436128: sub    $0x30,%rsp
  0x000002480743612c: movabs $0x2481fd6be10,%r9  ;   {metadata(method data for {method} {0x000002481fb04f38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000024807436136: mov    0xdc(%r9),%esi
  0x000002480743613d: add    $0x8,%esi
  0x0000024807436140: mov    %esi,0xdc(%r9)
  0x0000024807436147: movabs $0x2481fb04f30,%r9  ;   {metadata({method} {0x000002481fb04f38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000024807436151: and    $0x1ff8,%esi
  0x0000024807436157: cmp    $0x0,%esi
  0x000002480743615a: je     0x0000024807436223  ;*aload_0
                                                ; - java.lang.String::endsWith@0 (line 1449)

  0x0000024807436160: mov    0xc(%rdx),%r9d
  0x0000024807436164: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::endsWith@3 (line 1449)

  0x0000024807436168: mov    0xc(%r9),%r9d      ;*arraylength
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ; implicit exception: dispatches to 0x000002480743623a
  0x000002480743616c: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x000002480743623f
  0x0000024807436170: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::endsWith@8 (line 1449)

  0x0000024807436174: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ; implicit exception: dispatches to 0x0000024807436244
  0x0000024807436177: mov    %rdx,%rdi
  0x000002480743617a: movabs $0x2481fd6be10,%rbx  ;   {metadata(method data for {method} {0x000002481fb04f38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000024807436184: mov    0x8(%rdi),%edi
  0x0000024807436187: shl    $0x3,%rdi
  0x000002480743618b: cmp    0x110(%rbx),%rdi
  0x0000024807436192: jne    0x00000248074361a1
  0x0000024807436194: addq   $0x1,0x118(%rbx)
  0x000002480743619c: jmp    0x0000024807436207
  0x00000248074361a1: cmp    0x120(%rbx),%rdi
  0x00000248074361a8: jne    0x00000248074361b7
  0x00000248074361aa: addq   $0x1,0x128(%rbx)
  0x00000248074361b2: jmp    0x0000024807436207
  0x00000248074361b7: cmpq   $0x0,0x110(%rbx)
  0x00000248074361c2: jne    0x00000248074361db
  0x00000248074361c4: mov    %rdi,0x110(%rbx)
  0x00000248074361cb: movq   $0x1,0x118(%rbx)
  0x00000248074361d6: jmp    0x0000024807436207
  0x00000248074361db: cmpq   $0x0,0x120(%rbx)
  0x00000248074361e6: jne    0x00000248074361ff
  0x00000248074361e8: mov    %rdi,0x120(%rbx)
  0x00000248074361ef: movq   $0x1,0x128(%rbx)
  0x00000248074361fa: jmp    0x0000024807436207
  0x00000248074361ff: addq   $0x1,0x108(%rbx)
  0x0000024807436207: sub    %esi,%r9d
  0x000002480743620a: nop
  0x000002480743620b: nop
  0x000002480743620c: nop
  0x000002480743620d: nop
  0x000002480743620e: nop
  0x000002480743620f: call   0x0000024807375ee0  ; OopMap{off=276}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::endsWith@13 (line 1449)
                                                ;   {optimized virtual_call}
  0x0000024807436214: and    $0x1,%eax
  0x0000024807436217: add    $0x30,%rsp
  0x000002480743621b: pop    %rbp
  0x000002480743621c: test   %eax,-0x1e86122(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807436222: ret    
  0x0000024807436223: mov    %r9,0x8(%rsp)
  0x0000024807436228: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807436230: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=309}
                                                ;*synchronization entry
                                                ; - java.lang.String::endsWith@-1 (line 1449)
                                                ;   {runtime_call}
  0x0000024807436235: jmp    0x0000024807436160
  0x000002480743623a: call   0x000002480742f100  ; OopMap{rdx=Oop r8=Oop off=319}
                                                ;*arraylength
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ;   {runtime_call}
  0x000002480743623f: call   0x000002480742f100  ; OopMap{rdx=Oop r8=Oop off=324}
                                                ;*getfield value
                                                ; - java.lang.String::endsWith@8 (line 1449)
                                                ;   {runtime_call}
  0x0000024807436244: call   0x000002480742f100  ; OopMap{rdx=Oop r8=Oop off=329}
                                                ;*arraylength
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ;   {runtime_call}
  0x0000024807436249: nop
  0x000002480743624a: nop
  0x000002480743624b: mov    0x308(%r15),%rax
  0x0000024807436252: movabs $0x0,%r10
  0x000002480743625c: mov    %r10,0x308(%r15)
  0x0000024807436263: movabs $0x0,%r10
  0x000002480743626d: mov    %r10,0x310(%r15)
  0x0000024807436274: add    $0x30,%rsp
  0x0000024807436278: pop    %rbp
  0x0000024807436279: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480743627e: hlt    
  0x000002480743627f: hlt    
[Stub Code]
  0x0000024807436280: nop                       ;   {no_reloc}
  0x0000024807436281: nop
  0x0000024807436282: nop
  0x0000024807436283: nop
  0x0000024807436284: nop
  0x0000024807436285: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480743628f: jmp    0x000002480743628f  ;   {runtime_call}
[Exception Handler]
  0x0000024807436294: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807436299: mov    %rsp,-0x28(%rsp)
  0x000002480743629e: sub    $0x80,%rsp
  0x00000248074362a5: mov    %rax,0x78(%rsp)
  0x00000248074362aa: mov    %rcx,0x70(%rsp)
  0x00000248074362af: mov    %rdx,0x68(%rsp)
  0x00000248074362b4: mov    %rbx,0x60(%rsp)
  0x00000248074362b9: mov    %rbp,0x50(%rsp)
  0x00000248074362be: mov    %rsi,0x48(%rsp)
  0x00000248074362c3: mov    %rdi,0x40(%rsp)
  0x00000248074362c8: mov    %r8,0x38(%rsp)
  0x00000248074362cd: mov    %r9,0x30(%rsp)
  0x00000248074362d2: mov    %r10,0x28(%rsp)
  0x00000248074362d7: mov    %r11,0x20(%rsp)
  0x00000248074362dc: mov    %r12,0x18(%rsp)
  0x00000248074362e1: mov    %r13,0x10(%rsp)
  0x00000248074362e6: mov    %r14,0x8(%rsp)
  0x00000248074362eb: mov    %r15,(%rsp)
  0x00000248074362ef: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074362f9: movabs $0x24807436299,%rdx  ;   {internal_word}
  0x0000024807436303: mov    %rsp,%r8
  0x0000024807436306: and    $0xfffffffffffffff0,%rsp
  0x000002480743630a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807436314: call   *%r10
  0x0000024807436317: hlt    
[Deopt Handler Code]
  0x0000024807436318: movabs $0x24807436318,%r10  ;   {section_word}
  0x0000024807436322: push   %r10
  0x0000024807436324: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807436329: hlt    
  0x000002480743632a: hlt    
  0x000002480743632b: hlt    
  0x000002480743632c: hlt    
  0x000002480743632d: hlt    
  0x000002480743632e: hlt    
  0x000002480743632f: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x0000024807436100' size='1240' address='0x0000024807435f90' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='936' scopes_pcs_offset='1008' dependencies_offset='1200' nul_chk_table_offset='1208' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='651' iicount='651' stamp='0.572'/>
<writer thread='27436'/>
<task_queued compile_id='11' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='11392' iicount='11392' stamp='0.573' comment='tiered' hot_count='11392'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807435390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000024807435500: mov    0x8(%rdx),%r10d
  0x0000024807435504: shl    $0x3,%r10
  0x0000024807435508: cmp    %rax,%r10
  0x000002480743550b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807435511: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480743551c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807435520: mov    %eax,-0x6000(%rsp)
  0x0000024807435527: push   %rbp
  0x0000024807435528: sub    $0x30,%rsp
  0x000002480743552c: movabs $0x2481fd28f68,%rax  ;   {metadata(method data for {method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000024807435536: mov    0xdc(%rax),%esi
  0x000002480743553c: add    $0x8,%esi
  0x000002480743553f: mov    %esi,0xdc(%rax)
  0x0000024807435545: movabs $0x2481fb04df8,%rax  ;   {metadata({method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000002480743554f: and    $0x1ff8,%esi
  0x0000024807435555: cmp    $0x0,%esi
  0x0000024807435558: je     0x0000024807435715  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x000002480743555e: mov    0xc(%rdx),%eax
  0x0000024807435561: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000024807435565: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x000002480743572c
  0x0000024807435569: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x000002480743556d: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000024807435731
  0x0000024807435570: cmp    $0x0,%r9d
  0x0000024807435574: movabs $0x2481fd28f68,%rbx  ;   {metadata(method data for {method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000002480743557e: movabs $0x108,%rdx
  0x0000024807435588: jl     0x0000024807435598
  0x000002480743558e: movabs $0x118,%rdx
  0x0000024807435598: mov    (%rbx,%rdx,1),%rcx
  0x000002480743559c: lea    0x1(%rcx),%rcx
  0x00000248074355a0: mov    %rcx,(%rbx,%rdx,1)
  0x00000248074355a4: jl     0x00000248074356e2  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00000248074355aa: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000024807435736
  0x00000248074355ad: sub    %edi,%ebx
  0x00000248074355af: cmp    %ebx,%r9d
  0x00000248074355b2: movabs $0x2481fd28f68,%rbx  ;   {metadata(method data for {method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000248074355bc: movabs $0x128,%rdx
  0x00000248074355c6: jle    0x00000248074355d6
  0x00000248074355cc: movabs $0x138,%rdx
  0x00000248074355d6: mov    (%rbx,%rdx,1),%rcx
  0x00000248074355da: lea    0x1(%rcx),%rcx
  0x00000248074355de: mov    %rcx,(%rbx,%rdx,1)
  0x00000248074355e2: jg     0x00000248074356e2  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x00000248074355e8: mov    $0x0,%ebx
  0x00000248074355ed: jmp    0x00000248074356a2  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000248074355f2: nopw   0x0(%rax,%rax,1)
  0x00000248074355f8: mov    %r9,%rdx
  0x00000248074355fb: inc    %edx
  0x00000248074355fd: movslq %r9d,%rcx
  0x0000024807435600: cmp    0xc(%rax),%r9d
  0x0000024807435604: jae    0x000002480743573b
  0x000002480743560a: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x000002480743560f: mov    %rbx,%r8
  0x0000024807435612: inc    %r8d
  0x0000024807435615: movslq %ebx,%r9
  0x0000024807435618: cmp    0xc(%rsi),%ebx
  0x000002480743561b: jae    0x0000024807435744
  0x0000024807435621: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000024807435627: movabs $0x2481fd28f68,%r9  ;   {metadata(method data for {method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000024807435631: mov    0xe0(%r9),%r11d
  0x0000024807435638: add    $0x8,%r11d
  0x000002480743563c: mov    %r11d,0xe0(%r9)
  0x0000024807435643: movabs $0x2481fb04df8,%r9  ;   {metadata({method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000002480743564d: and    $0xfff8,%r11d
  0x0000024807435654: cmp    $0x0,%r11d
  0x0000024807435658: je     0x000002480743574d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000002480743565e: test   %eax,-0x1e85564(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807435664: cmp    %ebx,%ecx
  0x0000024807435666: movabs $0x2481fd28f68,%rbx  ;   {metadata(method data for {method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000024807435670: movabs $0x168,%rcx
  0x000002480743567a: je     0x000002480743568a
  0x0000024807435680: movabs $0x178,%rcx
  0x000002480743568a: mov    (%rbx,%rcx,1),%r9
  0x000002480743568e: lea    0x1(%r9),%r9
  0x0000024807435692: mov    %r9,(%rbx,%rcx,1)
  0x0000024807435696: jne    0x00000248074356f3  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000002480743569c: mov    %r8,%rbx
  0x000002480743569f: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000248074356a2: dec    %edi
  0x00000248074356a4: cmp    $0x0,%edi
  0x00000248074356a7: movabs $0x2481fd28f68,%rdx  ;   {metadata(method data for {method} {0x000002481fb04e00} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000248074356b1: movabs $0x148,%rcx
  0x00000248074356bb: jl     0x00000248074356cb
  0x00000248074356c1: movabs $0x158,%rcx
  0x00000248074356cb: mov    (%rdx,%rcx,1),%r8
  0x00000248074356cf: lea    0x1(%r8),%r8
  0x00000248074356d3: mov    %r8,(%rdx,%rcx,1)
  0x00000248074356d7: jl     0x0000024807435704
  0x00000248074356dd: jmp    0x00000248074355f8  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x00000248074356e2: mov    $0x0,%eax
  0x00000248074356e7: add    $0x30,%rsp
  0x00000248074356eb: pop    %rbp
  0x00000248074356ec: test   %eax,-0x1e855f2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074356f2: ret                       ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x00000248074356f3: mov    $0x0,%eax
  0x00000248074356f8: add    $0x30,%rsp
  0x00000248074356fc: pop    %rbp
  0x00000248074356fd: test   %eax,-0x1e85603(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807435703: ret                       ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000024807435704: mov    $0x1,%eax
  0x0000024807435709: add    $0x30,%rsp
  0x000002480743570d: pop    %rbp
  0x000002480743570e: test   %eax,-0x1e85614(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807435714: ret    
  0x0000024807435715: mov    %rax,0x8(%rsp)
  0x000002480743571a: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807435722: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000024807435727: jmp    0x000002480743555e
  0x000002480743572c: call   0x000002480742f100  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000024807435731: call   0x000002480742f100  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000024807435736: call   0x000002480742f100  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000002480743573b: mov    %r9,(%rsp)
  0x000002480743573f: call   0x000002480742e800  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000024807435744: mov    %rbx,(%rsp)
  0x0000024807435748: call   0x000002480742e800  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x000002480743574d: mov    %r9,0x8(%rsp)
  0x0000024807435752: movq   $0x41,(%rsp)
  0x000002480743575a: call   0x0000024807433da0  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x000002480743575f: jmp    0x000002480743565e
  0x0000024807435764: nop
  0x0000024807435765: nop
  0x0000024807435766: mov    0x308(%r15),%rax
  0x000002480743576d: movabs $0x0,%r10
  0x0000024807435777: mov    %r10,0x308(%r15)
  0x000002480743577e: movabs $0x0,%r10
  0x0000024807435788: mov    %r10,0x310(%r15)
  0x000002480743578f: add    $0x30,%rsp
  0x0000024807435793: pop    %rbp
  0x0000024807435794: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807435799: hlt    
  0x000002480743579a: hlt    
  0x000002480743579b: hlt    
  0x000002480743579c: hlt    
  0x000002480743579d: hlt    
  0x000002480743579e: hlt    
  0x000002480743579f: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074357a0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074357a5: mov    %rsp,-0x28(%rsp)
  0x00000248074357aa: sub    $0x80,%rsp
  0x00000248074357b1: mov    %rax,0x78(%rsp)
  0x00000248074357b6: mov    %rcx,0x70(%rsp)
  0x00000248074357bb: mov    %rdx,0x68(%rsp)
  0x00000248074357c0: mov    %rbx,0x60(%rsp)
  0x00000248074357c5: mov    %rbp,0x50(%rsp)
  0x00000248074357ca: mov    %rsi,0x48(%rsp)
  0x00000248074357cf: mov    %rdi,0x40(%rsp)
  0x00000248074357d4: mov    %r8,0x38(%rsp)
  0x00000248074357d9: mov    %r9,0x30(%rsp)
  0x00000248074357de: mov    %r10,0x28(%rsp)
  0x00000248074357e3: mov    %r11,0x20(%rsp)
  0x00000248074357e8: mov    %r12,0x18(%rsp)
  0x00000248074357ed: mov    %r13,0x10(%rsp)
  0x00000248074357f2: mov    %r14,0x8(%rsp)
  0x00000248074357f7: mov    %r15,(%rsp)
  0x00000248074357fb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807435805: movabs $0x248074357a5,%rdx  ;   {internal_word}
  0x000002480743580f: mov    %rsp,%r8
  0x0000024807435812: and    $0xfffffffffffffff0,%rsp
  0x0000024807435816: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807435820: call   *%r10
  0x0000024807435823: hlt    
[Deopt Handler Code]
  0x0000024807435824: movabs $0x24807435824,%r10  ;   {section_word}
  0x000002480743582e: push   %r10
  0x0000024807435830: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807435835: hlt    
  0x0000024807435836: hlt    
  0x0000024807435837: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000024807435500' size='1832' address='0x0000024807435390' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1200' scopes_pcs_offset='1392' dependencies_offset='1792' nul_chk_table_offset='1800' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1368' backedge_count='7116' iicount='1368' stamp='0.582'/>
<writer thread='21600'/>
<task_queued compile_id='12' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.582' comment='tiered' hot_count='128'/>
<writer thread='27436'/>
<task_queued compile_id='13' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='37248' iicount='37248' stamp='0.582' comment='tiered' hot_count='37248'/>
<task_queued compile_id='14' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='34176' iicount='34176' stamp='0.582' comment='tiered' hot_count='34176'/>
<task_queued compile_id='15' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='34304' iicount='34304' stamp='0.582' comment='tiered' hot_count='34304'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807438450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fd1a3f8} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000248074385a0: mov    0x8(%rdx),%r10d
  0x00000248074385a4: shl    $0x3,%r10
  0x00000248074385a8: cmp    %rax,%r10
  0x00000248074385ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074385b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074385bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074385c0: mov    %eax,-0x6000(%rsp)
  0x00000248074385c7: push   %rbp
  0x00000248074385c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x00000248074385cc: mov    0x10(%rdx),%eax
  0x00000248074385cf: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x00000248074385d3: add    $0x30,%rsp
  0x00000248074385d7: pop    %rbp
  0x00000248074385d8: test   %eax,-0x1e884de(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074385de: ret    
  0x00000248074385df: nop
  0x00000248074385e0: nop
  0x00000248074385e1: mov    0x308(%r15),%rax
  0x00000248074385e8: movabs $0x0,%r10
  0x00000248074385f2: mov    %r10,0x308(%r15)
  0x00000248074385f9: movabs $0x0,%r10
  0x0000024807438603: mov    %r10,0x310(%r15)
  0x000002480743860a: add    $0x30,%rsp
  0x000002480743860e: pop    %rbp
  0x000002480743860f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807438614: hlt    
  0x0000024807438615: hlt    
  0x0000024807438616: hlt    
  0x0000024807438617: hlt    
  0x0000024807438618: hlt    
  0x0000024807438619: hlt    
  0x000002480743861a: hlt    
  0x000002480743861b: hlt    
  0x000002480743861c: hlt    
  0x000002480743861d: hlt    
  0x000002480743861e: hlt    
  0x000002480743861f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807438620: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807438625: mov    %rsp,-0x28(%rsp)
  0x000002480743862a: sub    $0x80,%rsp
  0x0000024807438631: mov    %rax,0x78(%rsp)
  0x0000024807438636: mov    %rcx,0x70(%rsp)
  0x000002480743863b: mov    %rdx,0x68(%rsp)
  0x0000024807438640: mov    %rbx,0x60(%rsp)
  0x0000024807438645: mov    %rbp,0x50(%rsp)
  0x000002480743864a: mov    %rsi,0x48(%rsp)
  0x000002480743864f: mov    %rdi,0x40(%rsp)
  0x0000024807438654: mov    %r8,0x38(%rsp)
  0x0000024807438659: mov    %r9,0x30(%rsp)
  0x000002480743865e: mov    %r10,0x28(%rsp)
  0x0000024807438663: mov    %r11,0x20(%rsp)
  0x0000024807438668: mov    %r12,0x18(%rsp)
  0x000002480743866d: mov    %r13,0x10(%rsp)
  0x0000024807438672: mov    %r14,0x8(%rsp)
  0x0000024807438677: mov    %r15,(%rsp)
  0x000002480743867b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807438685: movabs $0x24807438625,%rdx  ;   {internal_word}
  0x000002480743868f: mov    %rsp,%r8
  0x0000024807438692: and    $0xfffffffffffffff0,%rsp
  0x0000024807438696: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074386a0: call   *%r10
  0x00000248074386a3: hlt    
[Deopt Handler Code]
  0x00000248074386a4: movabs $0x248074386a4,%r10  ;   {section_word}
  0x00000248074386ae: push   %r10
  0x00000248074386b0: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074386b5: hlt    
  0x00000248074386b6: hlt    
  0x00000248074386b7: hlt    
<nmethod compile_id='12' compiler='C1' level='1' entry='0x00000248074385a0' size='712' address='0x0000024807438450' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='129' iicount='129' stamp='0.585'/>
<writer thread='27436'/>
<task_queued compile_id='16' method='java/lang/String indexOf (I)I' bytes='7' count='1792' iicount='1792' level='3' stamp='0.585' comment='tiered' hot_count='1792'/>
<task_queued compile_id='17' method='sun/nio/fs/WindowsPathParser isSlash (C)Z' bytes='18' count='256' iicount='256' level='3' stamp='0.585' comment='tiered' hot_count='256'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807437c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb050a0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000024807437d80: mov    0x8(%rdx),%r10d
  0x0000024807437d84: shl    $0x3,%r10
  0x0000024807437d88: cmp    %rax,%r10
  0x0000024807437d8b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807437d91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807437d9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807437da0: mov    %eax,-0x6000(%rsp)
  0x0000024807437da7: push   %rbp
  0x0000024807437da8: sub    $0x30,%rsp
  0x0000024807437dac: movabs $0x2481fd147a8,%r9  ;   {metadata(method data for {method} {0x000002481fb050a0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807437db6: mov    0xdc(%r9),%esi
  0x0000024807437dbd: add    $0x8,%esi
  0x0000024807437dc0: mov    %esi,0xdc(%r9)
  0x0000024807437dc7: movabs $0x2481fb05098,%r9  ;   {metadata({method} {0x000002481fb050a0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807437dd1: and    $0x1ff8,%esi
  0x0000024807437dd7: cmp    $0x0,%esi
  0x0000024807437dda: je     0x0000024807437e88  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000024807437de0: mov    %rdx,%r9
  0x0000024807437de3: movabs $0x2481fd147a8,%rsi  ;   {metadata(method data for {method} {0x000002481fb050a0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807437ded: mov    0x8(%r9),%r9d
  0x0000024807437df1: shl    $0x3,%r9
  0x0000024807437df5: cmp    0x110(%rsi),%r9
  0x0000024807437dfc: jne    0x0000024807437e0b
  0x0000024807437dfe: addq   $0x1,0x118(%rsi)
  0x0000024807437e06: jmp    0x0000024807437e71
  0x0000024807437e0b: cmp    0x120(%rsi),%r9
  0x0000024807437e12: jne    0x0000024807437e21
  0x0000024807437e14: addq   $0x1,0x128(%rsi)
  0x0000024807437e1c: jmp    0x0000024807437e71
  0x0000024807437e21: cmpq   $0x0,0x110(%rsi)
  0x0000024807437e2c: jne    0x0000024807437e45
  0x0000024807437e2e: mov    %r9,0x110(%rsi)
  0x0000024807437e35: movq   $0x1,0x118(%rsi)
  0x0000024807437e40: jmp    0x0000024807437e71
  0x0000024807437e45: cmpq   $0x0,0x120(%rsi)
  0x0000024807437e50: jne    0x0000024807437e69
  0x0000024807437e52: mov    %r9,0x120(%rsi)
  0x0000024807437e59: movq   $0x1,0x128(%rsi)
  0x0000024807437e64: jmp    0x0000024807437e71
  0x0000024807437e69: addq   $0x1,0x108(%rsi)
  0x0000024807437e71: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000024807437e77: call   0x0000024807375ee0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000024807437e7c: add    $0x30,%rsp
  0x0000024807437e80: pop    %rbp
  0x0000024807437e81: test   %eax,-0x1e87d87(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807437e87: ret    
  0x0000024807437e88: mov    %r9,0x8(%rsp)
  0x0000024807437e8d: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807437e95: call   0x0000024807433da0  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000024807437e9a: jmp    0x0000024807437de0
  0x0000024807437e9f: nop
  0x0000024807437ea0: nop
  0x0000024807437ea1: mov    0x308(%r15),%rax
  0x0000024807437ea8: movabs $0x0,%r10
  0x0000024807437eb2: mov    %r10,0x308(%r15)
  0x0000024807437eb9: movabs $0x0,%r10
  0x0000024807437ec3: mov    %r10,0x310(%r15)
  0x0000024807437eca: add    $0x30,%rsp
  0x0000024807437ece: pop    %rbp
  0x0000024807437ecf: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807437ed4: hlt    
  0x0000024807437ed5: hlt    
  0x0000024807437ed6: hlt    
  0x0000024807437ed7: hlt    
  0x0000024807437ed8: hlt    
  0x0000024807437ed9: hlt    
  0x0000024807437eda: hlt    
  0x0000024807437edb: hlt    
  0x0000024807437edc: hlt    
  0x0000024807437edd: hlt    
  0x0000024807437ede: hlt    
  0x0000024807437edf: hlt    
[Stub Code]
  0x0000024807437ee0: nop                       ;   {no_reloc}
  0x0000024807437ee1: nop
  0x0000024807437ee2: nop
  0x0000024807437ee3: nop
  0x0000024807437ee4: nop
  0x0000024807437ee5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807437eef: jmp    0x0000024807437eef  ;   {runtime_call}
[Exception Handler]
  0x0000024807437ef4: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807437ef9: mov    %rsp,-0x28(%rsp)
  0x0000024807437efe: sub    $0x80,%rsp
  0x0000024807437f05: mov    %rax,0x78(%rsp)
  0x0000024807437f0a: mov    %rcx,0x70(%rsp)
  0x0000024807437f0f: mov    %rdx,0x68(%rsp)
  0x0000024807437f14: mov    %rbx,0x60(%rsp)
  0x0000024807437f19: mov    %rbp,0x50(%rsp)
  0x0000024807437f1e: mov    %rsi,0x48(%rsp)
  0x0000024807437f23: mov    %rdi,0x40(%rsp)
  0x0000024807437f28: mov    %r8,0x38(%rsp)
  0x0000024807437f2d: mov    %r9,0x30(%rsp)
  0x0000024807437f32: mov    %r10,0x28(%rsp)
  0x0000024807437f37: mov    %r11,0x20(%rsp)
  0x0000024807437f3c: mov    %r12,0x18(%rsp)
  0x0000024807437f41: mov    %r13,0x10(%rsp)
  0x0000024807437f46: mov    %r14,0x8(%rsp)
  0x0000024807437f4b: mov    %r15,(%rsp)
  0x0000024807437f4f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807437f59: movabs $0x24807437ef9,%rdx  ;   {internal_word}
  0x0000024807437f63: mov    %rsp,%r8
  0x0000024807437f66: and    $0xfffffffffffffff0,%rsp
  0x0000024807437f6a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807437f74: call   *%r10
  0x0000024807437f77: hlt    
[Deopt Handler Code]
  0x0000024807437f78: movabs $0x24807437f78,%r10  ;   {section_word}
  0x0000024807437f82: push   %r10
  0x0000024807437f84: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807437f89: hlt    
  0x0000024807437f8a: hlt    
  0x0000024807437f8b: hlt    
  0x0000024807437f8c: hlt    
  0x0000024807437f8d: hlt    
  0x0000024807437f8e: hlt    
  0x0000024807437f8f: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x0000024807437d80' size='1048' address='0x0000024807437c10' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='904' scopes_pcs_offset='944' dependencies_offset='1040' method='java/lang/String indexOf (I)I' bytes='7' count='1818' iicount='1818' stamp='0.590'/>
Decoding compiled method 0x0000024807437810:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fc94058} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;sun/nio/fs/WindowsPathParser&apos;
  # parm0:    rdx       = char
  #           [sp+0x40]  (sp of caller)
  0x0000024807437960: mov    %eax,-0x6000(%rsp)
  0x0000024807437967: push   %rbp
  0x0000024807437968: sub    $0x30,%rsp
  0x000002480743796c: movabs $0x2481fdd6820,%rax  ;   {metadata(method data for {method} {0x000002481fc94058} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;sun/nio/fs/WindowsPathParser&apos;)}
  0x0000024807437976: mov    0xdc(%rax),%esi
  0x000002480743797c: add    $0x8,%esi
  0x000002480743797f: mov    %esi,0xdc(%rax)
  0x0000024807437985: movabs $0x2481fc94050,%rax  ;   {metadata({method} {0x000002481fc94058} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;sun/nio/fs/WindowsPathParser&apos;)}
  0x000002480743798f: and    $0x1ff8,%esi
  0x0000024807437995: cmp    $0x0,%esi
  0x0000024807437998: je     0x0000024807437a3e  ;*iload_0
                                                ; - sun.nio.fs.WindowsPathParser::isSlash@0 (line 200)

  0x000002480743799e: cmp    $0x5c,%edx
  0x00000248074379a1: movabs $0x2481fdd6820,%rax  ;   {metadata(method data for {method} {0x000002481fc94058} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;sun/nio/fs/WindowsPathParser&apos;)}
  0x00000248074379ab: movabs $0x108,%rsi
  0x00000248074379b5: je     0x00000248074379c5
  0x00000248074379bb: movabs $0x118,%rsi
  0x00000248074379c5: mov    (%rax,%rsi,1),%rdi
  0x00000248074379c9: lea    0x1(%rdi),%rdi
  0x00000248074379cd: mov    %rdi,(%rax,%rsi,1)
  0x00000248074379d1: je     0x0000024807437a10  ;*if_icmpeq
                                                ; - sun.nio.fs.WindowsPathParser::isSlash@3 (line 200)

  0x00000248074379d7: cmp    $0x2f,%edx
  0x00000248074379da: movabs $0x2481fdd6820,%rax  ;   {metadata(method data for {method} {0x000002481fc94058} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;sun/nio/fs/WindowsPathParser&apos;)}
  0x00000248074379e4: movabs $0x128,%rsi
  0x00000248074379ee: jne    0x00000248074379fe
  0x00000248074379f4: movabs $0x138,%rsi
  0x00000248074379fe: mov    (%rax,%rsi,1),%rdi
  0x0000024807437a02: lea    0x1(%rdi),%rdi
  0x0000024807437a06: mov    %rdi,(%rax,%rsi,1)
  0x0000024807437a0a: jne    0x0000024807437a2a  ;*if_icmpne
                                                ; - sun.nio.fs.WindowsPathParser::isSlash@9 (line 200)

  0x0000024807437a10: movabs $0x2481fdd6820,%rax  ;   {metadata(method data for {method} {0x000002481fc94058} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;sun/nio/fs/WindowsPathParser&apos;)}
  0x0000024807437a1a: incl   0x148(%rax)
  0x0000024807437a20: mov    $0x1,%eax
  0x0000024807437a25: jmp    0x0000024807437a2f  ;*goto
                                                ; - sun.nio.fs.WindowsPathParser::isSlash@13 (line 200)

  0x0000024807437a2a: mov    $0x0,%eax          ;*ireturn
                                                ; - sun.nio.fs.WindowsPathParser::isSlash@17 (line 200)

  0x0000024807437a2f: and    $0x1,%eax
  0x0000024807437a32: add    $0x30,%rsp
  0x0000024807437a36: pop    %rbp
  0x0000024807437a37: test   %eax,-0x1e8793d(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807437a3d: ret    
  0x0000024807437a3e: mov    %rax,0x8(%rsp)
  0x0000024807437a43: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807437a4b: call   0x0000024807433da0  ; OopMap{off=240}
                                                ;*synchronization entry
                                                ; - sun.nio.fs.WindowsPathParser::isSlash@-1 (line 200)
                                                ;   {runtime_call}
  0x0000024807437a50: jmp    0x000002480743799e
  0x0000024807437a55: nop
  0x0000024807437a56: nop
  0x0000024807437a57: mov    0x308(%r15),%rax
  0x0000024807437a5e: movabs $0x0,%r10
  0x0000024807437a68: mov    %r10,0x308(%r15)
  0x0000024807437a6f: movabs $0x0,%r10
  0x0000024807437a79: mov    %r10,0x310(%r15)
  0x0000024807437a80: add    $0x30,%rsp
  0x0000024807437a84: pop    %rbp
  0x0000024807437a85: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807437a8a: hlt    
  0x0000024807437a8b: hlt    
  0x0000024807437a8c: hlt    
  0x0000024807437a8d: hlt    
  0x0000024807437a8e: hlt    
  0x0000024807437a8f: hlt    
  0x0000024807437a90: hlt    
  0x0000024807437a91: hlt    
  0x0000024807437a92: hlt    
  0x0000024807437a93: hlt    
  0x0000024807437a94: hlt    
  0x0000024807437a95: hlt    
  0x0000024807437a96: hlt    
  0x0000024807437a97: hlt    
  0x0000024807437a98: hlt    
  0x0000024807437a99: hlt    
  0x0000024807437a9a: hlt    
  0x0000024807437a9b: hlt    
  0x0000024807437a9c: hlt    
  0x0000024807437a9d: hlt    
  0x0000024807437a9e: hlt    
  0x0000024807437a9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807437aa0: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807437aa5: mov    %rsp,-0x28(%rsp)
  0x0000024807437aaa: sub    $0x80,%rsp
  0x0000024807437ab1: mov    %rax,0x78(%rsp)
  0x0000024807437ab6: mov    %rcx,0x70(%rsp)
  0x0000024807437abb: mov    %rdx,0x68(%rsp)
  0x0000024807437ac0: mov    %rbx,0x60(%rsp)
  0x0000024807437ac5: mov    %rbp,0x50(%rsp)
  0x0000024807437aca: mov    %rsi,0x48(%rsp)
  0x0000024807437acf: mov    %rdi,0x40(%rsp)
  0x0000024807437ad4: mov    %r8,0x38(%rsp)
  0x0000024807437ad9: mov    %r9,0x30(%rsp)
  0x0000024807437ade: mov    %r10,0x28(%rsp)
  0x0000024807437ae3: mov    %r11,0x20(%rsp)
  0x0000024807437ae8: mov    %r12,0x18(%rsp)
  0x0000024807437aed: mov    %r13,0x10(%rsp)
  0x0000024807437af2: mov    %r14,0x8(%rsp)
  0x0000024807437af7: mov    %r15,(%rsp)
  0x0000024807437afb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807437b05: movabs $0x24807437aa5,%rdx  ;   {internal_word}
  0x0000024807437b0f: mov    %rsp,%r8
  0x0000024807437b12: and    $0xfffffffffffffff0,%rsp
  0x0000024807437b16: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807437b20: call   *%r10
  0x0000024807437b23: hlt    
[Deopt Handler Code]
  0x0000024807437b24: movabs $0x24807437b24,%r10  ;   {section_word}
  0x0000024807437b2e: push   %r10
  0x0000024807437b30: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807437b35: hlt    
  0x0000024807437b36: hlt    
  0x0000024807437b37: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000024807437960' size='992' address='0x0000024807437810' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='816' scopes_pcs_offset='856' dependencies_offset='984' method='sun/nio/fs/WindowsPathParser isSlash (C)Z' bytes='18' count='265' iicount='265' stamp='0.596'/>
<writer thread='27436'/>
<task_queued compile_id='18' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.597' comment='tiered' hot_count='256'/>
Decoding compiled method 0x0000024807443010:
Code:
[Entry Point]
  # {method} {0x000002481fb80f38} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x0000024807443180: mov    0x8(%rdx),%r10d
  0x0000024807443184: shl    $0x3,%r10
  0x0000024807443188: cmp    %r10,%rax
  0x000002480744318b: je     0x0000024807443198
  0x0000024807443191: jmp    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807443196: xchg   %ax,%ax
[Verified Entry Point]
  0x0000024807443198: mov    %eax,-0x6000(%rsp)
  0x000002480744319f: push   %rbp
  0x00000248074431a0: mov    %rsp,%rbp
  0x00000248074431a3: sub    $0x60,%rsp
  0x00000248074431a7: mov    %r8,0x28(%rsp)
  0x00000248074431ac: cmp    $0x0,%r8
  0x00000248074431b0: lea    0x28(%rsp),%r8
  0x00000248074431b5: cmove  0x28(%rsp),%r8
  0x00000248074431bb: mov    %rdx,0x20(%rsp)
  0x00000248074431c0: cmp    $0x0,%rdx
  0x00000248074431c4: lea    0x20(%rsp),%rdx
  0x00000248074431c9: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x00000248074431cf: movabs $0x248074431cf,%r10  ;   {section_word}
  0x00000248074431d9: mov    %r10,0x240(%r15)
  0x00000248074431e0: mov    %rsp,0x238(%r15)
  0x00000248074431e7: movabs $0x667e60d1,%r10   ;   {external_word}
  0x00000248074431f1: cmpb   $0x0,(%r10)
  0x00000248074431f5: je     0x000002480744324d
  0x00000248074431fb: push   %rdx
  0x00000248074431fc: push   %r8
  0x00000248074431fe: push   %r9
  0x0000024807443200: movabs $0x2481fb80f30,%rdx  ;   {metadata({method} {0x000002481fb80f38} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x000002480744320a: mov    %r15,%rcx
  0x000002480744320d: sub    $0x20,%rsp
  0x0000024807443211: test   $0xf,%esp
  0x0000024807443217: je     0x0000024807443237
  0x000002480744321d: sub    $0x8,%rsp
  0x0000024807443221: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480744322b: call   *%r10
  0x000002480744322e: add    $0x8,%rsp
  0x0000024807443232: jmp    0x0000024807443244
  0x0000024807443237: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807443241: call   *%r10
  0x0000024807443244: add    $0x20,%rsp
  0x0000024807443248: pop    %r9
  0x000002480744324a: pop    %r8
  0x000002480744324c: pop    %rdx
  0x000002480744324d: lea    0x258(%r15),%rcx
  0x0000024807443254: movl   $0x4,0x2d0(%r15)
  0x000002480744325f: movabs $0x661b97d0,%r10   ;   {runtime_call}
  0x0000024807443269: call   *%r10
  0x000002480744326c: vzeroupper 
  0x000002480744326f: movl   $0x5,0x2d0(%r15)
  0x000002480744327a: mov    %r15d,%ecx
  0x000002480744327d: shr    $0x4,%ecx
  0x0000024807443280: and    $0xffc,%ecx
  0x0000024807443286: movabs $0x248055c0000,%r10  ;   {external_word}
  0x0000024807443290: mov    %ecx,(%r10,%rcx,1)
  0x0000024807443294: movabs $0x667e6b0c,%r10   ;   {external_word}
  0x000002480744329e: cmpl   $0x0,(%r10)
  0x00000248074432a5: jne    0x00000248074432b9
  0x00000248074432ab: cmpl   $0x0,0x30(%r15)
  0x00000248074432b3: je     0x00000248074432e2
  0x00000248074432b9: mov    %rax,-0x8(%rbp)
  0x00000248074432bd: mov    %r15,%rcx
  0x00000248074432c0: mov    %rsp,%r12
  0x00000248074432c3: sub    $0x20,%rsp
  0x00000248074432c7: and    $0xfffffffffffffff0,%rsp
  0x00000248074432cb: movabs $0x662139d0,%r10   ;   {runtime_call}
  0x00000248074432d5: call   *%r10
  0x00000248074432d8: mov    %r12,%rsp
  0x00000248074432db: xor    %r12,%r12
  0x00000248074432de: mov    -0x8(%rbp),%rax
  0x00000248074432e2: movl   $0x8,0x2d0(%r15)
  0x00000248074432ed: cmpl   $0x1,0x2fc(%r15)
  0x00000248074432f8: je     0x00000248074433c8
  0x00000248074432fe: movabs $0x667e60d1,%r10   ;   {external_word}
  0x0000024807443308: cmpb   $0x0,(%r10)
  0x000002480744330c: je     0x0000024807443362
  0x0000024807443312: mov    %rax,-0x8(%rbp)
  0x0000024807443316: movabs $0x2481fb80f30,%rdx  ;   {metadata({method} {0x000002481fb80f38} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000024807443320: mov    %r15,%rcx
  0x0000024807443323: sub    $0x20,%rsp
  0x0000024807443327: test   $0xf,%esp
  0x000002480744332d: je     0x000002480744334d
  0x0000024807443333: sub    $0x8,%rsp
  0x0000024807443337: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807443341: call   *%r10
  0x0000024807443344: add    $0x8,%rsp
  0x0000024807443348: jmp    0x000002480744335a
  0x000002480744334d: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807443357: call   *%r10
  0x000002480744335a: add    $0x20,%rsp
  0x000002480744335e: mov    -0x8(%rbp),%rax
  0x0000024807443362: movabs $0x0,%r10
  0x000002480744336c: mov    %r10,0x238(%r15)
  0x0000024807443373: movabs $0x0,%r10
  0x000002480744337d: mov    %r10,0x240(%r15)
  0x0000024807443384: test   %rax,%rax
  0x0000024807443387: je     0x00000248074433a5
  0x000002480744338d: test   $0x1,%rax
  0x0000024807443393: je     0x00000248074433a2
  0x0000024807443399: mov    -0x1(%rax),%rax
  0x000002480744339d: jmp    0x00000248074433a5
  0x00000248074433a2: mov    (%rax),%rax
  0x00000248074433a5: mov    0x38(%r15),%rcx
  0x00000248074433a9: movl   $0x0,0x100(%rcx)
  0x00000248074433b3: leave  
  0x00000248074433b4: cmpq   $0x0,0x8(%r15)
  0x00000248074433bc: jne    0x00000248074433c3
  0x00000248074433c2: ret    
  0x00000248074433c3: jmp    Stub::forward exception  ;   {runtime_call}
  0x00000248074433c8: mov    %rax,-0x8(%rbp)
  0x00000248074433cc: mov    %rsp,%r12
  0x00000248074433cf: sub    $0x20,%rsp
  0x00000248074433d3: and    $0xfffffffffffffff0,%rsp
  0x00000248074433d7: movabs $0x66203da0,%r10   ;   {runtime_call}
  0x00000248074433e1: call   *%r10
  0x00000248074433e4: mov    %r12,%rsp
  0x00000248074433e7: xor    %r12,%r12
  0x00000248074433ea: mov    -0x8(%rbp),%rax
  0x00000248074433ee: jmp    0x00000248074432fe
  0x00000248074433f3: hlt    
  0x00000248074433f4: hlt    
  0x00000248074433f5: hlt    
  0x00000248074433f6: hlt    
  0x00000248074433f7: hlt    
<nmethod compile_id='19' compile_kind='c2n' level='0' entry='0x0000024807443180' size='1000' address='0x0000024807443010' relocation_offset='288' consts_offset='1000' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='256' iicount='256' stamp='0.603'/>
<writer thread='19792'/>
Decoding compiled method 0x0000024807441890:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x00000248074419c0: mov    0x8(%rdx),%r10d
  0x00000248074419c4: shl    $0x3,%r10
  0x00000248074419c8: cmp    %r10,%rax
  0x00000248074419cb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074419d1: data16 xchg %ax,%ax
  0x00000248074419d4: nopl   0x0(%rax,%rax,1)
  0x00000248074419dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074419e0: sub    $0x18,%rsp
  0x00000248074419e7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 80)

  0x00000248074419ec: cmp    $0x5c,%r8d
  0x00000248074419f0: je     0x0000024807441a06  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 80)

  0x00000248074419f2: cmp    $0x2f,%r8d
  0x00000248074419f6: je     0x0000024807441a06  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 80)

  0x00000248074419f8: xor    %eax,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 80)

  0x00000248074419fa: add    $0x10,%rsp
  0x00000248074419fe: pop    %rbp
  0x00000248074419ff: test   %eax,-0x1e91a05(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x0000024807441a05: ret                       ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 80)

  0x0000024807441a06: mov    $0x1,%eax
  0x0000024807441a0b: jmp    0x00000248074419fa
  0x0000024807441a0d: hlt    
  0x0000024807441a0e: hlt    
  0x0000024807441a0f: hlt    
  0x0000024807441a10: hlt    
  0x0000024807441a11: hlt    
  0x0000024807441a12: hlt    
  0x0000024807441a13: hlt    
  0x0000024807441a14: hlt    
  0x0000024807441a15: hlt    
  0x0000024807441a16: hlt    
  0x0000024807441a17: hlt    
  0x0000024807441a18: hlt    
  0x0000024807441a19: hlt    
  0x0000024807441a1a: hlt    
  0x0000024807441a1b: hlt    
  0x0000024807441a1c: hlt    
  0x0000024807441a1d: hlt    
  0x0000024807441a1e: hlt    
  0x0000024807441a1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807441a20: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807441a25: call   0x0000024807441a2a
  0x0000024807441a2a: subq   $0x5,(%rsp)
  0x0000024807441a2f: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807441a34: hlt    
  0x0000024807441a35: hlt    
  0x0000024807441a36: hlt    
  0x0000024807441a37: hlt    
<nmethod compile_id='13' compiler='C2' level='4' entry='0x00000248074419c0' size='584' address='0x0000024807441890' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='37563' iicount='37563' stamp='0.606'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807441450:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fce4b88} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000248074415a0: mov    %eax,-0x6000(%rsp)
  0x00000248074415a7: push   %rbp
  0x00000248074415a8: sub    $0x40,%rsp
  0x00000248074415ac: movabs $0x2481fddcc70,%rcx  ;   {metadata(method data for {method} {0x000002481fce4b88} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000248074415b6: mov    0xdc(%rcx),%eax
  0x00000248074415bc: add    $0x8,%eax
  0x00000248074415bf: mov    %eax,0xdc(%rcx)
  0x00000248074415c5: movabs $0x2481fce4b80,%rcx  ;   {metadata({method} {0x000002481fce4b88} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000248074415cf: and    $0x1ff8,%eax
  0x00000248074415d5: cmp    $0x0,%eax
  0x00000248074415d8: je     0x00000248074416ea  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x00000248074415de: movslq %r8d,%r8
  0x00000248074415e1: mov    $0x2,%ecx
  0x00000248074415e6: shl    %cl,%r8
  0x00000248074415e9: movabs $0x10,%r10
  0x00000248074415f3: add    %r10,%r8
  0x00000248074415f6: mov    (%rdx,%r8,1),%eax
  0x00000248074415fa: shl    $0x3,%rax
  0x00000248074415fe: cmp    $0x0,%rax
  0x0000024807441602: jne    0x000002480744161d
  0x0000024807441604: movabs $0x2481fddcc70,%rdi  ;   {metadata(method data for {method} {0x000002481fce4b88} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000002480744160e: orl    $0x100,0x130(%rdi)
  0x0000024807441618: jmp    0x00000248074416de
  0x000002480744161d: movabs $0x7c003aa80,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x0000024807441627: mov    0x8(%rax),%edi
  0x000002480744162a: shl    $0x3,%rdi
  0x000002480744162e: cmp    0x30(%rdi),%rbx
  0x0000024807441632: jne    0x00000248074416c2
  0x0000024807441638: movabs $0x2481fddcc70,%rdi  ;   {metadata(method data for {method} {0x000002481fce4b88} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000024807441642: mov    0x8(%rax),%ebx
  0x0000024807441645: shl    $0x3,%rbx
  0x0000024807441649: cmp    0x140(%rdi),%rbx
  0x0000024807441650: jne    0x000002480744165f
  0x0000024807441652: addq   $0x1,0x148(%rdi)
  0x000002480744165a: jmp    0x00000248074416de
  0x000002480744165f: cmp    0x150(%rdi),%rbx
  0x0000024807441666: jne    0x0000024807441675
  0x0000024807441668: addq   $0x1,0x158(%rdi)
  0x0000024807441670: jmp    0x00000248074416de
  0x0000024807441675: cmpq   $0x0,0x140(%rdi)
  0x0000024807441680: jne    0x0000024807441699
  0x0000024807441682: mov    %rbx,0x140(%rdi)
  0x0000024807441689: movq   $0x1,0x148(%rdi)
  0x0000024807441694: jmp    0x00000248074416de
  0x0000024807441699: cmpq   $0x0,0x150(%rdi)
  0x00000248074416a4: jne    0x00000248074416bd
  0x00000248074416a6: mov    %rbx,0x150(%rdi)
  0x00000248074416ad: movq   $0x1,0x158(%rdi)
  0x00000248074416b8: jmp    0x00000248074416de
  0x00000248074416bd: jmp    0x00000248074416de
  0x00000248074416c2: movabs $0x2481fddcc70,%rdi  ;   {metadata(method data for {method} {0x000002481fce4b88} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000248074416cc: subq   $0x1,0x138(%rdi)
  0x00000248074416d4: jmp    0x0000024807441701
  0x00000248074416d9: jmp    0x00000248074416de  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x00000248074416de: add    $0x40,%rsp
  0x00000248074416e2: pop    %rbp
  0x00000248074416e3: test   %eax,-0x1e915e9(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074416e9: ret    
  0x00000248074416ea: mov    %rcx,0x8(%rsp)
  0x00000248074416ef: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074416f7: call   0x0000024807433da0  ; OopMap{rdx=Oop off=348}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x00000248074416fc: jmp    0x00000248074415de
  0x0000024807441701: mov    %rax,(%rsp)
  0x0000024807441705: call   0x00000248074316c0  ; OopMap{off=362}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x000002480744170a: nop
  0x000002480744170b: nop
  0x000002480744170c: mov    0x308(%r15),%rax
  0x0000024807441713: movabs $0x0,%r10
  0x000002480744171d: mov    %r10,0x308(%r15)
  0x0000024807441724: movabs $0x0,%r10
  0x000002480744172e: mov    %r10,0x310(%r15)
  0x0000024807441735: add    $0x40,%rsp
  0x0000024807441739: pop    %rbp
  0x000002480744173a: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744173f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807441740: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807441745: mov    %rsp,-0x28(%rsp)
  0x000002480744174a: sub    $0x80,%rsp
  0x0000024807441751: mov    %rax,0x78(%rsp)
  0x0000024807441756: mov    %rcx,0x70(%rsp)
  0x000002480744175b: mov    %rdx,0x68(%rsp)
  0x0000024807441760: mov    %rbx,0x60(%rsp)
  0x0000024807441765: mov    %rbp,0x50(%rsp)
  0x000002480744176a: mov    %rsi,0x48(%rsp)
  0x000002480744176f: mov    %rdi,0x40(%rsp)
  0x0000024807441774: mov    %r8,0x38(%rsp)
  0x0000024807441779: mov    %r9,0x30(%rsp)
  0x000002480744177e: mov    %r10,0x28(%rsp)
  0x0000024807441783: mov    %r11,0x20(%rsp)
  0x0000024807441788: mov    %r12,0x18(%rsp)
  0x000002480744178d: mov    %r13,0x10(%rsp)
  0x0000024807441792: mov    %r14,0x8(%rsp)
  0x0000024807441797: mov    %r15,(%rsp)
  0x000002480744179b: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074417a5: movabs $0x24807441745,%rdx  ;   {internal_word}
  0x00000248074417af: mov    %rsp,%r8
  0x00000248074417b2: and    $0xfffffffffffffff0,%rsp
  0x00000248074417b6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074417c0: call   *%r10
  0x00000248074417c3: hlt    
[Deopt Handler Code]
  0x00000248074417c4: movabs $0x248074417c4,%r10  ;   {section_word}
  0x00000248074417ce: push   %r10
  0x00000248074417d0: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074417d5: hlt    
  0x00000248074417d6: hlt    
  0x00000248074417d7: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x00000248074415a0' size='1056' address='0x0000024807441450' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='912' scopes_pcs_offset='952' dependencies_offset='1048' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='386' iicount='386' stamp='0.611'/>
<writer thread='13612'/>
Decoding compiled method 0x0000024807440e10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb05188} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x0000024807440f60: int3   
  0x0000024807440f61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807440f6c: data16 data16 xchg %ax,%ax
  0x0000024807440f70: mov    %eax,-0x6000(%rsp)
  0x0000024807440f77: push   %rbp
  0x0000024807440f78: sub    $0x50,%rsp
  0x0000024807440f7c: mov    (%rdx),%ebx
  0x0000024807440f7e: mov    0x8(%rdx),%r14
  0x0000024807440f82: mov    0x20(%rdx),%r13d
  0x0000024807440f86: mov    0x10(%rdx),%ebp
  0x0000024807440f89: mov    %rdx,%rcx
  0x0000024807440f8c: movabs $0x661ffac0,%r10
  0x0000024807440f96: call   *%r10
  0x0000024807440f99: test   %r14,%r14
  0x0000024807440f9c: je     0x00000248074410e3
  0x0000024807440fa2: mov    0x8(%r14),%r11d
  0x0000024807440fa6: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x0000024807440fad: jne    0x0000024807441121  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x0000024807440fb3: mov    %r14,%r10
  0x0000024807440fb6: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000024807440fba: cmp    %ebp,%ebx
  0x0000024807440fbc: jge    0x00000248074410ae  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000024807440fc2: mov    %ebx,%r11d
  0x0000024807440fc5: inc    %r11d
  0x0000024807440fc8: xor    %r8d,%r8d
  0x0000024807440fcb: cmp    %r8d,%r11d
  0x0000024807440fce: cmovl  %r8d,%r11d
  0x0000024807440fd2: cmp    %ebp,%r11d
  0x0000024807440fd5: cmovg  %ebp,%r11d
  0x0000024807440fd9: test   %r14,%r14
  0x0000024807440fdc: je     0x00000248074410f1
  0x0000024807440fe2: mov    (%r10),%r9d
  0x0000024807440fe5: cmp    %r9d,%ebx
  0x0000024807440fe8: jae    0x0000024807441101  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000024807440fee: movzwl 0x10(%r14,%rbx,2),%r8d
  0x0000024807440ff4: cmp    %r13d,%r8d
  0x0000024807440ff7: je     0x00000248074410b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000024807440ffd: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000024807440fff: cmp    %r11d,%ebx
  0x0000024807441002: jl     0x0000024807440fd9  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000024807441004: cmp    %r9d,%ebp
  0x0000024807441007: mov    %ebp,%r11d
  0x000002480744100a: cmovg  %r9d,%r11d
  0x000002480744100e: mov    %r11d,%edi
  0x0000024807441011: add    $0xfffffff9,%edi
  0x0000024807441014: mov    $0x80000000,%r8d
  0x000002480744101a: cmp    %edi,%r11d
  0x000002480744101d: cmovl  %r8d,%edi
  0x0000024807441021: cmp    %edi,%ebx
  0x0000024807441023: jge    0x0000024807441092
  0x0000024807441025: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807441030: movzwl 0x10(%r14,%rbx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000024807441036: cmp    %r13d,%r11d
  0x0000024807441039: je     0x00000248074410b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744103b: movslq %ebx,%r10
  0x000002480744103e: movzwl 0x12(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000024807441044: cmp    %r13d,%r11d
  0x0000024807441047: je     0x00000248074410c1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000024807441049: movzwl 0x14(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744104f: cmp    %r13d,%r11d
  0x0000024807441052: je     0x00000248074410c5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000024807441054: movzwl 0x16(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744105a: cmp    %r13d,%r11d
  0x000002480744105d: je     0x00000248074410ca  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744105f: movzwl 0x18(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000024807441065: cmp    %r13d,%r11d
  0x0000024807441068: je     0x00000248074410cf  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744106a: movzwl 0x1a(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000024807441070: cmp    %r13d,%r11d
  0x0000024807441073: je     0x00000248074410d4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000024807441075: movzwl 0x1c(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744107b: cmp    %r13d,%r11d
  0x000002480744107e: je     0x00000248074410d9  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000024807441080: movzwl 0x1e(%r14,%r10,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000024807441086: cmp    %r13d,%r10d
  0x0000024807441089: je     0x00000248074410de  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744108b: add    $0x8,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000002480744108e: cmp    %edi,%ebx
  0x0000024807441090: jl     0x0000024807441030  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000024807441092: cmp    %ebp,%ebx
  0x0000024807441094: jge    0x00000248074410ae
  0x0000024807441096: xchg   %ax,%ax
  0x0000024807441098: cmp    %r9d,%ebx
  0x000002480744109b: jae    0x0000024807441107  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744109d: movzwl 0x10(%r14,%rbx,2),%r11d
  0x00000248074410a3: cmp    %r13d,%r11d
  0x00000248074410a6: je     0x00000248074410b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000248074410a8: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000248074410aa: cmp    %ebp,%ebx
  0x00000248074410ac: jl     0x0000024807441098  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000248074410ae: mov    $0xffffffff,%ebx   ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x00000248074410b3: mov    %ebx,%eax
  0x00000248074410b5: add    $0x50,%rsp
  0x00000248074410b9: pop    %rbp
  0x00000248074410ba: test   %eax,-0x1e910c0(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x00000248074410c0: ret    
  0x00000248074410c1: inc    %ebx
  0x00000248074410c3: jmp    0x00000248074410b3
  0x00000248074410c5: add    $0x2,%ebx
  0x00000248074410c8: jmp    0x00000248074410b3
  0x00000248074410ca: add    $0x3,%ebx
  0x00000248074410cd: jmp    0x00000248074410b3
  0x00000248074410cf: add    $0x4,%ebx
  0x00000248074410d2: jmp    0x00000248074410b3
  0x00000248074410d4: add    $0x5,%ebx
  0x00000248074410d7: jmp    0x00000248074410b3
  0x00000248074410d9: add    $0x6,%ebx
  0x00000248074410dc: jmp    0x00000248074410b3
  0x00000248074410de: add    $0x7,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000248074410e1: jmp    0x00000248074410b3
  0x00000248074410e3: xor    %r14d,%r14d
  0x00000248074410e6: mov    $0xc,%r10d
  0x00000248074410ec: jmp    0x0000024807440fba
  0x00000248074410f1: mov    $0xfffffff6,%edx
  0x00000248074410f6: mov    %ebx,%ebp
  0x00000248074410f8: data16 xchg %ax,%ax
  0x00000248074410fb: call   0x00000248073754e0  ; OopMap{off=416}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000024807441100: int3   
  0x0000024807441101: mov    %ebx,0x20(%rsp)
  0x0000024807441105: jmp    0x000002480744110b
  0x0000024807441107: mov    %ebx,0x20(%rsp)
  0x000002480744110b: mov    $0xffffffe4,%edx
  0x0000024807441110: mov    %r13d,0x24(%rsp)
  0x0000024807441115: mov    %r14,0x30(%rsp)
  0x000002480744111a: nop
  0x000002480744111b: call   0x00000248073754e0  ; OopMap{[48]=Oop off=448}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000024807441120: int3   
  0x0000024807441121: mov    $0xffffff9d,%edx
  0x0000024807441126: mov    %r13d,0x20(%rsp)
  0x000002480744112b: mov    %r14,0x28(%rsp)
  0x0000024807441130: mov    %ebx,0x24(%rsp)
  0x0000024807441134: data16 xchg %ax,%ax
  0x0000024807441137: call   0x00000248073754e0  ; OopMap{[40]=Oop off=476}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x000002480744113c: int3                      ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000002480744113d: hlt    
  0x000002480744113e: hlt    
  0x000002480744113f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807441140: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807441145: call   0x000002480744114a
  0x000002480744114a: subq   $0x5,(%rsp)
  0x000002480744114f: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807441154: hlt    
  0x0000024807441155: hlt    
  0x0000024807441156: hlt    
  0x0000024807441157: hlt    
<nmethod compile_id='7' compile_kind='osr' compiler='C2' level='4' entry='0x0000024807440f60' size='1568' address='0x0000024807440e10' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='856' scopes_pcs_offset='968' dependencies_offset='1560' method='java/lang/String indexOf (II)I' bytes='70' count='1844' backedge_count='112138' iicount='1844' stamp='0.618'/>
<writer thread='12268'/>
Decoding compiled method 0x0000024807440790:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb05008} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  0x00000248074408e0: int3   
  0x00000248074408e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074408ec: data16 data16 xchg %ax,%ax
  0x00000248074408f0: mov    %eax,-0x6000(%rsp)
  0x00000248074408f7: push   %rbp
  0x00000248074408f8: sub    $0x50,%rsp
  0x00000248074408fc: mov    (%rdx),%r13d
  0x00000248074408ff: mov    0x10(%rdx),%ebx
  0x0000024807440902: mov    0x18(%rdx),%rbp
  0x0000024807440906: mov    0x8(%rdx),%r14
  0x000002480744090a: mov    %rdx,%rcx
  0x000002480744090d: movabs $0x661ffac0,%r10
  0x0000024807440917: call   *%r10
  0x000002480744091a: test   %rbp,%rbp
  0x000002480744091d: je     0x0000024807440aba
  0x0000024807440923: mov    0x8(%rbp),%r11d
  0x0000024807440927: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000002480744092e: jne    0x0000024807440ae5
  0x0000024807440934: mov    %rbp,%r10
  0x0000024807440937: test   %r14,%r14
  0x000002480744093a: je     0x0000024807440ac2
  0x0000024807440940: mov    0x8(%r14),%r11d
  0x0000024807440944: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000002480744094b: jne    0x0000024807440ae5  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000024807440951: mov    0xc(%r10),%r8d     ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)
                                                ; implicit exception: dispatches to 0x0000024807440b01
  0x0000024807440955: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)
                                                ; implicit exception: dispatches to 0x0000024807440b01
  0x000002480744095a: cmp    %r11d,%r13d
  0x000002480744095d: jge    0x0000024807440aa8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000024807440963: mov    %r13d,%r9d
  0x0000024807440966: inc    %r9d
  0x0000024807440969: xor    %ecx,%ecx
  0x000002480744096b: cmp    %ecx,%r9d
  0x000002480744096e: cmovl  %ecx,%r9d
  0x0000024807440972: cmp    %r11d,%r9d
  0x0000024807440975: cmovg  %r11d,%r9d
  0x0000024807440979: mov    0xc(%r14),%eax     ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ; implicit exception: dispatches to 0x0000024807440b1d
  0x000002480744097d: mov    %ebx,%ebp
  0x000002480744097f: shl    $0x5,%ebp
  0x0000024807440982: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000024807440984: cmp    %eax,%r13d
  0x0000024807440987: jae    0x0000024807440aca  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000002480744098d: movzwl 0x10(%r14,%r13,2),%ebx
  0x0000024807440993: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000024807440995: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000024807440998: cmp    %r9d,%r13d
  0x000002480744099b: jl     0x0000024807440979  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000002480744099d: cmp    %eax,%r11d
  0x00000248074409a0: mov    %r11d,%r8d
  0x00000248074409a3: cmovg  %eax,%r8d
  0x00000248074409a7: mov    %r8d,%edx
  0x00000248074409aa: add    $0xfffffff9,%edx
  0x00000248074409ad: mov    $0x80000000,%r9d
  0x00000248074409b3: cmp    %edx,%r8d
  0x00000248074409b6: cmovl  %r9d,%edx
  0x00000248074409ba: cmp    %edx,%r13d
  0x00000248074409bd: jge    0x0000024807440a85
  0x00000248074409c3: mov    %ebx,0x20(%rsp)
  0x00000248074409c7: vmovq  %r10,%xmm0
  0x00000248074409cc: vmovd  %r11d,%xmm2        ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00000248074409d1: movzwl 0x10(%r14,%r13,2),%r10d
  0x00000248074409d7: movslq %r13d,%rsi
  0x00000248074409da: movzwl 0x12(%r14,%rsi,2),%ebx
  0x00000248074409e0: movzwl 0x1e(%r14,%rsi,2),%r11d
  0x00000248074409e6: movzwl 0x1c(%r14,%rsi,2),%r9d
  0x00000248074409ec: movzwl 0x1a(%r14,%rsi,2),%r8d
  0x00000248074409f2: movzwl 0x18(%r14,%rsi,2),%edi
  0x00000248074409f8: movzwl 0x16(%r14,%rsi,2),%ecx
  0x00000248074409fe: movzwl 0x14(%r14,%rsi,2),%esi
  0x0000024807440a04: mov    0x20(%rsp),%ebp
  0x0000024807440a08: shl    $0x5,%ebp
  0x0000024807440a0b: sub    0x20(%rsp),%ebp
  0x0000024807440a0f: add    %r10d,%ebp
  0x0000024807440a12: mov    %ebp,%r10d
  0x0000024807440a15: shl    $0x5,%r10d
  0x0000024807440a19: sub    %ebp,%r10d
  0x0000024807440a1c: add    %ebx,%r10d
  0x0000024807440a1f: mov    %r10d,%ebp
  0x0000024807440a22: shl    $0x5,%ebp
  0x0000024807440a25: sub    %r10d,%ebp
  0x0000024807440a28: add    %esi,%ebp
  0x0000024807440a2a: mov    %ebp,%r10d
  0x0000024807440a2d: shl    $0x5,%r10d
  0x0000024807440a31: sub    %ebp,%r10d
  0x0000024807440a34: add    %ecx,%r10d
  0x0000024807440a37: mov    %r10d,%ecx
  0x0000024807440a3a: shl    $0x5,%ecx
  0x0000024807440a3d: sub    %r10d,%ecx
  0x0000024807440a40: add    %edi,%ecx
  0x0000024807440a42: mov    %ecx,%ebx
  0x0000024807440a44: shl    $0x5,%ebx
  0x0000024807440a47: sub    %ecx,%ebx
  0x0000024807440a49: add    %r8d,%ebx
  0x0000024807440a4c: mov    %ebx,%r10d
  0x0000024807440a4f: shl    $0x5,%r10d
  0x0000024807440a53: sub    %ebx,%r10d
  0x0000024807440a56: add    %r9d,%r10d
  0x0000024807440a59: mov    %r10d,%r8d
  0x0000024807440a5c: shl    $0x5,%r8d
  0x0000024807440a60: sub    %r10d,%r8d
  0x0000024807440a63: add    %r11d,%r8d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000024807440a66: mov    %r8d,0x20(%rsp)
  0x0000024807440a6b: add    $0x8,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000024807440a6f: cmp    %edx,%r13d
  0x0000024807440a72: jl     0x00000248074409d1  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000024807440a78: mov    %r8d,%ebx
  0x0000024807440a7b: vmovq  %xmm0,%r10
  0x0000024807440a80: vmovd  %xmm2,%r11d
  0x0000024807440a85: cmp    %r11d,%r13d
  0x0000024807440a88: jge    0x0000024807440aa8
  0x0000024807440a8a: xchg   %ax,%ax            ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000024807440a8c: mov    %ebx,%ebp
  0x0000024807440a8e: shl    $0x5,%ebp
  0x0000024807440a91: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000024807440a93: cmp    %eax,%r13d
  0x0000024807440a96: jae    0x0000024807440aca  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000024807440a98: movzwl 0x10(%r14,%r13,2),%ebx
  0x0000024807440a9e: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000024807440aa0: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000024807440aa3: cmp    %r11d,%r13d
  0x0000024807440aa6: jl     0x0000024807440a8c  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000024807440aa8: mov    %ebx,0x10(%r10)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000024807440aac: mov    %ebx,%eax
  0x0000024807440aae: add    $0x50,%rsp
  0x0000024807440ab2: pop    %rbp
  0x0000024807440ab3: test   %eax,-0x1e90ab9(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x0000024807440ab9: ret    
  0x0000024807440aba: xor    %r10d,%r10d
  0x0000024807440abd: jmp    0x0000024807440937
  0x0000024807440ac2: xor    %r14d,%r14d
  0x0000024807440ac5: jmp    0x0000024807440951
  0x0000024807440aca: mov    $0xffffffe4,%edx
  0x0000024807440acf: mov    %r14,0x30(%rsp)
  0x0000024807440ad4: mov    %r13d,0x2c(%rsp)
  0x0000024807440ad9: mov    %r10,0x38(%rsp)
  0x0000024807440ade: nop
  0x0000024807440adf: call   0x00000248073754e0  ; OopMap{[48]=Oop [56]=Oop off=516}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x0000024807440ae4: int3   
  0x0000024807440ae5: mov    $0xffffff9d,%edx
  0x0000024807440aea: mov    %ebx,0x20(%rsp)
  0x0000024807440aee: mov    %r14,0x28(%rsp)
  0x0000024807440af3: mov    %r13d,0x24(%rsp)
  0x0000024807440af8: data16 xchg %ax,%ax
  0x0000024807440afb: call   0x00000248073754e0  ; OopMap{rbp=Oop [40]=Oop off=544}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x0000024807440b00: int3   
  0x0000024807440b01: mov    $0xffffff86,%edx
  0x0000024807440b06: mov    %ebx,%ebp
  0x0000024807440b08: mov    %r14,0x20(%rsp)
  0x0000024807440b0d: mov    %r13d,0x28(%rsp)
  0x0000024807440b12: mov    %r10,0x30(%rsp)
  0x0000024807440b17: call   0x00000248073754e0  ; OopMap{[32]=Oop [48]=Oop off=572}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x0000024807440b1c: int3   
  0x0000024807440b1d: mov    $0xfffffff6,%edx
  0x0000024807440b22: mov    %r13d,%ebp
  0x0000024807440b25: xchg   %ax,%ax
  0x0000024807440b27: call   0x00000248073754e0  ; OopMap{off=588}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x0000024807440b2c: int3                      ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000024807440b2d: hlt    
  0x0000024807440b2e: hlt    
  0x0000024807440b2f: hlt    
  0x0000024807440b30: hlt    
  0x0000024807440b31: hlt    
  0x0000024807440b32: hlt    
  0x0000024807440b33: hlt    
  0x0000024807440b34: hlt    
  0x0000024807440b35: hlt    
  0x0000024807440b36: hlt    
  0x0000024807440b37: hlt    
  0x0000024807440b38: hlt    
  0x0000024807440b39: hlt    
  0x0000024807440b3a: hlt    
  0x0000024807440b3b: hlt    
  0x0000024807440b3c: hlt    
  0x0000024807440b3d: hlt    
  0x0000024807440b3e: hlt    
  0x0000024807440b3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807440b40: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807440b45: call   0x0000024807440b4a
  0x0000024807440b4a: subq   $0x5,(%rsp)
  0x0000024807440b4f: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807440b54: hlt    
  0x0000024807440b55: hlt    
  0x0000024807440b56: hlt    
  0x0000024807440b57: hlt    
<nmethod compile_id='3' compile_kind='osr' compiler='C2' level='4' entry='0x00000248074408e0' size='1624' address='0x0000024807440790' relocation_offset='288' insts_offset='336' stub_offset='944' scopes_data_offset='992' scopes_pcs_offset='1136' dependencies_offset='1584' nul_chk_table_offset='1592' method='java/lang/String hashCode ()I' bytes='55' count='2383' backedge_count='62733' iicount='2383' stamp='0.628'/>
<writer thread='21600'/>
<task_queued compile_id='20' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1280' iicount='1280' level='3' stamp='0.628' comment='tiered' hot_count='1280'/>
<writer thread='12268'/>
Decoding compiled method 0x0000024807444010:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb03c68} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000024807444140: mov    0x8(%rdx),%r10d
  0x0000024807444144: shl    $0x3,%r10
  0x0000024807444148: cmp    %r10,%rax
  0x000002480744414b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807444151: data16 xchg %ax,%ax
  0x0000024807444154: nopl   0x0(%rax,%rax,1)
  0x000002480744415c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807444160: mov    %eax,-0x6000(%rsp)
  0x0000024807444167: push   %rbp
  0x0000024807444168: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x000002480744416c: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000024807444170: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000024807444181
  0x0000024807444175: add    $0x10,%rsp
  0x0000024807444179: pop    %rbp
  0x000002480744417a: test   %eax,-0x1e94180(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x0000024807444180: ret    
  0x0000024807444181: mov    $0xfffffff6,%edx
  0x0000024807444186: nop
  0x0000024807444187: call   0x00000248073754e0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000002480744418c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x000002480744418d: hlt    
  0x000002480744418e: hlt    
  0x000002480744418f: hlt    
  0x0000024807444190: hlt    
  0x0000024807444191: hlt    
  0x0000024807444192: hlt    
  0x0000024807444193: hlt    
  0x0000024807444194: hlt    
  0x0000024807444195: hlt    
  0x0000024807444196: hlt    
  0x0000024807444197: hlt    
  0x0000024807444198: hlt    
  0x0000024807444199: hlt    
  0x000002480744419a: hlt    
  0x000002480744419b: hlt    
  0x000002480744419c: hlt    
  0x000002480744419d: hlt    
  0x000002480744419e: hlt    
  0x000002480744419f: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074441a0: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000248074441a5: call   0x00000248074441aa
  0x00000248074441aa: subq   $0x5,(%rsp)
  0x00000248074441af: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074441b4: hlt    
  0x00000248074441b5: hlt    
  0x00000248074441b6: hlt    
  0x00000248074441b7: hlt    
<nmethod compile_id='4' compiler='C2' level='4' entry='0x0000024807444140' size='584' address='0x0000024807444010' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='31979' iicount='31979' stamp='0.632'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807443cd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807443e20: mov    %eax,-0x6000(%rsp)
  0x0000024807443e27: push   %rbp
  0x0000024807443e28: sub    $0x30,%rsp
  0x0000024807443e2c: movabs $0x2481fd286d8,%rax  ;   {metadata(method data for {method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000024807443e36: mov    0xdc(%rax),%esi
  0x0000024807443e3c: add    $0x8,%esi
  0x0000024807443e3f: mov    %esi,0xdc(%rax)
  0x0000024807443e45: movabs $0x2481fb196e0,%rax  ;   {metadata({method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000024807443e4f: and    $0x1ff8,%esi
  0x0000024807443e55: cmp    $0x0,%esi
  0x0000024807443e58: je     0x0000024807443e7b
  0x0000024807443e5e: movabs $0x76b700c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000024807443e68: mov    0x74(%rax),%eax
  0x0000024807443e6b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 336)

  0x0000024807443e6f: add    $0x30,%rsp
  0x0000024807443e73: pop    %rbp
  0x0000024807443e74: test   %eax,-0x1e93d7a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807443e7a: ret    
  0x0000024807443e7b: mov    %rax,0x8(%rsp)
  0x0000024807443e80: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807443e88: call   0x0000024807433da0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 336)
                                                ;   {runtime_call}
  0x0000024807443e8d: jmp    0x0000024807443e5e
  0x0000024807443e8f: nop
  0x0000024807443e90: nop
  0x0000024807443e91: mov    0x308(%r15),%rax
  0x0000024807443e98: movabs $0x0,%r10
  0x0000024807443ea2: mov    %r10,0x308(%r15)
  0x0000024807443ea9: movabs $0x0,%r10
  0x0000024807443eb3: mov    %r10,0x310(%r15)
  0x0000024807443eba: add    $0x30,%rsp
  0x0000024807443ebe: pop    %rbp
  0x0000024807443ebf: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807443ec4: hlt    
  0x0000024807443ec5: hlt    
  0x0000024807443ec6: hlt    
  0x0000024807443ec7: hlt    
  0x0000024807443ec8: hlt    
  0x0000024807443ec9: hlt    
  0x0000024807443eca: hlt    
  0x0000024807443ecb: hlt    
  0x0000024807443ecc: hlt    
  0x0000024807443ecd: hlt    
  0x0000024807443ece: hlt    
  0x0000024807443ecf: hlt    
  0x0000024807443ed0: hlt    
  0x0000024807443ed1: hlt    
  0x0000024807443ed2: hlt    
  0x0000024807443ed3: hlt    
  0x0000024807443ed4: hlt    
  0x0000024807443ed5: hlt    
  0x0000024807443ed6: hlt    
  0x0000024807443ed7: hlt    
  0x0000024807443ed8: hlt    
  0x0000024807443ed9: hlt    
  0x0000024807443eda: hlt    
  0x0000024807443edb: hlt    
  0x0000024807443edc: hlt    
  0x0000024807443edd: hlt    
  0x0000024807443ede: hlt    
  0x0000024807443edf: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807443ee0: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807443ee5: mov    %rsp,-0x28(%rsp)
  0x0000024807443eea: sub    $0x80,%rsp
  0x0000024807443ef1: mov    %rax,0x78(%rsp)
  0x0000024807443ef6: mov    %rcx,0x70(%rsp)
  0x0000024807443efb: mov    %rdx,0x68(%rsp)
  0x0000024807443f00: mov    %rbx,0x60(%rsp)
  0x0000024807443f05: mov    %rbp,0x50(%rsp)
  0x0000024807443f0a: mov    %rsi,0x48(%rsp)
  0x0000024807443f0f: mov    %rdi,0x40(%rsp)
  0x0000024807443f14: mov    %r8,0x38(%rsp)
  0x0000024807443f19: mov    %r9,0x30(%rsp)
  0x0000024807443f1e: mov    %r10,0x28(%rsp)
  0x0000024807443f23: mov    %r11,0x20(%rsp)
  0x0000024807443f28: mov    %r12,0x18(%rsp)
  0x0000024807443f2d: mov    %r13,0x10(%rsp)
  0x0000024807443f32: mov    %r14,0x8(%rsp)
  0x0000024807443f37: mov    %r15,(%rsp)
  0x0000024807443f3b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807443f45: movabs $0x24807443ee5,%rdx  ;   {internal_word}
  0x0000024807443f4f: mov    %rsp,%r8
  0x0000024807443f52: and    $0xfffffffffffffff0,%rsp
  0x0000024807443f56: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807443f60: call   *%r10
  0x0000024807443f63: hlt    
[Deopt Handler Code]
  0x0000024807443f64: movabs $0x24807443f64,%r10  ;   {section_word}
  0x0000024807443f6e: push   %r10
  0x0000024807443f70: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807443f75: hlt    
  0x0000024807443f76: hlt    
  0x0000024807443f77: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000024807443e20' size='776' address='0x0000024807443cd0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='688' scopes_pcs_offset='704' dependencies_offset='768' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1281' iicount='1281' stamp='0.635'/>
<writer thread='13612'/>
Decoding compiled method 0x0000024807443910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000024807443a60: mov    0x8(%rdx),%r10d
  0x0000024807443a64: shl    $0x3,%r10
  0x0000024807443a68: cmp    %r10,%rax
  0x0000024807443a6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807443a71: data16 xchg %ax,%ax
  0x0000024807443a74: nopl   0x0(%rax,%rax,1)
  0x0000024807443a7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807443a80: mov    %eax,-0x6000(%rsp)
  0x0000024807443a87: push   %rbp
  0x0000024807443a88: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000024807443a8c: test   %r8d,%r8d
  0x0000024807443a8f: jl     0x0000024807443acd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000024807443a91: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000024807443a95: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000024807443af5
  0x0000024807443a9a: cmp    %ebp,%r8d
  0x0000024807443a9d: jge    0x0000024807443ae1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000024807443a9f: cmp    %ebp,%r8d
  0x0000024807443aa2: jae    0x0000024807443aba
  0x0000024807443aa4: shl    $0x3,%r10
  0x0000024807443aa8: movzwl 0x10(%r10,%r8,2),%eax
  0x0000024807443aae: add    $0x20,%rsp
  0x0000024807443ab2: pop    %rbp
  0x0000024807443ab3: test   %eax,-0x1e93ab9(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x0000024807443ab9: ret    
  0x0000024807443aba: mov    $0xffffffe4,%edx
  0x0000024807443abf: mov    %r8d,%ebp
  0x0000024807443ac2: mov    %r10d,(%rsp)
  0x0000024807443ac6: nop
  0x0000024807443ac7: call   0x00000248073754e0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000024807443acc: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000024807443acd: mov    %rdx,%rbp
  0x0000024807443ad0: mov    %r8d,0x4(%rsp)
  0x0000024807443ad5: mov    $0xffffff65,%edx
  0x0000024807443ada: nop
  0x0000024807443adb: call   0x00000248073754e0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000024807443ae0: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000024807443ae1: mov    %rdx,(%rsp)
  0x0000024807443ae5: mov    %r8d,0xc(%rsp)
  0x0000024807443aea: mov    $0xffffff65,%edx
  0x0000024807443aef: call   0x00000248073754e0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000024807443af4: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000024807443af5: mov    $0xfffffff6,%edx
  0x0000024807443afa: nop
  0x0000024807443afb: call   0x00000248073754e0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000024807443b00: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000024807443b01: hlt    
  0x0000024807443b02: hlt    
  0x0000024807443b03: hlt    
  0x0000024807443b04: hlt    
  0x0000024807443b05: hlt    
  0x0000024807443b06: hlt    
  0x0000024807443b07: hlt    
  0x0000024807443b08: hlt    
  0x0000024807443b09: hlt    
  0x0000024807443b0a: hlt    
  0x0000024807443b0b: hlt    
  0x0000024807443b0c: hlt    
  0x0000024807443b0d: hlt    
  0x0000024807443b0e: hlt    
  0x0000024807443b0f: hlt    
  0x0000024807443b10: hlt    
  0x0000024807443b11: hlt    
  0x0000024807443b12: hlt    
  0x0000024807443b13: hlt    
  0x0000024807443b14: hlt    
  0x0000024807443b15: hlt    
  0x0000024807443b16: hlt    
  0x0000024807443b17: hlt    
  0x0000024807443b18: hlt    
  0x0000024807443b19: hlt    
  0x0000024807443b1a: hlt    
  0x0000024807443b1b: hlt    
  0x0000024807443b1c: hlt    
  0x0000024807443b1d: hlt    
  0x0000024807443b1e: hlt    
  0x0000024807443b1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807443b20: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807443b25: call   0x0000024807443b2a
  0x0000024807443b2a: subq   $0x5,(%rsp)
  0x0000024807443b2f: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807443b34: hlt    
  0x0000024807443b35: hlt    
  0x0000024807443b36: hlt    
  0x0000024807443b37: hlt    
<nmethod compile_id='10' compiler='C2' level='4' entry='0x0000024807443a60' size='928' address='0x0000024807443910' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='175304' iicount='175304' stamp='0.640'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807443550:
Code:
[Entry Point]
  # {method} {0x000002481fb00648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x00000248074436c0: mov    0x8(%rdx),%r10d
  0x00000248074436c4: shl    $0x3,%r10
  0x00000248074436c8: cmp    %r10,%rax
  0x00000248074436cb: je     0x00000248074436d8
  0x00000248074436d1: jmp    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074436d6: xchg   %ax,%ax
[Verified Entry Point]
  0x00000248074436d8: mov    %eax,-0x6000(%rsp)
  0x00000248074436df: push   %rbp
  0x00000248074436e0: mov    %rsp,%rbp
  0x00000248074436e3: sub    $0x60,%rsp
  0x00000248074436e7: mov    %rdx,0x20(%rsp)
  0x00000248074436ec: cmp    $0x0,%rdx
  0x00000248074436f0: lea    0x20(%rsp),%rdx
  0x00000248074436f5: cmove  0x20(%rsp),%rdx    ; OopMap{[32]=Oop off=59}
  0x00000248074436fb: movabs $0x248074436fb,%r10  ;   {section_word}
  0x0000024807443705: mov    %r10,0x240(%r15)
  0x000002480744370c: mov    %rsp,0x238(%r15)
  0x0000024807443713: movabs $0x667e60d1,%r10   ;   {external_word}
  0x000002480744371d: cmpb   $0x0,(%r10)
  0x0000024807443721: je     0x0000024807443771
  0x0000024807443727: push   %rdx
  0x0000024807443728: movabs $0x2481fb00640,%rdx  ;   {metadata({method} {0x000002481fb00648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807443732: mov    %r15,%rcx
  0x0000024807443735: sub    $0x20,%rsp
  0x0000024807443739: test   $0xf,%esp
  0x000002480744373f: je     0x000002480744375f
  0x0000024807443745: sub    $0x8,%rsp
  0x0000024807443749: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807443753: call   *%r10
  0x0000024807443756: add    $0x8,%rsp
  0x000002480744375a: jmp    0x000002480744376c
  0x000002480744375f: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807443769: call   *%r10
  0x000002480744376c: add    $0x20,%rsp
  0x0000024807443770: pop    %rdx
  0x0000024807443771: lea    0x258(%r15),%rcx
  0x0000024807443778: movl   $0x4,0x2d0(%r15)
  0x0000024807443783: movabs $0x7ffe3999052e,%r10  ;   {runtime_call}
  0x000002480744378d: call   *%r10
  0x0000024807443790: vzeroupper 
  0x0000024807443793: movl   $0x5,0x2d0(%r15)
  0x000002480744379e: mov    %r15d,%ecx
  0x00000248074437a1: shr    $0x4,%ecx
  0x00000248074437a4: and    $0xffc,%ecx
  0x00000248074437aa: movabs $0x248055c0000,%r10  ;   {external_word}
  0x00000248074437b4: mov    %ecx,(%r10,%rcx,1)
  0x00000248074437b8: movabs $0x667e6b0c,%r10   ;   {external_word}
  0x00000248074437c2: cmpl   $0x0,(%r10)
  0x00000248074437c9: jne    0x00000248074437dd
  0x00000248074437cf: cmpl   $0x0,0x30(%r15)
  0x00000248074437d7: je     0x0000024807443806
  0x00000248074437dd: mov    %rax,-0x8(%rbp)
  0x00000248074437e1: mov    %r15,%rcx
  0x00000248074437e4: mov    %rsp,%r12
  0x00000248074437e7: sub    $0x20,%rsp
  0x00000248074437eb: and    $0xfffffffffffffff0,%rsp
  0x00000248074437ef: movabs $0x662139d0,%r10   ;   {runtime_call}
  0x00000248074437f9: call   *%r10
  0x00000248074437fc: mov    %r12,%rsp
  0x00000248074437ff: xor    %r12,%r12
  0x0000024807443802: mov    -0x8(%rbp),%rax
  0x0000024807443806: movl   $0x8,0x2d0(%r15)
  0x0000024807443811: cmpl   $0x1,0x2fc(%r15)
  0x000002480744381c: je     0x00000248074438cb
  0x0000024807443822: movabs $0x667e60d1,%r10   ;   {external_word}
  0x000002480744382c: cmpb   $0x0,(%r10)
  0x0000024807443830: je     0x0000024807443886
  0x0000024807443836: mov    %rax,-0x8(%rbp)
  0x000002480744383a: movabs $0x2481fb00640,%rdx  ;   {metadata({method} {0x000002481fb00648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807443844: mov    %r15,%rcx
  0x0000024807443847: sub    $0x20,%rsp
  0x000002480744384b: test   $0xf,%esp
  0x0000024807443851: je     0x0000024807443871
  0x0000024807443857: sub    $0x8,%rsp
  0x000002480744385b: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807443865: call   *%r10
  0x0000024807443868: add    $0x8,%rsp
  0x000002480744386c: jmp    0x000002480744387e
  0x0000024807443871: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480744387b: call   *%r10
  0x000002480744387e: add    $0x20,%rsp
  0x0000024807443882: mov    -0x8(%rbp),%rax
  0x0000024807443886: movabs $0x0,%r10
  0x0000024807443890: mov    %r10,0x238(%r15)
  0x0000024807443897: movabs $0x0,%r10
  0x00000248074438a1: mov    %r10,0x240(%r15)
  0x00000248074438a8: mov    0x38(%r15),%rcx
  0x00000248074438ac: movl   $0x0,0x100(%rcx)
  0x00000248074438b6: leave  
  0x00000248074438b7: cmpq   $0x0,0x8(%r15)
  0x00000248074438bf: jne    0x00000248074438c6
  0x00000248074438c5: ret    
  0x00000248074438c6: jmp    Stub::forward exception  ;   {runtime_call}
  0x00000248074438cb: mov    %rax,-0x8(%rbp)
  0x00000248074438cf: mov    %rsp,%r12
  0x00000248074438d2: sub    $0x20,%rsp
  0x00000248074438d6: and    $0xfffffffffffffff0,%rsp
  0x00000248074438da: movabs $0x66203da0,%r10   ;   {runtime_call}
  0x00000248074438e4: call   *%r10
  0x00000248074438e7: mov    %r12,%rsp
  0x00000248074438ea: xor    %r12,%r12
  0x00000248074438ed: mov    -0x8(%rbp),%rax
  0x00000248074438f1: jmp    0x0000024807443822
  0x00000248074438f6: hlt    
  0x00000248074438f7: hlt    
<nmethod compile_id='21' compile_kind='c2n' level='0' entry='0x00000248074436c0' size='936' address='0x0000024807443550' relocation_offset='288' consts_offset='936' insts_offset='368' method='java/lang/Object hashCode ()I' bytes='0' count='384' iicount='384' stamp='0.644'/>
<task_queued compile_id='22' method='java/lang/Number &lt;init&gt; ()V' bytes='5' count='384' iicount='384' level='3' stamp='0.647' comment='tiered' hot_count='384'/>
<task_queued compile_id='23' method='java/lang/Byte &lt;init&gt; (B)V' bytes='10' count='256' iicount='256' level='3' stamp='0.647' comment='tiered' hot_count='256'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074425d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807442720: mov    0x8(%rdx),%r10d
  0x0000024807442724: shl    $0x3,%r10
  0x0000024807442728: cmp    %rax,%r10
  0x000002480744272b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807442731: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744273c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807442740: mov    %eax,-0x6000(%rsp)
  0x0000024807442747: push   %rbp
  0x0000024807442748: sub    $0x30,%rsp
  0x000002480744274c: movabs $0x2481fe043c8,%rsi  ;   {metadata(method data for {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x0000024807442756: mov    0xdc(%rsi),%edi
  0x000002480744275c: add    $0x8,%edi
  0x000002480744275f: mov    %edi,0xdc(%rsi)
  0x0000024807442765: movabs $0x2481fba00a0,%rsi  ;   {metadata({method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x000002480744276f: and    $0x1ff8,%edi
  0x0000024807442775: cmp    $0x0,%edi
  0x0000024807442778: je     0x00000248074427d1  ;*aload_0
                                                ; - java.lang.Number::&lt;init&gt;@0 (line 55)

  0x000002480744277e: mov    %rdx,%rsi
  0x0000024807442781: movabs $0x2481fe043c8,%rdi  ;   {metadata(method data for {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x000002480744278b: addq   $0x1,0x108(%rdi)
  0x0000024807442793: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744279d: mov    0xdc(%rsi),%edi
  0x00000248074427a3: add    $0x8,%edi
  0x00000248074427a6: mov    %edi,0xdc(%rsi)
  0x00000248074427ac: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000248074427b6: and    $0x7ffff8,%edi
  0x00000248074427bc: cmp    $0x0,%edi
  0x00000248074427bf: je     0x00000248074427e5
  0x00000248074427c5: add    $0x30,%rsp
  0x00000248074427c9: pop    %rbp
  0x00000248074427ca: test   %eax,-0x1e926d0(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074427d0: ret    
  0x00000248074427d1: mov    %rsi,0x8(%rsp)
  0x00000248074427d6: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074427de: call   0x0000024807433da0  ; OopMap{rdx=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.lang.Number::&lt;init&gt;@-1 (line 55)
                                                ;   {runtime_call}
  0x00000248074427e3: jmp    0x000002480744277e
  0x00000248074427e5: mov    %rsi,0x8(%rsp)
  0x00000248074427ea: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074427f2: call   0x0000024807433da0  ; OopMap{rdx=Oop off=215}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.Number::&lt;init&gt;@1 (line 55)
                                                ;   {runtime_call}
  0x00000248074427f7: jmp    0x00000248074427c5
  0x00000248074427f9: nop
  0x00000248074427fa: nop
  0x00000248074427fb: mov    0x308(%r15),%rax
  0x0000024807442802: movabs $0x0,%r10
  0x000002480744280c: mov    %r10,0x308(%r15)
  0x0000024807442813: movabs $0x0,%r10
  0x000002480744281d: mov    %r10,0x310(%r15)
  0x0000024807442824: add    $0x30,%rsp
  0x0000024807442828: pop    %rbp
  0x0000024807442829: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744282e: hlt    
  0x000002480744282f: hlt    
  0x0000024807442830: hlt    
  0x0000024807442831: hlt    
  0x0000024807442832: hlt    
  0x0000024807442833: hlt    
  0x0000024807442834: hlt    
  0x0000024807442835: hlt    
  0x0000024807442836: hlt    
  0x0000024807442837: hlt    
  0x0000024807442838: hlt    
  0x0000024807442839: hlt    
  0x000002480744283a: hlt    
  0x000002480744283b: hlt    
  0x000002480744283c: hlt    
  0x000002480744283d: hlt    
  0x000002480744283e: hlt    
  0x000002480744283f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807442840: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807442845: mov    %rsp,-0x28(%rsp)
  0x000002480744284a: sub    $0x80,%rsp
  0x0000024807442851: mov    %rax,0x78(%rsp)
  0x0000024807442856: mov    %rcx,0x70(%rsp)
  0x000002480744285b: mov    %rdx,0x68(%rsp)
  0x0000024807442860: mov    %rbx,0x60(%rsp)
  0x0000024807442865: mov    %rbp,0x50(%rsp)
  0x000002480744286a: mov    %rsi,0x48(%rsp)
  0x000002480744286f: mov    %rdi,0x40(%rsp)
  0x0000024807442874: mov    %r8,0x38(%rsp)
  0x0000024807442879: mov    %r9,0x30(%rsp)
  0x000002480744287e: mov    %r10,0x28(%rsp)
  0x0000024807442883: mov    %r11,0x20(%rsp)
  0x0000024807442888: mov    %r12,0x18(%rsp)
  0x000002480744288d: mov    %r13,0x10(%rsp)
  0x0000024807442892: mov    %r14,0x8(%rsp)
  0x0000024807442897: mov    %r15,(%rsp)
  0x000002480744289b: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074428a5: movabs $0x24807442845,%rdx  ;   {internal_word}
  0x00000248074428af: mov    %rsp,%r8
  0x00000248074428b2: and    $0xfffffffffffffff0,%rsp
  0x00000248074428b6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074428c0: call   *%r10
  0x00000248074428c3: hlt    
[Deopt Handler Code]
  0x00000248074428c4: movabs $0x248074428c4,%r10  ;   {section_word}
  0x00000248074428ce: push   %r10
  0x00000248074428d0: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074428d5: hlt    
  0x00000248074428d6: hlt    
  0x00000248074428d7: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000024807442720' size='920' address='0x00000248074425d0' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='800' scopes_pcs_offset='832' dependencies_offset='912' method='java/lang/Number &lt;init&gt; ()V' bytes='5' count='520' iicount='520' stamp='0.652'/>
<writer thread='21600'/>
<task_queued compile_id='24' method='java/lang/String indexOf (II)I' bytes='70' count='1867' backedge_count='112266' iicount='1867' stamp='0.652' comment='tiered' hot_count='1867'/>
<writer thread='12268'/>
Decoding compiled method 0x0000024807444850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00000248074449a0: mov    0x8(%rdx),%r10d
  0x00000248074449a4: shl    $0x3,%r10
  0x00000248074449a8: cmp    %r10,%rax
  0x00000248074449ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074449b1: data16 xchg %ax,%ax
  0x00000248074449b4: nopl   0x0(%rax,%rax,1)
  0x00000248074449bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074449c0: mov    %eax,-0x6000(%rsp)
  0x00000248074449c7: push   %rbp
  0x00000248074449c8: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000248074449cc: mov    %rdx,0x40(%rsp)
  0x00000248074449d1: mov    0x10(%rdx),%ebx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00000248074449d4: mov    0xc(%r12,%rbx,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000024807444c08
  0x00000248074449d9: mov    %r8d,%r10d
  0x00000248074449dc: sub    %ebp,%r10d
  0x00000248074449df: test   %r10d,%r10d
  0x00000248074449e2: jg     0x00000248074449f5  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000248074449e4: add    $0x60,%rsp
  0x00000248074449e8: pop    %rbp
  0x00000248074449e9: test   %eax,-0x1e949ef(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x00000248074449ef: ret    
  0x00000248074449f0: mov    %r8d,%r11d
  0x00000248074449f3: jmp    0x0000024807444a0e
  0x00000248074449f5: mov    %ebp,%r11d
  0x00000248074449f8: shl    %r11d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000248074449fb: mov    %r11d,%r10d
  0x00000248074449fe: sub    %r8d,%r10d
  0x0000024807444a01: add    $0x2,%r10d
  0x0000024807444a05: test   %r10d,%r10d
  0x0000024807444a08: jl     0x00000248074449f0  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000024807444a0a: add    $0x2,%r11d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000024807444a0e: test   %r11d,%r11d
  0x0000024807444a11: jle    0x0000024807444a21  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000024807444a13: mov    $0x7ffffff7,%r10d
  0x0000024807444a19: sub    %r11d,%r10d
  0x0000024807444a1c: test   %r10d,%r10d
  0x0000024807444a1f: jge    0x0000024807444a33  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000024807444a21: mov    %ebx,0x28(%rsp)
  0x0000024807444a25: xchg   %ax,%ax
  0x0000024807444a27: call   0x0000024807375ee0  ; OopMap{[40]=NarrowOop [64]=Oop off=140}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000024807444a2c: mov    %eax,%r11d
  0x0000024807444a2f: mov    0x28(%rsp),%ebx    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000024807444a33: cmp    $0x80000,%r11d
  0x0000024807444a3a: ja     0x0000024807444bbf
  0x0000024807444a40: movslq %r11d,%r10
  0x0000024807444a43: shl    %r10
  0x0000024807444a46: add    $0x17,%r10
  0x0000024807444a4a: mov    %r10,%rdi
  0x0000024807444a4d: and    $0xfffffffffffffff8,%rdi
  0x0000024807444a51: cmp    $0x80000,%r11d
  0x0000024807444a58: ja     0x0000024807444b74
  0x0000024807444a5e: mov    0x60(%r15),%r13
  0x0000024807444a62: mov    %r13,%r8
  0x0000024807444a65: add    %rdi,%r8
  0x0000024807444a68: cmp    0x70(%r15),%r8
  0x0000024807444a6c: jae    0x0000024807444b74
  0x0000024807444a72: mov    %r8,0x60(%r15)
  0x0000024807444a76: prefetchw 0xc0(%r8)
  0x0000024807444a7e: movq   $0x1,0x0(%r13)
  0x0000024807444a86: prefetchw 0x100(%r8)
  0x0000024807444a8e: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x0000024807444a96: mov    %r11d,0xc(%r13)
  0x0000024807444a9a: prefetchw 0x140(%r8)
  0x0000024807444aa2: prefetchw 0x180(%r8)      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000024807444aaa: cmp    %r11d,%ebp
  0x0000024807444aad: mov    %r11d,%esi
  0x0000024807444ab0: cmovl  %ebp,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000024807444ab3: mov    %r13,%r9
  0x0000024807444ab6: add    $0x10,%r9          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000024807444aba: lea    (%r12,%rbx,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000024807444abe: shr    $0x3,%r10
  0x0000024807444ac2: mov    %r10,%rcx
  0x0000024807444ac5: add    $0xfffffffffffffffe,%rcx
  0x0000024807444ac9: cmp    %esi,%ebp
  0x0000024807444acb: jb     0x0000024807444bc7
  0x0000024807444ad1: cmp    %esi,%r11d
  0x0000024807444ad4: jb     0x0000024807444bc7
  0x0000024807444ada: test   %esi,%esi
  0x0000024807444adc: jle    0x0000024807444bf6
  0x0000024807444ae2: lea    0x10(%r12,%rbx,8),%rbx
  0x0000024807444ae7: cmp    %r11d,%esi
  0x0000024807444aea: jl     0x0000024807444b31
  0x0000024807444aec: add    $0xfffffffffffffff0,%rdi
  0x0000024807444af0: shr    $0x3,%rdi
  0x0000024807444af4: mov    %rbx,%rcx
  0x0000024807444af7: mov    %r9,%rdx
  0x0000024807444afa: mov    %rdi,%r8
  0x0000024807444afd: movabs $0x24807382c80,%r10
  0x0000024807444b07: call   *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000024807444b0a: mov    %r13,%r11
  0x0000024807444b0d: shr    $0x3,%r11
  0x0000024807444b11: mov    0x40(%rsp),%r10
  0x0000024807444b16: mov    %r11d,0x10(%r10)
  0x0000024807444b1a: shr    $0x9,%r10
  0x0000024807444b1e: movabs $0x248130de000,%r11
  0x0000024807444b28: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000024807444b2c: jmp    0x00000248074449e4
  0x0000024807444b31: movslq %esi,%r8
  0x0000024807444b34: mov    %r8,%r11
  0x0000024807444b37: shl    %r11
  0x0000024807444b3a: add    $0x10,%r11
  0x0000024807444b3e: mov    %r11,%rcx
  0x0000024807444b41: and    $0xfffffffffffffff9,%rcx
  0x0000024807444b45: mov    %r13,%rdi
  0x0000024807444b48: add    %rcx,%rdi
  0x0000024807444b4b: shr    $0x3,%r11
  0x0000024807444b4f: sub    %r11,%r10
  0x0000024807444b52: mov    %r10,%rcx
  0x0000024807444b55: xor    %rax,%rax
  0x0000024807444b58: shl    $0x3,%rcx
  0x0000024807444b5c: rep rex.W stos %al,%es:(%rdi)
  0x0000024807444b5f: mov    %rbx,%rcx
  0x0000024807444b62: mov    %r9,%rdx
  0x0000024807444b65: movabs $0x24807382960,%r10
  0x0000024807444b6f: call   *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000024807444b72: jmp    0x0000024807444b0a
  0x0000024807444b74: mov    %ebx,0x2c(%rsp)
  0x0000024807444b78: mov    %rdi,0x38(%rsp)
  0x0000024807444b7d: mov    %r10,0x30(%rsp)
  0x0000024807444b82: mov    %r11d,0x28(%rsp)
  0x0000024807444b87: rex.W push 0x40(%rsp)
  0x0000024807444b8c: rex.W pop 0x20(%rsp)
  0x0000024807444b91: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807444b9b: mov    %r11d,%r8d
  0x0000024807444b9e: nop
  0x0000024807444b9f: call   0x0000024807434fe0  ; OopMap{[32]=Oop [44]=NarrowOop [64]=Oop off=516}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000024807444ba4: mov    0x28(%rsp),%r11d
  0x0000024807444ba9: mov    0x30(%rsp),%r10
  0x0000024807444bae: mov    0x38(%rsp),%rdi
  0x0000024807444bb3: mov    0x2c(%rsp),%ebx
  0x0000024807444bb7: mov    %rax,%r13
  0x0000024807444bba: jmp    0x0000024807444aaa
  0x0000024807444bbf: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000024807444bc2: jmp    0x0000024807444a43
  0x0000024807444bc7: mov    %r9,%rdi
  0x0000024807444bca: xor    %rax,%rax
  0x0000024807444bcd: shl    $0x3,%rcx
  0x0000024807444bd1: rep rex.W stos %al,%es:(%rdi)
  0x0000024807444bd4: xor    %r8d,%r8d
  0x0000024807444bd7: mov    %r13,%r9
  0x0000024807444bda: xor    %edi,%edi
  0x0000024807444bdc: mov    0x40(%rsp),%rbp
  0x0000024807444be1: mov    %r13,0x28(%rsp)
  0x0000024807444be6: nop
  0x0000024807444be7: call   0x00000248074406e0  ; OopMap{rbp=Oop [40]=Oop [64]=Oop off=588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000024807444bec: mov    0x28(%rsp),%r13
  0x0000024807444bf1: jmp    0x0000024807444b0a
  0x0000024807444bf6: mov    %r9,%rdi
  0x0000024807444bf9: xor    %rax,%rax
  0x0000024807444bfc: shl    $0x3,%rcx
  0x0000024807444c00: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000024807444c03: jmp    0x0000024807444b0a
  0x0000024807444c08: mov    $0xfffffff6,%edx
  0x0000024807444c0d: xchg   %ax,%ax
  0x0000024807444c0f: call   0x00000248073754e0  ; OopMap{off=628}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000024807444c14: int3   
  0x0000024807444c15: jmp    0x0000024807444c17  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000024807444c17: mov    %rax,%rdx
  0x0000024807444c1a: jmp    0x0000024807444c1f  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000024807444c1c: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000024807444c1f: add    $0x60,%rsp
  0x0000024807444c23: pop    %rbp
  0x0000024807444c24: jmp    0x00000248074351e0  ;   {runtime_call}
  0x0000024807444c29: hlt    
  0x0000024807444c2a: hlt    
  0x0000024807444c2b: hlt    
  0x0000024807444c2c: hlt    
  0x0000024807444c2d: hlt    
  0x0000024807444c2e: hlt    
  0x0000024807444c2f: hlt    
  0x0000024807444c30: hlt    
  0x0000024807444c31: hlt    
  0x0000024807444c32: hlt    
  0x0000024807444c33: hlt    
  0x0000024807444c34: hlt    
  0x0000024807444c35: hlt    
  0x0000024807444c36: hlt    
  0x0000024807444c37: hlt    
  0x0000024807444c38: hlt    
  0x0000024807444c39: hlt    
  0x0000024807444c3a: hlt    
  0x0000024807444c3b: hlt    
  0x0000024807444c3c: hlt    
  0x0000024807444c3d: hlt    
  0x0000024807444c3e: hlt    
  0x0000024807444c3f: hlt    
[Stub Code]
  0x0000024807444c40: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000024807444c4a: jmp    0x0000024807444c4a  ;   {runtime_call}
[Exception Handler]
  0x0000024807444c4f: jmp    0x000002480742efe0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000024807444c54: call   0x0000024807444c59
  0x0000024807444c59: subq   $0x5,(%rsp)
  0x0000024807444c5e: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807444c63: hlt    
  0x0000024807444c64: hlt    
  0x0000024807444c65: hlt    
  0x0000024807444c66: hlt    
  0x0000024807444c67: hlt    
<nmethod compile_id='6' compiler='C2' level='4' entry='0x00000248074449a0' size='1816' address='0x0000024807444850' relocation_offset='288' insts_offset='336' stub_offset='1008' scopes_data_offset='1080' scopes_pcs_offset='1272' dependencies_offset='1720' handler_table_offset='1728' nul_chk_table_offset='1800' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='36330' iicount='36330' stamp='0.664'/>
<writer thread='27436'/>
<task_queued compile_id='25' method='java/lang/Short &lt;init&gt; (S)V' bytes='10' count='256' iicount='256' level='3' stamp='0.664' comment='tiered' hot_count='256'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807442150:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fba2f28} &apos;&lt;init&gt;&apos; &apos;(B)V&apos; in &apos;java/lang/Byte&apos;
  # this:     rdx:rdx   = &apos;java/lang/Byte&apos;
  # parm0:    r8        = byte
  #           [sp+0x50]  (sp of caller)
  0x00000248074422c0: mov    0x8(%rdx),%r10d
  0x00000248074422c4: shl    $0x3,%r10
  0x00000248074422c8: cmp    %rax,%r10
  0x00000248074422cb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074422d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074422dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074422e0: mov    %eax,-0x6000(%rsp)
  0x00000248074422e7: push   %rbp
  0x00000248074422e8: sub    $0x40,%rsp
  0x00000248074422ec: movabs $0x2481fe04c98,%rsi  ;   {metadata(method data for {method} {0x000002481fba2f28} &apos;&lt;init&gt;&apos; &apos;(B)V&apos; in &apos;java/lang/Byte&apos;)}
  0x00000248074422f6: mov    0xdc(%rsi),%edi
  0x00000248074422fc: add    $0x8,%edi
  0x00000248074422ff: mov    %edi,0xdc(%rsi)
  0x0000024807442305: movabs $0x2481fba2f20,%rsi  ;   {metadata({method} {0x000002481fba2f28} &apos;&lt;init&gt;&apos; &apos;(B)V&apos; in &apos;java/lang/Byte&apos;)}
  0x000002480744230f: and    $0x1ff8,%edi
  0x0000024807442315: cmp    $0x0,%edi
  0x0000024807442318: je     0x00000248074423bc  ;*aload_0
                                                ; - java.lang.Byte::&lt;init&gt;@0 (line 298)

  0x000002480744231e: mov    %rdx,%rsi
  0x0000024807442321: movabs $0x2481fe04c98,%rdi  ;   {metadata(method data for {method} {0x000002481fba2f28} &apos;&lt;init&gt;&apos; &apos;(B)V&apos; in &apos;java/lang/Byte&apos;)}
  0x000002480744232b: addq   $0x1,0x108(%rdi)
  0x0000024807442333: movabs $0x2481fe043c8,%rsi  ;   {metadata(method data for {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x000002480744233d: mov    0xdc(%rsi),%edi
  0x0000024807442343: add    $0x8,%edi
  0x0000024807442346: mov    %edi,0xdc(%rsi)
  0x000002480744234c: movabs $0x2481fba00a0,%rsi  ;   {metadata({method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x0000024807442356: and    $0x7ffff8,%edi
  0x000002480744235c: cmp    $0x0,%edi
  0x000002480744235f: je     0x00000248074423d3
  0x0000024807442365: mov    %rdx,%rsi
  0x0000024807442368: movabs $0x2481fe043c8,%rdi  ;   {metadata(method data for {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x0000024807442372: addq   $0x1,0x108(%rdi)
  0x000002480744237a: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807442384: mov    0xdc(%rsi),%edi
  0x000002480744238a: add    $0x8,%edi
  0x000002480744238d: mov    %edi,0xdc(%rsi)
  0x0000024807442393: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744239d: and    $0x7ffff8,%edi
  0x00000248074423a3: cmp    $0x0,%edi
  0x00000248074423a6: je     0x00000248074423ea
  0x00000248074423ac: mov    %r8b,0xc(%rdx)     ;*putfield value
                                                ; - java.lang.Byte::&lt;init&gt;@6 (line 299)

  0x00000248074423b0: add    $0x40,%rsp
  0x00000248074423b4: pop    %rbp
  0x00000248074423b5: test   %eax,-0x1e922bb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074423bb: ret    
  0x00000248074423bc: mov    %rsi,0x8(%rsp)
  0x00000248074423c1: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074423c9: call   0x0000024807433da0  ; OopMap{rdx=Oop off=270}
                                                ;*synchronization entry
                                                ; - java.lang.Byte::&lt;init&gt;@-1 (line 298)
                                                ;   {runtime_call}
  0x00000248074423ce: jmp    0x000002480744231e
  0x00000248074423d3: mov    %rsi,0x8(%rsp)
  0x00000248074423d8: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074423e0: call   0x0000024807433da0  ; OopMap{rdx=Oop off=293}
                                                ;*synchronization entry
                                                ; - java.lang.Number::&lt;init&gt;@-1 (line 55)
                                                ; - java.lang.Byte::&lt;init&gt;@1 (line 298)
                                                ;   {runtime_call}
  0x00000248074423e5: jmp    0x0000024807442365
  0x00000248074423ea: mov    %rsi,0x8(%rsp)
  0x00000248074423ef: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074423f7: call   0x0000024807433da0  ; OopMap{rdx=Oop off=316}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.Number::&lt;init&gt;@1 (line 55)
                                                ; - java.lang.Byte::&lt;init&gt;@1 (line 298)
                                                ;   {runtime_call}
  0x00000248074423fc: jmp    0x00000248074423ac
  0x00000248074423fe: nop
  0x00000248074423ff: nop
  0x0000024807442400: mov    0x308(%r15),%rax
  0x0000024807442407: movabs $0x0,%r10
  0x0000024807442411: mov    %r10,0x308(%r15)
  0x0000024807442418: movabs $0x0,%r10
  0x0000024807442422: mov    %r10,0x310(%r15)
  0x0000024807442429: add    $0x40,%rsp
  0x000002480744242d: pop    %rbp
  0x000002480744242e: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807442433: hlt    
  0x0000024807442434: hlt    
  0x0000024807442435: hlt    
  0x0000024807442436: hlt    
  0x0000024807442437: hlt    
  0x0000024807442438: hlt    
  0x0000024807442439: hlt    
  0x000002480744243a: hlt    
  0x000002480744243b: hlt    
  0x000002480744243c: hlt    
  0x000002480744243d: hlt    
  0x000002480744243e: hlt    
  0x000002480744243f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807442440: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807442445: mov    %rsp,-0x28(%rsp)
  0x000002480744244a: sub    $0x80,%rsp
  0x0000024807442451: mov    %rax,0x78(%rsp)
  0x0000024807442456: mov    %rcx,0x70(%rsp)
  0x000002480744245b: mov    %rdx,0x68(%rsp)
  0x0000024807442460: mov    %rbx,0x60(%rsp)
  0x0000024807442465: mov    %rbp,0x50(%rsp)
  0x000002480744246a: mov    %rsi,0x48(%rsp)
  0x000002480744246f: mov    %rdi,0x40(%rsp)
  0x0000024807442474: mov    %r8,0x38(%rsp)
  0x0000024807442479: mov    %r9,0x30(%rsp)
  0x000002480744247e: mov    %r10,0x28(%rsp)
  0x0000024807442483: mov    %r11,0x20(%rsp)
  0x0000024807442488: mov    %r12,0x18(%rsp)
  0x000002480744248d: mov    %r13,0x10(%rsp)
  0x0000024807442492: mov    %r14,0x8(%rsp)
  0x0000024807442497: mov    %r15,(%rsp)
  0x000002480744249b: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074424a5: movabs $0x24807442445,%rdx  ;   {internal_word}
  0x00000248074424af: mov    %rsp,%r8
  0x00000248074424b2: and    $0xfffffffffffffff0,%rsp
  0x00000248074424b6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074424c0: call   *%r10
  0x00000248074424c3: hlt    
[Deopt Handler Code]
  0x00000248074424c4: movabs $0x248074424c4,%r10  ;   {section_word}
  0x00000248074424ce: push   %r10
  0x00000248074424d0: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074424d5: hlt    
  0x00000248074424d6: hlt    
  0x00000248074424d7: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x00000248074422c0' size='1104' address='0x0000024807442150' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='984' dependencies_offset='1096' method='java/lang/Byte &lt;init&gt; (B)V' bytes='10' count='256' iicount='256' stamp='0.668'/>
<writer thread='19792'/>
Decoding compiled method 0x0000024807446d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x0000024807446ee0: mov    0x8(%rdx),%r10d
  0x0000024807446ee4: shl    $0x3,%r10
  0x0000024807446ee8: cmp    %r10,%rax
  0x0000024807446eeb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807446ef1: data16 xchg %ax,%ax
  0x0000024807446ef4: nopl   0x0(%rax,%rax,1)
  0x0000024807446efc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807446f00: mov    %eax,-0x6000(%rsp)
  0x0000024807446f07: push   %rbp
  0x0000024807446f08: sub    $0x80,%rsp
  0x0000024807446f0f: mov    %r8d,0x30(%rsp)
  0x0000024807446f14: mov    %rdx,%rbp
  0x0000024807446f17: mov    (%rdx),%rax
  0x0000024807446f1a: mov    %rax,%r10
  0x0000024807446f1d: and    $0x7,%r10
  0x0000024807446f21: cmp    $0x5,%r10
  0x0000024807446f25: jne    0x00000248074471ee
  0x0000024807446f2b: mov    $0xf8001b17,%r10d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000024807446f31: shl    $0x3,%r10
  0x0000024807446f35: mov    0xa8(%r10),%r10
  0x0000024807446f3c: mov    %r10,%r11
  0x0000024807446f3f: or     %r15,%r11
  0x0000024807446f42: mov    %r11,%r8
  0x0000024807446f45: xor    %rax,%r8
  0x0000024807446f48: test   $0xffffffffffffff87,%r8
  0x0000024807446f4f: jne    0x0000024807447251  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)

  0x0000024807446f55: mov    0x10(%rbp),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446f58: mov    %r12d,0x14(%rbp)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 386)

  0x0000024807446f5c: mov    0xc(%r12,%rdi,8),%r9d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; implicit exception: dispatches to 0x0000024807447368
  0x0000024807446f61: mov    0xc(%rbp),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446f65: mov    %r10d,%ebx
  0x0000024807446f68: sub    %r9d,%ebx
  0x0000024807446f6b: mov    %rdi,%rcx
  0x0000024807446f6e: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446f72: inc    %ebx
  0x0000024807446f74: mov    %r10d,%r8d
  0x0000024807446f77: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446f7a: test   %ebx,%ebx
  0x0000024807446f7c: jg     0x0000024807446fc9  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446f7e: mov    %r8d,0xc(%rbp)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446f82: test   %rcx,%rcx
  0x0000024807446f85: je     0x00000248074471c0
  0x0000024807446f8b: mov    0xc(%rcx),%r11d
  0x0000024807446f8f: cmp    %r11d,%r10d
  0x0000024807446f92: jae    0x00000248074471d1
  0x0000024807446f98: mov    0x30(%rsp),%r8d
  0x0000024807446f9d: mov    %r8w,0x10(%rcx,%r10,2)
  0x0000024807446fa3: mov    $0x7,%r10d
  0x0000024807446fa9: and    0x0(%rbp),%r10
  0x0000024807446fad: cmp    $0x5,%r10
  0x0000024807446fb1: jne    0x000002480744727c  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 388)

  0x0000024807446fb7: mov    %rbp,%rax
  0x0000024807446fba: add    $0x80,%rsp
  0x0000024807446fc1: pop    %rbp
  0x0000024807446fc2: test   %eax,-0x1e96fc8(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x0000024807446fc8: ret    
  0x0000024807446fc9: mov    %r9d,%r11d
  0x0000024807446fcc: shl    %r11d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446fcf: mov    %r11d,%edx
  0x0000024807446fd2: sub    %r10d,%edx
  0x0000024807446fd5: inc    %edx
  0x0000024807446fd7: test   %edx,%edx
  0x0000024807446fd9: jge    0x000002480744711f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446fdf: mov    %r8d,%r11d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446fe2: test   %r11d,%r11d
  0x0000024807446fe5: jle    0x0000024807446ff3  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446fe7: mov    $0x7ffffff7,%ebx
  0x0000024807446fec: sub    %r11d,%ebx
  0x0000024807446fef: test   %ebx,%ebx
  0x0000024807446ff1: jge    0x000002480744701d  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807446ff3: mov    %r9d,0x48(%rsp)
  0x0000024807446ff8: mov    %edi,0x34(%rsp)
  0x0000024807446ffc: mov    %rcx,0x20(%rsp)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447001: mov    %rbp,%rdx
  0x0000024807447004: data16 xchg %ax,%ax
  0x0000024807447007: call   0x0000024807375ee0  ; OopMap{rbp=Oop [32]=Oop [52]=NarrowOop off=300}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ;   {optimized virtual_call}
  0x000002480744700c: mov    0x20(%rsp),%rcx
  0x0000024807447011: mov    %eax,%r11d
  0x0000024807447014: mov    0x34(%rsp),%edi
  0x0000024807447018: mov    0x48(%rsp),%r9d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x000002480744701d: cmp    $0x80000,%r11d
  0x0000024807447024: ja     0x0000024807447324
  0x000002480744702a: movslq %r11d,%r10
  0x000002480744702d: shl    %r10
  0x0000024807447030: add    $0x17,%r10
  0x0000024807447034: mov    %r10,%r8
  0x0000024807447037: and    $0xfffffffffffffff8,%r8
  0x000002480744703b: cmp    $0x80000,%r11d
  0x0000024807447042: ja     0x000002480744716e
  0x0000024807447048: mov    0x60(%r15),%rbx
  0x000002480744704c: mov    %rbx,%rdx
  0x000002480744704f: add    %r8,%rdx
  0x0000024807447052: cmp    0x70(%r15),%rdx
  0x0000024807447056: jae    0x000002480744716e
  0x000002480744705c: mov    %rdx,0x60(%r15)
  0x0000024807447060: prefetchw 0xc0(%rdx)
  0x0000024807447067: movq   $0x1,(%rbx)
  0x000002480744706e: prefetchw 0x100(%rdx)
  0x0000024807447075: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x000002480744707c: mov    %r11d,0xc(%rbx)
  0x0000024807447080: prefetchw 0x140(%rdx)
  0x0000024807447087: prefetchw 0x180(%rdx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x000002480744708e: cmp    %r11d,%r9d
  0x0000024807447091: mov    %r11d,%esi
  0x0000024807447094: cmovl  %r9d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447098: mov    %rbx,%r13
  0x000002480744709b: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x000002480744709f: lea    (%r12,%rdi,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x00000248074470a3: shr    $0x3,%r10
  0x00000248074470a7: mov    %r10,%rcx
  0x00000248074470aa: add    $0xfffffffffffffffe,%rcx
  0x00000248074470ae: cmp    %esi,%r9d
  0x00000248074470b1: jb     0x000002480744732c
  0x00000248074470b7: cmp    %esi,%r11d
  0x00000248074470ba: jb     0x000002480744732c
  0x00000248074470c0: test   %esi,%esi
  0x00000248074470c2: jle    0x0000024807447356
  0x00000248074470c8: lea    0x10(%r12,%rdi,8),%r9
  0x00000248074470cd: cmp    %r11d,%esi
  0x00000248074470d0: jl     0x0000024807447128
  0x00000248074470d2: add    $0xfffffffffffffff0,%r8
  0x00000248074470d6: shr    $0x3,%r8
  0x00000248074470da: mov    %r9,%rcx
  0x00000248074470dd: mov    %r13,%rdx
  0x00000248074470e0: movabs $0x24807382c80,%r10
  0x00000248074470ea: call   *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x00000248074470ed: mov    0xc(%rbp),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x00000248074470f1: mov    %rbx,%r8
  0x00000248074470f4: shr    $0x3,%r8
  0x00000248074470f8: mov    %r8d,0x10(%rbp)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x00000248074470fc: mov    %r10d,%r8d
  0x00000248074470ff: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447102: mov    %rbp,%r11
  0x0000024807447105: shr    $0x9,%r11
  0x0000024807447109: movabs $0x248130de000,%r9
  0x0000024807447113: mov    %r12b,(%r9,%r11,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447117: mov    %rbx,%rcx
  0x000002480744711a: jmp    0x0000024807446f7e
  0x000002480744711f: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447123: jmp    0x0000024807446fe2
  0x0000024807447128: movslq %esi,%r8
  0x000002480744712b: mov    %r8,%r11
  0x000002480744712e: shl    %r11
  0x0000024807447131: add    $0x10,%r11
  0x0000024807447135: mov    %r11,%rcx
  0x0000024807447138: and    $0xfffffffffffffff9,%rcx
  0x000002480744713c: mov    %rbx,%rdi
  0x000002480744713f: add    %rcx,%rdi
  0x0000024807447142: shr    $0x3,%r11
  0x0000024807447146: sub    %r11,%r10
  0x0000024807447149: mov    %r10,%rcx
  0x000002480744714c: xor    %rax,%rax
  0x000002480744714f: shl    $0x3,%rcx
  0x0000024807447153: rep rex.W stos %al,%es:(%rdi)
  0x0000024807447156: mov    %r9,%rcx
  0x0000024807447159: mov    %r13,%rdx
  0x000002480744715c: movabs $0x24807382960,%r10
  0x0000024807447166: call   *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447169: jmp    0x00000248074470ed
  0x000002480744716e: mov    %r9d,0x60(%rsp)
  0x0000024807447173: mov    %edi,0x34(%rsp)
  0x0000024807447177: mov    %r8,0x38(%rsp)
  0x000002480744717c: mov    %r10,0x28(%rsp)
  0x0000024807447181: mov    %r11d,0x20(%rsp)   ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447186: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807447190: mov    %r11d,%r8d
  0x0000024807447193: mov    %rcx,0x58(%rsp)
  0x0000024807447198: data16 xchg %ax,%ax
  0x000002480744719b: call   0x0000024807434fe0  ; OopMap{rbp=Oop [52]=NarrowOop [88]=Oop off=704}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ;   {runtime_call}
  0x00000248074471a0: mov    0x20(%rsp),%r11d
  0x00000248074471a5: mov    0x28(%rsp),%r10
  0x00000248074471aa: mov    0x38(%rsp),%r8
  0x00000248074471af: mov    0x34(%rsp),%edi
  0x00000248074471b3: mov    0x60(%rsp),%r9d
  0x00000248074471b8: mov    %rax,%rbx
  0x00000248074471bb: jmp    0x000002480744708e
  0x00000248074471c0: mov    $0xfffffff6,%edx
  0x00000248074471c5: mov    %r10d,0x24(%rsp)
  0x00000248074471ca: nop
  0x00000248074471cb: call   0x00000248073754e0  ; OopMap{rbp=Oop off=752}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ;   {runtime_call}
  0x00000248074471d0: int3   
  0x00000248074471d1: mov    $0xffffffe4,%edx
  0x00000248074471d6: mov    %rcx,0x38(%rsp)
  0x00000248074471db: mov    %r10d,0x34(%rsp)
  0x00000248074471e0: data16 xchg %ax,%ax
  0x00000248074471e3: call   0x00000248073754e0  ; OopMap{rbp=Oop [56]=Oop off=776}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ;   {runtime_call}
  0x00000248074471e8: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x00000248074471e9: lock cmpxchg %r10,(%rdx)
  0x00000248074471ee: lea    0x70(%rsp),%rbx
  0x00000248074471f3: mov    (%rdx),%rax
  0x00000248074471f6: test   $0x2,%rax
  0x00000248074471fc: jne    0x0000024807447222
  0x00000248074471fe: or     $0x1,%rax
  0x0000024807447202: mov    %rax,(%rbx)
  0x0000024807447205: lock cmpxchg %rbx,(%rdx)
  0x000002480744720a: je     0x000002480744723b
  0x0000024807447210: sub    %rsp,%rax
  0x0000024807447213: and    $0xfffffffffffff007,%rax
  0x000002480744721a: mov    %rax,(%rbx)
  0x000002480744721d: jmp    0x000002480744723b
  0x0000024807447222: movq   $0x3,(%rbx)
  0x0000024807447229: mov    %rax,%rbx
  0x000002480744722c: mov    0x16(%rbx),%rax
  0x0000024807447230: test   %rax,%rax
  0x0000024807447233: jne    0x000002480744723b
  0x0000024807447235: lock cmpxchg %r15,0x16(%rbx)
  0x000002480744723b: je     0x0000024807446f55
  0x0000024807447241: lea    0x70(%rsp),%r8
  0x0000024807447246: nop
  0x0000024807447247: call   0x0000024807435320  ; OopMap{rbp=Oop off=876}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ;   {runtime_call}
  0x000002480744724c: jmp    0x0000024807446f55
  0x0000024807447251: test   $0x7,%r8
  0x0000024807447258: jne    0x00000248074471e9
  0x000002480744725a: test   $0x300,%r8
  0x0000024807447261: jne    0x0000024807447270
  0x0000024807447263: and    $0x37f,%rax
  0x000002480744726a: mov    %rax,%r11
  0x000002480744726d: or     %r15,%r11
  0x0000024807447270: lock cmpxchg %r11,(%rdx)
  0x0000024807447275: jne    0x0000024807447241
  0x0000024807447277: jmp    0x0000024807446f55
  0x000002480744727c: lea    0x70(%rsp),%rax
  0x0000024807447281: cmpq   $0x0,(%rax)
  0x0000024807447288: je     0x0000024807447304
  0x000002480744728e: mov    0x0(%rbp),%r10
  0x0000024807447292: test   $0x2,%r10
  0x0000024807447299: je     0x00000248074472fb
  0x000002480744729b: mov    0x16(%r10),%rax
  0x000002480744729f: xor    %r15,%rax
  0x00000248074472a2: or     0x26(%r10),%rax
  0x00000248074472a6: jne    0x0000024807447304
  0x00000248074472a8: mov    0x36(%r10),%rax
  0x00000248074472ac: or     0x3e(%r10),%rax
  0x00000248074472b0: jne    0x00000248074472bc
  0x00000248074472b2: movq   $0x0,0x16(%r10)
  0x00000248074472ba: jmp    0x0000024807447304
  0x00000248074472bc: cmpq   $0x0,0x46(%r10)
  0x00000248074472c4: je     0x00000248074472ef
  0x00000248074472c6: movq   $0x0,0x16(%r10)
  0x00000248074472ce: lock addl $0x0,(%rsp)
  0x00000248074472d3: cmpq   $0x0,0x46(%r10)
  0x00000248074472db: jne    0x00000248074472f4
  0x00000248074472dd: movabs $0x0,%rax
  0x00000248074472e7: lock cmpxchg %r15,0x16(%r10)
  0x00000248074472ed: jne    0x00000248074472f4
  0x00000248074472ef: or     $0x1,%eax
  0x00000248074472f2: jmp    0x0000024807447304
  0x00000248074472f4: test   $0x0,%eax
  0x00000248074472f9: jmp    0x0000024807447304
  0x00000248074472fb: mov    (%rax),%r10
  0x00000248074472fe: lock cmpxchg %r10,0x0(%rbp)
  0x0000024807447304: je     0x0000024807446fb7
  0x000002480744730a: mov    %rbp,%rcx
  0x000002480744730d: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)

  0x0000024807447312: movabs $0x661ffd20,%r10
  0x000002480744731c: call   *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 388)

  0x000002480744731f: jmp    0x0000024807446fb7
  0x0000024807447324: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447327: jmp    0x000002480744702d
  0x000002480744732c: mov    %r13,%rdi
  0x000002480744732f: xor    %rax,%rax
  0x0000024807447332: shl    $0x3,%rcx
  0x0000024807447336: rep rex.W stos %al,%es:(%rdi)
  0x0000024807447339: xor    %r8d,%r8d
  0x000002480744733c: mov    %rbx,%r9
  0x000002480744733f: xor    %edi,%edi
  0x0000024807447341: mov    %rbx,0x48(%rsp)
  0x0000024807447346: nop
  0x0000024807447347: call   0x00000248074406e0  ; OopMap{rbp=Oop [72]=Oop off=1132}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ;   {runtime_call}
  0x000002480744734c: mov    0x48(%rsp),%rbx
  0x0000024807447351: jmp    0x00000248074470ed
  0x0000024807447356: mov    %r13,%rdi
  0x0000024807447359: xor    %rax,%rax
  0x000002480744735c: shl    $0x3,%rcx
  0x0000024807447360: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447363: jmp    0x00000248074470ed
  0x0000024807447368: mov    $0xfffffff6,%edx
  0x000002480744736d: xchg   %ax,%ax
  0x000002480744736f: call   0x00000248073754e0  ; OopMap{rbp=Oop off=1172}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ;   {runtime_call}
  0x0000024807447374: int3   
  0x0000024807447375: jmp    0x0000024807447377  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x0000024807447377: mov    %rax,%rbx
  0x000002480744737a: jmp    0x000002480744737f  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x000002480744737c: mov    %rax,%rbx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)

  0x000002480744737f: mov    $0x7,%r10d
  0x0000024807447385: and    0x0(%rbp),%r10
  0x0000024807447389: cmp    $0x5,%r10
  0x000002480744738d: jne    0x000002480744739f
  0x000002480744738f: mov    %rbx,%rdx
  0x0000024807447392: add    $0x80,%rsp
  0x0000024807447399: pop    %rbp
  0x000002480744739a: jmp    0x00000248074351e0  ;   {runtime_call}
  0x000002480744739f: lea    0x70(%rsp),%rax
  0x00000248074473a4: cmpq   $0x0,(%rax)
  0x00000248074473ab: je     0x0000024807447427
  0x00000248074473b1: mov    0x0(%rbp),%r10
  0x00000248074473b5: test   $0x2,%r10
  0x00000248074473bc: je     0x000002480744741e
  0x00000248074473be: mov    0x16(%r10),%rax
  0x00000248074473c2: xor    %r15,%rax
  0x00000248074473c5: or     0x26(%r10),%rax
  0x00000248074473c9: jne    0x0000024807447427
  0x00000248074473cb: mov    0x36(%r10),%rax
  0x00000248074473cf: or     0x3e(%r10),%rax
  0x00000248074473d3: jne    0x00000248074473df
  0x00000248074473d5: movq   $0x0,0x16(%r10)
  0x00000248074473dd: jmp    0x0000024807447427
  0x00000248074473df: cmpq   $0x0,0x46(%r10)
  0x00000248074473e7: je     0x0000024807447412
  0x00000248074473e9: movq   $0x0,0x16(%r10)
  0x00000248074473f1: lock addl $0x0,(%rsp)
  0x00000248074473f6: cmpq   $0x0,0x46(%r10)
  0x00000248074473fe: jne    0x0000024807447417
  0x0000024807447400: movabs $0x0,%rax
  0x000002480744740a: lock cmpxchg %r15,0x16(%r10)
  0x0000024807447410: jne    0x0000024807447417
  0x0000024807447412: or     $0x1,%eax
  0x0000024807447415: jmp    0x0000024807447427
  0x0000024807447417: test   $0x0,%eax
  0x000002480744741c: jmp    0x0000024807447427
  0x000002480744741e: mov    (%rax),%r10
  0x0000024807447421: lock cmpxchg %r10,0x0(%rbp)
  0x0000024807447427: je     0x000002480744738f
  0x000002480744742d: mov    %rbp,%rcx
  0x0000024807447430: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)

  0x0000024807447435: movabs $0x661ffd20,%r10
  0x000002480744743f: call   *%r10
  0x0000024807447442: jmp    0x000002480744738f
  0x0000024807447447: hlt    
  0x0000024807447448: hlt    
  0x0000024807447449: hlt    
  0x000002480744744a: hlt    
  0x000002480744744b: hlt    
  0x000002480744744c: hlt    
  0x000002480744744d: hlt    
  0x000002480744744e: hlt    
  0x000002480744744f: hlt    
  0x0000024807447450: hlt    
  0x0000024807447451: hlt    
  0x0000024807447452: hlt    
  0x0000024807447453: hlt    
  0x0000024807447454: hlt    
  0x0000024807447455: hlt    
  0x0000024807447456: hlt    
  0x0000024807447457: hlt    
  0x0000024807447458: hlt    
  0x0000024807447459: hlt    
  0x000002480744745a: hlt    
  0x000002480744745b: hlt    
  0x000002480744745c: hlt    
  0x000002480744745d: hlt    
  0x000002480744745e: hlt    
  0x000002480744745f: hlt    
[Stub Code]
  0x0000024807447460: movabs $0x0,%rbx          ;   {no_reloc}
  0x000002480744746a: jmp    0x000002480744746a  ;   {runtime_call}
[Exception Handler]
  0x000002480744746f: jmp    0x000002480742efe0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000024807447474: call   0x0000024807447479
  0x0000024807447479: subq   $0x5,(%rsp)
  0x000002480744747e: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807447483: hlt    
  0x0000024807447484: hlt    
  0x0000024807447485: hlt    
  0x0000024807447486: hlt    
  0x0000024807447487: hlt    
<nmethod compile_id='14' compiler='C2' level='4' entry='0x0000024807446ee0' size='3040' address='0x0000024807446d90' relocation_offset='288' insts_offset='336' stub_offset='1744' scopes_data_offset='1840' scopes_pcs_offset='2192' dependencies_offset='2944' handler_table_offset='2952' nul_chk_table_offset='3024' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='34381' iicount='34381' stamp='0.689'/>
<writer thread='13612'/>
Decoding compiled method 0x0000024807449f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x70]  (sp of caller)
  0x000002480744a0a0: mov    0x8(%rdx),%r10d
  0x000002480744a0a4: shl    $0x3,%r10
  0x000002480744a0a8: cmp    %r10,%rax
  0x000002480744a0ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744a0b1: data16 xchg %ax,%ax
  0x000002480744a0b4: nopl   0x0(%rax,%rax,1)
  0x000002480744a0bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744a0c0: mov    %eax,-0x6000(%rsp)
  0x000002480744a0c7: push   %rbp
  0x000002480744a0c8: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x000002480744a0cc: mov    %r8d,0x20(%rsp)
  0x000002480744a0d1: mov    %rdx,%rbp
  0x000002480744a0d4: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a0d7: mov    0xc(%r12,%rdi,8),%r9d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x000002480744a390
  0x000002480744a0dc: mov    0xc(%rdx),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x000002480744a0e0: mov    %r10d,%ebx
  0x000002480744a0e3: sub    %r9d,%ebx
  0x000002480744a0e6: mov    %rdi,%rcx
  0x000002480744a0e9: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a0ed: inc    %ebx
  0x000002480744a0ef: mov    %r10d,%r8d
  0x000002480744a0f2: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x000002480744a0f5: test   %ebx,%ebx
  0x000002480744a0f7: jg     0x000002480744a12d  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x000002480744a0f9: mov    %r8d,0xc(%rbp)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x000002480744a0fd: test   %rcx,%rcx
  0x000002480744a100: je     0x000002480744a320
  0x000002480744a106: mov    0xc(%rcx),%r11d
  0x000002480744a10a: cmp    %r11d,%r10d
  0x000002480744a10d: jae    0x000002480744a335
  0x000002480744a113: mov    0x20(%rsp),%r11d
  0x000002480744a118: mov    %r11w,0x10(%rcx,%r10,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x000002480744a11e: mov    %rbp,%rax
  0x000002480744a121: add    $0x60,%rsp
  0x000002480744a125: pop    %rbp
  0x000002480744a126: test   %eax,-0x1e9a12c(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x000002480744a12c: ret    
  0x000002480744a12d: mov    %r9d,%r11d
  0x000002480744a130: shl    %r11d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a133: mov    %r11d,%ebx
  0x000002480744a136: sub    %r10d,%ebx
  0x000002480744a139: inc    %ebx
  0x000002480744a13b: test   %ebx,%ebx
  0x000002480744a13d: jge    0x000002480744a27f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a143: mov    %r8d,%r11d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a146: test   %r11d,%r11d
  0x000002480744a149: jle    0x000002480744a159  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a14b: mov    $0x7ffffff7,%r10d
  0x000002480744a151: sub    %r11d,%r10d
  0x000002480744a154: test   %r10d,%r10d
  0x000002480744a157: jge    0x000002480744a17d  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a159: mov    %r9d,0x38(%rsp)
  0x000002480744a15e: mov    %edi,0x24(%rsp)
  0x000002480744a162: mov    %rcx,0x28(%rsp)
  0x000002480744a167: call   0x0000024807375ee0  ; OopMap{rbp=Oop [36]=NarrowOop [40]=Oop off=204}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x000002480744a16c: mov    0x28(%rsp),%rcx
  0x000002480744a171: mov    %eax,%r11d
  0x000002480744a174: mov    0x24(%rsp),%edi
  0x000002480744a178: mov    0x38(%rsp),%r9d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a17d: cmp    $0x80000,%r11d
  0x000002480744a184: ja     0x000002480744a34d
  0x000002480744a18a: movslq %r11d,%r10
  0x000002480744a18d: shl    %r10
  0x000002480744a190: add    $0x17,%r10
  0x000002480744a194: mov    %r10,%r8
  0x000002480744a197: and    $0xfffffffffffffff8,%r8
  0x000002480744a19b: cmp    $0x80000,%r11d
  0x000002480744a1a2: ja     0x000002480744a2ce
  0x000002480744a1a8: mov    0x60(%r15),%rbx
  0x000002480744a1ac: mov    %rbx,%rdx
  0x000002480744a1af: add    %r8,%rdx
  0x000002480744a1b2: cmp    0x70(%r15),%rdx
  0x000002480744a1b6: jae    0x000002480744a2ce
  0x000002480744a1bc: mov    %rdx,0x60(%r15)
  0x000002480744a1c0: prefetchw 0xc0(%rdx)
  0x000002480744a1c7: movq   $0x1,(%rbx)
  0x000002480744a1ce: prefetchw 0x100(%rdx)
  0x000002480744a1d5: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x000002480744a1dc: mov    %r11d,0xc(%rbx)
  0x000002480744a1e0: prefetchw 0x140(%rdx)
  0x000002480744a1e7: prefetchw 0x180(%rdx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a1ee: cmp    %r11d,%r9d
  0x000002480744a1f1: mov    %r11d,%esi
  0x000002480744a1f4: cmovl  %r9d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a1f8: mov    %rbx,%r13
  0x000002480744a1fb: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a1ff: lea    (%r12,%rdi,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a203: shr    $0x3,%r10
  0x000002480744a207: mov    %r10,%rcx
  0x000002480744a20a: add    $0xfffffffffffffffe,%rcx
  0x000002480744a20e: cmp    %esi,%r9d
  0x000002480744a211: jb     0x000002480744a355
  0x000002480744a217: cmp    %esi,%r11d
  0x000002480744a21a: jb     0x000002480744a355
  0x000002480744a220: test   %esi,%esi
  0x000002480744a222: jle    0x000002480744a37e
  0x000002480744a228: lea    0x10(%r12,%rdi,8),%r9
  0x000002480744a22d: cmp    %r11d,%esi
  0x000002480744a230: jl     0x000002480744a288
  0x000002480744a232: add    $0xfffffffffffffff0,%r8
  0x000002480744a236: shr    $0x3,%r8
  0x000002480744a23a: mov    %r9,%rcx
  0x000002480744a23d: mov    %r13,%rdx
  0x000002480744a240: movabs $0x24807382c80,%r10
  0x000002480744a24a: call   *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a24d: mov    0xc(%rbp),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x000002480744a251: mov    %rbx,%r8
  0x000002480744a254: shr    $0x3,%r8
  0x000002480744a258: mov    %r8d,0x10(%rbp)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a25c: mov    %r10d,%r8d
  0x000002480744a25f: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x000002480744a262: mov    %rbp,%r11
  0x000002480744a265: shr    $0x9,%r11
  0x000002480744a269: movabs $0x248130de000,%r9
  0x000002480744a273: mov    %r12b,(%r9,%r11,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a277: mov    %rbx,%rcx
  0x000002480744a27a: jmp    0x000002480744a0f9
  0x000002480744a27f: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a283: jmp    0x000002480744a146
  0x000002480744a288: movslq %esi,%r8
  0x000002480744a28b: mov    %r8,%r11
  0x000002480744a28e: shl    %r11
  0x000002480744a291: add    $0x10,%r11
  0x000002480744a295: mov    %r11,%rcx
  0x000002480744a298: and    $0xfffffffffffffff9,%rcx
  0x000002480744a29c: mov    %rbx,%rdi
  0x000002480744a29f: add    %rcx,%rdi
  0x000002480744a2a2: shr    $0x3,%r11
  0x000002480744a2a6: sub    %r11,%r10
  0x000002480744a2a9: mov    %r10,%rcx
  0x000002480744a2ac: xor    %rax,%rax
  0x000002480744a2af: shl    $0x3,%rcx
  0x000002480744a2b3: rep rex.W stos %al,%es:(%rdi)
  0x000002480744a2b6: mov    %r9,%rcx
  0x000002480744a2b9: mov    %r13,%rdx
  0x000002480744a2bc: movabs $0x24807382960,%r10
  0x000002480744a2c6: call   *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a2c9: jmp    0x000002480744a24d
  0x000002480744a2ce: mov    %r9d,0x4c(%rsp)
  0x000002480744a2d3: mov    %edi,0x48(%rsp)
  0x000002480744a2d7: mov    %r8,0x30(%rsp)
  0x000002480744a2dc: mov    %r10,0x28(%rsp)
  0x000002480744a2e1: mov    %r11d,0x24(%rsp)
  0x000002480744a2e6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480744a2f0: mov    %r11d,%r8d
  0x000002480744a2f3: mov    %rcx,0x40(%rsp)
  0x000002480744a2f8: data16 xchg %ax,%ax
  0x000002480744a2fb: call   0x0000024807434fe0  ; OopMap{rbp=Oop [64]=Oop [72]=NarrowOop off=608}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000002480744a300: mov    0x24(%rsp),%r11d
  0x000002480744a305: mov    0x28(%rsp),%r10
  0x000002480744a30a: mov    0x30(%rsp),%r8
  0x000002480744a30f: mov    0x48(%rsp),%edi
  0x000002480744a313: mov    0x4c(%rsp),%r9d
  0x000002480744a318: mov    %rax,%rbx
  0x000002480744a31b: jmp    0x000002480744a1ee
  0x000002480744a320: mov    $0xfffffff6,%edx
  0x000002480744a325: mov    0x20(%rsp),%ebp
  0x000002480744a329: mov    %r10d,0x20(%rsp)
  0x000002480744a32e: nop
  0x000002480744a32f: call   0x00000248073754e0  ; OopMap{off=660}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000002480744a334: int3   
  0x000002480744a335: mov    $0xffffffe4,%edx
  0x000002480744a33a: mov    %rcx,0x28(%rsp)
  0x000002480744a33f: mov    %r10d,0x24(%rsp)
  0x000002480744a344: data16 xchg %ax,%ax
  0x000002480744a347: call   0x00000248073754e0  ; OopMap{rbp=Oop [40]=Oop off=684}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000002480744a34c: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x000002480744a34d: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a350: jmp    0x000002480744a18d
  0x000002480744a355: mov    %r13,%rdi
  0x000002480744a358: xor    %rax,%rax
  0x000002480744a35b: shl    $0x3,%rcx
  0x000002480744a35f: rep rex.W stos %al,%es:(%rdi)
  0x000002480744a362: xor    %r8d,%r8d
  0x000002480744a365: mov    %rbx,%r9
  0x000002480744a368: xor    %edi,%edi
  0x000002480744a36a: mov    %rbx,0x38(%rsp)
  0x000002480744a36f: call   0x00000248074406e0  ; OopMap{rbp=Oop [56]=Oop off=724}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000002480744a374: mov    0x38(%rsp),%rbx
  0x000002480744a379: jmp    0x000002480744a24d
  0x000002480744a37e: mov    %r13,%rdi
  0x000002480744a381: xor    %rax,%rax
  0x000002480744a384: shl    $0x3,%rcx
  0x000002480744a388: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a38b: jmp    0x000002480744a24d
  0x000002480744a390: mov    $0xfffffff6,%edx
  0x000002480744a395: xchg   %ax,%ax
  0x000002480744a397: call   0x00000248073754e0  ; OopMap{off=764}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000002480744a39c: int3   
  0x000002480744a39d: jmp    0x000002480744a39f  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a39f: mov    %rax,%rdx
  0x000002480744a3a2: jmp    0x000002480744a3a7  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000002480744a3a4: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x000002480744a3a7: add    $0x60,%rsp
  0x000002480744a3ab: pop    %rbp
  0x000002480744a3ac: jmp    0x00000248074351e0  ;   {runtime_call}
  0x000002480744a3b1: hlt    
  0x000002480744a3b2: hlt    
  0x000002480744a3b3: hlt    
  0x000002480744a3b4: hlt    
  0x000002480744a3b5: hlt    
  0x000002480744a3b6: hlt    
  0x000002480744a3b7: hlt    
  0x000002480744a3b8: hlt    
  0x000002480744a3b9: hlt    
  0x000002480744a3ba: hlt    
  0x000002480744a3bb: hlt    
  0x000002480744a3bc: hlt    
  0x000002480744a3bd: hlt    
  0x000002480744a3be: hlt    
  0x000002480744a3bf: hlt    
[Stub Code]
  0x000002480744a3c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000002480744a3ca: jmp    0x000002480744a3ca  ;   {runtime_call}
[Exception Handler]
  0x000002480744a3cf: jmp    0x000002480742efe0  ;   {runtime_call}
[Deopt Handler Code]
  0x000002480744a3d4: call   0x000002480744a3d9
  0x000002480744a3d9: subq   $0x5,(%rsp)
  0x000002480744a3de: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744a3e3: hlt    
  0x000002480744a3e4: hlt    
  0x000002480744a3e5: hlt    
  0x000002480744a3e6: hlt    
  0x000002480744a3e7: hlt    
<nmethod compile_id='15' compiler='C2' level='4' entry='0x000002480744a0a0' size='2240' address='0x0000024807449f50' relocation_offset='288' insts_offset='336' stub_offset='1136' scopes_data_offset='1216' scopes_pcs_offset='1504' dependencies_offset='2144' handler_table_offset='2152' nul_chk_table_offset='2224' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='34504' iicount='34504' stamp='0.701'/>
<writer thread='21600'/>
<task_queued compile_id='26' method='java/lang/Character toLowerCase (I)I' bytes='9' count='14592' iicount='14592' stamp='0.701' comment='tiered' hot_count='14592'/>
<task_queued compile_id='27' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='14592' iicount='14592' stamp='0.701' comment='tiered' hot_count='14592'/>
<task_queued compile_id='28' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1792' iicount='1792' level='3' stamp='0.701' comment='tiered' hot_count='1792'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807441cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fba4658} &apos;&lt;init&gt;&apos; &apos;(S)V&apos; in &apos;java/lang/Short&apos;
  # this:     rdx:rdx   = &apos;java/lang/Short&apos;
  # parm0:    r8        = short
  #           [sp+0x50]  (sp of caller)
  0x0000024807441e40: mov    0x8(%rdx),%r10d
  0x0000024807441e44: shl    $0x3,%r10
  0x0000024807441e48: cmp    %rax,%r10
  0x0000024807441e4b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807441e51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807441e5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807441e60: mov    %eax,-0x6000(%rsp)
  0x0000024807441e67: push   %rbp
  0x0000024807441e68: sub    $0x40,%rsp
  0x0000024807441e6c: movabs $0x2481fe05c28,%rsi  ;   {metadata(method data for {method} {0x000002481fba4658} &apos;&lt;init&gt;&apos; &apos;(S)V&apos; in &apos;java/lang/Short&apos;)}
  0x0000024807441e76: mov    0xdc(%rsi),%edi
  0x0000024807441e7c: add    $0x8,%edi
  0x0000024807441e7f: mov    %edi,0xdc(%rsi)
  0x0000024807441e85: movabs $0x2481fba4650,%rsi  ;   {metadata({method} {0x000002481fba4658} &apos;&lt;init&gt;&apos; &apos;(S)V&apos; in &apos;java/lang/Short&apos;)}
  0x0000024807441e8f: and    $0x1ff8,%edi
  0x0000024807441e95: cmp    $0x0,%edi
  0x0000024807441e98: je     0x0000024807441f3d  ;*aload_0
                                                ; - java.lang.Short::&lt;init&gt;@0 (line 303)

  0x0000024807441e9e: mov    %rdx,%rsi
  0x0000024807441ea1: movabs $0x2481fe05c28,%rdi  ;   {metadata(method data for {method} {0x000002481fba4658} &apos;&lt;init&gt;&apos; &apos;(S)V&apos; in &apos;java/lang/Short&apos;)}
  0x0000024807441eab: addq   $0x1,0x108(%rdi)
  0x0000024807441eb3: movabs $0x2481fe043c8,%rsi  ;   {metadata(method data for {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x0000024807441ebd: mov    0xdc(%rsi),%edi
  0x0000024807441ec3: add    $0x8,%edi
  0x0000024807441ec6: mov    %edi,0xdc(%rsi)
  0x0000024807441ecc: movabs $0x2481fba00a0,%rsi  ;   {metadata({method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x0000024807441ed6: and    $0x7ffff8,%edi
  0x0000024807441edc: cmp    $0x0,%edi
  0x0000024807441edf: je     0x0000024807441f54
  0x0000024807441ee5: mov    %rdx,%rsi
  0x0000024807441ee8: movabs $0x2481fe043c8,%rdi  ;   {metadata(method data for {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x0000024807441ef2: addq   $0x1,0x108(%rdi)
  0x0000024807441efa: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807441f04: mov    0xdc(%rsi),%edi
  0x0000024807441f0a: add    $0x8,%edi
  0x0000024807441f0d: mov    %edi,0xdc(%rsi)
  0x0000024807441f13: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807441f1d: and    $0x7ffff8,%edi
  0x0000024807441f23: cmp    $0x0,%edi
  0x0000024807441f26: je     0x0000024807441f6b
  0x0000024807441f2c: mov    %r8w,0xc(%rdx)     ;*putfield value
                                                ; - java.lang.Short::&lt;init&gt;@6 (line 304)

  0x0000024807441f31: add    $0x40,%rsp
  0x0000024807441f35: pop    %rbp
  0x0000024807441f36: test   %eax,-0x1e91e3c(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807441f3c: ret    
  0x0000024807441f3d: mov    %rsi,0x8(%rsp)
  0x0000024807441f42: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807441f4a: call   0x0000024807433da0  ; OopMap{rdx=Oop off=271}
                                                ;*synchronization entry
                                                ; - java.lang.Short::&lt;init&gt;@-1 (line 303)
                                                ;   {runtime_call}
  0x0000024807441f4f: jmp    0x0000024807441e9e
  0x0000024807441f54: mov    %rsi,0x8(%rsp)
  0x0000024807441f59: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807441f61: call   0x0000024807433da0  ; OopMap{rdx=Oop off=294}
                                                ;*synchronization entry
                                                ; - java.lang.Number::&lt;init&gt;@-1 (line 55)
                                                ; - java.lang.Short::&lt;init&gt;@1 (line 303)
                                                ;   {runtime_call}
  0x0000024807441f66: jmp    0x0000024807441ee5
  0x0000024807441f6b: mov    %rsi,0x8(%rsp)
  0x0000024807441f70: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807441f78: call   0x0000024807433da0  ; OopMap{rdx=Oop off=317}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.Number::&lt;init&gt;@1 (line 55)
                                                ; - java.lang.Short::&lt;init&gt;@1 (line 303)
                                                ;   {runtime_call}
  0x0000024807441f7d: jmp    0x0000024807441f2c
  0x0000024807441f7f: nop
  0x0000024807441f80: nop
  0x0000024807441f81: mov    0x308(%r15),%rax
  0x0000024807441f88: movabs $0x0,%r10
  0x0000024807441f92: mov    %r10,0x308(%r15)
  0x0000024807441f99: movabs $0x0,%r10
  0x0000024807441fa3: mov    %r10,0x310(%r15)
  0x0000024807441faa: add    $0x40,%rsp
  0x0000024807441fae: pop    %rbp
  0x0000024807441faf: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807441fb4: hlt    
  0x0000024807441fb5: hlt    
  0x0000024807441fb6: hlt    
  0x0000024807441fb7: hlt    
  0x0000024807441fb8: hlt    
  0x0000024807441fb9: hlt    
  0x0000024807441fba: hlt    
  0x0000024807441fbb: hlt    
  0x0000024807441fbc: hlt    
  0x0000024807441fbd: hlt    
  0x0000024807441fbe: hlt    
  0x0000024807441fbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807441fc0: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807441fc5: mov    %rsp,-0x28(%rsp)
  0x0000024807441fca: sub    $0x80,%rsp
  0x0000024807441fd1: mov    %rax,0x78(%rsp)
  0x0000024807441fd6: mov    %rcx,0x70(%rsp)
  0x0000024807441fdb: mov    %rdx,0x68(%rsp)
  0x0000024807441fe0: mov    %rbx,0x60(%rsp)
  0x0000024807441fe5: mov    %rbp,0x50(%rsp)
  0x0000024807441fea: mov    %rsi,0x48(%rsp)
  0x0000024807441fef: mov    %rdi,0x40(%rsp)
  0x0000024807441ff4: mov    %r8,0x38(%rsp)
  0x0000024807441ff9: mov    %r9,0x30(%rsp)
  0x0000024807441ffe: mov    %r10,0x28(%rsp)
  0x0000024807442003: mov    %r11,0x20(%rsp)
  0x0000024807442008: mov    %r12,0x18(%rsp)
  0x000002480744200d: mov    %r13,0x10(%rsp)
  0x0000024807442012: mov    %r14,0x8(%rsp)
  0x0000024807442017: mov    %r15,(%rsp)
  0x000002480744201b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807442025: movabs $0x24807441fc5,%rdx  ;   {internal_word}
  0x000002480744202f: mov    %rsp,%r8
  0x0000024807442032: and    $0xfffffffffffffff0,%rsp
  0x0000024807442036: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807442040: call   *%r10
  0x0000024807442043: hlt    
[Deopt Handler Code]
  0x0000024807442044: movabs $0x24807442044,%r10  ;   {section_word}
  0x000002480744204e: push   %r10
  0x0000024807442050: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807442055: hlt    
  0x0000024807442056: hlt    
  0x0000024807442057: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x0000024807441e40' size='1104' address='0x0000024807441cd0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='984' dependencies_offset='1096' method='java/lang/Short &lt;init&gt; (S)V' bytes='10' count='256' iicount='256' stamp='0.706'/>
<writer thread='27436'/>
<task_queued compile_id='29' method='java/lang/Long &lt;init&gt; (J)V' bytes='10' count='256' iicount='256' level='3' stamp='0.706' comment='tiered' hot_count='256'/>
<writer thread='13612'/>
Decoding compiled method 0x00000248074454d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc9a558} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000024807445600: mov    0x8(%rdx),%r10d
  0x0000024807445604: shl    $0x3,%r10
  0x0000024807445608: cmp    %r10,%rax
  0x000002480744560b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807445611: data16 xchg %ax,%ax
  0x0000024807445614: nopl   0x0(%rax,%rax,1)
  0x000002480744561c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807445620: mov    %eax,-0x6000(%rsp)
  0x0000024807445627: push   %rbp
  0x0000024807445628: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)

  0x000002480744562c: mov    %r8d,%r10d
  0x000002480744562f: movzwl %r10w,%r10d        ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000024807445633: cmp    $0x100,%r10d
  0x000002480744563a: jae    0x000002480744567d
  0x000002480744563c: movabs $0x76b773c78,%r11  ;   {oop([I)}
  0x0000024807445646: mov    0x10(%r11,%r10,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x000002480744564b: test   $0x20000,%eax
  0x0000024807445651: jne    0x0000024807445662  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000024807445653: mov    %r8d,%eax          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000024807445656: add    $0x20,%rsp
  0x000002480744565a: pop    %rbp
  0x000002480744565b: test   %eax,-0x1e95661(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x0000024807445661: ret    
  0x0000024807445662: mov    %eax,%ebp
  0x0000024807445664: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)

  0x000002480744566a: cmp    $0x7fc0000,%ebp
  0x0000024807445670: je     0x0000024807445691  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000024807445672: shl    $0x5,%eax
  0x0000024807445675: sar    $0x17,%eax
  0x0000024807445678: add    %r8d,%eax          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)

  0x000002480744567b: jmp    0x0000024807445656
  0x000002480744567d: mov    $0xffffffe4,%edx
  0x0000024807445682: mov    %r8d,(%rsp)
  0x0000024807445686: mov    %r10d,0x4(%rsp)
  0x000002480744568b: call   0x00000248073754e0  ; OopMap{off=144}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000024807445690: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000024807445691: mov    $0xffffff65,%edx
  0x0000024807445696: mov    %r8d,0x4(%rsp)
  0x000002480744569b: mov    %eax,0x8(%rsp)
  0x000002480744569f: call   0x00000248073754e0  ; OopMap{off=164}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ;   {runtime_call}
  0x00000248074456a4: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x00000248074456a5: hlt    
  0x00000248074456a6: hlt    
  0x00000248074456a7: hlt    
  0x00000248074456a8: hlt    
  0x00000248074456a9: hlt    
  0x00000248074456aa: hlt    
  0x00000248074456ab: hlt    
  0x00000248074456ac: hlt    
  0x00000248074456ad: hlt    
  0x00000248074456ae: hlt    
  0x00000248074456af: hlt    
  0x00000248074456b0: hlt    
  0x00000248074456b1: hlt    
  0x00000248074456b2: hlt    
  0x00000248074456b3: hlt    
  0x00000248074456b4: hlt    
  0x00000248074456b5: hlt    
  0x00000248074456b6: hlt    
  0x00000248074456b7: hlt    
  0x00000248074456b8: hlt    
  0x00000248074456b9: hlt    
  0x00000248074456ba: hlt    
  0x00000248074456bb: hlt    
  0x00000248074456bc: hlt    
  0x00000248074456bd: hlt    
  0x00000248074456be: hlt    
  0x00000248074456bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074456c0: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000248074456c5: call   0x00000248074456ca
  0x00000248074456ca: subq   $0x5,(%rsp)
  0x00000248074456cf: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074456d4: hlt    
  0x00000248074456d5: hlt    
  0x00000248074456d6: hlt    
  0x00000248074456d7: hlt    
<nmethod compile_id='27' compiler='C2' level='4' entry='0x0000024807445600' size='896' address='0x00000248074454d0' relocation_offset='288' insts_offset='304' stub_offset='496' scopes_data_offset='544' scopes_pcs_offset='664' dependencies_offset='888' oops_offset='520' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='14595' iicount='14595' stamp='0.710'/>
<writer thread='19792'/>
Decoding compiled method 0x000002480744c310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb05188} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x000002480744c460: mov    0x8(%rdx),%r10d
  0x000002480744c464: shl    $0x3,%r10
  0x000002480744c468: cmp    %r10,%rax
  0x000002480744c46b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744c471: data16 xchg %ax,%ax
  0x000002480744c474: nopl   0x0(%rax,%rax,1)
  0x000002480744c47c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744c480: mov    %eax,-0x6000(%rsp)
  0x000002480744c487: push   %rbp
  0x000002480744c488: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x000002480744c48c: mov    %rdx,%r10
  0x000002480744c48f: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000002480744c492: mov    0xc(%r12,%rcx,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000002480744c61d
  0x000002480744c497: test   %r9d,%r9d
  0x000002480744c49a: jl     0x000002480744c5e5  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000002480744c4a0: mov    $0xffffffff,%eax
  0x000002480744c4a5: cmp    %ebp,%r9d
  0x000002480744c4a8: jge    0x000002480744c593  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000002480744c4ae: cmp    $0x10000,%r8d
  0x000002480744c4b5: jge    0x000002480744c601  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000002480744c4bb: cmp    %ebp,%r9d
  0x000002480744c4be: jae    0x000002480744c5cb
  0x000002480744c4c4: mov    %ebp,%r10d
  0x000002480744c4c7: dec    %r10d
  0x000002480744c4ca: cmp    %ebp,%r10d
  0x000002480744c4cd: jae    0x000002480744c5cb
  0x000002480744c4d3: lea    (%r12,%rcx,8),%rbx
  0x000002480744c4d7: mov    %r9d,%r11d
  0x000002480744c4da: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000002480744c4dd: movzwl 0x10(%rbx,%r9,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c4e3: cmp    %r8d,%ecx
  0x000002480744c4e6: je     0x000002480744c5a2  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c4ec: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000002480744c4ef: cmp    %r11d,%r9d
  0x000002480744c4f2: jl     0x000002480744c4dd  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000002480744c4f4: mov    %ebp,%r11d
  0x000002480744c4f7: add    $0xfffffff9,%r11d
  0x000002480744c4fb: mov    $0x80000000,%ecx
  0x000002480744c500: cmp    %r11d,%r10d
  0x000002480744c503: cmovl  %ecx,%r11d
  0x000002480744c507: cmp    %r11d,%r9d
  0x000002480744c50a: jge    0x000002480744c578
  0x000002480744c50c: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000002480744c510: movzwl 0x10(%rbx,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c516: cmp    %r8d,%r10d
  0x000002480744c519: je     0x000002480744c5a2  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c51f: movslq %r9d,%r10
  0x000002480744c522: movzwl 0x12(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c528: cmp    %r8d,%edi
  0x000002480744c52b: je     0x000002480744c59f  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c52d: movzwl 0x14(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c533: cmp    %r8d,%edi
  0x000002480744c536: je     0x000002480744c5a7  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c538: movzwl 0x16(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c53e: cmp    %r8d,%edi
  0x000002480744c541: je     0x000002480744c5ad  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c543: movzwl 0x18(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c549: cmp    %r8d,%edi
  0x000002480744c54c: je     0x000002480744c5b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c54e: movzwl 0x1a(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c554: cmp    %r8d,%edi
  0x000002480744c557: je     0x000002480744c5b9  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c559: movzwl 0x1c(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c55f: cmp    %r8d,%edi
  0x000002480744c562: je     0x000002480744c5bf  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c564: movzwl 0x1e(%rbx,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c56a: cmp    %r8d,%ecx
  0x000002480744c56d: je     0x000002480744c5c5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c56f: add    $0x8,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000002480744c573: cmp    %r11d,%r9d
  0x000002480744c576: jl     0x000002480744c510  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000002480744c578: cmp    %ebp,%r9d
  0x000002480744c57b: jge    0x000002480744c593
  0x000002480744c57d: data16 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000002480744c580: movzwl 0x10(%rbx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000002480744c586: cmp    %r8d,%r11d
  0x000002480744c589: je     0x000002480744c5a2  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000002480744c58b: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000002480744c58e: cmp    %ebp,%r9d
  0x000002480744c591: jl     0x000002480744c580  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000002480744c593: add    $0x30,%rsp
  0x000002480744c597: pop    %rbp
  0x000002480744c598: test   %eax,-0x1e9c59e(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x000002480744c59e: ret    
  0x000002480744c59f: inc    %r9d
  0x000002480744c5a2: mov    %r9d,%eax
  0x000002480744c5a5: jmp    0x000002480744c593
  0x000002480744c5a7: add    $0x2,%r9d
  0x000002480744c5ab: jmp    0x000002480744c5a2
  0x000002480744c5ad: add    $0x3,%r9d
  0x000002480744c5b1: jmp    0x000002480744c5a2
  0x000002480744c5b3: add    $0x4,%r9d
  0x000002480744c5b7: jmp    0x000002480744c5a2
  0x000002480744c5b9: add    $0x5,%r9d
  0x000002480744c5bd: jmp    0x000002480744c5a2
  0x000002480744c5bf: add    $0x6,%r9d
  0x000002480744c5c3: jmp    0x000002480744c5a2
  0x000002480744c5c5: add    $0x7,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000002480744c5c9: jmp    0x000002480744c5a2
  0x000002480744c5cb: mov    $0xffffff86,%edx
  0x000002480744c5d0: mov    %r8d,(%rsp)
  0x000002480744c5d4: mov    %r9d,0x4(%rsp)
  0x000002480744c5d9: mov    %ecx,0x8(%rsp)
  0x000002480744c5dd: xchg   %ax,%ax
  0x000002480744c5df: call   0x00000248073754e0  ; OopMap{[8]=NarrowOop off=388}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000002480744c5e4: int3                      ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000002480744c5e5: mov    $0xffffff65,%edx
  0x000002480744c5ea: mov    %r8d,(%rsp)
  0x000002480744c5ee: mov    %r9d,0x8(%rsp)
  0x000002480744c5f3: mov    %r10,0x10(%rsp)
  0x000002480744c5f8: data16 xchg %ax,%ax
  0x000002480744c5fb: call   0x00000248073754e0  ; OopMap{[16]=Oop off=416}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000002480744c600: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000002480744c601: mov    $0xffffff65,%edx
  0x000002480744c606: mov    %r9d,0x4(%rsp)
  0x000002480744c60b: mov    %r8d,0x8(%rsp)
  0x000002480744c610: mov    %r10,0x10(%rsp)
  0x000002480744c615: xchg   %ax,%ax
  0x000002480744c617: call   0x00000248073754e0  ; OopMap{[16]=Oop off=444}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000002480744c61c: int3                      ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000002480744c61d: mov    $0xfffffff6,%edx
  0x000002480744c622: nop
  0x000002480744c623: call   0x00000248073754e0  ; OopMap{off=456}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000002480744c628: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x000002480744c629: hlt    
  0x000002480744c62a: hlt    
  0x000002480744c62b: hlt    
  0x000002480744c62c: hlt    
  0x000002480744c62d: hlt    
  0x000002480744c62e: hlt    
  0x000002480744c62f: hlt    
  0x000002480744c630: hlt    
  0x000002480744c631: hlt    
  0x000002480744c632: hlt    
  0x000002480744c633: hlt    
  0x000002480744c634: hlt    
  0x000002480744c635: hlt    
  0x000002480744c636: hlt    
  0x000002480744c637: hlt    
  0x000002480744c638: hlt    
  0x000002480744c639: hlt    
  0x000002480744c63a: hlt    
  0x000002480744c63b: hlt    
  0x000002480744c63c: hlt    
  0x000002480744c63d: hlt    
  0x000002480744c63e: hlt    
  0x000002480744c63f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480744c640: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x000002480744c645: call   0x000002480744c64a
  0x000002480744c64a: subq   $0x5,(%rsp)
  0x000002480744c64f: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744c654: hlt    
  0x000002480744c655: hlt    
  0x000002480744c656: hlt    
  0x000002480744c657: hlt    
<nmethod compile_id='24' compiler='C2' level='4' entry='0x000002480744c460' size='1768' address='0x000002480744c310' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='848' scopes_pcs_offset='1008' dependencies_offset='1744' nul_chk_table_offset='1752' method='java/lang/String indexOf (II)I' bytes='70' count='1952' backedge_count='112373' iicount='1952' stamp='0.718'/>
<writer thread='12268'/>
Decoding compiled method 0x0000024807445250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000024807445380: mov    0x8(%rdx),%r10d
  0x0000024807445384: shl    $0x3,%r10
  0x0000024807445388: cmp    %r10,%rax
  0x000002480744538b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807445391: data16 xchg %ax,%ax
  0x0000024807445394: nopl   0x0(%rax,%rax,1)
  0x000002480744539c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074453a0: mov    %eax,-0x6000(%rsp)
  0x00000248074453a7: push   %rbp
  0x00000248074453a8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x00000248074453ac: mov    0x8(%rdx),%r11d
  0x00000248074453b0: movabs $0x0,%r10
  0x00000248074453ba: lea    (%r10,%r11,8),%r10
  0x00000248074453be: mov    $0x40000000,%r8d
  0x00000248074453c4: test   %r8d,0x9c(%r10)
  0x00000248074453cb: je     0x00000248074453d8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000248074453cd: mov    %rdx,%rbp
  0x00000248074453d0: data16 xchg %ax,%ax
  0x00000248074453d3: call   0x0000024807440620  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00000248074453d8: add    $0x10,%rsp
  0x00000248074453dc: pop    %rbp
  0x00000248074453dd: test   %eax,-0x1e953e3(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x00000248074453e3: ret                       ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000248074453e4: mov    %rax,%rdx
  0x00000248074453e7: add    $0x10,%rsp
  0x00000248074453eb: pop    %rbp
  0x00000248074453ec: jmp    0x00000248074351e0  ;   {runtime_call}
  0x00000248074453f1: hlt    
  0x00000248074453f2: hlt    
  0x00000248074453f3: hlt    
  0x00000248074453f4: hlt    
  0x00000248074453f5: hlt    
  0x00000248074453f6: hlt    
  0x00000248074453f7: hlt    
  0x00000248074453f8: hlt    
  0x00000248074453f9: hlt    
  0x00000248074453fa: hlt    
  0x00000248074453fb: hlt    
  0x00000248074453fc: hlt    
  0x00000248074453fd: hlt    
  0x00000248074453fe: hlt    
  0x00000248074453ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807445400: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807445405: call   0x000002480744540a
  0x000002480744540a: subq   $0x5,(%rsp)
  0x000002480744540f: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807445414: hlt    
  0x0000024807445415: hlt    
  0x0000024807445416: hlt    
  0x0000024807445417: hlt    
<nmethod compile_id='11' compiler='C2' level='4' entry='0x0000024807445380' size='616' address='0x0000024807445250' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='488' dependencies_offset='584' handler_table_offset='592' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='12554' iicount='12554' stamp='0.721'/>
<writer thread='27436'/>
<task_queued compile_id='30' method='java/lang/Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='128' iicount='128' level='1' stamp='0.721' comment='tiered' hot_count='128'/>
<writer thread='13612'/>
Decoding compiled method 0x0000024807444f90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x00000248074450c0: sub    $0x18,%rsp
  0x00000248074450c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x00000248074450cc: cmp    %r8d,%edx
  0x00000248074450cf: mov    %r8d,%eax
  0x00000248074450d2: cmovle %edx,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00000248074450d5: add    $0x10,%rsp
  0x00000248074450d9: pop    %rbp
  0x00000248074450da: test   %eax,-0x1e950e0(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x00000248074450e0: ret    
  0x00000248074450e1: hlt    
  0x00000248074450e2: hlt    
  0x00000248074450e3: hlt    
  0x00000248074450e4: hlt    
  0x00000248074450e5: hlt    
  0x00000248074450e6: hlt    
  0x00000248074450e7: hlt    
  0x00000248074450e8: hlt    
  0x00000248074450e9: hlt    
  0x00000248074450ea: hlt    
  0x00000248074450eb: hlt    
  0x00000248074450ec: hlt    
  0x00000248074450ed: hlt    
  0x00000248074450ee: hlt    
  0x00000248074450ef: hlt    
  0x00000248074450f0: hlt    
  0x00000248074450f1: hlt    
  0x00000248074450f2: hlt    
  0x00000248074450f3: hlt    
  0x00000248074450f4: hlt    
  0x00000248074450f5: hlt    
  0x00000248074450f6: hlt    
  0x00000248074450f7: hlt    
  0x00000248074450f8: hlt    
  0x00000248074450f9: hlt    
  0x00000248074450fa: hlt    
  0x00000248074450fb: hlt    
  0x00000248074450fc: hlt    
  0x00000248074450fd: hlt    
  0x00000248074450fe: hlt    
  0x00000248074450ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807445100: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807445105: call   0x000002480744510a
  0x000002480744510a: subq   $0x5,(%rsp)
  0x000002480744510f: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807445114: hlt    
  0x0000024807445115: hlt    
  0x0000024807445116: hlt    
  0x0000024807445117: hlt    
<nmethod compile_id='1' compiler='C2' level='4' entry='0x00000248074450c0' size='488' address='0x0000024807444f90' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='416' dependencies_offset='480' method='java/lang/Math min (II)I' bytes='11' count='5775' iicount='5775' stamp='0.723'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807445fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb760d8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00000248074461a0: mov    0x8(%rdx),%r10d
  0x00000248074461a4: shl    $0x3,%r10
  0x00000248074461a8: cmp    %rax,%r10
  0x00000248074461ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074461b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074461bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074461c0: mov    %eax,-0x6000(%rsp)
  0x00000248074461c7: push   %rbp
  0x00000248074461c8: sub    $0xe0,%rsp
  0x00000248074461cf: mov    %rdx,0xb8(%rsp)
  0x00000248074461d7: movabs $0x2481fd30e78,%rsi  ;   {metadata(method data for {method} {0x000002481fb760d8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074461e1: mov    0xdc(%rsi),%edi
  0x00000248074461e7: add    $0x8,%edi
  0x00000248074461ea: mov    %edi,0xdc(%rsi)
  0x00000248074461f0: movabs $0x2481fb760d0,%rsi  ;   {metadata({method} {0x000002481fb760d8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074461fa: and    $0x1ff8,%edi
  0x0000024807446200: cmp    $0x0,%edi
  0x0000024807446203: je     0x0000024807446743  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000024807446209: cmp    $0x0,%r8
  0x000002480744620d: movabs $0x2481fd30e78,%rsi  ;   {metadata(method data for {method} {0x000002481fb760d8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807446217: movabs $0x108,%rdi
  0x0000024807446221: jne    0x0000024807446231
  0x0000024807446227: movabs $0x118,%rdi
  0x0000024807446231: mov    (%rsi,%rdi,1),%rbx
  0x0000024807446235: lea    0x1(%rbx),%rbx
  0x0000024807446239: mov    %rbx,(%rsi,%rdi,1)
  0x000002480744623d: je     0x0000024807446713  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000024807446243: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000002480744675a
  0x0000024807446246: mov    %r8,%rsi
  0x0000024807446249: movabs $0x2481fd30e78,%rdi  ;   {metadata(method data for {method} {0x000002481fb760d8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807446253: mov    0x8(%rsi),%esi
  0x0000024807446256: shl    $0x3,%rsi
  0x000002480744625a: cmp    0x140(%rdi),%rsi
  0x0000024807446261: jne    0x0000024807446270
  0x0000024807446263: addq   $0x1,0x148(%rdi)
  0x000002480744626b: jmp    0x00000248074462d6
  0x0000024807446270: cmp    0x150(%rdi),%rsi
  0x0000024807446277: jne    0x0000024807446286
  0x0000024807446279: addq   $0x1,0x158(%rdi)
  0x0000024807446281: jmp    0x00000248074462d6
  0x0000024807446286: cmpq   $0x0,0x140(%rdi)
  0x0000024807446291: jne    0x00000248074462aa
  0x0000024807446293: mov    %rsi,0x140(%rdi)
  0x000002480744629a: movq   $0x1,0x148(%rdi)
  0x00000248074462a5: jmp    0x00000248074462d6
  0x00000248074462aa: cmpq   $0x0,0x150(%rdi)
  0x00000248074462b5: jne    0x00000248074462ce
  0x00000248074462b7: mov    %rsi,0x150(%rdi)
  0x00000248074462be: movq   $0x1,0x158(%rdi)
  0x00000248074462c9: jmp    0x00000248074462d6
  0x00000248074462ce: addq   $0x1,0x138(%rdi)
  0x00000248074462d6: movabs $0x2481fc35dc0,%rsi  ;   {metadata(method data for {method} {0x000002481fb03c68} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074462e0: mov    0xdc(%rsi),%edi
  0x00000248074462e6: add    $0x8,%edi
  0x00000248074462e9: mov    %edi,0xdc(%rsi)
  0x00000248074462ef: movabs $0x2481fb03c60,%rsi  ;   {metadata({method} {0x000002481fb03c68} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074462f9: and    $0x7ffff8,%edi
  0x00000248074462ff: cmp    $0x0,%edi
  0x0000024807446302: je     0x000002480744675f
  0x0000024807446308: mov    0xc(%r8),%esi
  0x000002480744630c: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000024807446310: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000024807446776
  0x0000024807446313: mov    %esi,0xac(%rsp)
  0x000002480744631a: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x000002480744631d: add    %esi,%edi
  0x000002480744631f: mov    %rdx,%rbx
  0x0000024807446322: movabs $0x2481fd30e78,%rax  ;   {metadata(method data for {method} {0x000002481fb760d8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480744632c: addq   $0x1,0x168(%rax)
  0x0000024807446334: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480744633e: mov    0xdc(%rbx),%eax
  0x0000024807446344: add    $0x8,%eax
  0x0000024807446347: mov    %eax,0xdc(%rbx)
  0x000002480744634d: movabs $0x2481fb75778,%rbx  ;   {metadata({method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807446357: and    $0x7ffff8,%eax
  0x000002480744635d: cmp    $0x0,%eax
  0x0000024807446360: je     0x000002480744677b
  0x0000024807446366: mov    0x10(%rdx),%ebx
  0x0000024807446369: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000002480744636d: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x0000024807446792
  0x0000024807446370: mov    %rdi,%rcx
  0x0000024807446373: sub    %eax,%ecx
  0x0000024807446375: cmp    $0x0,%ecx
  0x0000024807446378: movabs $0x2481fd28388,%rcx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807446382: movabs $0x108,%r9
  0x000002480744638c: jle    0x000002480744639c
  0x0000024807446392: movabs $0x118,%r9
  0x000002480744639c: mov    (%rcx,%r9,1),%r11
  0x00000248074463a0: lea    0x1(%r11),%r11
  0x00000248074463a4: mov    %r11,(%rcx,%r9,1)
  0x00000248074463a8: jg     0x00000248074463bb  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000248074463ae: mov    %r8,0xc0(%rsp)
  0x00000248074463b6: jmp    0x000002480744662d  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000248074463bb: mov    %eax,0xa8(%rsp)
  0x00000248074463c2: mov    %rbx,0xb0(%rsp)
  0x00000248074463ca: mov    %r8,0xc0(%rsp)
  0x00000248074463d2: mov    %rdx,%rcx
  0x00000248074463d5: movabs $0x2481fd28388,%r9  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074463df: addq   $0x1,0x128(%r9)
  0x00000248074463e7: mov    %rdi,%r8
  0x00000248074463ea: mov    %rdx,%rdi
  0x00000248074463ed: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000248074463f0: nop
  0x00000248074463f1: nop
  0x00000248074463f2: nop
  0x00000248074463f3: nop
  0x00000248074463f4: nop
  0x00000248074463f5: nop
  0x00000248074463f6: nop
  0x00000248074463f7: call   0x0000024807375ee0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00000248074463fc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000248074463ff: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807446409: addq   $0x1,0x138(%rbx)
  0x0000024807446411: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744641b: mov    0xdc(%rbx),%edx
  0x0000024807446421: add    $0x8,%edx
  0x0000024807446424: mov    %edx,0xdc(%rbx)
  0x000002480744642a: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807446434: and    $0x7ffff8,%edx
  0x000002480744643a: cmp    $0x0,%edx
  0x000002480744643d: je     0x0000024807446797
  0x0000024807446443: mov    %r8,%rbx
  0x0000024807446446: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807446450: movslq %ebx,%rbx
  0x0000024807446453: mov    %rbx,%rdi
  0x0000024807446456: cmp    $0xffffff,%rbx
  0x000002480744645d: ja     0x00000248074467ae
  0x0000024807446463: movabs $0x17,%rsi
  0x000002480744646d: lea    (%rsi,%rbx,2),%rsi
  0x0000024807446471: and    $0xfffffffffffffff8,%rsi
  0x0000024807446475: mov    0x60(%r15),%rax
  0x0000024807446479: lea    (%rax,%rsi,1),%rsi
  0x000002480744647d: cmp    0x70(%r15),%rsi
  0x0000024807446481: ja     0x00000248074467ae
  0x0000024807446487: mov    %rsi,0x60(%r15)
  0x000002480744648b: sub    %rax,%rsi
  0x000002480744648e: movq   $0x1,(%rax)
  0x0000024807446495: mov    %rdx,%rcx
  0x0000024807446498: shr    $0x3,%rcx
  0x000002480744649c: mov    %ecx,0x8(%rax)
  0x000002480744649f: mov    %ebx,0xc(%rax)
  0x00000248074464a2: sub    $0x10,%rsi
  0x00000248074464a6: je     0x00000248074464bd
  0x00000248074464ac: xor    %rbx,%rbx
  0x00000248074464af: shr    $0x3,%rsi
  0x00000248074464b3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000248074464b8: dec    %rsi
  0x00000248074464bb: jne    0x00000248074464b3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000248074464bd: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000248074464c7: addq   $0x1,0x108(%rdx)
  0x00000248074464cf: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000248074464d9: mov    0xdc(%rdx),%r9d
  0x00000248074464e0: add    $0x8,%r9d
  0x00000248074464e4: mov    %r9d,0xdc(%rdx)
  0x00000248074464eb: movabs $0x2481fbf7590,%rdx  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000248074464f5: and    $0x7ffff8,%r9d
  0x00000248074464fc: cmp    $0x0,%r9d
  0x0000024807446500: je     0x00000248074467b8
  0x0000024807446506: mov    0xa8(%rsp),%edx
  0x000002480744650d: cmp    %r8d,%edx
  0x0000024807446510: movabs $0x2481fd13600,%r9  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480744651a: movabs $0x108,%rdi
  0x0000024807446524: jg     0x0000024807446534
  0x000002480744652a: movabs $0x118,%rdi
  0x0000024807446534: mov    (%r9,%rdi,1),%rsi
  0x0000024807446538: lea    0x1(%rsi),%rsi
  0x000002480744653c: mov    %rsi,(%r9,%rdi,1)
  0x0000024807446540: jg     0x000002480744655f  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000024807446546: movabs $0x2481fd13600,%r8  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807446550: incl   0x128(%r8)
  0x0000024807446557: mov    %rdx,%rsi
  0x000002480744655a: jmp    0x0000024807446562  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000002480744655f: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000024807446562: mov    0xb0(%rsp),%rbx
  0x000002480744656a: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807446574: addq   $0x1,0x118(%rdx)
  0x000002480744657c: mov    %rbx,%rdx
  0x000002480744657f: mov    $0x0,%r8d
  0x0000024807446585: mov    %rax,%r9
  0x0000024807446588: mov    $0x0,%edi
  0x000002480744658d: mov    %rax,0xc8(%rsp)
  0x0000024807446595: lea    (%r8,%rsi,1),%rcx
  0x0000024807446599: cmp    0xc(%rdx),%ecx
  0x000002480744659c: ja     0x00000248074467cf
  0x00000248074465a2: lea    (%rdi,%rsi,1),%rcx
  0x00000248074465a6: cmp    0xc(%r9),%ecx
  0x00000248074465aa: ja     0x00000248074467cf
  0x00000248074465b0: test   %esi,%esi
  0x00000248074465b2: jl     0x00000248074467cf
  0x00000248074465b8: je     0x00000248074465fc
  0x00000248074465be: movslq %r8d,%r8
  0x00000248074465c1: movslq %edi,%rdi
  0x00000248074465c4: lea    0x10(%rdx,%r8,2),%rcx
  0x00000248074465c9: lea    0x10(%r9,%rdi,2),%rdx
  0x00000248074465ce: mov    %rsi,%r8
  0x00000248074465d1: sub    $0x20,%rsp
  0x00000248074465d5: test   $0xf,%esp
  0x00000248074465db: je     0x00000248074465f3
  0x00000248074465e1: sub    $0x8,%rsp
  0x00000248074465e5: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000248074465ea: add    $0x8,%rsp
  0x00000248074465ee: jmp    0x00000248074465f8
  0x00000248074465f3: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000248074465f8: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000248074465fc: mov    0xc8(%rsp),%rax
  0x0000024807446604: mov    0xb8(%rsp),%rdx
  0x000002480744660c: mov    %rax,%r10
  0x000002480744660f: shr    $0x3,%r10
  0x0000024807446613: mov    %r10d,0x10(%rdx)
  0x0000024807446617: mov    %rdx,%r8
  0x000002480744661a: shr    $0x9,%r8
  0x000002480744661e: movabs $0x248130de000,%r9
  0x0000024807446628: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000002480744662d: mov    0xac(%rsp),%esi
  0x0000024807446634: mov    0xc0(%rsp),%rbx
  0x000002480744663c: mov    0x10(%rdx),%edi
  0x000002480744663f: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x0000024807446643: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000024807446646: mov    %rbx,%r8
  0x0000024807446649: movabs $0x2481fd30e78,%r9  ;   {metadata(method data for {method} {0x000002481fb760d8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807446653: mov    0x8(%r8),%r8d
  0x0000024807446657: shl    $0x3,%r8
  0x000002480744665b: cmp    0x180(%r9),%r8
  0x0000024807446662: jne    0x0000024807446671
  0x0000024807446664: addq   $0x1,0x188(%r9)
  0x000002480744666c: jmp    0x00000248074466d7
  0x0000024807446671: cmp    0x190(%r9),%r8
  0x0000024807446678: jne    0x0000024807446687
  0x000002480744667a: addq   $0x1,0x198(%r9)
  0x0000024807446682: jmp    0x00000248074466d7
  0x0000024807446687: cmpq   $0x0,0x180(%r9)
  0x0000024807446692: jne    0x00000248074466ab
  0x0000024807446694: mov    %r8,0x180(%r9)
  0x000002480744669b: movq   $0x1,0x188(%r9)
  0x00000248074466a6: jmp    0x00000248074466d7
  0x00000248074466ab: cmpq   $0x0,0x190(%r9)
  0x00000248074466b6: jne    0x00000248074466cf
  0x00000248074466b8: mov    %r8,0x190(%r9)
  0x00000248074466bf: movq   $0x1,0x198(%r9)
  0x00000248074466ca: jmp    0x00000248074466d7
  0x00000248074466cf: addq   $0x1,0x178(%r9)
  0x00000248074466d7: mov    $0x0,%r8d
  0x00000248074466dd: mov    %rsi,%r9
  0x00000248074466e0: mov    %rax,%rsi
  0x00000248074466e3: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00000248074466e6: nop
  0x00000248074466e7: call   0x0000024807375ee0  ; OopMap{[184]=Oop off=1356}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00000248074466ec: mov    0xb8(%rsp),%rdx
  0x00000248074466f4: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00000248074466f7: add    0xac(%rsp),%eax
  0x00000248074466fe: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000024807446701: mov    %rdx,%rax
  0x0000024807446704: add    $0xe0,%rsp
  0x000002480744670b: pop    %rbp
  0x000002480744670c: test   %eax,-0x1e96612(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807446712: ret                       ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000024807446713: mov    %rdx,%rsi
  0x0000024807446716: movabs $0x2481fd30e78,%rdi  ;   {metadata(method data for {method} {0x000002481fb760d8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807446720: addq   $0x1,0x128(%rdi)
  0x0000024807446728: nop
  0x0000024807446729: nop
  0x000002480744672a: nop
  0x000002480744672b: nop
  0x000002480744672c: nop
  0x000002480744672d: nop
  0x000002480744672e: nop
  0x000002480744672f: call   0x0000024807375ee0  ; OopMap{off=1428}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000024807446734: add    $0xe0,%rsp
  0x000002480744673b: pop    %rbp
  0x000002480744673c: test   %eax,-0x1e96642(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807446742: ret    
  0x0000024807446743: mov    %rsi,0x8(%rsp)
  0x0000024807446748: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807446750: call   0x0000024807433da0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1461}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000024807446755: jmp    0x0000024807446209
  0x000002480744675a: call   0x000002480742f100  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1471}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000002480744675f: mov    %rsi,0x8(%rsp)
  0x0000024807446764: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744676c: call   0x0000024807433da0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1489}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000024807446771: jmp    0x0000024807446308
  0x0000024807446776: call   0x000002480742f100  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1499}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000002480744677b: mov    %rbx,0x8(%rsp)
  0x0000024807446780: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807446788: call   0x0000024807433da0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000002480744678d: jmp    0x0000024807446366
  0x0000024807446792: call   0x000002480742f100  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1527}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000024807446797: mov    %rbx,0x8(%rsp)
  0x000002480744679c: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074467a4: call   0x0000024807433da0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1545}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000248074467a9: jmp    0x0000024807446443
  0x00000248074467ae: call   0x0000024807430280  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1555}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000248074467b3: jmp    0x00000248074464bd
  0x00000248074467b8: mov    %rdx,0x8(%rsp)
  0x00000248074467bd: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074467c5: call   0x0000024807433da0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1578}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000248074467ca: jmp    0x0000024807446506
  0x00000248074467cf: call   0x0000024807376360  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00000248074467d4: jmp    0x00000248074465fc
  0x00000248074467d9: nop
  0x00000248074467da: nop
  0x00000248074467db: mov    0x308(%r15),%rax
  0x00000248074467e2: movabs $0x0,%r10
  0x00000248074467ec: mov    %r10,0x308(%r15)
  0x00000248074467f3: movabs $0x0,%r10
  0x00000248074467fd: mov    %r10,0x310(%r15)
  0x0000024807446804: add    $0xe0,%rsp
  0x000002480744680b: pop    %rbp
  0x000002480744680c: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807446811: hlt    
  0x0000024807446812: hlt    
  0x0000024807446813: hlt    
  0x0000024807446814: hlt    
  0x0000024807446815: hlt    
  0x0000024807446816: hlt    
  0x0000024807446817: hlt    
  0x0000024807446818: hlt    
  0x0000024807446819: hlt    
  0x000002480744681a: hlt    
  0x000002480744681b: hlt    
  0x000002480744681c: hlt    
  0x000002480744681d: hlt    
  0x000002480744681e: hlt    
  0x000002480744681f: hlt    
[Stub Code]
  0x0000024807446820: nop                       ;   {no_reloc}
  0x0000024807446821: nop
  0x0000024807446822: nop
  0x0000024807446823: nop
  0x0000024807446824: nop
  0x0000024807446825: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744682f: jmp    0x000002480744682f  ;   {runtime_call}
  0x0000024807446834: nop
  0x0000024807446835: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744683f: jmp    0x000002480744683f  ;   {runtime_call}
  0x0000024807446844: nop
  0x0000024807446845: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744684f: jmp    0x000002480744684f  ;   {runtime_call}
  0x0000024807446854: nop
  0x0000024807446855: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744685f: jmp    0x000002480744685f  ;   {runtime_call}
[Exception Handler]
  0x0000024807446864: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807446869: mov    %rsp,-0x28(%rsp)
  0x000002480744686e: sub    $0x80,%rsp
  0x0000024807446875: mov    %rax,0x78(%rsp)
  0x000002480744687a: mov    %rcx,0x70(%rsp)
  0x000002480744687f: mov    %rdx,0x68(%rsp)
  0x0000024807446884: mov    %rbx,0x60(%rsp)
  0x0000024807446889: mov    %rbp,0x50(%rsp)
  0x000002480744688e: mov    %rsi,0x48(%rsp)
  0x0000024807446893: mov    %rdi,0x40(%rsp)
  0x0000024807446898: mov    %r8,0x38(%rsp)
  0x000002480744689d: mov    %r9,0x30(%rsp)
  0x00000248074468a2: mov    %r10,0x28(%rsp)
  0x00000248074468a7: mov    %r11,0x20(%rsp)
  0x00000248074468ac: mov    %r12,0x18(%rsp)
  0x00000248074468b1: mov    %r13,0x10(%rsp)
  0x00000248074468b6: mov    %r14,0x8(%rsp)
  0x00000248074468bb: mov    %r15,(%rsp)
  0x00000248074468bf: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074468c9: movabs $0x24807446869,%rdx  ;   {internal_word}
  0x00000248074468d3: mov    %rsp,%r8
  0x00000248074468d6: and    $0xfffffffffffffff0,%rsp
  0x00000248074468da: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074468e4: call   *%r10
  0x00000248074468e7: hlt    
[Deopt Handler Code]
  0x00000248074468e8: movabs $0x248074468e8,%r10  ;   {section_word}
  0x00000248074468f2: push   %r10
  0x00000248074468f4: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074468f9: hlt    
  0x00000248074468fa: hlt    
  0x00000248074468fb: hlt    
  0x00000248074468fc: hlt    
  0x00000248074468fd: hlt    
  0x00000248074468fe: hlt    
  0x00000248074468ff: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x00000248074461a0' size='3464' address='0x0000024807445fd0' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2392' scopes_pcs_offset='2800' dependencies_offset='3424' nul_chk_table_offset='3432' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1793' iicount='1793' stamp='0.744'/>
<writer thread='27436'/>
<task_queued compile_id='31' method='java/lang/ref/ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='384' iicount='384' level='3' stamp='0.744' comment='tiered' hot_count='384'/>
Decoding compiled method 0x0000024807437250:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe122f0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x0000024807437380: mov    0x8(%rsp),%rbx
  0x0000024807437385: mov    0x18(%rbx),%rbx
  0x0000024807437389: test   %rbx,%rbx
  0x000002480743738c: je     0x0000024807437395
  0x0000024807437392: jmp    *0x40(%rbx)
  0x0000024807437395: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480743739a: hlt    
  0x000002480743739b: hlt    
  0x000002480743739c: hlt    
  0x000002480743739d: hlt    
  0x000002480743739e: hlt    
  0x000002480743739f: hlt    
<nmethod compile_id='32' compile_kind='c2n' level='0' entry='0x0000024807437380' size='336' address='0x0000024807437250' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.746'/>
<writer thread='19792'/>
Decoding compiled method 0x000002480744a9d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000002480744ab00: mov    %eax,-0x6000(%rsp)
  0x000002480744ab07: push   %rbp
  0x000002480744ab08: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6373)

  0x000002480744ab0c: mov    %edx,%r11d
  0x000002480744ab0f: shr    $0x8,%r11d         ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)

  0x000002480744ab13: test   %r11d,%r11d
  0x000002480744ab16: jne    0x000002480744ab75  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)

  0x000002480744ab18: mov    %edx,%ebp
  0x000002480744ab1a: movzwl %bp,%ebp           ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab1d: cmp    $0x100,%ebp
  0x000002480744ab23: jae    0x000002480744ab64
  0x000002480744ab25: movabs $0x76b773c78,%r10  ;   {oop([I)}
  0x000002480744ab2f: mov    0x10(%r10,%rbp,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab34: test   $0x20000,%eax
  0x000002480744ab3a: jne    0x000002480744ab4a  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab3c: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab3e: add    $0x20,%rsp
  0x000002480744ab42: pop    %rbp
  0x000002480744ab43: test   %eax,-0x1e9ab49(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x000002480744ab49: ret    
  0x000002480744ab4a: mov    %eax,%ebp
  0x000002480744ab4c: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab52: cmp    $0x7fc0000,%ebp
  0x000002480744ab58: je     0x000002480744ab89  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab5a: shl    $0x5,%eax
  0x000002480744ab5d: sar    $0x17,%eax
  0x000002480744ab60: add    %edx,%eax          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab62: jmp    0x000002480744ab3e
  0x000002480744ab64: mov    %edx,0x4(%rsp)
  0x000002480744ab68: mov    $0xffffffe4,%edx
  0x000002480744ab6d: xchg   %ax,%ax
  0x000002480744ab6f: call   0x00000248073754e0  ; OopMap{off=116}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ;   {runtime_call}
  0x000002480744ab74: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab75: mov    %edx,(%rsp)
  0x000002480744ab78: mov    %r11d,0x4(%rsp)
  0x000002480744ab7d: mov    $0xffffff65,%edx
  0x000002480744ab82: nop
  0x000002480744ab83: call   0x00000248073754e0  ; OopMap{off=136}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ;   {runtime_call}
  0x000002480744ab88: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)

  0x000002480744ab89: mov    %edx,0x4(%rsp)
  0x000002480744ab8d: mov    %eax,0x8(%rsp)
  0x000002480744ab91: mov    $0xffffff65,%edx
  0x000002480744ab96: nop
  0x000002480744ab97: call   0x00000248073754e0  ; OopMap{off=156}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ;   {runtime_call}
  0x000002480744ab9c: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)

  0x000002480744ab9d: hlt    
  0x000002480744ab9e: hlt    
  0x000002480744ab9f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480744aba0: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x000002480744aba5: call   0x000002480744abaa
  0x000002480744abaa: subq   $0x5,(%rsp)
  0x000002480744abaf: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744abb4: hlt    
  0x000002480744abb5: hlt    
  0x000002480744abb6: hlt    
  0x000002480744abb7: hlt    
<nmethod compile_id='26' compiler='C2' level='4' entry='0x000002480744ab00' size='1016' address='0x000002480744a9d0' relocation_offset='288' insts_offset='304' stub_offset='464' scopes_data_offset='544' scopes_pcs_offset='720' dependencies_offset='1008' oops_offset='488' method='java/lang/Character toLowerCase (I)I' bytes='9' count='14595' iicount='14595' stamp='0.752'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480744bc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x50]  (sp of caller)
  0x000002480744bd80: mov    0x8(%rdx),%r10d
  0x000002480744bd84: shl    $0x3,%r10
  0x000002480744bd88: cmp    %rax,%r10
  0x000002480744bd8b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744bd91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744bd9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744bda0: mov    %eax,-0x6000(%rsp)
  0x000002480744bda7: push   %rbp
  0x000002480744bda8: sub    $0x40,%rsp
  0x000002480744bdac: movabs $0x2481fe12350,%rax  ;   {metadata(method data for {method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000002480744bdb6: mov    0xdc(%rax),%esi
  0x000002480744bdbc: add    $0x8,%esi
  0x000002480744bdbf: mov    %esi,0xdc(%rax)
  0x000002480744bdc5: movabs $0x2481fb2b7b0,%rax  ;   {metadata({method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000002480744bdcf: and    $0x1ff8,%esi
  0x000002480744bdd5: cmp    $0x0,%esi
  0x000002480744bdd8: je     0x000002480744bfbc  ;*aload_0
                                                ; - java.lang.ref.ReferenceQueue::poll@0 (line 106)

  0x000002480744bdde: mov    0x18(%rdx),%eax
  0x000002480744bde1: shl    $0x3,%rax          ;*getfield head
                                                ; - java.lang.ref.ReferenceQueue::poll@1 (line 106)

  0x000002480744bde5: cmp    $0x0,%rax
  0x000002480744bde9: movabs $0x2481fe12350,%rax  ;   {metadata(method data for {method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000002480744bdf3: movabs $0x108,%rsi
  0x000002480744bdfd: jne    0x000002480744be0d
  0x000002480744be03: movabs $0x118,%rsi
  0x000002480744be0d: mov    (%rax,%rsi,1),%rdi
  0x000002480744be11: lea    0x1(%rdi),%rdi
  0x000002480744be15: mov    %rdi,(%rax,%rsi,1)
  0x000002480744be19: je     0x000002480744bf4f  ;*ifnonnull
                                                ; - java.lang.ref.ReferenceQueue::poll@4 (line 106)

  0x000002480744be1f: mov    0xc(%rdx),%esi
  0x000002480744be22: shl    $0x3,%rsi          ;*getfield lock
                                                ; - java.lang.ref.ReferenceQueue::poll@10 (line 108)

  0x000002480744be26: lea    0x28(%rsp),%rdi
  0x000002480744be2b: mov    %rsi,0x8(%rdi)
  0x000002480744be2f: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x000002480744bfd3
  0x000002480744be32: mov    %rax,%rbx
  0x000002480744be35: and    $0x7,%rbx
  0x000002480744be39: cmp    $0x5,%rbx
  0x000002480744be3d: jne    0x000002480744bec4
  0x000002480744be43: mov    0x8(%rsi),%ebx
  0x000002480744be46: shl    $0x3,%rbx
  0x000002480744be4a: mov    0xa8(%rbx),%rbx
  0x000002480744be51: or     %r15,%rbx
  0x000002480744be54: xor    %rax,%rbx
  0x000002480744be57: and    $0xffffffffffffff87,%rbx
  0x000002480744be5b: je     0x000002480744beec
  0x000002480744be61: test   $0x7,%rbx
  0x000002480744be68: jne    0x000002480744beb1
  0x000002480744be6a: test   $0x300,%rbx
  0x000002480744be71: jne    0x000002480744be90
  0x000002480744be73: and    $0x37f,%rax
  0x000002480744be7a: mov    %rax,%rbx
  0x000002480744be7d: or     %r15,%rbx
  0x000002480744be80: lock cmpxchg %rbx,(%rsi)
  0x000002480744be85: jne    0x000002480744bfd8
  0x000002480744be8b: jmp    0x000002480744beec
  0x000002480744be90: mov    0x8(%rsi),%ebx
  0x000002480744be93: shl    $0x3,%rbx
  0x000002480744be97: mov    0xa8(%rbx),%rbx
  0x000002480744be9e: or     %r15,%rbx
  0x000002480744bea1: lock cmpxchg %rbx,(%rsi)
  0x000002480744bea6: jne    0x000002480744bfd8
  0x000002480744beac: jmp    0x000002480744beec
  0x000002480744beb1: mov    0x8(%rsi),%ebx
  0x000002480744beb4: shl    $0x3,%rbx
  0x000002480744beb8: mov    0xa8(%rbx),%rbx
  0x000002480744bebf: lock cmpxchg %rbx,(%rsi)
  0x000002480744bec4: mov    (%rsi),%rax
  0x000002480744bec7: or     $0x1,%rax
  0x000002480744becb: mov    %rax,(%rdi)
  0x000002480744bece: lock cmpxchg %rdi,(%rsi)
  0x000002480744bed3: je     0x000002480744beec
  0x000002480744bed9: sub    %rsp,%rax
  0x000002480744bedc: and    $0xfffffffffffff007,%rax
  0x000002480744bee3: mov    %rax,(%rdi)
  0x000002480744bee6: jne    0x000002480744bfd8  ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)

  0x000002480744beec: mov    %rsi,0x20(%rsp)
  0x000002480744bef1: mov    %rdx,%rdi
  0x000002480744bef4: movabs $0x2481fe12350,%rbx  ;   {metadata(method data for {method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000002480744befe: addq   $0x1,0x128(%rbx)
  0x000002480744bf06: nop
  0x000002480744bf07: call   0x0000024807375ee0  ; OopMap{[32]=Oop [48]=Oop off=396}
                                                ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ;   {optimized virtual_call}
  0x000002480744bf0c: mov    %rax,%rsi          ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)

  0x000002480744bf0f: lea    0x28(%rsp),%rax
  0x000002480744bf14: mov    0x8(%rax),%rbx
  0x000002480744bf18: mov    (%rbx),%rdi
  0x000002480744bf1b: and    $0x7,%rdi
  0x000002480744bf1f: cmp    $0x5,%rdi
  0x000002480744bf23: je     0x000002480744bf40
  0x000002480744bf29: mov    (%rax),%rdi
  0x000002480744bf2c: test   %rdi,%rdi
  0x000002480744bf2f: je     0x000002480744bf40
  0x000002480744bf35: lock cmpxchg %rdi,(%rbx)
  0x000002480744bf3a: jne    0x000002480744bfeb  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@21 (line 109)

  0x000002480744bf40: mov    %rsi,%rax
  0x000002480744bf43: add    $0x40,%rsp
  0x000002480744bf47: pop    %rbp
  0x000002480744bf48: test   %eax,-0x1e9be4e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744bf4e: ret                       ;*areturn
                                                ; - java.lang.ref.ReferenceQueue::poll@22 (line 109)

  0x000002480744bf4f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000002480744bf59: add    $0x40,%rsp
  0x000002480744bf5d: pop    %rbp
  0x000002480744bf5e: test   %eax,-0x1e9be64(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744bf64: ret                       ;*areturn
                                                ; - java.lang.ref.ReferenceQueue::poll@8 (line 107)

  0x000002480744bf65: mov    0x308(%r15),%rax
  0x000002480744bf6c: xor    %r10,%r10
  0x000002480744bf6f: mov    %r10,0x308(%r15)
  0x000002480744bf76: xor    %r10,%r10
  0x000002480744bf79: mov    %r10,0x310(%r15)
  0x000002480744bf80: mov    %rax,%rsi
  0x000002480744bf83: lea    0x28(%rsp),%rax
  0x000002480744bf88: mov    0x8(%rax),%rbx
  0x000002480744bf8c: mov    (%rbx),%rdi
  0x000002480744bf8f: and    $0x7,%rdi
  0x000002480744bf93: cmp    $0x5,%rdi
  0x000002480744bf97: je     0x000002480744bfb4
  0x000002480744bf9d: mov    (%rax),%rdi
  0x000002480744bfa0: test   %rdi,%rdi
  0x000002480744bfa3: je     0x000002480744bfb4
  0x000002480744bfa9: lock cmpxchg %rdi,(%rbx)
  0x000002480744bfae: jne    0x000002480744bffe  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@25 (line 110)

  0x000002480744bfb4: mov    %rsi,%rax
  0x000002480744bfb7: jmp    0x000002480744c039
  0x000002480744bfbc: mov    %rax,0x8(%rsp)
  0x000002480744bfc1: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744bfc9: call   0x0000024807433da0  ; OopMap{rdx=Oop off=590}
                                                ;*synchronization entry
                                                ; - java.lang.ref.ReferenceQueue::poll@-1 (line 106)
                                                ;   {runtime_call}
  0x000002480744bfce: jmp    0x000002480744bdde
  0x000002480744bfd3: call   0x000002480742f100  ; OopMap{rdx=Oop rsi=Oop off=600}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ;   {runtime_call}
  0x000002480744bfd8: mov    %rsi,0x8(%rsp)
  0x000002480744bfdd: mov    %rdi,(%rsp)
  0x000002480744bfe1: call   0x0000024807431ea0  ; OopMap{rdx=Oop rsi=Oop [48]=Oop off=614}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ;   {runtime_call}
  0x000002480744bfe6: jmp    0x000002480744beec
  0x000002480744bfeb: lea    0x28(%rsp),%rax
  0x000002480744bff0: mov    %rax,(%rsp)
  0x000002480744bff4: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480744bff9: jmp    0x000002480744bf40
  0x000002480744bffe: lea    0x28(%rsp),%rax
  0x000002480744c003: mov    %rax,(%rsp)
  0x000002480744c007: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480744c00c: jmp    0x000002480744bfb4
  0x000002480744c00e: nop
  0x000002480744c00f: nop
  0x000002480744c010: mov    0x308(%r15),%rax
  0x000002480744c017: movabs $0x0,%r10
  0x000002480744c021: mov    %r10,0x308(%r15)
  0x000002480744c028: movabs $0x0,%r10
  0x000002480744c032: mov    %r10,0x310(%r15)
  0x000002480744c039: add    $0x40,%rsp
  0x000002480744c03d: pop    %rbp
  0x000002480744c03e: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744c043: hlt    
  0x000002480744c044: hlt    
  0x000002480744c045: hlt    
  0x000002480744c046: hlt    
  0x000002480744c047: hlt    
  0x000002480744c048: hlt    
  0x000002480744c049: hlt    
  0x000002480744c04a: hlt    
  0x000002480744c04b: hlt    
  0x000002480744c04c: hlt    
  0x000002480744c04d: hlt    
  0x000002480744c04e: hlt    
  0x000002480744c04f: hlt    
  0x000002480744c050: hlt    
  0x000002480744c051: hlt    
  0x000002480744c052: hlt    
  0x000002480744c053: hlt    
  0x000002480744c054: hlt    
  0x000002480744c055: hlt    
  0x000002480744c056: hlt    
  0x000002480744c057: hlt    
  0x000002480744c058: hlt    
  0x000002480744c059: hlt    
  0x000002480744c05a: hlt    
  0x000002480744c05b: hlt    
  0x000002480744c05c: hlt    
  0x000002480744c05d: hlt    
  0x000002480744c05e: hlt    
  0x000002480744c05f: hlt    
[Stub Code]
  0x000002480744c060: nop                       ;   {no_reloc}
  0x000002480744c061: nop
  0x000002480744c062: nop
  0x000002480744c063: nop
  0x000002480744c064: nop
  0x000002480744c065: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744c06f: jmp    0x000002480744c06f  ;   {runtime_call}
[Exception Handler]
  0x000002480744c074: call   0x0000024807431320  ;   {runtime_call}
  0x000002480744c079: mov    %rsp,-0x28(%rsp)
  0x000002480744c07e: sub    $0x80,%rsp
  0x000002480744c085: mov    %rax,0x78(%rsp)
  0x000002480744c08a: mov    %rcx,0x70(%rsp)
  0x000002480744c08f: mov    %rdx,0x68(%rsp)
  0x000002480744c094: mov    %rbx,0x60(%rsp)
  0x000002480744c099: mov    %rbp,0x50(%rsp)
  0x000002480744c09e: mov    %rsi,0x48(%rsp)
  0x000002480744c0a3: mov    %rdi,0x40(%rsp)
  0x000002480744c0a8: mov    %r8,0x38(%rsp)
  0x000002480744c0ad: mov    %r9,0x30(%rsp)
  0x000002480744c0b2: mov    %r10,0x28(%rsp)
  0x000002480744c0b7: mov    %r11,0x20(%rsp)
  0x000002480744c0bc: mov    %r12,0x18(%rsp)
  0x000002480744c0c1: mov    %r13,0x10(%rsp)
  0x000002480744c0c6: mov    %r14,0x8(%rsp)
  0x000002480744c0cb: mov    %r15,(%rsp)
  0x000002480744c0cf: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480744c0d9: movabs $0x2480744c079,%rdx  ;   {internal_word}
  0x000002480744c0e3: mov    %rsp,%r8
  0x000002480744c0e6: and    $0xfffffffffffffff0,%rsp
  0x000002480744c0ea: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480744c0f4: call   *%r10
  0x000002480744c0f7: hlt    
[Deopt Handler Code]
  0x000002480744c0f8: movabs $0x2480744c0f8,%r10  ;   {section_word}
  0x000002480744c102: push   %r10
  0x000002480744c104: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744c109: hlt    
  0x000002480744c10a: hlt    
  0x000002480744c10b: hlt    
  0x000002480744c10c: hlt    
  0x000002480744c10d: hlt    
  0x000002480744c10e: hlt    
  0x000002480744c10f: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x000002480744bd80' size='1720' address='0x000002480744bc10' relocation_offset='288' insts_offset='368' stub_offset='1104' scopes_data_offset='1288' scopes_pcs_offset='1416' dependencies_offset='1672' handler_table_offset='1680' nul_chk_table_offset='1704' method='java/lang/ref/ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='388' iicount='388' stamp='0.759'/>
Decoding compiled method 0x000002480744b790:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fbaae50} &apos;&lt;init&gt;&apos; &apos;(J)V&apos; in &apos;java/lang/Long&apos;
  # this:     rdx:rdx   = &apos;java/lang/Long&apos;
  # parm0:    r8:r8     = long
  #           [sp+0x50]  (sp of caller)
  0x000002480744b900: mov    0x8(%rdx),%r10d
  0x000002480744b904: shl    $0x3,%r10
  0x000002480744b908: cmp    %rax,%r10
  0x000002480744b90b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744b911: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744b91c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744b920: mov    %eax,-0x6000(%rsp)
  0x000002480744b927: push   %rbp
  0x000002480744b928: sub    $0x40,%rsp
  0x000002480744b92c: movabs $0x2481fe18068,%rsi  ;   {metadata(method data for {method} {0x000002481fbaae50} &apos;&lt;init&gt;&apos; &apos;(J)V&apos; in &apos;java/lang/Long&apos;)}
  0x000002480744b936: mov    0xdc(%rsi),%edi
  0x000002480744b93c: add    $0x8,%edi
  0x000002480744b93f: mov    %edi,0xdc(%rsi)
  0x000002480744b945: movabs $0x2481fbaae48,%rsi  ;   {metadata({method} {0x000002481fbaae50} &apos;&lt;init&gt;&apos; &apos;(J)V&apos; in &apos;java/lang/Long&apos;)}
  0x000002480744b94f: and    $0x1ff8,%edi
  0x000002480744b955: cmp    $0x0,%edi
  0x000002480744b958: je     0x000002480744b9fc  ;*aload_0
                                                ; - java.lang.Long::&lt;init&gt;@0 (line 947)

  0x000002480744b95e: mov    %rdx,%rsi
  0x000002480744b961: movabs $0x2481fe18068,%rdi  ;   {metadata(method data for {method} {0x000002481fbaae50} &apos;&lt;init&gt;&apos; &apos;(J)V&apos; in &apos;java/lang/Long&apos;)}
  0x000002480744b96b: addq   $0x1,0x108(%rdi)
  0x000002480744b973: movabs $0x2481fe043c8,%rsi  ;   {metadata(method data for {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x000002480744b97d: mov    0xdc(%rsi),%edi
  0x000002480744b983: add    $0x8,%edi
  0x000002480744b986: mov    %edi,0xdc(%rsi)
  0x000002480744b98c: movabs $0x2481fba00a0,%rsi  ;   {metadata({method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x000002480744b996: and    $0x7ffff8,%edi
  0x000002480744b99c: cmp    $0x0,%edi
  0x000002480744b99f: je     0x000002480744ba13
  0x000002480744b9a5: mov    %rdx,%rsi
  0x000002480744b9a8: movabs $0x2481fe043c8,%rdi  ;   {metadata(method data for {method} {0x000002481fba00a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x000002480744b9b2: addq   $0x1,0x108(%rdi)
  0x000002480744b9ba: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744b9c4: mov    0xdc(%rsi),%edi
  0x000002480744b9ca: add    $0x8,%edi
  0x000002480744b9cd: mov    %edi,0xdc(%rsi)
  0x000002480744b9d3: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744b9dd: and    $0x7ffff8,%edi
  0x000002480744b9e3: cmp    $0x0,%edi
  0x000002480744b9e6: je     0x000002480744ba2a
  0x000002480744b9ec: mov    %r8,0x10(%rdx)     ;*putfield value
                                                ; - java.lang.Long::&lt;init&gt;@6 (line 948)

  0x000002480744b9f0: add    $0x40,%rsp
  0x000002480744b9f4: pop    %rbp
  0x000002480744b9f5: test   %eax,-0x1e9b8fb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744b9fb: ret    
  0x000002480744b9fc: mov    %rsi,0x8(%rsp)
  0x000002480744ba01: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ba09: call   0x0000024807433da0  ; OopMap{rdx=Oop off=270}
                                                ;*synchronization entry
                                                ; - java.lang.Long::&lt;init&gt;@-1 (line 947)
                                                ;   {runtime_call}
  0x000002480744ba0e: jmp    0x000002480744b95e
  0x000002480744ba13: mov    %rsi,0x8(%rsp)
  0x000002480744ba18: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ba20: call   0x0000024807433da0  ; OopMap{rdx=Oop off=293}
                                                ;*synchronization entry
                                                ; - java.lang.Number::&lt;init&gt;@-1 (line 55)
                                                ; - java.lang.Long::&lt;init&gt;@1 (line 947)
                                                ;   {runtime_call}
  0x000002480744ba25: jmp    0x000002480744b9a5
  0x000002480744ba2a: mov    %rsi,0x8(%rsp)
  0x000002480744ba2f: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ba37: call   0x0000024807433da0  ; OopMap{rdx=Oop off=316}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.Number::&lt;init&gt;@1 (line 55)
                                                ; - java.lang.Long::&lt;init&gt;@1 (line 947)
                                                ;   {runtime_call}
  0x000002480744ba3c: jmp    0x000002480744b9ec
  0x000002480744ba3e: nop
  0x000002480744ba3f: nop
  0x000002480744ba40: mov    0x308(%r15),%rax
  0x000002480744ba47: movabs $0x0,%r10
  0x000002480744ba51: mov    %r10,0x308(%r15)
  0x000002480744ba58: movabs $0x0,%r10
  0x000002480744ba62: mov    %r10,0x310(%r15)
  0x000002480744ba69: add    $0x40,%rsp
  0x000002480744ba6d: pop    %rbp
  0x000002480744ba6e: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744ba73: hlt    
  0x000002480744ba74: hlt    
  0x000002480744ba75: hlt    
  0x000002480744ba76: hlt    
  0x000002480744ba77: hlt    
  0x000002480744ba78: hlt    
  0x000002480744ba79: hlt    
  0x000002480744ba7a: hlt    
  0x000002480744ba7b: hlt    
  0x000002480744ba7c: hlt    
  0x000002480744ba7d: hlt    
  0x000002480744ba7e: hlt    
  0x000002480744ba7f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480744ba80: call   0x0000024807431320  ;   {no_reloc}
  0x000002480744ba85: mov    %rsp,-0x28(%rsp)
  0x000002480744ba8a: sub    $0x80,%rsp
  0x000002480744ba91: mov    %rax,0x78(%rsp)
  0x000002480744ba96: mov    %rcx,0x70(%rsp)
  0x000002480744ba9b: mov    %rdx,0x68(%rsp)
  0x000002480744baa0: mov    %rbx,0x60(%rsp)
  0x000002480744baa5: mov    %rbp,0x50(%rsp)
  0x000002480744baaa: mov    %rsi,0x48(%rsp)
  0x000002480744baaf: mov    %rdi,0x40(%rsp)
  0x000002480744bab4: mov    %r8,0x38(%rsp)
  0x000002480744bab9: mov    %r9,0x30(%rsp)
  0x000002480744babe: mov    %r10,0x28(%rsp)
  0x000002480744bac3: mov    %r11,0x20(%rsp)
  0x000002480744bac8: mov    %r12,0x18(%rsp)
  0x000002480744bacd: mov    %r13,0x10(%rsp)
  0x000002480744bad2: mov    %r14,0x8(%rsp)
  0x000002480744bad7: mov    %r15,(%rsp)
  0x000002480744badb: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480744bae5: movabs $0x2480744ba85,%rdx  ;   {internal_word}
  0x000002480744baef: mov    %rsp,%r8
  0x000002480744baf2: and    $0xfffffffffffffff0,%rsp
  0x000002480744baf6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480744bb00: call   *%r10
  0x000002480744bb03: hlt    
[Deopt Handler Code]
  0x000002480744bb04: movabs $0x2480744bb04,%r10  ;   {section_word}
  0x000002480744bb0e: push   %r10
  0x000002480744bb10: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744bb15: hlt    
  0x000002480744bb16: hlt    
  0x000002480744bb17: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x000002480744b900' size='1112' address='0x000002480744b790' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='992' dependencies_offset='1104' method='java/lang/Long &lt;init&gt; (J)V' bytes='10' count='256' iicount='256' stamp='0.765'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480744b390:
Code:
[Entry Point]
  # {method} {0x000002481fb005b0} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x000002480744b500: mov    0x8(%rdx),%r10d
  0x000002480744b504: shl    $0x3,%r10
  0x000002480744b508: cmp    %r10,%rax
  0x000002480744b50b: je     0x000002480744b518
  0x000002480744b511: jmp    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744b516: xchg   %ax,%ax
[Verified Entry Point]
  0x000002480744b518: mov    %eax,-0x6000(%rsp)
  0x000002480744b51f: push   %rbp
  0x000002480744b520: mov    %rsp,%rbp
  0x000002480744b523: sub    $0x60,%rsp
  0x000002480744b527: mov    %rdx,0x20(%rsp)
  0x000002480744b52c: cmp    $0x0,%rdx
  0x000002480744b530: lea    0x20(%rsp),%rdx
  0x000002480744b535: cmove  0x20(%rsp),%rdx    ; OopMap{[32]=Oop off=59}
  0x000002480744b53b: movabs $0x2480744b53b,%r10  ;   {section_word}
  0x000002480744b545: mov    %r10,0x240(%r15)
  0x000002480744b54c: mov    %rsp,0x238(%r15)
  0x000002480744b553: movabs $0x667e60d1,%r10   ;   {external_word}
  0x000002480744b55d: cmpb   $0x0,(%r10)
  0x000002480744b561: je     0x000002480744b5b1
  0x000002480744b567: push   %rdx
  0x000002480744b568: movabs $0x2481fb005a8,%rdx  ;   {metadata({method} {0x000002481fb005b0} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744b572: mov    %r15,%rcx
  0x000002480744b575: sub    $0x20,%rsp
  0x000002480744b579: test   $0xf,%esp
  0x000002480744b57f: je     0x000002480744b59f
  0x000002480744b585: sub    $0x8,%rsp
  0x000002480744b589: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480744b593: call   *%r10
  0x000002480744b596: add    $0x8,%rsp
  0x000002480744b59a: jmp    0x000002480744b5ac
  0x000002480744b59f: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480744b5a9: call   *%r10
  0x000002480744b5ac: add    $0x20,%rsp
  0x000002480744b5b0: pop    %rdx
  0x000002480744b5b1: lea    0x258(%r15),%rcx
  0x000002480744b5b8: movl   $0x4,0x2d0(%r15)
  0x000002480744b5c3: movabs $0x7ffe39983e48,%r10  ;   {runtime_call}
  0x000002480744b5cd: call   *%r10
  0x000002480744b5d0: vzeroupper 
  0x000002480744b5d3: movl   $0x5,0x2d0(%r15)
  0x000002480744b5de: mov    %r15d,%ecx
  0x000002480744b5e1: shr    $0x4,%ecx
  0x000002480744b5e4: and    $0xffc,%ecx
  0x000002480744b5ea: movabs $0x248055c0000,%r10  ;   {external_word}
  0x000002480744b5f4: mov    %ecx,(%r10,%rcx,1)
  0x000002480744b5f8: movabs $0x667e6b0c,%r10   ;   {external_word}
  0x000002480744b602: cmpl   $0x0,(%r10)
  0x000002480744b609: jne    0x000002480744b61d
  0x000002480744b60f: cmpl   $0x0,0x30(%r15)
  0x000002480744b617: je     0x000002480744b646
  0x000002480744b61d: mov    %rax,-0x8(%rbp)
  0x000002480744b621: mov    %r15,%rcx
  0x000002480744b624: mov    %rsp,%r12
  0x000002480744b627: sub    $0x20,%rsp
  0x000002480744b62b: and    $0xfffffffffffffff0,%rsp
  0x000002480744b62f: movabs $0x662139d0,%r10   ;   {runtime_call}
  0x000002480744b639: call   *%r10
  0x000002480744b63c: mov    %r12,%rsp
  0x000002480744b63f: xor    %r12,%r12
  0x000002480744b642: mov    -0x8(%rbp),%rax
  0x000002480744b646: movl   $0x8,0x2d0(%r15)
  0x000002480744b651: cmpl   $0x1,0x2fc(%r15)
  0x000002480744b65c: je     0x000002480744b72c
  0x000002480744b662: movabs $0x667e60d1,%r10   ;   {external_word}
  0x000002480744b66c: cmpb   $0x0,(%r10)
  0x000002480744b670: je     0x000002480744b6c6
  0x000002480744b676: mov    %rax,-0x8(%rbp)
  0x000002480744b67a: movabs $0x2481fb005a8,%rdx  ;   {metadata({method} {0x000002481fb005b0} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744b684: mov    %r15,%rcx
  0x000002480744b687: sub    $0x20,%rsp
  0x000002480744b68b: test   $0xf,%esp
  0x000002480744b691: je     0x000002480744b6b1
  0x000002480744b697: sub    $0x8,%rsp
  0x000002480744b69b: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480744b6a5: call   *%r10
  0x000002480744b6a8: add    $0x8,%rsp
  0x000002480744b6ac: jmp    0x000002480744b6be
  0x000002480744b6b1: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480744b6bb: call   *%r10
  0x000002480744b6be: add    $0x20,%rsp
  0x000002480744b6c2: mov    -0x8(%rbp),%rax
  0x000002480744b6c6: movabs $0x0,%r10
  0x000002480744b6d0: mov    %r10,0x238(%r15)
  0x000002480744b6d7: movabs $0x0,%r10
  0x000002480744b6e1: mov    %r10,0x240(%r15)
  0x000002480744b6e8: test   %rax,%rax
  0x000002480744b6eb: je     0x000002480744b709
  0x000002480744b6f1: test   $0x1,%rax
  0x000002480744b6f7: je     0x000002480744b706
  0x000002480744b6fd: mov    -0x1(%rax),%rax
  0x000002480744b701: jmp    0x000002480744b709
  0x000002480744b706: mov    (%rax),%rax
  0x000002480744b709: mov    0x38(%r15),%rcx
  0x000002480744b70d: movl   $0x0,0x100(%rcx)
  0x000002480744b717: leave  
  0x000002480744b718: cmpq   $0x0,0x8(%r15)
  0x000002480744b720: jne    0x000002480744b727
  0x000002480744b726: ret    
  0x000002480744b727: jmp    Stub::forward exception  ;   {runtime_call}
  0x000002480744b72c: mov    %rax,-0x8(%rbp)
  0x000002480744b730: mov    %rsp,%r12
  0x000002480744b733: sub    $0x20,%rsp
  0x000002480744b737: and    $0xfffffffffffffff0,%rsp
  0x000002480744b73b: movabs $0x66203da0,%r10   ;   {runtime_call}
  0x000002480744b745: call   *%r10
  0x000002480744b748: mov    %r12,%rsp
  0x000002480744b74b: xor    %r12,%r12
  0x000002480744b74e: mov    -0x8(%rbp),%rax
  0x000002480744b752: jmp    0x000002480744b662
  0x000002480744b757: hlt    
<nmethod compile_id='33' compile_kind='c2n' level='0' entry='0x000002480744b500' size='968' address='0x000002480744b390' relocation_offset='288' consts_offset='968' insts_offset='368' method='java/lang/Object getClass ()Ljava/lang/Class;' bytes='0' count='512' iicount='512' stamp='0.769'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480744b090:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb0ca78} &apos;getClassLoader0&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480744b1e0: mov    0x8(%rdx),%r10d
  0x000002480744b1e4: shl    $0x3,%r10
  0x000002480744b1e8: cmp    %rax,%r10
  0x000002480744b1eb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744b1f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744b1fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744b200: mov    %eax,-0x6000(%rsp)
  0x000002480744b207: push   %rbp
  0x000002480744b208: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.Class::getClassLoader0@0 (line 689)

  0x000002480744b20c: mov    0x18(%rdx),%eax
  0x000002480744b20f: shl    $0x3,%rax          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)

  0x000002480744b213: add    $0x30,%rsp
  0x000002480744b217: pop    %rbp
  0x000002480744b218: test   %eax,-0x1e9b11e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744b21e: ret    
  0x000002480744b21f: nop
  0x000002480744b220: nop
  0x000002480744b221: mov    0x308(%r15),%rax
  0x000002480744b228: movabs $0x0,%r10
  0x000002480744b232: mov    %r10,0x308(%r15)
  0x000002480744b239: movabs $0x0,%r10
  0x000002480744b243: mov    %r10,0x310(%r15)
  0x000002480744b24a: add    $0x30,%rsp
  0x000002480744b24e: pop    %rbp
  0x000002480744b24f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744b254: hlt    
  0x000002480744b255: hlt    
  0x000002480744b256: hlt    
  0x000002480744b257: hlt    
  0x000002480744b258: hlt    
  0x000002480744b259: hlt    
  0x000002480744b25a: hlt    
  0x000002480744b25b: hlt    
  0x000002480744b25c: hlt    
  0x000002480744b25d: hlt    
  0x000002480744b25e: hlt    
  0x000002480744b25f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480744b260: call   0x0000024807431320  ;   {no_reloc}
  0x000002480744b265: mov    %rsp,-0x28(%rsp)
  0x000002480744b26a: sub    $0x80,%rsp
  0x000002480744b271: mov    %rax,0x78(%rsp)
  0x000002480744b276: mov    %rcx,0x70(%rsp)
  0x000002480744b27b: mov    %rdx,0x68(%rsp)
  0x000002480744b280: mov    %rbx,0x60(%rsp)
  0x000002480744b285: mov    %rbp,0x50(%rsp)
  0x000002480744b28a: mov    %rsi,0x48(%rsp)
  0x000002480744b28f: mov    %rdi,0x40(%rsp)
  0x000002480744b294: mov    %r8,0x38(%rsp)
  0x000002480744b299: mov    %r9,0x30(%rsp)
  0x000002480744b29e: mov    %r10,0x28(%rsp)
  0x000002480744b2a3: mov    %r11,0x20(%rsp)
  0x000002480744b2a8: mov    %r12,0x18(%rsp)
  0x000002480744b2ad: mov    %r13,0x10(%rsp)
  0x000002480744b2b2: mov    %r14,0x8(%rsp)
  0x000002480744b2b7: mov    %r15,(%rsp)
  0x000002480744b2bb: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480744b2c5: movabs $0x2480744b265,%rdx  ;   {internal_word}
  0x000002480744b2cf: mov    %rsp,%r8
  0x000002480744b2d2: and    $0xfffffffffffffff0,%rsp
  0x000002480744b2d6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480744b2e0: call   *%r10
  0x000002480744b2e3: hlt    
[Deopt Handler Code]
  0x000002480744b2e4: movabs $0x2480744b2e4,%r10  ;   {section_word}
  0x000002480744b2ee: push   %r10
  0x000002480744b2f0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744b2f5: hlt    
  0x000002480744b2f6: hlt    
  0x000002480744b2f7: hlt    
<nmethod compile_id='30' compiler='C1' level='1' entry='0x000002480744b1e0' size='712' address='0x000002480744b090' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='136' iicount='136' stamp='0.771'/>
<writer thread='27436'/>
<task_queued compile_id='34' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='768' iicount='768' level='3' stamp='0.772' comment='tiered' hot_count='768'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807449a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rdx:rdx   = &apos;java/lang/ref/Reference&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807449bc0: mov    0x8(%rdx),%r10d
  0x0000024807449bc4: shl    $0x3,%r10
  0x0000024807449bc8: cmp    %rax,%r10
  0x0000024807449bcb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807449bd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807449bdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807449be0: mov    %eax,-0x6000(%rsp)
  0x0000024807449be7: push   %rbp
  0x0000024807449be8: sub    $0x30,%rsp
  0x0000024807449bec: movabs $0x2481fd5fb28,%rsi  ;   {metadata(method data for {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000024807449bf6: mov    0xdc(%rsi),%edi
  0x0000024807449bfc: add    $0x8,%edi
  0x0000024807449bff: mov    %edi,0xdc(%rsi)
  0x0000024807449c05: movabs $0x2481fb288c8,%rsi  ;   {metadata({method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000024807449c0f: and    $0x1ff8,%edi
  0x0000024807449c15: cmp    $0x0,%edi
  0x0000024807449c18: je     0x0000024807449d16  ;*aload_0
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 306)

  0x0000024807449c1e: mov    %rdx,%rsi
  0x0000024807449c21: movabs $0x2481fd5fb28,%rdi  ;   {metadata(method data for {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000024807449c2b: addq   $0x1,0x108(%rdi)
  0x0000024807449c33: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807449c3d: mov    0xdc(%rsi),%edi
  0x0000024807449c43: add    $0x8,%edi
  0x0000024807449c46: mov    %edi,0xdc(%rsi)
  0x0000024807449c4c: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807449c56: and    $0x7ffff8,%edi
  0x0000024807449c5c: cmp    $0x0,%edi
  0x0000024807449c5f: je     0x0000024807449d2d
  0x0000024807449c65: mov    %r8,%r10
  0x0000024807449c68: shr    $0x3,%r10
  0x0000024807449c6c: mov    %r10d,0xc(%rdx)
  0x0000024807449c70: mov    %rdx,%rsi
  0x0000024807449c73: shr    $0x9,%rsi
  0x0000024807449c77: movabs $0x248130de000,%rdi
  0x0000024807449c81: movb   $0x0,(%rsi,%rdi,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 307)

  0x0000024807449c85: cmp    $0x0,%r9
  0x0000024807449c89: movabs $0x2481fd5fb28,%rsi  ;   {metadata(method data for {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000024807449c93: movabs $0x118,%rdi
  0x0000024807449c9d: jne    0x0000024807449cad
  0x0000024807449ca3: movabs $0x128,%rdi
  0x0000024807449cad: mov    (%rsi,%rdi,1),%rbx
  0x0000024807449cb1: lea    0x1(%rbx),%rbx
  0x0000024807449cb5: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807449cb9: jne    0x0000024807449ce5  ;*ifnonnull
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 308)

  0x0000024807449cbf: movabs $0x76b701b90,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x0000024807449cc9: mov    0x68(%rsi),%esi
  0x0000024807449ccc: shl    $0x3,%rsi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::&lt;init&gt;@14 (line 308)

  0x0000024807449cd0: movabs $0x2481fd5fb28,%rdi  ;   {metadata(method data for {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000024807449cda: incl   0x138(%rdi)
  0x0000024807449ce0: jmp    0x0000024807449ce8  ;*goto
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 308)

  0x0000024807449ce5: mov    %r9,%rsi
  0x0000024807449ce8: mov    %rsi,%r10
  0x0000024807449ceb: shr    $0x3,%r10
  0x0000024807449cef: mov    %r10d,0x10(%rdx)
  0x0000024807449cf3: shr    $0x9,%rdx
  0x0000024807449cf7: movabs $0x248130de000,%rsi
  0x0000024807449d01: movb   $0x0,(%rdx,%rsi,1)
  0x0000024807449d05: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 308)

  0x0000024807449d0a: add    $0x30,%rsp
  0x0000024807449d0e: pop    %rbp
  0x0000024807449d0f: test   %eax,-0x1e99c15(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807449d15: ret    
  0x0000024807449d16: mov    %rsi,0x8(%rsp)
  0x0000024807449d1b: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807449d23: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop r9=Oop off=360}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 306)
                                                ;   {runtime_call}
  0x0000024807449d28: jmp    0x0000024807449c1e
  0x0000024807449d2d: mov    %rsi,0x8(%rsp)
  0x0000024807449d32: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807449d3a: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop r9=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 306)
                                                ;   {runtime_call}
  0x0000024807449d3f: jmp    0x0000024807449c65
  0x0000024807449d44: nop
  0x0000024807449d45: nop
  0x0000024807449d46: mov    0x308(%r15),%rax
  0x0000024807449d4d: movabs $0x0,%r10
  0x0000024807449d57: mov    %r10,0x308(%r15)
  0x0000024807449d5e: movabs $0x0,%r10
  0x0000024807449d68: mov    %r10,0x310(%r15)
  0x0000024807449d6f: add    $0x30,%rsp
  0x0000024807449d73: pop    %rbp
  0x0000024807449d74: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807449d79: hlt    
  0x0000024807449d7a: hlt    
  0x0000024807449d7b: hlt    
  0x0000024807449d7c: hlt    
  0x0000024807449d7d: hlt    
  0x0000024807449d7e: hlt    
  0x0000024807449d7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807449d80: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807449d85: mov    %rsp,-0x28(%rsp)
  0x0000024807449d8a: sub    $0x80,%rsp
  0x0000024807449d91: mov    %rax,0x78(%rsp)
  0x0000024807449d96: mov    %rcx,0x70(%rsp)
  0x0000024807449d9b: mov    %rdx,0x68(%rsp)
  0x0000024807449da0: mov    %rbx,0x60(%rsp)
  0x0000024807449da5: mov    %rbp,0x50(%rsp)
  0x0000024807449daa: mov    %rsi,0x48(%rsp)
  0x0000024807449daf: mov    %rdi,0x40(%rsp)
  0x0000024807449db4: mov    %r8,0x38(%rsp)
  0x0000024807449db9: mov    %r9,0x30(%rsp)
  0x0000024807449dbe: mov    %r10,0x28(%rsp)
  0x0000024807449dc3: mov    %r11,0x20(%rsp)
  0x0000024807449dc8: mov    %r12,0x18(%rsp)
  0x0000024807449dcd: mov    %r13,0x10(%rsp)
  0x0000024807449dd2: mov    %r14,0x8(%rsp)
  0x0000024807449dd7: mov    %r15,(%rsp)
  0x0000024807449ddb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807449de5: movabs $0x24807449d85,%rdx  ;   {internal_word}
  0x0000024807449def: mov    %rsp,%r8
  0x0000024807449df2: and    $0xfffffffffffffff0,%rsp
  0x0000024807449df6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807449e00: call   *%r10
  0x0000024807449e03: hlt    
[Deopt Handler Code]
  0x0000024807449e04: movabs $0x24807449e04,%r10  ;   {section_word}
  0x0000024807449e0e: push   %r10
  0x0000024807449e10: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807449e15: hlt    
  0x0000024807449e16: hlt    
  0x0000024807449e17: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x0000024807449bc0' size='1232' address='0x0000024807449a50' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1064' dependencies_offset='1224' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='778' iicount='778' stamp='0.780'/>
<writer thread='27436'/>
<task_queued compile_id='35' method='java/lang/Class getName ()Ljava/lang/String;' bytes='21' count='384' iicount='384' level='3' stamp='0.780' comment='tiered' hot_count='384'/>
<task_queued compile_id='36' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='13696' backedge_count='10853' iicount='13696' stamp='0.780' comment='tiered' hot_count='13696'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074495d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb0c878} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807449740: mov    0x8(%rdx),%r10d
  0x0000024807449744: shl    $0x3,%r10
  0x0000024807449748: cmp    %rax,%r10
  0x000002480744974b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807449751: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744975c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807449760: mov    %eax,-0x6000(%rsp)
  0x0000024807449767: push   %rbp
  0x0000024807449768: sub    $0x30,%rsp
  0x000002480744976c: movabs $0x2481fe20790,%rsi  ;   {metadata(method data for {method} {0x000002481fb0c878} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807449776: mov    0xdc(%rsi),%edi
  0x000002480744977c: add    $0x8,%edi
  0x000002480744977f: mov    %edi,0xdc(%rsi)
  0x0000024807449785: movabs $0x2481fb0c870,%rsi  ;   {metadata({method} {0x000002481fb0c878} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/Class&apos;)}
  0x000002480744978f: and    $0x1ff8,%edi
  0x0000024807449795: cmp    $0x0,%edi
  0x0000024807449798: je     0x0000024807449838  ;*aload_0
                                                ; - java.lang.Class::getName@0 (line 640)

  0x000002480744979e: mov    0x14(%rdx),%esi
  0x00000248074497a1: shl    $0x3,%rsi          ;*getfield name
                                                ; - java.lang.Class::getName@1 (line 640)

  0x00000248074497a5: cmp    $0x0,%rsi
  0x00000248074497a9: movabs $0x2481fe20790,%rdi  ;   {metadata(method data for {method} {0x000002481fb0c878} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/Class&apos;)}
  0x00000248074497b3: movabs $0x108,%rbx
  0x00000248074497bd: jne    0x00000248074497cd
  0x00000248074497c3: movabs $0x118,%rbx
  0x00000248074497cd: mov    (%rdi,%rbx,1),%rax
  0x00000248074497d1: lea    0x1(%rax),%rax
  0x00000248074497d5: mov    %rax,(%rdi,%rbx,1)
  0x00000248074497d9: jne    0x0000024807449829  ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)

  0x00000248074497df: mov    %rdx,%rsi
  0x00000248074497e2: movabs $0x2481fe20790,%rdi  ;   {metadata(method data for {method} {0x000002481fb0c878} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/Class&apos;)}
  0x00000248074497ec: addq   $0x1,0x128(%rdi)
  0x00000248074497f4: mov    %rdx,%rsi
  0x00000248074497f7: mov    %rsi,%rdx          ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)

  0x00000248074497fa: mov    %rsi,0x20(%rsp)
  0x00000248074497ff: call   0x0000024807375ee0  ; OopMap{[32]=Oop off=196}
                                                ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ;   {optimized virtual_call}
  0x0000024807449804: mov    0x20(%rsp),%rdx
  0x0000024807449809: mov    %rax,%r10
  0x000002480744980c: shr    $0x3,%r10
  0x0000024807449810: mov    %r10d,0x14(%rdx)
  0x0000024807449814: shr    $0x9,%rdx
  0x0000024807449818: movabs $0x248130de000,%rsi
  0x0000024807449822: movb   $0x0,(%rdx,%rsi,1)  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)

  0x0000024807449826: mov    %rax,%rsi          ;*aload_1
                                                ; - java.lang.Class::getName@19 (line 643)

  0x0000024807449829: mov    %rsi,%rax
  0x000002480744982c: add    $0x30,%rsp
  0x0000024807449830: pop    %rbp
  0x0000024807449831: test   %eax,-0x1e99737(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807449837: ret    
  0x0000024807449838: mov    %rsi,0x8(%rsp)
  0x000002480744983d: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807449845: call   0x0000024807433da0  ; OopMap{rdx=Oop off=266}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getName@-1 (line 640)
                                                ;   {runtime_call}
  0x000002480744984a: jmp    0x000002480744979e
  0x000002480744984f: nop
  0x0000024807449850: nop
  0x0000024807449851: mov    0x308(%r15),%rax
  0x0000024807449858: movabs $0x0,%r10
  0x0000024807449862: mov    %r10,0x308(%r15)
  0x0000024807449869: movabs $0x0,%r10
  0x0000024807449873: mov    %r10,0x310(%r15)
  0x000002480744987a: add    $0x30,%rsp
  0x000002480744987e: pop    %rbp
  0x000002480744987f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807449884: hlt    
  0x0000024807449885: hlt    
  0x0000024807449886: hlt    
  0x0000024807449887: hlt    
  0x0000024807449888: hlt    
  0x0000024807449889: hlt    
  0x000002480744988a: hlt    
  0x000002480744988b: hlt    
  0x000002480744988c: hlt    
  0x000002480744988d: hlt    
  0x000002480744988e: hlt    
  0x000002480744988f: hlt    
  0x0000024807449890: hlt    
  0x0000024807449891: hlt    
  0x0000024807449892: hlt    
  0x0000024807449893: hlt    
  0x0000024807449894: hlt    
  0x0000024807449895: hlt    
  0x0000024807449896: hlt    
  0x0000024807449897: hlt    
  0x0000024807449898: hlt    
  0x0000024807449899: hlt    
  0x000002480744989a: hlt    
  0x000002480744989b: hlt    
  0x000002480744989c: hlt    
  0x000002480744989d: hlt    
  0x000002480744989e: hlt    
  0x000002480744989f: hlt    
[Stub Code]
  0x00000248074498a0: nop                       ;   {no_reloc}
  0x00000248074498a1: nop
  0x00000248074498a2: nop
  0x00000248074498a3: nop
  0x00000248074498a4: nop
  0x00000248074498a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074498af: jmp    0x00000248074498af  ;   {runtime_call}
[Exception Handler]
  0x00000248074498b4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074498b9: mov    %rsp,-0x28(%rsp)
  0x00000248074498be: sub    $0x80,%rsp
  0x00000248074498c5: mov    %rax,0x78(%rsp)
  0x00000248074498ca: mov    %rcx,0x70(%rsp)
  0x00000248074498cf: mov    %rdx,0x68(%rsp)
  0x00000248074498d4: mov    %rbx,0x60(%rsp)
  0x00000248074498d9: mov    %rbp,0x50(%rsp)
  0x00000248074498de: mov    %rsi,0x48(%rsp)
  0x00000248074498e3: mov    %rdi,0x40(%rsp)
  0x00000248074498e8: mov    %r8,0x38(%rsp)
  0x00000248074498ed: mov    %r9,0x30(%rsp)
  0x00000248074498f2: mov    %r10,0x28(%rsp)
  0x00000248074498f7: mov    %r11,0x20(%rsp)
  0x00000248074498fc: mov    %r12,0x18(%rsp)
  0x0000024807449901: mov    %r13,0x10(%rsp)
  0x0000024807449906: mov    %r14,0x8(%rsp)
  0x000002480744990b: mov    %r15,(%rsp)
  0x000002480744990f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807449919: movabs $0x248074498b9,%rdx  ;   {internal_word}
  0x0000024807449923: mov    %rsp,%r8
  0x0000024807449926: and    $0xfffffffffffffff0,%rsp
  0x000002480744992a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807449934: call   *%r10
  0x0000024807449937: hlt    
[Deopt Handler Code]
  0x0000024807449938: movabs $0x24807449938,%r10  ;   {section_word}
  0x0000024807449942: push   %r10
  0x0000024807449944: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807449949: hlt    
  0x000002480744994a: hlt    
  0x000002480744994b: hlt    
  0x000002480744994c: hlt    
  0x000002480744994d: hlt    
  0x000002480744994e: hlt    
  0x000002480744994f: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x0000024807449740' size='1136' address='0x00000248074495d0' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='904' scopes_pcs_offset='968' dependencies_offset='1128' method='java/lang/Class getName ()Ljava/lang/String;' bytes='21' count='391' iicount='391' stamp='0.787'/>
<writer thread='27436'/>
<task_queued compile_id='37' method='java/lang/String lastIndexOf (II)I' bytes='52' count='355' backedge_count='26624' iicount='355' level='3' stamp='0.789' comment='tiered' hot_count='355'/>
Decoding compiled method 0x000002480744a850:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe2bf90} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480744a980: mov    0x18(%rdi),%rbx
  0x000002480744a984: test   %rbx,%rbx
  0x000002480744a987: je     0x000002480744a990
  0x000002480744a98d: jmp    *0x40(%rbx)
  0x000002480744a990: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480744a995: hlt    
  0x000002480744a996: hlt    
  0x000002480744a997: hlt    
<nmethod compile_id='38' compile_kind='c2n' level='0' entry='0x000002480744a980' size='328' address='0x000002480744a850' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.791'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807448a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x0000024807448ba0: mov    0x8(%rdx),%r10d
  0x0000024807448ba4: shl    $0x3,%r10
  0x0000024807448ba8: cmp    %rax,%r10
  0x0000024807448bab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807448bb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807448bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807448bc0: mov    %eax,-0x6000(%rsp)
  0x0000024807448bc7: push   %rbp
  0x0000024807448bc8: sub    $0x40,%rsp
  0x0000024807448bcc: movabs $0x2481fd579e8,%rax  ;   {metadata(method data for {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448bd6: mov    0xdc(%rax),%esi
  0x0000024807448bdc: add    $0x8,%esi
  0x0000024807448bdf: mov    %esi,0xdc(%rax)
  0x0000024807448be5: movabs $0x2481fb053d0,%rax  ;   {metadata({method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448bef: and    $0x1ff8,%esi
  0x0000024807448bf5: cmp    $0x0,%esi
  0x0000024807448bf8: je     0x0000024807448e08  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x0000024807448bfe: cmp    $0x10000,%r8d
  0x0000024807448c05: movabs $0x2481fd579e8,%rax  ;   {metadata(method data for {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448c0f: movabs $0x108,%rsi
  0x0000024807448c19: jge    0x0000024807448c29
  0x0000024807448c1f: movabs $0x118,%rsi
  0x0000024807448c29: mov    (%rax,%rsi,1),%rdi
  0x0000024807448c2d: lea    0x1(%rdi),%rdi
  0x0000024807448c31: mov    %rdi,(%rax,%rsi,1)
  0x0000024807448c35: jge    0x0000024807448ddd  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x0000024807448c3b: mov    0xc(%rdx),%eax
  0x0000024807448c3e: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x0000024807448c42: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x0000024807448e1f
  0x0000024807448c45: dec    %edx
  0x0000024807448c47: movabs $0x2481fd579e8,%rsi  ;   {metadata(method data for {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448c51: addq   $0x1,0x128(%rsi)
  0x0000024807448c59: movabs $0x2481fd13600,%rsi  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807448c63: mov    0xdc(%rsi),%edi
  0x0000024807448c69: add    $0x8,%edi
  0x0000024807448c6c: mov    %edi,0xdc(%rsi)
  0x0000024807448c72: movabs $0x2481fbf7590,%rsi  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807448c7c: and    $0x7ffff8,%edi
  0x0000024807448c82: cmp    $0x0,%edi
  0x0000024807448c85: je     0x0000024807448e24
  0x0000024807448c8b: cmp    %edx,%r9d
  0x0000024807448c8e: movabs $0x2481fd13600,%rsi  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807448c98: movabs $0x108,%rdi
  0x0000024807448ca2: jg     0x0000024807448cb2
  0x0000024807448ca8: movabs $0x118,%rdi
  0x0000024807448cb2: mov    (%rsi,%rdi,1),%rbx
  0x0000024807448cb6: lea    0x1(%rbx),%rbx
  0x0000024807448cba: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807448cbe: jg     0x0000024807448cd9  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000024807448cc4: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807448cce: incl   0x128(%rdx)
  0x0000024807448cd4: jmp    0x0000024807448d7e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000024807448cd9: mov    %rdx,%r9
  0x0000024807448cdc: jmp    0x0000024807448d7e  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000024807448ce1: nopl   0x0(%rax)
  0x0000024807448ce8: movslq %r9d,%rdx
  0x0000024807448ceb: cmp    0xc(%rax),%r9d
  0x0000024807448cef: jae    0x0000024807448e3b
  0x0000024807448cf5: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000024807448cfa: cmp    %r8d,%edx
  0x0000024807448cfd: movabs $0x2481fd579e8,%rdx  ;   {metadata(method data for {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448d07: movabs $0x158,%rsi
  0x0000024807448d11: jne    0x0000024807448d21
  0x0000024807448d17: movabs $0x168,%rsi
  0x0000024807448d21: mov    (%rdx,%rsi,1),%rdi
  0x0000024807448d25: lea    0x1(%rdi),%rdi
  0x0000024807448d29: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807448d2d: je     0x0000024807448dbd  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000024807448d33: dec    %r9d
  0x0000024807448d36: movabs $0x2481fd579e8,%rdx  ;   {metadata(method data for {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448d40: mov    0xe0(%rdx),%esi
  0x0000024807448d46: add    $0x8,%esi
  0x0000024807448d49: mov    %esi,0xe0(%rdx)
  0x0000024807448d4f: movabs $0x2481fb053d0,%rdx  ;   {metadata({method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448d59: and    $0xfff8,%esi
  0x0000024807448d5f: cmp    $0x0,%esi
  0x0000024807448d62: je     0x0000024807448e44  ; OopMap{rax=Oop off=456}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000024807448d68: test   %eax,-0x1e98c6e(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807448d6e: movabs $0x2481fd579e8,%rdx  ;   {metadata(method data for {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448d78: incl   0x178(%rdx)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000024807448d7e: cmp    $0x0,%r9d
  0x0000024807448d82: movabs $0x2481fd579e8,%rdx  ;   {metadata(method data for {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448d8c: movabs $0x138,%rsi
  0x0000024807448d96: jl     0x0000024807448da6
  0x0000024807448d9c: movabs $0x148,%rsi
  0x0000024807448da6: mov    (%rdx,%rsi,1),%rdi
  0x0000024807448daa: lea    0x1(%rdi),%rdi
  0x0000024807448dae: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807448db2: jl     0x0000024807448dcc
  0x0000024807448db8: jmp    0x0000024807448ce8  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000024807448dbd: mov    %r9,%rax
  0x0000024807448dc0: add    $0x40,%rsp
  0x0000024807448dc4: pop    %rbp
  0x0000024807448dc5: test   %eax,-0x1e98ccb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807448dcb: ret                       ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x0000024807448dcc: mov    $0xffffffff,%eax
  0x0000024807448dd1: add    $0x40,%rsp
  0x0000024807448dd5: pop    %rbp
  0x0000024807448dd6: test   %eax,-0x1e98cdc(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807448ddc: ret                       ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x0000024807448ddd: mov    %rdx,%rsi
  0x0000024807448de0: movabs $0x2481fd579e8,%rdi  ;   {metadata(method data for {method} {0x000002481fb053d8} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807448dea: addq   $0x1,0x190(%rdi)
  0x0000024807448df2: nop
  0x0000024807448df3: nop
  0x0000024807448df4: nop
  0x0000024807448df5: nop
  0x0000024807448df6: nop
  0x0000024807448df7: call   0x0000024807375ee0  ; OopMap{off=604}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x0000024807448dfc: add    $0x40,%rsp
  0x0000024807448e00: pop    %rbp
  0x0000024807448e01: test   %eax,-0x1e98d07(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807448e07: ret    
  0x0000024807448e08: mov    %rax,0x8(%rsp)
  0x0000024807448e0d: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807448e15: call   0x0000024807433da0  ; OopMap{rdx=Oop off=634}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x0000024807448e1a: jmp    0x0000024807448bfe
  0x0000024807448e1f: call   0x000002480742f100  ; OopMap{rax=Oop off=644}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x0000024807448e24: mov    %rsi,0x8(%rsp)
  0x0000024807448e29: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807448e31: call   0x0000024807433da0  ; OopMap{rax=Oop off=662}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x0000024807448e36: jmp    0x0000024807448c8b
  0x0000024807448e3b: mov    %r9,(%rsp)
  0x0000024807448e3f: call   0x000002480742e800  ; OopMap{rax=Oop off=676}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x0000024807448e44: mov    %rdx,0x8(%rsp)
  0x0000024807448e49: movq   $0x28,(%rsp)
  0x0000024807448e51: call   0x0000024807433da0  ; OopMap{rax=Oop off=694}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x0000024807448e56: jmp    0x0000024807448d68
  0x0000024807448e5b: nop
  0x0000024807448e5c: nop
  0x0000024807448e5d: mov    0x308(%r15),%rax
  0x0000024807448e64: movabs $0x0,%r10
  0x0000024807448e6e: mov    %r10,0x308(%r15)
  0x0000024807448e75: movabs $0x0,%r10
  0x0000024807448e7f: mov    %r10,0x310(%r15)
  0x0000024807448e86: add    $0x40,%rsp
  0x0000024807448e8a: pop    %rbp
  0x0000024807448e8b: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807448e90: hlt    
  0x0000024807448e91: hlt    
  0x0000024807448e92: hlt    
  0x0000024807448e93: hlt    
  0x0000024807448e94: hlt    
  0x0000024807448e95: hlt    
  0x0000024807448e96: hlt    
  0x0000024807448e97: hlt    
  0x0000024807448e98: hlt    
  0x0000024807448e99: hlt    
  0x0000024807448e9a: hlt    
  0x0000024807448e9b: hlt    
  0x0000024807448e9c: hlt    
  0x0000024807448e9d: hlt    
  0x0000024807448e9e: hlt    
  0x0000024807448e9f: hlt    
[Stub Code]
  0x0000024807448ea0: nop                       ;   {no_reloc}
  0x0000024807448ea1: nop
  0x0000024807448ea2: nop
  0x0000024807448ea3: nop
  0x0000024807448ea4: nop
  0x0000024807448ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807448eaf: jmp    0x0000024807448eaf  ;   {runtime_call}
[Exception Handler]
  0x0000024807448eb4: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807448eb9: mov    %rsp,-0x28(%rsp)
  0x0000024807448ebe: sub    $0x80,%rsp
  0x0000024807448ec5: mov    %rax,0x78(%rsp)
  0x0000024807448eca: mov    %rcx,0x70(%rsp)
  0x0000024807448ecf: mov    %rdx,0x68(%rsp)
  0x0000024807448ed4: mov    %rbx,0x60(%rsp)
  0x0000024807448ed9: mov    %rbp,0x50(%rsp)
  0x0000024807448ede: mov    %rsi,0x48(%rsp)
  0x0000024807448ee3: mov    %rdi,0x40(%rsp)
  0x0000024807448ee8: mov    %r8,0x38(%rsp)
  0x0000024807448eed: mov    %r9,0x30(%rsp)
  0x0000024807448ef2: mov    %r10,0x28(%rsp)
  0x0000024807448ef7: mov    %r11,0x20(%rsp)
  0x0000024807448efc: mov    %r12,0x18(%rsp)
  0x0000024807448f01: mov    %r13,0x10(%rsp)
  0x0000024807448f06: mov    %r14,0x8(%rsp)
  0x0000024807448f0b: mov    %r15,(%rsp)
  0x0000024807448f0f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807448f19: movabs $0x24807448eb9,%rdx  ;   {internal_word}
  0x0000024807448f23: mov    %rsp,%r8
  0x0000024807448f26: and    $0xfffffffffffffff0,%rsp
  0x0000024807448f2a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807448f34: call   *%r10
  0x0000024807448f37: hlt    
[Deopt Handler Code]
  0x0000024807448f38: movabs $0x24807448f38,%r10  ;   {section_word}
  0x0000024807448f42: push   %r10
  0x0000024807448f44: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807448f49: hlt    
  0x0000024807448f4a: hlt    
  0x0000024807448f4b: hlt    
  0x0000024807448f4c: hlt    
  0x0000024807448f4d: hlt    
  0x0000024807448f4e: hlt    
  0x0000024807448f4f: hlt    
<nmethod compile_id='37' compiler='C1' level='3' entry='0x0000024807448ba0' size='1920' address='0x0000024807448a10' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1360' scopes_pcs_offset='1544' dependencies_offset='1896' nul_chk_table_offset='1904' method='java/lang/String lastIndexOf (II)I' bytes='52' count='356' backedge_count='26654' iicount='356' stamp='0.804'/>
<writer thread='13612'/>
Decoding compiled method 0x0000024807448210:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb04620} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807448360: mov    0x8(%rdx),%r10d
  0x0000024807448364: shl    $0x3,%r10
  0x0000024807448368: cmp    %r10,%rax
  0x000002480744836b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807448371: data16 xchg %ax,%ax
  0x0000024807448374: nopl   0x0(%rax,%rax,1)
  0x000002480744837c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807448380: mov    %eax,-0x6000(%rsp)
  0x0000024807448387: push   %rbp
  0x0000024807448388: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000002480744838c: cmp    %r8,%rdx
  0x000002480744838f: je     0x00000248074483c7  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000024807448391: mov    0x8(%r8),%r10d     ; implicit exception: dispatches to 0x000002480744855d
  0x0000024807448395: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000002480744839c: jne    0x0000024807448549  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00000248074483a2: mov    0xc(%rdx),%r14d    ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x00000248074483a6: mov    0xc(%r12,%r14,8),%edx  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ; implicit exception: dispatches to 0x000002480744856d
  0x00000248074483ab: mov    0xc(%r8),%r9d      ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x00000248074483af: mov    0xc(%r12,%r9,8),%r8d  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000024807448579
  0x00000248074483b4: xor    %eax,%eax
  0x00000248074483b6: cmp    %r8d,%edx
  0x00000248074483b9: je     0x00000248074483ce  ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x00000248074483bb: add    $0x30,%rsp
  0x00000248074483bf: pop    %rbp
  0x00000248074483c0: test   %eax,-0x1e983c6(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x00000248074483c6: ret    
  0x00000248074483c7: mov    $0x1,%eax
  0x00000248074483cc: jmp    0x00000248074483bb
  0x00000248074483ce: test   %edx,%edx
  0x00000248074483d0: je     0x0000024807448505  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000248074483d6: mov    %edx,%ebp
  0x00000248074483d8: dec    %ebp               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000248074483da: movslq %edx,%r13
  0x00000248074483dd: lea    (%r12,%r14,8),%r10
  0x00000248074483e1: lea    (%r12,%r9,8),%r11
  0x00000248074483e5: mov    %edx,%esi
  0x00000248074483e7: add    $0xfffffffe,%esi
  0x00000248074483ea: mov    $0xffffffff,%edi
  0x00000248074483ef: cmp    %edi,%esi
  0x00000248074483f1: cmovl  %edi,%esi
  0x00000248074483f4: mov    %ebp,%ebx
  0x00000248074483f6: mov    %ebp,%ecx
  0x00000248074483f8: sub    %ebx,%ecx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000248074483fa: cmp    %edx,%ecx
  0x00000248074483fc: jae    0x000002480744850f
  0x0000024807448402: vmovq  %r13,%xmm0
  0x0000024807448407: vmovd  %ebp,%xmm1
  0x000002480744840b: movslq %ebx,%rbp
  0x000002480744840e: sub    %rbp,%r13
  0x0000024807448411: movzwl 0xe(%r10,%r13,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000024807448417: cmp    %r8d,%ecx
  0x000002480744841a: jae    0x000002480744852d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000024807448420: movzwl 0xe(%r11,%r13,2),%ecx
  0x0000024807448426: cmp    %ecx,%ebp
  0x0000024807448428: jne    0x00000248074483bb  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000002480744842a: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000002480744842c: cmp    %esi,%ebx
  0x000002480744842e: jle    0x000002480744843b  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000024807448430: vmovd  %xmm1,%ebp
  0x0000024807448434: vmovq  %xmm0,%r13
  0x0000024807448439: jmp    0x00000248074483f6
  0x000002480744843b: movslq %r8d,%rcx
  0x000002480744843e: vmovq  %xmm0,%rsi
  0x0000024807448443: sub    %rcx,%rsi
  0x0000024807448446: mov    %esi,%ebp
  0x0000024807448448: dec    %ebp
  0x000002480744844a: cmp    %edi,%ebp
  0x000002480744844c: cmovl  %edi,%ebp
  0x000002480744844f: mov    %ebp,%esi
  0x0000024807448451: add    $0x3,%esi
  0x0000024807448454: mov    $0x7fffffff,%ecx
  0x0000024807448459: cmp    %esi,%ebp
  0x000002480744845b: cmovg  %ecx,%esi
  0x000002480744845e: cmp    %esi,%ebx
  0x0000024807448460: jle    0x00000248074484cb  ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000024807448462: movslq %ebx,%rcx
  0x0000024807448465: vmovq  %xmm0,%rbp
  0x000002480744846a: sub    %rcx,%rbp          ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000002480744846d: movzwl 0xe(%r11,%rbp,2),%edi  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000024807448473: movzwl 0xe(%r10,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000024807448479: cmp    %edi,%ecx
  0x000002480744847b: jne    0x00000248074483bb  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000024807448481: movzwl 0x10(%r11,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000024807448487: movzwl 0x10(%r10,%rbp,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000002480744848d: cmp    %ecx,%ebp
  0x000002480744848f: jne    0x00000248074483bb  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000024807448495: mov    %edx,%ecx
  0x0000024807448497: sub    %ebx,%ecx
  0x0000024807448499: movslq %ecx,%r13
  0x000002480744849c: movzwl 0x12(%r10,%r13,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000248074484a2: movzwl 0x12(%r11,%r13,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000248074484a8: cmp    %ebp,%ecx
  0x00000248074484aa: jne    0x00000248074483bb  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000248074484b0: movzwl 0x14(%r11,%r13,2),%edi  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000248074484b6: movzwl 0x14(%r10,%r13,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000248074484bc: cmp    %edi,%ecx
  0x00000248074484be: jne    0x00000248074483bb  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000248074484c4: add    $0xfffffffc,%ebx   ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000248074484c7: cmp    %esi,%ebx
  0x00000248074484c9: jg     0x0000024807448462  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000248074484cb: cmp    $0xffffffff,%ebx
  0x00000248074484ce: je     0x0000024807448505
  0x00000248074484d0: vmovd  %xmm1,%ecx
  0x00000248074484d4: sub    %ebx,%ecx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000248074484d6: cmp    %edx,%ecx
  0x00000248074484d8: jae    0x000002480744850f
  0x00000248074484da: movslq %ebx,%rsi
  0x00000248074484dd: vmovq  %xmm0,%rdi
  0x00000248074484e2: sub    %rsi,%rdi
  0x00000248074484e5: movzwl 0xe(%r10,%rdi,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000248074484eb: cmp    %r8d,%ecx
  0x00000248074484ee: jae    0x000002480744852d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000248074484f0: movzwl 0xe(%r11,%rdi,2),%edi
  0x00000248074484f6: cmp    %edi,%ebp
  0x00000248074484f8: jne    0x00000248074483bb  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000248074484fe: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000024807448500: cmp    $0xffffffff,%ebx
  0x0000024807448503: jne    0x00000248074484d0  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x0000024807448505: mov    $0x1,%eax
  0x000002480744850a: jmp    0x00000248074483bb
  0x000002480744850f: mov    $0xffffffe4,%edx
  0x0000024807448514: mov    %ebx,%ebp
  0x0000024807448516: mov    %r9d,0x4(%rsp)
  0x000002480744851b: mov    %r14d,0xc(%rsp)
  0x0000024807448520: mov    %ecx,0x10(%rsp)
  0x0000024807448524: data16 xchg %ax,%ax
  0x0000024807448527: call   0x00000248073754e0  ; OopMap{[4]=NarrowOop [12]=NarrowOop off=460}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000002480744852c: int3                      ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000002480744852d: mov    $0xffffffe4,%edx
  0x0000024807448532: mov    %ebx,(%rsp)
  0x0000024807448535: mov    %r14d,0x4(%rsp)
  0x000002480744853a: mov    %r9d,0x10(%rsp)
  0x000002480744853f: mov    %ecx,0x14(%rsp)
  0x0000024807448543: call   0x00000248073754e0  ; OopMap{[4]=NarrowOop [16]=NarrowOop off=488}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000024807448548: int3                      ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000024807448549: mov    %rdx,%rbp
  0x000002480744854c: mov    %r8,0x8(%rsp)
  0x0000024807448551: mov    $0xffffffde,%edx
  0x0000024807448556: nop
  0x0000024807448557: call   0x00000248073754e0  ; OopMap{rbp=Oop [8]=Oop off=508}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000002480744855c: int3   
  0x000002480744855d: mov    %rdx,%rbp
  0x0000024807448560: mov    $0xfffffff4,%edx
  0x0000024807448565: xchg   %ax,%ax
  0x0000024807448567: call   0x00000248073754e0  ; OopMap{rbp=Oop off=524}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000002480744856c: int3                      ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000002480744856d: mov    $0xfffffff6,%edx
  0x0000024807448572: nop
  0x0000024807448573: call   0x00000248073754e0  ; OopMap{off=536}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000024807448578: int3                      ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x0000024807448579: mov    $0xfffffff6,%edx
  0x000002480744857e: nop
  0x000002480744857f: call   0x00000248073754e0  ; OopMap{off=548}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000024807448584: int3                      ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x0000024807448585: hlt    
  0x0000024807448586: hlt    
  0x0000024807448587: hlt    
  0x0000024807448588: hlt    
  0x0000024807448589: hlt    
  0x000002480744858a: hlt    
  0x000002480744858b: hlt    
  0x000002480744858c: hlt    
  0x000002480744858d: hlt    
  0x000002480744858e: hlt    
  0x000002480744858f: hlt    
  0x0000024807448590: hlt    
  0x0000024807448591: hlt    
  0x0000024807448592: hlt    
  0x0000024807448593: hlt    
  0x0000024807448594: hlt    
  0x0000024807448595: hlt    
  0x0000024807448596: hlt    
  0x0000024807448597: hlt    
  0x0000024807448598: hlt    
  0x0000024807448599: hlt    
  0x000002480744859a: hlt    
  0x000002480744859b: hlt    
  0x000002480744859c: hlt    
  0x000002480744859d: hlt    
  0x000002480744859e: hlt    
  0x000002480744859f: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074485a0: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000248074485a5: call   0x00000248074485aa
  0x00000248074485aa: subq   $0x5,(%rsp)
  0x00000248074485af: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074485b4: hlt    
  0x00000248074485b5: hlt    
  0x00000248074485b6: hlt    
  0x00000248074485b7: hlt    
<nmethod compile_id='36' compiler='C2' level='4' entry='0x0000024807448360' size='2032' address='0x0000024807448210' relocation_offset='288' insts_offset='336' stub_offset='912' scopes_data_offset='952' scopes_pcs_offset='1176' dependencies_offset='1992' nul_chk_table_offset='2000' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='13705' backedge_count='10869' iicount='13705' stamp='0.815'/>
<writer thread='27436'/>
<task_queued compile_id='39' method='java/lang/reflect/Method getName ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.816' comment='tiered' hot_count='128'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807447f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb42f70} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/reflect/Method&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807448060: mov    0x8(%rdx),%r10d
  0x0000024807448064: shl    $0x3,%r10
  0x0000024807448068: cmp    %rax,%r10
  0x000002480744806b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807448071: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744807c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807448080: mov    %eax,-0x6000(%rsp)
  0x0000024807448087: push   %rbp
  0x0000024807448088: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.reflect.Method::getName@0 (line 194)

  0x000002480744808c: mov    0x2c(%rdx),%eax
  0x000002480744808f: shl    $0x3,%rax          ;*getfield name
                                                ; - java.lang.reflect.Method::getName@1 (line 194)

  0x0000024807448093: add    $0x30,%rsp
  0x0000024807448097: pop    %rbp
  0x0000024807448098: test   %eax,-0x1e97f9e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744809e: ret    
  0x000002480744809f: nop
  0x00000248074480a0: nop
  0x00000248074480a1: mov    0x308(%r15),%rax
  0x00000248074480a8: movabs $0x0,%r10
  0x00000248074480b2: mov    %r10,0x308(%r15)
  0x00000248074480b9: movabs $0x0,%r10
  0x00000248074480c3: mov    %r10,0x310(%r15)
  0x00000248074480ca: add    $0x30,%rsp
  0x00000248074480ce: pop    %rbp
  0x00000248074480cf: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074480d4: hlt    
  0x00000248074480d5: hlt    
  0x00000248074480d6: hlt    
  0x00000248074480d7: hlt    
  0x00000248074480d8: hlt    
  0x00000248074480d9: hlt    
  0x00000248074480da: hlt    
  0x00000248074480db: hlt    
  0x00000248074480dc: hlt    
  0x00000248074480dd: hlt    
  0x00000248074480de: hlt    
  0x00000248074480df: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074480e0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074480e5: mov    %rsp,-0x28(%rsp)
  0x00000248074480ea: sub    $0x80,%rsp
  0x00000248074480f1: mov    %rax,0x78(%rsp)
  0x00000248074480f6: mov    %rcx,0x70(%rsp)
  0x00000248074480fb: mov    %rdx,0x68(%rsp)
  0x0000024807448100: mov    %rbx,0x60(%rsp)
  0x0000024807448105: mov    %rbp,0x50(%rsp)
  0x000002480744810a: mov    %rsi,0x48(%rsp)
  0x000002480744810f: mov    %rdi,0x40(%rsp)
  0x0000024807448114: mov    %r8,0x38(%rsp)
  0x0000024807448119: mov    %r9,0x30(%rsp)
  0x000002480744811e: mov    %r10,0x28(%rsp)
  0x0000024807448123: mov    %r11,0x20(%rsp)
  0x0000024807448128: mov    %r12,0x18(%rsp)
  0x000002480744812d: mov    %r13,0x10(%rsp)
  0x0000024807448132: mov    %r14,0x8(%rsp)
  0x0000024807448137: mov    %r15,(%rsp)
  0x000002480744813b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807448145: movabs $0x248074480e5,%rdx  ;   {internal_word}
  0x000002480744814f: mov    %rsp,%r8
  0x0000024807448152: and    $0xfffffffffffffff0,%rsp
  0x0000024807448156: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807448160: call   *%r10
  0x0000024807448163: hlt    
[Deopt Handler Code]
  0x0000024807448164: movabs $0x24807448164,%r10  ;   {section_word}
  0x000002480744816e: push   %r10
  0x0000024807448170: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807448175: hlt    
  0x0000024807448176: hlt    
  0x0000024807448177: hlt    
<nmethod compile_id='39' compiler='C1' level='1' entry='0x0000024807448060' size='712' address='0x0000024807447f10' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/reflect/Method getName ()Ljava/lang/String;' bytes='5' count='372' iicount='372' stamp='0.820'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807441b10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe2dca8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807441c40: mov    0x18(%r8),%rbx
  0x0000024807441c44: test   %rbx,%rbx
  0x0000024807441c47: je     0x0000024807441c50
  0x0000024807441c4d: jmp    *0x40(%rbx)
  0x0000024807441c50: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807441c55: hlt    
  0x0000024807441c56: hlt    
  0x0000024807441c57: hlt    
<nmethod compile_id='40' compile_kind='c2n' level='0' entry='0x0000024807441c40' size='328' address='0x0000024807441b10' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.821'/>
<task_queued compile_id='41' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='181' backedge_count='13312' iicount='181' level='3' stamp='0.823' comment='tiered' hot_count='181'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480744fc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = char
  # parm1:    r9        = char
  #           [sp+0x60]  (sp of caller)
  0x000002480744fdc0: mov    0x8(%rdx),%r10d
  0x000002480744fdc4: shl    $0x3,%r10
  0x000002480744fdc8: cmp    %rax,%r10
  0x000002480744fdcb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744fdd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744fddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744fde0: mov    %eax,-0x6000(%rsp)
  0x000002480744fde7: push   %rbp
  0x000002480744fde8: sub    $0x50,%rsp
  0x000002480744fdec: movabs $0x2481fe42930,%rbx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744fdf6: mov    0xdc(%rbx),%esi
  0x000002480744fdfc: add    $0x8,%esi
  0x000002480744fdff: mov    %esi,0xdc(%rbx)
  0x000002480744fe05: movabs $0x2481fb05f38,%rbx  ;   {metadata({method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744fe0f: and    $0x1ff8,%esi
  0x000002480744fe15: cmp    $0x0,%esi
  0x000002480744fe18: je     0x00000248074502bf  ;*iload_1
                                                ; - java.lang.String::replace@0 (line 2067)

  0x000002480744fe1e: cmp    %r9d,%r8d
  0x000002480744fe21: movabs $0x2481fe42930,%rbx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744fe2b: movabs $0x108,%rsi
  0x000002480744fe35: je     0x000002480744fe45
  0x000002480744fe3b: movabs $0x118,%rsi
  0x000002480744fe45: mov    (%rbx,%rsi,1),%rdi
  0x000002480744fe49: lea    0x1(%rdi),%rdi
  0x000002480744fe4d: mov    %rdi,(%rbx,%rsi,1)
  0x000002480744fe51: je     0x00000248074502b0  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x000002480744fe57: mov    0xc(%rdx),%r11d
  0x000002480744fe5b: shl    $0x3,%r11          ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x000002480744fe5f: mov    0xc(%r11),%r13d    ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x00000248074502d6
  0x000002480744fe63: mov    $0xffffffff,%ebx
  0x000002480744fe68: jmp    0x000002480744fef7  ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000002480744fe6d: data16 xchg %ax,%ax
  0x000002480744fe70: movslq %r14d,%rbx
  0x000002480744fe73: cmp    0xc(%r11),%r14d
  0x000002480744fe77: jae    0x00000248074502db
  0x000002480744fe7d: movzwl 0x10(%r11,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000002480744fe83: movabs $0x2481fe42930,%rsi  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744fe8d: mov    0xe0(%rsi),%edi
  0x000002480744fe93: add    $0x8,%edi
  0x000002480744fe96: mov    %edi,0xe0(%rsi)
  0x000002480744fe9c: movabs $0x2481fb05f38,%rsi  ;   {metadata({method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744fea6: and    $0xfff8,%edi
  0x000002480744feac: cmp    $0x0,%edi
  0x000002480744feaf: je     0x00000248074502e4  ; OopMap{rdx=Oop r11=Oop off=245}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000002480744feb5: test   %eax,-0x1e9fdbb(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480744febb: cmp    %r8d,%ebx
  0x000002480744febe: movabs $0x2481fe42930,%rbx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744fec8: movabs $0x148,%rsi
  0x000002480744fed2: jne    0x000002480744fee2
  0x000002480744fed8: movabs $0x158,%rsi
  0x000002480744fee2: mov    (%rbx,%rsi,1),%rdi
  0x000002480744fee6: lea    0x1(%rdi),%rdi
  0x000002480744feea: mov    %rdi,(%rbx,%rsi,1)
  0x000002480744feee: je     0x000002480744ff3b  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000002480744fef4: mov    %r14,%rbx          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000002480744fef7: mov    %rbx,%r14
  0x000002480744fefa: inc    %r14d
  0x000002480744fefd: cmp    %r13d,%r14d
  0x000002480744ff00: movabs $0x2481fe42930,%rbx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744ff0a: movabs $0x128,%rsi
  0x000002480744ff14: jge    0x000002480744ff24
  0x000002480744ff1a: movabs $0x138,%rsi
  0x000002480744ff24: mov    (%rbx,%rsi,1),%rdi
  0x000002480744ff28: lea    0x1(%rdi),%rdi
  0x000002480744ff2c: mov    %rdi,(%rbx,%rsi,1)
  0x000002480744ff30: jge    0x000002480744ff4b
  0x000002480744ff36: jmp    0x000002480744fe70  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000002480744ff3b: movabs $0x2481fe42930,%rbx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744ff45: incl   0x168(%rbx)        ;*goto
                                                ; - java.lang.String::replace@38 (line 2074)

  0x000002480744ff4b: cmp    %r13d,%r14d
  0x000002480744ff4e: movabs $0x2481fe42930,%rbx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480744ff58: movabs $0x180,%rsi
  0x000002480744ff62: jge    0x000002480744ff72
  0x000002480744ff68: movabs $0x190,%rsi
  0x000002480744ff72: mov    (%rbx,%rsi,1),%rdi
  0x000002480744ff76: lea    0x1(%rdi),%rdi
  0x000002480744ff7a: mov    %rdi,(%rbx,%rsi,1)
  0x000002480744ff7e: jge    0x00000248074502b0  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x000002480744ff84: mov    %r13,%rbx
  0x000002480744ff87: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480744ff91: movslq %ebx,%rbx
  0x000002480744ff94: mov    %rbx,%rdi
  0x000002480744ff97: cmp    $0xffffff,%rbx
  0x000002480744ff9e: ja     0x00000248074502fb
  0x000002480744ffa4: movabs $0x17,%rsi
  0x000002480744ffae: lea    (%rsi,%rbx,2),%rsi
  0x000002480744ffb2: and    $0xfffffffffffffff8,%rsi
  0x000002480744ffb6: mov    0x60(%r15),%rax
  0x000002480744ffba: lea    (%rax,%rsi,1),%rsi
  0x000002480744ffbe: cmp    0x70(%r15),%rsi
  0x000002480744ffc2: ja     0x00000248074502fb
  0x000002480744ffc8: mov    %rsi,0x60(%r15)
  0x000002480744ffcc: sub    %rax,%rsi
  0x000002480744ffcf: movq   $0x1,(%rax)
  0x000002480744ffd6: mov    %rdx,%rcx
  0x000002480744ffd9: shr    $0x3,%rcx
  0x000002480744ffdd: mov    %ecx,0x8(%rax)
  0x000002480744ffe0: mov    %ebx,0xc(%rax)
  0x000002480744ffe3: sub    $0x10,%rsi
  0x000002480744ffe7: je     0x000002480744fffe
  0x000002480744ffed: xor    %rbx,%rbx
  0x000002480744fff0: shr    $0x3,%rsi
  0x000002480744fff4: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480744fff9: dec    %rsi
  0x000002480744fffc: jne    0x000002480744fff4
  0x000002480744fffe: mov    %rax,%rbx          ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x0000024807450001: mov    $0x0,%edx
  0x0000024807450006: jmp    0x000002480745007e  ;*iload
                                                ; - java.lang.String::replace@55 (line 2079)

  0x000002480745000b: nopl   0x0(%rax,%rax,1)
  0x0000024807450010: movslq %edx,%rsi
  0x0000024807450013: cmp    0xc(%r11),%edx
  0x0000024807450017: jae    0x0000024807450305
  0x000002480745001d: movzwl 0x10(%r11,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)

  0x0000024807450023: movslq %edx,%rdi
  0x0000024807450026: cmp    0xc(%rbx),%edx
  0x0000024807450029: jae    0x000002480745030e
  0x000002480745002f: mov    %si,0x10(%rbx,%rdi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x0000024807450034: inc    %edx
  0x0000024807450036: movabs $0x2481fe42930,%rsi  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450040: mov    0xe0(%rsi),%edi
  0x0000024807450046: add    $0x8,%edi
  0x0000024807450049: mov    %edi,0xe0(%rsi)
  0x000002480745004f: movabs $0x2481fb05f38,%rsi  ;   {metadata({method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450059: and    $0xfff8,%edi
  0x000002480745005f: cmp    $0x0,%edi
  0x0000024807450062: je     0x0000024807450317  ; OopMap{r11=Oop rbx=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x0000024807450068: test   %eax,-0x1e9ff6e(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480745006e: movabs $0x2481fe42930,%rsi  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450078: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x000002480745007e: cmp    %r14d,%edx
  0x0000024807450081: movabs $0x2481fe42930,%rsi  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480745008b: movabs $0x1a0,%rdi
  0x0000024807450095: jge    0x00000248074500a5
  0x000002480745009b: movabs $0x1b0,%rdi
  0x00000248074500a5: mov    (%rsi,%rdi,1),%rax
  0x00000248074500a9: lea    0x1(%rax),%rax
  0x00000248074500ad: mov    %rax,(%rsi,%rdi,1)
  0x00000248074500b1: jge    0x000002480745017c
  0x00000248074500b7: jmp    0x0000024807450010  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x00000248074500bc: nopl   0x0(%rax)
  0x00000248074500c0: movslq %r14d,%rdx
  0x00000248074500c3: cmp    0xc(%r11),%r14d
  0x00000248074500c7: jae    0x000002480745032e
  0x00000248074500cd: movzwl 0x10(%r11,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x00000248074500d3: cmp    %r8d,%edx
  0x00000248074500d6: movabs $0x2481fe42930,%rsi  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000248074500e0: movabs $0x1f8,%rdi
  0x00000248074500ea: jne    0x00000248074500fa
  0x00000248074500f0: movabs $0x208,%rdi
  0x00000248074500fa: mov    (%rsi,%rdi,1),%rax
  0x00000248074500fe: lea    0x1(%rax),%rax
  0x0000024807450102: mov    %rax,(%rsi,%rdi,1)
  0x0000024807450106: jne    0x000002480745011f  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x000002480745010c: movabs $0x2481fe42930,%rdx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450116: incl   0x218(%rdx)
  0x000002480745011c: mov    %r9,%rdx           ;*goto
                                                ; - java.lang.String::replace@102 (line 2084)

  0x000002480745011f: movslq %r14d,%rsi
  0x0000024807450122: cmp    0xc(%rbx),%r14d
  0x0000024807450126: jae    0x0000024807450337
  0x000002480745012c: mov    %dx,0x10(%rbx,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000024807450131: inc    %r14d
  0x0000024807450134: movabs $0x2481fe42930,%rdx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480745013e: mov    0xe0(%rdx),%esi
  0x0000024807450144: add    $0x8,%esi
  0x0000024807450147: mov    %esi,0xe0(%rdx)
  0x000002480745014d: movabs $0x2481fb05f38,%rdx  ;   {metadata({method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450157: and    $0xfff8,%esi
  0x000002480745015d: cmp    $0x0,%esi
  0x0000024807450160: je     0x0000024807450340  ; OopMap{r11=Oop rbx=Oop off=934}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x0000024807450166: test   %eax,-0x1ea006c(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480745016c: movabs $0x2481fe42930,%rdx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450176: incl   0x230(%rdx)        ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x000002480745017c: cmp    %r13d,%r14d
  0x000002480745017f: movabs $0x2481fe42930,%rdx  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450189: movabs $0x1d8,%rsi
  0x0000024807450193: jge    0x00000248074501a3
  0x0000024807450199: movabs $0x1e8,%rsi
  0x00000248074501a3: mov    (%rdx,%rsi,1),%rdi
  0x00000248074501a7: lea    0x1(%rdi),%rdi
  0x00000248074501ab: mov    %rdi,(%rdx,%rsi,1)
  0x00000248074501af: jl     0x00000248074500c0  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x00000248074501b5: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000248074501bf: mov    0x60(%r15),%rax
  0x00000248074501c3: lea    0x18(%rax),%rdi
  0x00000248074501c7: cmp    0x70(%r15),%rdi
  0x00000248074501cb: ja     0x0000024807450357
  0x00000248074501d1: mov    %rdi,0x60(%r15)
  0x00000248074501d5: mov    0xa8(%rdx),%rcx
  0x00000248074501dc: mov    %rcx,(%rax)
  0x00000248074501df: mov    %rdx,%rcx
  0x00000248074501e2: shr    $0x3,%rcx
  0x00000248074501e6: mov    %ecx,0x8(%rax)
  0x00000248074501e9: xor    %rcx,%rcx
  0x00000248074501ec: mov    %ecx,0xc(%rax)
  0x00000248074501ef: xor    %rcx,%rcx
  0x00000248074501f2: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x00000248074501f6: mov    %rax,%rsi
  0x00000248074501f9: movabs $0x2481fe42930,%rdi  ;   {metadata(method data for {method} {0x000002481fb05f40} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450203: addq   $0x1,0x248(%rdi)
  0x000002480745020b: movabs $0x2481fd6b4d8,%rsi  ;   {metadata(method data for {method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000024807450215: mov    0xdc(%rsi),%edi
  0x000002480745021b: add    $0x8,%edi
  0x000002480745021e: mov    %edi,0xdc(%rsi)
  0x0000024807450224: movabs $0x2481fb03bc8,%rsi  ;   {metadata({method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480745022e: and    $0x7ffff8,%edi
  0x0000024807450234: cmp    $0x0,%edi
  0x0000024807450237: je     0x0000024807450364
  0x000002480745023d: mov    %rax,%rsi
  0x0000024807450240: movabs $0x2481fd6b4d8,%rdi  ;   {metadata(method data for {method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480745024a: addq   $0x1,0x108(%rdi)
  0x0000024807450252: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480745025c: mov    0xdc(%rsi),%edi
  0x0000024807450262: add    $0x8,%edi
  0x0000024807450265: mov    %edi,0xdc(%rsi)
  0x000002480745026b: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807450275: and    $0x7ffff8,%edi
  0x000002480745027b: cmp    $0x0,%edi
  0x000002480745027e: je     0x000002480745037b
  0x0000024807450284: mov    %rbx,%r10
  0x0000024807450287: shr    $0x3,%r10
  0x000002480745028b: mov    %r10d,0xc(%rax)
  0x000002480745028f: mov    %rax,%rsi
  0x0000024807450292: shr    $0x9,%rsi
  0x0000024807450296: movabs $0x248130de000,%rdi
  0x00000248074502a0: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.String::replace@121 (line 2087)

  0x00000248074502a4: add    $0x50,%rsp
  0x00000248074502a8: pop    %rbp
  0x00000248074502a9: test   %eax,-0x1ea01af(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074502af: ret                       ;*areturn
                                                ; - java.lang.String::replace@124 (line 2087)

  0x00000248074502b0: mov    %rdx,%rax
  0x00000248074502b3: add    $0x50,%rsp
  0x00000248074502b7: pop    %rbp
  0x00000248074502b8: test   %eax,-0x1ea01be(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074502be: ret    
  0x00000248074502bf: mov    %rbx,0x8(%rsp)
  0x00000248074502c4: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074502cc: call   0x0000024807433da0  ; OopMap{rdx=Oop off=1297}
                                                ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)
                                                ;   {runtime_call}
  0x00000248074502d1: jmp    0x000002480744fe1e
  0x00000248074502d6: call   0x000002480742f100  ; OopMap{rdx=Oop r11=Oop off=1307}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x00000248074502db: mov    %r14,(%rsp)
  0x00000248074502df: call   0x000002480742e800  ; OopMap{rdx=Oop r11=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)
                                                ;   {runtime_call}
  0x00000248074502e4: mov    %rsi,0x8(%rsp)
  0x00000248074502e9: movq   $0x23,(%rsp)
  0x00000248074502f1: call   0x0000024807433da0  ; OopMap{rdx=Oop r11=Oop off=1334}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)
                                                ;   {runtime_call}
  0x00000248074502f6: jmp    0x000002480744feb5
  0x00000248074502fb: call   0x0000024807430280  ; OopMap{r11=Oop off=1344}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x0000024807450300: jmp    0x000002480744fffe
  0x0000024807450305: mov    %rdx,(%rsp)
  0x0000024807450309: call   0x000002480742e800  ; OopMap{r11=Oop rbx=Oop off=1358}
                                                ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)
                                                ;   {runtime_call}
  0x000002480745030e: mov    %rdx,(%rsp)
  0x0000024807450312: call   0x000002480742e800  ; OopMap{r11=Oop rbx=Oop off=1367}
                                                ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)
                                                ;   {runtime_call}
  0x0000024807450317: mov    %rsi,0x8(%rsp)
  0x000002480745031c: movq   $0x4b,(%rsp)
  0x0000024807450324: call   0x0000024807433da0  ; OopMap{r11=Oop rbx=Oop off=1385}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)
                                                ;   {runtime_call}
  0x0000024807450329: jmp    0x0000024807450068
  0x000002480745032e: mov    %r14,(%rsp)
  0x0000024807450332: call   0x000002480742e800  ; OopMap{r11=Oop rbx=Oop off=1399}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x0000024807450337: mov    %r14,(%rsp)
  0x000002480745033b: call   0x000002480742e800  ; OopMap{r11=Oop rbx=Oop off=1408}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x0000024807450340: mov    %rdx,0x8(%rsp)
  0x0000024807450345: movq   $0x6f,(%rsp)
  0x000002480745034d: call   0x0000024807433da0  ; OopMap{r11=Oop rbx=Oop off=1426}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)
                                                ;   {runtime_call}
  0x0000024807450352: jmp    0x0000024807450166
  0x0000024807450357: mov    %rdx,%rdx
  0x000002480745035a: call   0x000002480742f900  ; OopMap{rbx=Oop off=1439}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x000002480745035f: jmp    0x00000248074501f6
  0x0000024807450364: mov    %rsi,0x8(%rsp)
  0x0000024807450369: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807450371: call   0x0000024807433da0  ; OopMap{rbx=Oop rax=Oop off=1462}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x0000024807450376: jmp    0x000002480745023d
  0x000002480745037b: mov    %rsi,0x8(%rsp)
  0x0000024807450380: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807450388: call   0x0000024807433da0  ; OopMap{rbx=Oop rax=Oop off=1485}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x000002480745038d: jmp    0x0000024807450284
  0x0000024807450392: nop
  0x0000024807450393: nop
  0x0000024807450394: mov    0x308(%r15),%rax
  0x000002480745039b: movabs $0x0,%r10
  0x00000248074503a5: mov    %r10,0x308(%r15)
  0x00000248074503ac: movabs $0x0,%r10
  0x00000248074503b6: mov    %r10,0x310(%r15)
  0x00000248074503bd: add    $0x50,%rsp
  0x00000248074503c1: pop    %rbp
  0x00000248074503c2: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074503c7: hlt    
  0x00000248074503c8: hlt    
  0x00000248074503c9: hlt    
  0x00000248074503ca: hlt    
  0x00000248074503cb: hlt    
  0x00000248074503cc: hlt    
  0x00000248074503cd: hlt    
  0x00000248074503ce: hlt    
  0x00000248074503cf: hlt    
  0x00000248074503d0: hlt    
  0x00000248074503d1: hlt    
  0x00000248074503d2: hlt    
  0x00000248074503d3: hlt    
  0x00000248074503d4: hlt    
  0x00000248074503d5: hlt    
  0x00000248074503d6: hlt    
  0x00000248074503d7: hlt    
  0x00000248074503d8: hlt    
  0x00000248074503d9: hlt    
  0x00000248074503da: hlt    
  0x00000248074503db: hlt    
  0x00000248074503dc: hlt    
  0x00000248074503dd: hlt    
  0x00000248074503de: hlt    
  0x00000248074503df: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074503e0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074503e5: mov    %rsp,-0x28(%rsp)
  0x00000248074503ea: sub    $0x80,%rsp
  0x00000248074503f1: mov    %rax,0x78(%rsp)
  0x00000248074503f6: mov    %rcx,0x70(%rsp)
  0x00000248074503fb: mov    %rdx,0x68(%rsp)
  0x0000024807450400: mov    %rbx,0x60(%rsp)
  0x0000024807450405: mov    %rbp,0x50(%rsp)
  0x000002480745040a: mov    %rsi,0x48(%rsp)
  0x000002480745040f: mov    %rdi,0x40(%rsp)
  0x0000024807450414: mov    %r8,0x38(%rsp)
  0x0000024807450419: mov    %r9,0x30(%rsp)
  0x000002480745041e: mov    %r10,0x28(%rsp)
  0x0000024807450423: mov    %r11,0x20(%rsp)
  0x0000024807450428: mov    %r12,0x18(%rsp)
  0x000002480745042d: mov    %r13,0x10(%rsp)
  0x0000024807450432: mov    %r14,0x8(%rsp)
  0x0000024807450437: mov    %r15,(%rsp)
  0x000002480745043b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807450445: movabs $0x248074503e5,%rdx  ;   {internal_word}
  0x000002480745044f: mov    %rsp,%r8
  0x0000024807450452: and    $0xfffffffffffffff0,%rsp
  0x0000024807450456: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807450460: call   *%r10
  0x0000024807450463: hlt    
[Deopt Handler Code]
  0x0000024807450464: movabs $0x24807450464,%r10  ;   {section_word}
  0x000002480745046e: push   %r10
  0x0000024807450470: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807450475: hlt    
  0x0000024807450476: hlt    
  0x0000024807450477: hlt    
<nmethod compile_id='41' compiler='C1' level='3' entry='0x000002480744fdc0' size='3360' address='0x000002480744fc10' relocation_offset='288' insts_offset='432' stub_offset='2000' scopes_data_offset='2176' scopes_pcs_offset='2616' dependencies_offset='3336' nul_chk_table_offset='3344' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='182' backedge_count='13349' iicount='182' stamp='0.847'/>
<writer thread='27436'/>
<task_queued compile_id='42' method='java/lang/String hashCode ()I' bytes='55' count='2419' backedge_count='63234' iicount='2419' stamp='0.847' comment='tiered' hot_count='2419'/>
<writer thread='12268'/>
Decoding compiled method 0x0000024807450f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb05008} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x00000248074510c0: mov    0x8(%rdx),%r10d
  0x00000248074510c4: shl    $0x3,%r10
  0x00000248074510c8: cmp    %r10,%rax
  0x00000248074510cb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074510d1: data16 xchg %ax,%ax
  0x00000248074510d4: nopl   0x0(%rax,%rax,1)
  0x00000248074510dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074510e0: mov    %eax,-0x6000(%rsp)
  0x00000248074510e7: push   %rbp
  0x00000248074510e8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x00000248074510ec: mov    %rdx,%rbx
  0x00000248074510ef: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00000248074510f2: test   %eax,%eax
  0x00000248074510f4: jne    0x00000248074511e5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00000248074510fa: mov    0xc(%rdx),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00000248074510fd: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000024807451205
  0x0000024807451102: test   %r10d,%r10d
  0x0000024807451105: jle    0x00000248074511f1  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000002480745110b: test   %r10d,%r10d
  0x000002480745110e: jbe    0x00000248074511f5
  0x0000024807451114: mov    %r10d,%r9d
  0x0000024807451117: dec    %r9d
  0x000002480745111a: cmp    %r10d,%r9d
  0x000002480745111d: jae    0x00000248074511f5  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000024807451123: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000024807451129: mov    %r10d,%edi
  0x000002480745112c: add    $0xfffffffd,%edi
  0x000002480745112f: mov    %r11d,%eax
  0x0000024807451132: shl    $0x5,%eax
  0x0000024807451135: lea    (%r12,%rbp,8),%rdx
  0x0000024807451139: mov    $0x1,%r8d
  0x000002480745113f: mov    $0x80000000,%ecx
  0x0000024807451144: cmp    %edi,%r9d
  0x0000024807451147: cmovl  %ecx,%edi
  0x000002480745114a: cmp    $0x1,%edi
  0x000002480745114d: jle    0x00000248074511d6
  0x0000024807451153: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000024807451156: jmp    0x0000024807451183  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000024807451158: movzwl 0x10(%rdx,%r8,2),%ecx
  0x000002480745115e: sub    %r11d,%eax
  0x0000024807451161: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000024807451163: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000024807451166: cmp    %r10d,%r8d
  0x0000024807451169: jge    0x00000248074511e2  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000002480745116f: mov    %eax,%r9d
  0x0000024807451172: shl    $0x5,%r9d
  0x0000024807451176: mov    %eax,%r11d
  0x0000024807451179: mov    %r9d,%eax
  0x000002480745117c: jmp    0x0000024807451158
  0x000002480745117e: xchg   %ax,%ax
  0x0000024807451180: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000024807451183: movzwl 0x10(%rdx,%r8,2),%r9d
  0x0000024807451189: add    %r9d,%eax
  0x000002480745118c: movslq %r8d,%r11
  0x000002480745118f: movzwl 0x12(%rdx,%r11,2),%ecx
  0x0000024807451195: movzwl 0x16(%rdx,%r11,2),%ebp
  0x000002480745119b: movzwl 0x14(%rdx,%r11,2),%r9d
  0x00000248074511a1: mov    %eax,%r11d
  0x00000248074511a4: shl    $0x5,%r11d
  0x00000248074511a8: sub    %eax,%r11d
  0x00000248074511ab: add    %ecx,%r11d
  0x00000248074511ae: mov    %r11d,%esi
  0x00000248074511b1: shl    $0x5,%esi
  0x00000248074511b4: sub    %r11d,%esi
  0x00000248074511b7: add    %r9d,%esi
  0x00000248074511ba: mov    %esi,%r11d
  0x00000248074511bd: shl    $0x5,%r11d
  0x00000248074511c1: sub    %esi,%r11d
  0x00000248074511c4: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x00000248074511c7: mov    %r11d,%eax
  0x00000248074511ca: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000248074511cd: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x00000248074511d1: cmp    %edi,%r8d
  0x00000248074511d4: jl     0x0000024807451180  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000248074511d6: cmp    %r10d,%r8d
  0x00000248074511d9: jl     0x0000024807451158
  0x00000248074511df: mov    %r11d,%eax
  0x00000248074511e2: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x00000248074511e5: add    $0x20,%rsp
  0x00000248074511e9: pop    %rbp
  0x00000248074511ea: test   %eax,-0x1ea11f0(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x00000248074511f0: ret    
  0x00000248074511f1: xor    %eax,%eax
  0x00000248074511f3: jmp    0x00000248074511e5
  0x00000248074511f5: mov    $0xffffff86,%edx
  0x00000248074511fa: mov    %rbx,(%rsp)
  0x00000248074511fe: nop
  0x00000248074511ff: call   0x00000248073754e0  ; OopMap{rbp=NarrowOop [0]=Oop off=324}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x0000024807451204: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000024807451205: mov    $0xfffffff6,%edx
  0x000002480745120a: nop
  0x000002480745120b: call   0x00000248073754e0  ; OopMap{off=336}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000024807451210: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x0000024807451211: hlt    
  0x0000024807451212: hlt    
  0x0000024807451213: hlt    
  0x0000024807451214: hlt    
  0x0000024807451215: hlt    
  0x0000024807451216: hlt    
  0x0000024807451217: hlt    
  0x0000024807451218: hlt    
  0x0000024807451219: hlt    
  0x000002480745121a: hlt    
  0x000002480745121b: hlt    
  0x000002480745121c: hlt    
  0x000002480745121d: hlt    
  0x000002480745121e: hlt    
  0x000002480745121f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807451220: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807451225: call   0x000002480745122a
  0x000002480745122a: subq   $0x5,(%rsp)
  0x000002480745122f: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807451234: hlt    
  0x0000024807451235: hlt    
  0x0000024807451236: hlt    
  0x0000024807451237: hlt    
<nmethod compile_id='42' compiler='C2' level='4' entry='0x00000248074510c0' size='1224' address='0x0000024807450f90' relocation_offset='288' insts_offset='304' stub_offset='656' scopes_data_offset='688' scopes_pcs_offset='800' dependencies_offset='1200' nul_chk_table_offset='1208' method='java/lang/String hashCode ()I' bytes='55' count='2454' backedge_count='63726' iicount='2454' stamp='0.857'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480744f890:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe59e40} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480744f9c0: mov    0x18(%r8),%rbx
  0x000002480744f9c4: test   %rbx,%rbx
  0x000002480744f9c7: je     0x000002480744f9d0
  0x000002480744f9cd: jmp    *0x40(%rbx)
  0x000002480744f9d0: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480744f9d5: hlt    
  0x000002480744f9d6: hlt    
  0x000002480744f9d7: hlt    
<nmethod compile_id='43' compile_kind='c2n' level='0' entry='0x000002480744f9c0' size='328' address='0x000002480744f890' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.859'/>
<task_queued compile_id='44' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2304' iicount='2304' level='3' stamp='0.860' comment='tiered' hot_count='2304'/>
Decoding compiled method 0x000002480744f710:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe5a2e8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480744f840: mov    0x18(%r8),%rbx
  0x000002480744f844: test   %rbx,%rbx
  0x000002480744f847: je     0x000002480744f850
  0x000002480744f84d: jmp    *0x40(%rbx)
  0x000002480744f850: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480744f855: hlt    
  0x000002480744f856: hlt    
  0x000002480744f857: hlt    
<nmethod compile_id='45' compile_kind='c2n' level='0' entry='0x000002480744f840' size='328' address='0x000002480744f710' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='0.862'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480744e3d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x000002480744e5e0: mov    %eax,-0x6000(%rsp)
  0x000002480744e5e7: push   %rbp
  0x000002480744e5e8: sub    $0xa0,%rsp
  0x000002480744e5ef: mov    %rdx,%r11
  0x000002480744e5f2: movabs $0x2481fd13bc0,%rbx  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744e5fc: mov    0xdc(%rbx),%edx
  0x000002480744e602: add    $0x8,%edx
  0x000002480744e605: mov    %edx,0xdc(%rbx)
  0x000002480744e60b: movabs $0x2481fc1c5d0,%rbx  ;   {metadata({method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744e615: and    $0x1ff8,%edx
  0x000002480744e61b: cmp    $0x0,%edx
  0x000002480744e61e: je     0x000002480744ee89  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x000002480744e624: mov    %r9,%r13
  0x000002480744e627: sub    %r8d,%r13d
  0x000002480744e62a: cmp    $0x0,%r13d
  0x000002480744e62e: movabs $0x2481fd13bc0,%rbx  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744e638: movabs $0x108,%rdx
  0x000002480744e642: jge    0x000002480744e652
  0x000002480744e648: movabs $0x118,%rdx
  0x000002480744e652: mov    (%rbx,%rdx,1),%rsi
  0x000002480744e656: lea    0x1(%rsi),%rsi
  0x000002480744e65a: mov    %rsi,(%rbx,%rdx,1)
  0x000002480744e65e: jl     0x000002480744e826  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x000002480744e664: mov    %r13,%rbx
  0x000002480744e667: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480744e671: movslq %ebx,%rbx
  0x000002480744e674: mov    %rbx,%rdi
  0x000002480744e677: cmp    $0xffffff,%rbx
  0x000002480744e67e: ja     0x000002480744eea0
  0x000002480744e684: movabs $0x17,%rsi
  0x000002480744e68e: lea    (%rsi,%rbx,2),%rsi
  0x000002480744e692: and    $0xfffffffffffffff8,%rsi
  0x000002480744e696: mov    0x60(%r15),%rax
  0x000002480744e69a: lea    (%rax,%rsi,1),%rsi
  0x000002480744e69e: cmp    0x70(%r15),%rsi
  0x000002480744e6a2: ja     0x000002480744eea0
  0x000002480744e6a8: mov    %rsi,0x60(%r15)
  0x000002480744e6ac: sub    %rax,%rsi
  0x000002480744e6af: movq   $0x1,(%rax)
  0x000002480744e6b6: mov    %rdx,%rcx
  0x000002480744e6b9: shr    $0x3,%rcx
  0x000002480744e6bd: mov    %ecx,0x8(%rax)
  0x000002480744e6c0: mov    %ebx,0xc(%rax)
  0x000002480744e6c3: sub    $0x10,%rsi
  0x000002480744e6c7: je     0x000002480744e6de
  0x000002480744e6cd: xor    %rbx,%rbx
  0x000002480744e6d0: shr    $0x3,%rsi
  0x000002480744e6d4: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480744e6d9: dec    %rsi
  0x000002480744e6dc: jne    0x000002480744e6d4  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000002480744e6de: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000002480744eeaa
  0x000002480744e6e2: sub    %r8d,%edx
  0x000002480744e6e5: movabs $0x2481fd13bc0,%r9  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744e6ef: addq   $0x1,0x208(%r9)
  0x000002480744e6f7: movabs $0x2481fd13600,%r9  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480744e701: mov    0xdc(%r9),%edi
  0x000002480744e708: add    $0x8,%edi
  0x000002480744e70b: mov    %edi,0xdc(%r9)
  0x000002480744e712: movabs $0x2481fbf7590,%r9  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480744e71c: and    $0x7ffff8,%edi
  0x000002480744e722: cmp    $0x0,%edi
  0x000002480744e725: je     0x000002480744eeaf
  0x000002480744e72b: cmp    %r13d,%edx
  0x000002480744e72e: movabs $0x2481fd13600,%r9  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480744e738: movabs $0x108,%rdi
  0x000002480744e742: jg     0x000002480744e752
  0x000002480744e748: movabs $0x118,%rdi
  0x000002480744e752: mov    (%r9,%rdi,1),%rsi
  0x000002480744e756: lea    0x1(%rsi),%rsi
  0x000002480744e75a: mov    %rsi,(%r9,%rdi,1)
  0x000002480744e75e: jg     0x000002480744e77d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000002480744e764: movabs $0x2481fd13600,%r9  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480744e76e: incl   0x128(%r9)
  0x000002480744e775: mov    %rdx,%rsi
  0x000002480744e778: jmp    0x000002480744e780  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000002480744e77d: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000002480744e780: movabs $0x2481fd13bc0,%rdx  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744e78a: addq   $0x1,0x218(%rdx)
  0x000002480744e792: mov    %r11,%rdx
  0x000002480744e795: mov    %rax,%r9
  0x000002480744e798: mov    $0x0,%edi
  0x000002480744e79d: mov    %rax,0x70(%rsp)
  0x000002480744e7a2: test   %r8d,%r8d
  0x000002480744e7a5: jl     0x000002480744eec6
  0x000002480744e7ab: lea    (%r8,%rsi,1),%rcx
  0x000002480744e7af: cmp    0xc(%rdx),%ecx
  0x000002480744e7b2: ja     0x000002480744eec6
  0x000002480744e7b8: lea    (%rdi,%rsi,1),%rcx
  0x000002480744e7bc: cmp    0xc(%r9),%ecx
  0x000002480744e7c0: ja     0x000002480744eec6
  0x000002480744e7c6: test   %esi,%esi
  0x000002480744e7c8: jl     0x000002480744eec6
  0x000002480744e7ce: je     0x000002480744e812
  0x000002480744e7d4: movslq %r8d,%r8
  0x000002480744e7d7: movslq %edi,%rdi
  0x000002480744e7da: lea    0x10(%rdx,%r8,2),%rcx
  0x000002480744e7df: lea    0x10(%r9,%rdi,2),%rdx
  0x000002480744e7e4: mov    %rsi,%r8
  0x000002480744e7e7: sub    $0x20,%rsp
  0x000002480744e7eb: test   $0xf,%esp
  0x000002480744e7f1: je     0x000002480744e809
  0x000002480744e7f7: sub    $0x8,%rsp
  0x000002480744e7fb: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480744e800: add    $0x8,%rsp
  0x000002480744e804: jmp    0x000002480744e80e
  0x000002480744e809: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480744e80e: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x000002480744e812: mov    0x70(%rsp),%rax
  0x000002480744e817: add    $0xa0,%rsp
  0x000002480744e81e: pop    %rbp
  0x000002480744e81f: test   %eax,-0x1e9e725(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744e825: ret                       ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x000002480744e826: mov    %r9d,0x80(%rsp)
  0x000002480744e82e: xchg   %ax,%ax
  0x000002480744e830: jmp    0x000002480744eee0  ;   {no_reloc}
  0x000002480744e835: add    %al,(%rax)
  0x000002480744e837: add    %al,(%rax)
  0x000002480744e839: add    %cl,-0x75(%rcx)
  0x000002480744e83c: rex.RXB (bad) 
  0x000002480744e83e: lea    0x20(%rax),%rdi
  0x000002480744e842: cmp    0x70(%r15),%rdi
  0x000002480744e846: ja     0x000002480744eeea
  0x000002480744e84c: mov    %rdi,0x60(%r15)
  0x000002480744e850: mov    0xa8(%rdx),%rcx
  0x000002480744e857: mov    %rcx,(%rax)
  0x000002480744e85a: mov    %rdx,%rcx
  0x000002480744e85d: shr    $0x3,%rcx
  0x000002480744e861: mov    %ecx,0x8(%rax)
  0x000002480744e864: xor    %rcx,%rcx
  0x000002480744e867: mov    %ecx,0xc(%rax)
  0x000002480744e86a: xor    %rcx,%rcx
  0x000002480744e86d: mov    %rcx,0x10(%rax)
  0x000002480744e871: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x000002480744e875: data16 xchg %ax,%ax
  0x000002480744e878: jmp    0x000002480744ef06  ;   {no_reloc}
  0x000002480744e87d: add    %al,(%rax)
  0x000002480744e87f: add    %al,(%rax)
  0x000002480744e881: add    %cl,-0x77(%rax)
  0x000002480744e884: test   %ah,(%rax,%rcx,4)
  0x000002480744e887: add    %al,(%rax)
  0x000002480744e889: add    %cl,-0x75(%rcx)
  0x000002480744e88c: rex.RXB (bad) 
  0x000002480744e88e: lea    0x18(%rax),%rdi
  0x000002480744e892: cmp    0x70(%r15),%rdi
  0x000002480744e896: ja     0x000002480744ef10
  0x000002480744e89c: mov    %rdi,0x60(%r15)
  0x000002480744e8a0: mov    0xa8(%rdx),%rcx
  0x000002480744e8a7: mov    %rcx,(%rax)
  0x000002480744e8aa: mov    %rdx,%rcx
  0x000002480744e8ad: shr    $0x3,%rcx
  0x000002480744e8b1: mov    %ecx,0x8(%rax)
  0x000002480744e8b4: xor    %rcx,%rcx
  0x000002480744e8b7: mov    %ecx,0xc(%rax)
  0x000002480744e8ba: xor    %rcx,%rcx
  0x000002480744e8bd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x000002480744e8c1: mov    %rax,%rbx
  0x000002480744e8c4: movabs $0x2481fd13bc0,%rdx  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744e8ce: addq   $0x1,0x128(%rdx)
  0x000002480744e8d6: movabs $0x2481fd6d330,%rbx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744e8e0: mov    0xdc(%rbx),%edx
  0x000002480744e8e6: add    $0x8,%edx
  0x000002480744e8e9: mov    %edx,0xdc(%rbx)
  0x000002480744e8ef: movabs $0x2481fb79208,%rbx  ;   {metadata({method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744e8f9: and    $0x7ffff8,%edx
  0x000002480744e8ff: cmp    $0x0,%edx
  0x000002480744e902: je     0x000002480744ef1d
  0x000002480744e908: mov    %rax,%rbx
  0x000002480744e90b: movabs $0x2481fd6d330,%rdx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744e915: addq   $0x1,0x108(%rdx)
  0x000002480744e91d: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480744e927: mov    0xdc(%rbx),%edx
  0x000002480744e92d: add    $0x8,%edx
  0x000002480744e930: mov    %edx,0xdc(%rbx)
  0x000002480744e936: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480744e940: and    $0x7ffff8,%edx
  0x000002480744e946: cmp    $0x0,%edx
  0x000002480744e949: je     0x000002480744ef34
  0x000002480744e94f: mov    %rax,%rbx
  0x000002480744e952: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480744e95c: addq   $0x1,0x108(%rdx)
  0x000002480744e964: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744e96e: mov    0xdc(%rbx),%edx
  0x000002480744e974: add    $0x8,%edx
  0x000002480744e977: mov    %edx,0xdc(%rbx)
  0x000002480744e97d: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744e987: and    $0x7ffff8,%edx
  0x000002480744e98d: cmp    $0x0,%edx
  0x000002480744e990: je     0x000002480744ef4b
  0x000002480744e996: mov    $0x10,%ebx
  0x000002480744e99b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480744e9a5: mov    %rax,%r13
  0x000002480744e9a8: movslq %ebx,%rbx
  0x000002480744e9ab: mov    %rbx,%rdi
  0x000002480744e9ae: cmp    $0xffffff,%rbx
  0x000002480744e9b5: ja     0x000002480744ef62
  0x000002480744e9bb: movabs $0x17,%rsi
  0x000002480744e9c5: lea    (%rsi,%rbx,2),%rsi
  0x000002480744e9c9: and    $0xfffffffffffffff8,%rsi
  0x000002480744e9cd: mov    0x60(%r15),%rax
  0x000002480744e9d1: lea    (%rax,%rsi,1),%rsi
  0x000002480744e9d5: cmp    0x70(%r15),%rsi
  0x000002480744e9d9: ja     0x000002480744ef62
  0x000002480744e9df: mov    %rsi,0x60(%r15)
  0x000002480744e9e3: sub    %rax,%rsi
  0x000002480744e9e6: movq   $0x1,(%rax)
  0x000002480744e9ed: mov    %rdx,%rcx
  0x000002480744e9f0: shr    $0x3,%rcx
  0x000002480744e9f4: mov    %ecx,0x8(%rax)
  0x000002480744e9f7: mov    %ebx,0xc(%rax)
  0x000002480744e9fa: sub    $0x10,%rsi
  0x000002480744e9fe: je     0x000002480744ea15
  0x000002480744ea04: xor    %rbx,%rbx
  0x000002480744ea07: shr    $0x3,%rsi
  0x000002480744ea0b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480744ea10: dec    %rsi
  0x000002480744ea13: jne    0x000002480744ea0b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000002480744ea15: mov    %rax,%r10
  0x000002480744ea18: shr    $0x3,%r10
  0x000002480744ea1c: mov    %r10d,0x10(%r13)
  0x000002480744ea20: mov    %r13,%rax
  0x000002480744ea23: shr    $0x9,%rax
  0x000002480744ea27: movabs $0x248130de000,%rdx
  0x000002480744ea31: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000002480744ea35: mov    %r13,%rax
  0x000002480744ea38: movabs $0x2481fd13bc0,%rdx  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744ea42: mov    0x8(%rax),%eax
  0x000002480744ea45: shl    $0x3,%rax
  0x000002480744ea49: cmp    0x140(%rdx),%rax
  0x000002480744ea50: jne    0x000002480744ea5f
  0x000002480744ea52: addq   $0x1,0x148(%rdx)
  0x000002480744ea5a: jmp    0x000002480744eac5
  0x000002480744ea5f: cmp    0x150(%rdx),%rax
  0x000002480744ea66: jne    0x000002480744ea75
  0x000002480744ea68: addq   $0x1,0x158(%rdx)
  0x000002480744ea70: jmp    0x000002480744eac5
  0x000002480744ea75: cmpq   $0x0,0x140(%rdx)
  0x000002480744ea80: jne    0x000002480744ea99
  0x000002480744ea82: mov    %rax,0x140(%rdx)
  0x000002480744ea89: movq   $0x1,0x148(%rdx)
  0x000002480744ea94: jmp    0x000002480744eac5
  0x000002480744ea99: cmpq   $0x0,0x150(%rdx)
  0x000002480744eaa4: jne    0x000002480744eabd
  0x000002480744eaa6: mov    %rax,0x150(%rdx)
  0x000002480744eaad: movq   $0x1,0x158(%rdx)
  0x000002480744eab8: jmp    0x000002480744eac5
  0x000002480744eabd: addq   $0x1,0x138(%rdx)
  0x000002480744eac5: movabs $0x2481fe59ee0,%rdx  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744eacf: mov    0xdc(%rdx),%esi
  0x000002480744ead5: add    $0x8,%esi
  0x000002480744ead8: mov    %esi,0xdc(%rdx)
  0x000002480744eade: movabs $0x2481fb799e0,%rdx  ;   {metadata({method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744eae8: and    $0x7ffff8,%esi
  0x000002480744eaee: cmp    $0x0,%esi
  0x000002480744eaf1: je     0x000002480744ef6c
  0x000002480744eaf7: mov    %r13,%rax
  0x000002480744eafa: movabs $0x2481fe59ee0,%rdx  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744eb04: addq   $0x1,0x108(%rdx)
  0x000002480744eb0c: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x000002480744eb0f: mov    %r13,0x78(%rsp)
  0x000002480744eb14: nop
  0x000002480744eb15: nop
  0x000002480744eb16: nop
  0x000002480744eb17: call   0x0000024807375ee0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x000002480744eb1c: mov    0x78(%rsp),%rax
  0x000002480744eb21: movabs $0x2481fd13bc0,%r8  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744eb2b: mov    0x8(%rax),%eax
  0x000002480744eb2e: shl    $0x3,%rax
  0x000002480744eb32: cmp    0x170(%r8),%rax
  0x000002480744eb39: jne    0x000002480744eb48
  0x000002480744eb3b: addq   $0x1,0x178(%r8)
  0x000002480744eb43: jmp    0x000002480744ebae
  0x000002480744eb48: cmp    0x180(%r8),%rax
  0x000002480744eb4f: jne    0x000002480744eb5e
  0x000002480744eb51: addq   $0x1,0x188(%r8)
  0x000002480744eb59: jmp    0x000002480744ebae
  0x000002480744eb5e: cmpq   $0x0,0x170(%r8)
  0x000002480744eb69: jne    0x000002480744eb82
  0x000002480744eb6b: mov    %rax,0x170(%r8)
  0x000002480744eb72: movq   $0x1,0x178(%r8)
  0x000002480744eb7d: jmp    0x000002480744ebae
  0x000002480744eb82: cmpq   $0x0,0x180(%r8)
  0x000002480744eb8d: jne    0x000002480744eba6
  0x000002480744eb8f: mov    %rax,0x180(%r8)
  0x000002480744eb96: movq   $0x1,0x188(%r8)
  0x000002480744eba1: jmp    0x000002480744ebae
  0x000002480744eba6: addq   $0x1,0x168(%r8)
  0x000002480744ebae: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744ebb8: mov    0xdc(%r8),%edx
  0x000002480744ebbf: add    $0x8,%edx
  0x000002480744ebc2: mov    %edx,0xdc(%r8)
  0x000002480744ebc9: movabs $0x2481fb79520,%r8  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744ebd3: and    $0x7ffff8,%edx
  0x000002480744ebd9: cmp    $0x0,%edx
  0x000002480744ebdc: je     0x000002480744ef83
  0x000002480744ebe2: mov    0x78(%rsp),%rax
  0x000002480744ebe7: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744ebf1: addq   $0x1,0x108(%r8)
  0x000002480744ebf9: movabs $0x76bd5bcd8,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x000002480744ec03: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x000002480744ec08: nop
  0x000002480744ec09: nop
  0x000002480744ec0a: nop
  0x000002480744ec0b: nop
  0x000002480744ec0c: nop
  0x000002480744ec0d: nop
  0x000002480744ec0e: nop
  0x000002480744ec0f: call   0x0000024807375ee0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000002480744ec14: mov    0x78(%rsp),%rax
  0x000002480744ec19: movabs $0x2481fd13bc0,%r8  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744ec23: mov    0x8(%rax),%eax
  0x000002480744ec26: shl    $0x3,%rax
  0x000002480744ec2a: cmp    0x1a0(%r8),%rax
  0x000002480744ec31: jne    0x000002480744ec40
  0x000002480744ec33: addq   $0x1,0x1a8(%r8)
  0x000002480744ec3b: jmp    0x000002480744eca6
  0x000002480744ec40: cmp    0x1b0(%r8),%rax
  0x000002480744ec47: jne    0x000002480744ec56
  0x000002480744ec49: addq   $0x1,0x1b8(%r8)
  0x000002480744ec51: jmp    0x000002480744eca6
  0x000002480744ec56: cmpq   $0x0,0x1a0(%r8)
  0x000002480744ec61: jne    0x000002480744ec7a
  0x000002480744ec63: mov    %rax,0x1a0(%r8)
  0x000002480744ec6a: movq   $0x1,0x1a8(%r8)
  0x000002480744ec75: jmp    0x000002480744eca6
  0x000002480744ec7a: cmpq   $0x0,0x1b0(%r8)
  0x000002480744ec85: jne    0x000002480744ec9e
  0x000002480744ec87: mov    %rax,0x1b0(%r8)
  0x000002480744ec8e: movq   $0x1,0x1b8(%r8)
  0x000002480744ec99: jmp    0x000002480744eca6
  0x000002480744ec9e: addq   $0x1,0x198(%r8)
  0x000002480744eca6: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744ecb0: mov    0xdc(%r8),%edx
  0x000002480744ecb7: add    $0x8,%edx
  0x000002480744ecba: mov    %edx,0xdc(%r8)
  0x000002480744ecc1: movabs $0x2481fb799e0,%r8  ;   {metadata({method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744eccb: and    $0x7ffff8,%edx
  0x000002480744ecd1: cmp    $0x0,%edx
  0x000002480744ecd4: je     0x000002480744ef9a
  0x000002480744ecda: mov    0x78(%rsp),%rax
  0x000002480744ecdf: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744ece9: addq   $0x1,0x108(%r8)
  0x000002480744ecf1: mov    0x80(%rsp),%r8d
  0x000002480744ecf9: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000002480744ecfe: nop
  0x000002480744ecff: call   0x0000024807375ee0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000002480744ed04: mov    0x78(%rsp),%rax
  0x000002480744ed09: movabs $0x2481fd13bc0,%rdx  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744ed13: mov    0x8(%rax),%eax
  0x000002480744ed16: shl    $0x3,%rax
  0x000002480744ed1a: cmp    0x1d0(%rdx),%rax
  0x000002480744ed21: jne    0x000002480744ed30
  0x000002480744ed23: addq   $0x1,0x1d8(%rdx)
  0x000002480744ed2b: jmp    0x000002480744ed96
  0x000002480744ed30: cmp    0x1e0(%rdx),%rax
  0x000002480744ed37: jne    0x000002480744ed46
  0x000002480744ed39: addq   $0x1,0x1e8(%rdx)
  0x000002480744ed41: jmp    0x000002480744ed96
  0x000002480744ed46: cmpq   $0x0,0x1d0(%rdx)
  0x000002480744ed51: jne    0x000002480744ed6a
  0x000002480744ed53: mov    %rax,0x1d0(%rdx)
  0x000002480744ed5a: movq   $0x1,0x1d8(%rdx)
  0x000002480744ed65: jmp    0x000002480744ed96
  0x000002480744ed6a: cmpq   $0x0,0x1e0(%rdx)
  0x000002480744ed75: jne    0x000002480744ed8e
  0x000002480744ed77: mov    %rax,0x1e0(%rdx)
  0x000002480744ed7e: movq   $0x1,0x1e8(%rdx)
  0x000002480744ed89: jmp    0x000002480744ed96
  0x000002480744ed8e: addq   $0x1,0x1c8(%rdx)
  0x000002480744ed96: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744eda0: mov    0xdc(%rdx),%esi
  0x000002480744eda6: add    $0x8,%esi
  0x000002480744eda9: mov    %esi,0xdc(%rdx)
  0x000002480744edaf: movabs $0x2481fb7a8d0,%rdx  ;   {metadata({method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744edb9: and    $0x7ffff8,%esi
  0x000002480744edbf: cmp    $0x0,%esi
  0x000002480744edc2: je     0x000002480744efb1
  0x000002480744edc8: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000002480744edd2: mov    0x60(%r15),%rax
  0x000002480744edd6: lea    0x18(%rax),%rdi
  0x000002480744edda: cmp    0x70(%r15),%rdi
  0x000002480744edde: ja     0x000002480744efc8
  0x000002480744ede4: mov    %rdi,0x60(%r15)
  0x000002480744ede8: mov    0xa8(%rdx),%rcx
  0x000002480744edef: mov    %rcx,(%rax)
  0x000002480744edf2: mov    %rdx,%rcx
  0x000002480744edf5: shr    $0x3,%rcx
  0x000002480744edf9: mov    %ecx,0x8(%rax)
  0x000002480744edfc: xor    %rcx,%rcx
  0x000002480744edff: mov    %ecx,0xc(%rax)
  0x000002480744ee02: xor    %rcx,%rcx
  0x000002480744ee05: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000002480744ee09: mov    0x78(%rsp),%r8
  0x000002480744ee0e: mov    0x10(%r8),%r9d
  0x000002480744ee12: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000002480744ee16: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000002480744ee1a: mov    %rax,%r8
  0x000002480744ee1d: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744ee27: addq   $0x1,0x108(%rdx)
  0x000002480744ee2f: mov    %r9,%r8
  0x000002480744ee32: mov    $0x0,%r9d
  0x000002480744ee38: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000002480744ee3b: mov    %rax,0x90(%rsp)
  0x000002480744ee43: nop
  0x000002480744ee44: nop
  0x000002480744ee45: nop
  0x000002480744ee46: nop
  0x000002480744ee47: call   0x0000024807375ee0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000002480744ee4c: mov    0x88(%rsp),%rax
  0x000002480744ee54: movabs $0x2481fd13bc0,%r8  ;   {metadata(method data for {method} {0x000002481fc1c5d8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480744ee5e: addq   $0x1,0x1f8(%r8)
  0x000002480744ee66: mov    0x90(%rsp),%r8
  0x000002480744ee6e: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000002480744ee76: nop
  0x000002480744ee77: call   0x0000024807375ee0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000002480744ee7c: mov    0x88(%rsp),%rax
  0x000002480744ee84: jmp    0x000002480744f000
  0x000002480744ee89: mov    %rbx,0x8(%rsp)
  0x000002480744ee8e: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ee96: call   0x0000024807433da0  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000002480744ee9b: jmp    0x000002480744e624
  0x000002480744eea0: call   0x0000024807430280  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000002480744eea5: jmp    0x000002480744e6de
  0x000002480744eeaa: call   0x000002480742f100  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000002480744eeaf: mov    %r9,0x8(%rsp)
  0x000002480744eeb4: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744eebc: call   0x0000024807433da0  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000002480744eec1: jmp    0x000002480744e72b
  0x000002480744eec6: nop
  0x000002480744eec7: call   0x0000024807376360  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000002480744eecc: jmp    0x000002480744e812
  0x000002480744eed1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480744eedb: mov    $0xa050f00,%eax
  0x000002480744eee0: call   0x0000024807432b60  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000002480744eee5: jmp    0x000002480744e830
  0x000002480744eeea: mov    %rdx,%rdx
  0x000002480744eeed: call   0x000002480742f900  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000002480744eef2: jmp    0x000002480744e875
  0x000002480744eef7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480744ef01: mov    $0xa050f00,%eax
  0x000002480744ef06: call   0x0000024807432b60  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000002480744ef0b: jmp    0x000002480744e878
  0x000002480744ef10: mov    %rdx,%rdx
  0x000002480744ef13: call   0x000002480742f900  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000002480744ef18: jmp    0x000002480744e8c1
  0x000002480744ef1d: mov    %rbx,0x8(%rsp)
  0x000002480744ef22: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ef2a: call   0x0000024807433da0  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000002480744ef2f: jmp    0x000002480744e908
  0x000002480744ef34: mov    %rbx,0x8(%rsp)
  0x000002480744ef39: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ef41: call   0x0000024807433da0  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000002480744ef46: jmp    0x000002480744e94f
  0x000002480744ef4b: mov    %rbx,0x8(%rsp)
  0x000002480744ef50: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ef58: call   0x0000024807433da0  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000002480744ef5d: jmp    0x000002480744e996
  0x000002480744ef62: call   0x0000024807430280  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000002480744ef67: jmp    0x000002480744ea15
  0x000002480744ef6c: mov    %rdx,0x8(%rsp)
  0x000002480744ef71: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ef79: call   0x0000024807433da0  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000002480744ef7e: jmp    0x000002480744eaf7
  0x000002480744ef83: mov    %r8,0x8(%rsp)
  0x000002480744ef88: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744ef90: call   0x0000024807433da0  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000002480744ef95: jmp    0x000002480744ebe2
  0x000002480744ef9a: mov    %r8,0x8(%rsp)
  0x000002480744ef9f: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744efa7: call   0x0000024807433da0  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000002480744efac: jmp    0x000002480744ecda
  0x000002480744efb1: mov    %rdx,0x8(%rsp)
  0x000002480744efb6: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744efbe: call   0x0000024807433da0  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000002480744efc3: jmp    0x000002480744edc8
  0x000002480744efc8: mov    %rdx,%rdx
  0x000002480744efcb: call   0x000002480742f900  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000002480744efd0: jmp    0x000002480744ee09
  0x000002480744efd5: nop
  0x000002480744efd6: nop
  0x000002480744efd7: mov    0x308(%r15),%rax
  0x000002480744efde: movabs $0x0,%r10
  0x000002480744efe8: mov    %r10,0x308(%r15)
  0x000002480744efef: movabs $0x0,%r10
  0x000002480744eff9: mov    %r10,0x310(%r15)
  0x000002480744f000: add    $0xa0,%rsp
  0x000002480744f007: pop    %rbp
  0x000002480744f008: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744f00d: hlt    
  0x000002480744f00e: hlt    
  0x000002480744f00f: hlt    
  0x000002480744f010: hlt    
  0x000002480744f011: hlt    
  0x000002480744f012: hlt    
  0x000002480744f013: hlt    
  0x000002480744f014: hlt    
  0x000002480744f015: hlt    
  0x000002480744f016: hlt    
  0x000002480744f017: hlt    
  0x000002480744f018: hlt    
  0x000002480744f019: hlt    
  0x000002480744f01a: hlt    
  0x000002480744f01b: hlt    
  0x000002480744f01c: hlt    
  0x000002480744f01d: hlt    
  0x000002480744f01e: hlt    
  0x000002480744f01f: hlt    
[Stub Code]
  0x000002480744f020: nop                       ;   {no_reloc}
  0x000002480744f021: nop
  0x000002480744f022: nop
  0x000002480744f023: nop
  0x000002480744f024: nop
  0x000002480744f025: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744f02f: jmp    0x000002480744f02f  ;   {runtime_call}
  0x000002480744f034: nop
  0x000002480744f035: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744f03f: jmp    0x000002480744f03f  ;   {runtime_call}
  0x000002480744f044: nop
  0x000002480744f045: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744f04f: jmp    0x000002480744f04f  ;   {runtime_call}
  0x000002480744f054: nop
  0x000002480744f055: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744f05f: jmp    0x000002480744f05f  ;   {runtime_call}
  0x000002480744f064: nop
  0x000002480744f065: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744f06f: jmp    0x000002480744f06f  ;   {runtime_call}
  0x000002480744f074: nop
  0x000002480744f075: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744f07f: jmp    0x000002480744f07f  ;   {runtime_call}
[Exception Handler]
  0x000002480744f084: call   0x0000024807431320  ;   {runtime_call}
  0x000002480744f089: mov    %rsp,-0x28(%rsp)
  0x000002480744f08e: sub    $0x80,%rsp
  0x000002480744f095: mov    %rax,0x78(%rsp)
  0x000002480744f09a: mov    %rcx,0x70(%rsp)
  0x000002480744f09f: mov    %rdx,0x68(%rsp)
  0x000002480744f0a4: mov    %rbx,0x60(%rsp)
  0x000002480744f0a9: mov    %rbp,0x50(%rsp)
  0x000002480744f0ae: mov    %rsi,0x48(%rsp)
  0x000002480744f0b3: mov    %rdi,0x40(%rsp)
  0x000002480744f0b8: mov    %r8,0x38(%rsp)
  0x000002480744f0bd: mov    %r9,0x30(%rsp)
  0x000002480744f0c2: mov    %r10,0x28(%rsp)
  0x000002480744f0c7: mov    %r11,0x20(%rsp)
  0x000002480744f0cc: mov    %r12,0x18(%rsp)
  0x000002480744f0d1: mov    %r13,0x10(%rsp)
  0x000002480744f0d6: mov    %r14,0x8(%rsp)
  0x000002480744f0db: mov    %r15,(%rsp)
  0x000002480744f0df: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480744f0e9: movabs $0x2480744f089,%rdx  ;   {internal_word}
  0x000002480744f0f3: mov    %rsp,%r8
  0x000002480744f0f6: and    $0xfffffffffffffff0,%rsp
  0x000002480744f0fa: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480744f104: call   *%r10
  0x000002480744f107: hlt    
[Deopt Handler Code]
  0x000002480744f108: movabs $0x2480744f108,%r10  ;   {section_word}
  0x000002480744f112: push   %r10
  0x000002480744f114: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744f119: hlt    
  0x000002480744f11a: hlt    
  0x000002480744f11b: hlt    
  0x000002480744f11c: hlt    
  0x000002480744f11d: hlt    
  0x000002480744f11e: hlt    
  0x000002480744f11f: hlt    
<nmethod compile_id='44' compiler='C1' level='3' entry='0x000002480744e5e0' size='4864' address='0x000002480744e3d0' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3480' scopes_pcs_offset='4104' dependencies_offset='4840' nul_chk_table_offset='4848' oops_offset='3408' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2310' iicount='2310' stamp='0.895'/>
<writer thread='27436'/>
<task_queued compile_id='46' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='1408' iicount='1408' level='3' stamp='0.895' comment='tiered' hot_count='1408'/>
<task_queued compile_id='47' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='1792' iicount='1792' level='3' stamp='0.895' comment='tiered' hot_count='1792'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480744e010:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480744e180: mov    0x8(%rdx),%r10d
  0x000002480744e184: shl    $0x3,%r10
  0x000002480744e188: cmp    %rax,%r10
  0x000002480744e18b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744e191: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744e19c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744e1a0: mov    %eax,-0x6000(%rsp)
  0x000002480744e1a7: push   %rbp
  0x000002480744e1a8: sub    $0x30,%rsp
  0x000002480744e1ac: movabs $0x2481fd4c2f0,%rsi  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744e1b6: mov    0xdc(%rsi),%edi
  0x000002480744e1bc: add    $0x8,%edi
  0x000002480744e1bf: mov    %edi,0xdc(%rsi)
  0x000002480744e1c5: movabs $0x2481fb79520,%rsi  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744e1cf: and    $0x1ff8,%edi
  0x000002480744e1d5: cmp    $0x0,%edi
  0x000002480744e1d8: je     0x000002480744e215  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 141)

  0x000002480744e1de: mov    %rdx,%rsi
  0x000002480744e1e1: movabs $0x2481fd4c2f0,%rdi  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480744e1eb: addq   $0x1,0x108(%rdi)
  0x000002480744e1f3: mov    %rdx,%rsi
  0x000002480744e1f6: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)

  0x000002480744e1f9: mov    %rsi,0x20(%rsp)
  0x000002480744e1fe: nop
  0x000002480744e1ff: call   0x0000024807375ee0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ;   {optimized virtual_call}
  0x000002480744e204: mov    0x20(%rsp),%rax
  0x000002480744e209: add    $0x30,%rsp
  0x000002480744e20d: pop    %rbp
  0x000002480744e20e: test   %eax,-0x1e9e114(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744e214: ret    
  0x000002480744e215: mov    %rsi,0x8(%rsp)
  0x000002480744e21a: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744e222: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ;   {runtime_call}
  0x000002480744e227: jmp    0x000002480744e1de
  0x000002480744e229: nop
  0x000002480744e22a: nop
  0x000002480744e22b: mov    0x308(%r15),%rax
  0x000002480744e232: movabs $0x0,%r10
  0x000002480744e23c: mov    %r10,0x308(%r15)
  0x000002480744e243: movabs $0x0,%r10
  0x000002480744e24d: mov    %r10,0x310(%r15)
  0x000002480744e254: add    $0x30,%rsp
  0x000002480744e258: pop    %rbp
  0x000002480744e259: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744e25e: hlt    
  0x000002480744e25f: hlt    
[Stub Code]
  0x000002480744e260: nop                       ;   {no_reloc}
  0x000002480744e261: nop
  0x000002480744e262: nop
  0x000002480744e263: nop
  0x000002480744e264: nop
  0x000002480744e265: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744e26f: jmp    0x000002480744e26f  ;   {runtime_call}
[Exception Handler]
  0x000002480744e274: call   0x0000024807431320  ;   {runtime_call}
  0x000002480744e279: mov    %rsp,-0x28(%rsp)
  0x000002480744e27e: sub    $0x80,%rsp
  0x000002480744e285: mov    %rax,0x78(%rsp)
  0x000002480744e28a: mov    %rcx,0x70(%rsp)
  0x000002480744e28f: mov    %rdx,0x68(%rsp)
  0x000002480744e294: mov    %rbx,0x60(%rsp)
  0x000002480744e299: mov    %rbp,0x50(%rsp)
  0x000002480744e29e: mov    %rsi,0x48(%rsp)
  0x000002480744e2a3: mov    %rdi,0x40(%rsp)
  0x000002480744e2a8: mov    %r8,0x38(%rsp)
  0x000002480744e2ad: mov    %r9,0x30(%rsp)
  0x000002480744e2b2: mov    %r10,0x28(%rsp)
  0x000002480744e2b7: mov    %r11,0x20(%rsp)
  0x000002480744e2bc: mov    %r12,0x18(%rsp)
  0x000002480744e2c1: mov    %r13,0x10(%rsp)
  0x000002480744e2c6: mov    %r14,0x8(%rsp)
  0x000002480744e2cb: mov    %r15,(%rsp)
  0x000002480744e2cf: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480744e2d9: movabs $0x2480744e279,%rdx  ;   {internal_word}
  0x000002480744e2e3: mov    %rsp,%r8
  0x000002480744e2e6: and    $0xfffffffffffffff0,%rsp
  0x000002480744e2ea: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480744e2f4: call   *%r10
  0x000002480744e2f7: hlt    
[Deopt Handler Code]
  0x000002480744e2f8: movabs $0x2480744e2f8,%r10  ;   {section_word}
  0x000002480744e302: push   %r10
  0x000002480744e304: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744e309: hlt    
  0x000002480744e30a: hlt    
  0x000002480744e30b: hlt    
  0x000002480744e30c: hlt    
  0x000002480744e30d: hlt    
  0x000002480744e30e: hlt    
  0x000002480744e30f: hlt    
<nmethod compile_id='46' compiler='C1' level='3' entry='0x000002480744e180' size='920' address='0x000002480744e010' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='912' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='1414' iicount='1414' stamp='0.901'/>
<writer thread='27436'/>
<task_queued compile_id='48' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='512' iicount='512' level='3' stamp='0.901' comment='tiered' hot_count='512'/>
<task_queued compile_id='49' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='384' iicount='384' level='3' stamp='0.901' comment='tiered' hot_count='384'/>
<task_queued compile_id='50' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='384' backedge_count='27648' iicount='384' level='3' stamp='0.901' comment='tiered' hot_count='384'/>
<task_queued compile_id='51' method='java/lang/String lastIndexOf (I)I' bytes='13' count='384' iicount='384' level='3' stamp='0.901' comment='tiered' hot_count='384'/>
Decoding compiled method 0x000002480744de90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe5a760} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480744dfc0: mov    0x18(%r9),%rbx
  0x000002480744dfc4: test   %rbx,%rbx
  0x000002480744dfc7: je     0x000002480744dfd0
  0x000002480744dfcd: jmp    *0x40(%rbx)
  0x000002480744dfd0: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480744dfd5: hlt    
  0x000002480744dfd6: hlt    
  0x000002480744dfd7: hlt    
<nmethod compile_id='52' compile_kind='c2n' level='0' entry='0x000002480744dfc0' size='328' address='0x000002480744de90' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.903'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480744d3d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x000002480744d5a0: mov    0x8(%rdx),%r10d
  0x000002480744d5a4: shl    $0x3,%r10
  0x000002480744d5a8: cmp    %rax,%r10
  0x000002480744d5ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744d5b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744d5bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744d5c0: mov    %eax,-0x6000(%rsp)
  0x000002480744d5c7: push   %rbp
  0x000002480744d5c8: sub    $0x60,%rsp
  0x000002480744d5cc: movabs $0x2481fd13970,%rsi  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d5d6: mov    0xdc(%rsi),%ebx
  0x000002480744d5dc: add    $0x8,%ebx
  0x000002480744d5df: mov    %ebx,0xdc(%rsi)
  0x000002480744d5e5: movabs $0x2481fb031a0,%rsi  ;   {metadata({method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d5ef: and    $0x1ff8,%ebx
  0x000002480744d5f5: cmp    $0x0,%ebx
  0x000002480744d5f8: je     0x000002480744d8ce  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x000002480744d5fe: mov    %rdx,%rsi
  0x000002480744d601: movabs $0x2481fd13970,%rbx  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d60b: addq   $0x1,0x108(%rbx)
  0x000002480744d613: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744d61d: mov    0xdc(%rsi),%ebx
  0x000002480744d623: add    $0x8,%ebx
  0x000002480744d626: mov    %ebx,0xdc(%rsi)
  0x000002480744d62c: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480744d636: and    $0x7ffff8,%ebx
  0x000002480744d63c: cmp    $0x0,%ebx
  0x000002480744d63f: je     0x000002480744d8e5
  0x000002480744d645: cmp    $0x0,%r9d
  0x000002480744d649: movabs $0x2481fd13970,%rsi  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d653: movabs $0x118,%rbx
  0x000002480744d65d: jge    0x000002480744d66d
  0x000002480744d663: movabs $0x128,%rbx
  0x000002480744d66d: mov    (%rsi,%rbx,1),%rax
  0x000002480744d671: lea    0x1(%rax),%rax
  0x000002480744d675: mov    %rax,(%rsi,%rbx,1)
  0x000002480744d679: jl     0x000002480744d88e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x000002480744d67f: cmp    $0x0,%edi
  0x000002480744d682: movabs $0x2481fd13970,%rsi  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d68c: movabs $0x148,%rbx
  0x000002480744d696: jg     0x000002480744d6a6
  0x000002480744d69c: movabs $0x158,%rbx
  0x000002480744d6a6: mov    (%rsi,%rbx,1),%rax
  0x000002480744d6aa: lea    0x1(%rax),%rax
  0x000002480744d6ae: mov    %rax,(%rsi,%rbx,1)
  0x000002480744d6b2: jg     0x000002480744d72e  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x000002480744d6b8: cmp    $0x0,%edi
  0x000002480744d6bb: movabs $0x2481fd13970,%rsi  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d6c5: movabs $0x168,%rbx
  0x000002480744d6cf: jge    0x000002480744d6df
  0x000002480744d6d5: movabs $0x178,%rbx
  0x000002480744d6df: mov    (%rsi,%rbx,1),%rax
  0x000002480744d6e3: lea    0x1(%rax),%rax
  0x000002480744d6e7: mov    %rax,(%rsi,%rbx,1)
  0x000002480744d6eb: jl     0x000002480744d84e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x000002480744d6f1: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x000002480744d8fc
  0x000002480744d6f5: cmp    %esi,%r9d
  0x000002480744d6f8: movabs $0x2481fd13970,%rsi  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d702: movabs $0x198,%rbx
  0x000002480744d70c: jg     0x000002480744d71c
  0x000002480744d712: movabs $0x1a8,%rbx
  0x000002480744d71c: mov    (%rsi,%rbx,1),%rax
  0x000002480744d720: lea    0x1(%rax),%rax
  0x000002480744d724: mov    %rax,(%rsi,%rbx,1)
  0x000002480744d728: jle    0x000002480744d7ca  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x000002480744d72e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x000002480744d901
  0x000002480744d732: sub    %edi,%esi
  0x000002480744d734: cmp    %esi,%r9d
  0x000002480744d737: movabs $0x2481fd13970,%rsi  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d741: movabs $0x1b8,%rbx
  0x000002480744d74b: jle    0x000002480744d75b
  0x000002480744d751: movabs $0x1c8,%rbx
  0x000002480744d75b: mov    (%rsi,%rbx,1),%rax
  0x000002480744d75f: lea    0x1(%rax),%rax
  0x000002480744d763: mov    %rax,(%rsi,%rbx,1)
  0x000002480744d767: jg     0x000002480744d804  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x000002480744d76d: mov    %rdx,0x38(%rsp)
  0x000002480744d772: movabs $0x2481fd13970,%rsi  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d77c: addq   $0x1,0x1e8(%rsi)
  0x000002480744d784: add    %r9d,%edi
  0x000002480744d787: mov    %r8,%rdx
  0x000002480744d78a: mov    %r9,%r8
  0x000002480744d78d: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x000002480744d790: nop
  0x000002480744d791: nop
  0x000002480744d792: nop
  0x000002480744d793: nop
  0x000002480744d794: nop
  0x000002480744d795: nop
  0x000002480744d796: nop
  0x000002480744d797: call   0x0000024807376360  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x000002480744d79c: mov    0x38(%rsp),%rdx
  0x000002480744d7a1: mov    %rax,%r10
  0x000002480744d7a4: shr    $0x3,%r10
  0x000002480744d7a8: mov    %r10d,0xc(%rdx)
  0x000002480744d7ac: shr    $0x9,%rdx
  0x000002480744d7b0: movabs $0x248130de000,%rax
  0x000002480744d7ba: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x000002480744d7be: add    $0x60,%rsp
  0x000002480744d7c2: pop    %rbp
  0x000002480744d7c3: test   %eax,-0x1e9d6c9(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744d7c9: ret                       ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x000002480744d7ca: movabs $0x76b70aaa8,%rax  ;   {oop(&quot;&quot;)}
  0x000002480744d7d4: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000002480744d906
  0x000002480744d7d7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x000002480744d7db: mov    %rax,%r10
  0x000002480744d7de: shr    $0x3,%r10
  0x000002480744d7e2: mov    %r10d,0xc(%rdx)
  0x000002480744d7e6: shr    $0x9,%rdx
  0x000002480744d7ea: movabs $0x248130de000,%rax
  0x000002480744d7f4: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x000002480744d7f8: add    $0x60,%rsp
  0x000002480744d7fc: pop    %rbp
  0x000002480744d7fd: test   %eax,-0x1e9d703(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744d803: ret                       ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x000002480744d804: nopl   0x0(%rax)
  0x000002480744d808: jmp    0x000002480744d91a  ;   {no_reloc}
  0x000002480744d80d: add    %al,(%rax)
  0x000002480744d80f: add    %al,(%rax)
  0x000002480744d811: add    %ch,%cl
  0x000002480744d813: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x000002480744d818: mov    %eax,%eax
  0x000002480744d81a: movabs $0x2481fd13970,%rdx  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d824: addq   $0x1,0x1d8(%rdx)
  0x000002480744d82c: add    %r9d,%edi
  0x000002480744d82f: mov    %rdi,%r8
  0x000002480744d832: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x000002480744d835: mov    %rax,0x40(%rsp)
  0x000002480744d83a: nop
  0x000002480744d83b: nop
  0x000002480744d83c: nop
  0x000002480744d83d: nop
  0x000002480744d83e: nop
  0x000002480744d83f: call   0x0000024807375ee0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x000002480744d844: mov    0x40(%rsp),%rax
  0x000002480744d849: jmp    0x000002480744d9a8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x000002480744d84e: xchg   %ax,%ax
  0x000002480744d850: jmp    0x000002480744d940  ;   {no_reloc}
  0x000002480744d855: add    %al,(%rax)
  0x000002480744d857: add    %al,(%rax)
  0x000002480744d859: add    %ch,%cl
  0x000002480744d85b: jmp    0x000002480744d85d
  0x000002480744d85d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x000002480744d85f: mov    %rax,%r8
  0x000002480744d862: movabs $0x2481fd13970,%rdx  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d86c: addq   $0x1,0x188(%rdx)
  0x000002480744d874: mov    %rdi,%r8
  0x000002480744d877: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x000002480744d87a: mov    %rax,0x48(%rsp)
  0x000002480744d87f: call   0x0000024807375ee0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x000002480744d884: mov    0x48(%rsp),%rax
  0x000002480744d889: jmp    0x000002480744d9a8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x000002480744d88e: xchg   %ax,%ax
  0x000002480744d890: jmp    0x000002480744d966  ;   {no_reloc}
  0x000002480744d895: add    %al,(%rax)
  0x000002480744d897: add    %al,(%rax)
  0x000002480744d899: add    %ch,%cl
  0x000002480744d89b: roll   (%rax)
  0x000002480744d89d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x000002480744d89f: mov    %rax,%r8
  0x000002480744d8a2: movabs $0x2481fd13970,%rdx  ;   {metadata(method data for {method} {0x000002481fb031a8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480744d8ac: addq   $0x1,0x138(%rdx)
  0x000002480744d8b4: mov    %r9,%r8
  0x000002480744d8b7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x000002480744d8ba: mov    %rax,0x50(%rsp)
  0x000002480744d8bf: call   0x0000024807375ee0  ; OopMap{[80]=Oop off=804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000002480744d8c4: mov    0x50(%rsp),%rax
  0x000002480744d8c9: jmp    0x000002480744d9a8
  0x000002480744d8ce: mov    %rsi,0x8(%rsp)
  0x000002480744d8d3: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744d8db: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=832}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x000002480744d8e0: jmp    0x000002480744d5fe
  0x000002480744d8e5: mov    %rsi,0x8(%rsp)
  0x000002480744d8ea: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744d8f2: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=855}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x000002480744d8f7: jmp    0x000002480744d645
  0x000002480744d8fc: call   0x000002480742f100  ; OopMap{rdx=Oop r8=Oop off=865}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x000002480744d901: call   0x000002480742f100  ; OopMap{rdx=Oop r8=Oop off=870}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x000002480744d906: call   0x000002480742f100  ; OopMap{rdx=Oop off=875}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x000002480744d90b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480744d915: mov    $0xa050f00,%eax
  0x000002480744d91a: call   0x0000024807432b60  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000002480744d91f: jmp    0x000002480744d808
  0x000002480744d924: mov    %rdx,%rdx
  0x000002480744d927: call   0x000002480742f5e0  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000002480744d92c: jmp    0x000002480744d817
  0x000002480744d931: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480744d93b: mov    $0xa050f00,%eax
  0x000002480744d940: call   0x0000024807432b60  ; OopMap{off=933}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000002480744d945: jmp    0x000002480744d850
  0x000002480744d94a: mov    %rdx,%rdx
  0x000002480744d94d: call   0x000002480742f5e0  ; OopMap{off=946}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000002480744d952: jmp    0x000002480744d85f
  0x000002480744d957: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480744d961: mov    $0xa050f00,%eax
  0x000002480744d966: call   0x0000024807432b60  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000002480744d96b: jmp    0x000002480744d890
  0x000002480744d970: mov    %rdx,%rdx
  0x000002480744d973: call   0x000002480742f5e0  ; OopMap{off=984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000002480744d978: jmp    0x000002480744d89f
  0x000002480744d97d: nop
  0x000002480744d97e: nop
  0x000002480744d97f: mov    0x308(%r15),%rax
  0x000002480744d986: movabs $0x0,%r10
  0x000002480744d990: mov    %r10,0x308(%r15)
  0x000002480744d997: movabs $0x0,%r10
  0x000002480744d9a1: mov    %r10,0x310(%r15)
  0x000002480744d9a8: add    $0x60,%rsp
  0x000002480744d9ac: pop    %rbp
  0x000002480744d9ad: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744d9b2: hlt    
  0x000002480744d9b3: hlt    
  0x000002480744d9b4: hlt    
  0x000002480744d9b5: hlt    
  0x000002480744d9b6: hlt    
  0x000002480744d9b7: hlt    
  0x000002480744d9b8: hlt    
  0x000002480744d9b9: hlt    
  0x000002480744d9ba: hlt    
  0x000002480744d9bb: hlt    
  0x000002480744d9bc: hlt    
  0x000002480744d9bd: hlt    
  0x000002480744d9be: hlt    
  0x000002480744d9bf: hlt    
[Stub Code]
  0x000002480744d9c0: nop                       ;   {no_reloc}
  0x000002480744d9c1: nop
  0x000002480744d9c2: nop
  0x000002480744d9c3: nop
  0x000002480744d9c4: nop
  0x000002480744d9c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744d9cf: jmp    0x000002480744d9cf  ;   {runtime_call}
  0x000002480744d9d4: nop
  0x000002480744d9d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744d9df: jmp    0x000002480744d9df  ;   {runtime_call}
  0x000002480744d9e4: nop
  0x000002480744d9e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744d9ef: jmp    0x000002480744d9ef  ;   {runtime_call}
  0x000002480744d9f4: nop
  0x000002480744d9f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744d9ff: jmp    0x000002480744d9ff  ;   {runtime_call}
[Exception Handler]
  0x000002480744da04: call   0x0000024807431320  ;   {runtime_call}
  0x000002480744da09: mov    %rsp,-0x28(%rsp)
  0x000002480744da0e: sub    $0x80,%rsp
  0x000002480744da15: mov    %rax,0x78(%rsp)
  0x000002480744da1a: mov    %rcx,0x70(%rsp)
  0x000002480744da1f: mov    %rdx,0x68(%rsp)
  0x000002480744da24: mov    %rbx,0x60(%rsp)
  0x000002480744da29: mov    %rbp,0x50(%rsp)
  0x000002480744da2e: mov    %rsi,0x48(%rsp)
  0x000002480744da33: mov    %rdi,0x40(%rsp)
  0x000002480744da38: mov    %r8,0x38(%rsp)
  0x000002480744da3d: mov    %r9,0x30(%rsp)
  0x000002480744da42: mov    %r10,0x28(%rsp)
  0x000002480744da47: mov    %r11,0x20(%rsp)
  0x000002480744da4c: mov    %r12,0x18(%rsp)
  0x000002480744da51: mov    %r13,0x10(%rsp)
  0x000002480744da56: mov    %r14,0x8(%rsp)
  0x000002480744da5b: mov    %r15,(%rsp)
  0x000002480744da5f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480744da69: movabs $0x2480744da09,%rdx  ;   {internal_word}
  0x000002480744da73: mov    %rsp,%r8
  0x000002480744da76: and    $0xfffffffffffffff0,%rsp
  0x000002480744da7a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480744da84: call   *%r10
  0x000002480744da87: hlt    
[Deopt Handler Code]
  0x000002480744da88: movabs $0x2480744da88,%r10  ;   {section_word}
  0x000002480744da92: push   %r10
  0x000002480744da94: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744da99: hlt    
  0x000002480744da9a: hlt    
  0x000002480744da9b: hlt    
  0x000002480744da9c: hlt    
  0x000002480744da9d: hlt    
  0x000002480744da9e: hlt    
  0x000002480744da9f: hlt    
<nmethod compile_id='47' compiler='C1' level='3' entry='0x000002480744d5a0' size='2712' address='0x000002480744d3d0' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1760' scopes_pcs_offset='2048' dependencies_offset='2672' nul_chk_table_offset='2680' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='1804' iicount='1804' stamp='0.922'/>
<writer thread='27436'/>
<task_queued compile_id='53' method='java/lang/String getChars (II[CI)V' bytes='62' count='1920' iicount='1920' level='3' stamp='0.922' comment='tiered' hot_count='1920'/>
<task_queued compile_id='54' method='java/lang/Enum ordinal ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.922' comment='tiered' hot_count='128'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807451490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = &apos;[C&apos;
  # parm4:    rsi       = int
  # parm5:    rcx       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x0000024807451640: mov    %eax,-0x6000(%rsp)
  0x0000024807451647: push   %rbp
  0x0000024807451648: sub    $0x40,%rsp
  0x000002480745164c: mov    %r8d,0x20(%rsp)
  0x0000024807451651: mov    %esi,0x24(%rsp)
  0x0000024807451655: movabs $0x2481fd12c60,%rax  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000002480745165f: mov    0xdc(%rax),%ebx
  0x0000024807451665: add    $0x8,%ebx
  0x0000024807451668: mov    %ebx,0xdc(%rax)
  0x000002480745166e: movabs $0x2481fb057e0,%rax  ;   {metadata({method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451678: and    $0x1ff8,%ebx
  0x000002480745167e: cmp    $0x0,%ebx
  0x0000024807451681: je     0x0000024807451b1e  ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1756)

  0x0000024807451687: mov    0x50(%rsp),%eax
  0x000002480745168b: cmp    %r9d,%eax
  0x000002480745168e: movabs $0x2481fd12c60,%rbx  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451698: movabs $0x108,%r11
  0x00000248074516a2: jl     0x00000248074516b2
  0x00000248074516a8: movabs $0x118,%r11
  0x00000248074516b2: mov    (%rbx,%r11,1),%r13
  0x00000248074516b6: lea    0x1(%r13),%r13
  0x00000248074516ba: mov    %r13,(%rbx,%r11,1)
  0x00000248074516be: jl     0x0000024807451702  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x00000248074516c4: cmp    $0x0,%ecx
  0x00000248074516c7: movabs $0x2481fd12c60,%rax  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074516d1: movabs $0x128,%rsi
  0x00000248074516db: jne    0x00000248074516eb
  0x00000248074516e1: movabs $0x138,%rsi
  0x00000248074516eb: mov    (%rax,%rsi,1),%rdi
  0x00000248074516ef: lea    0x1(%rdi),%rdi
  0x00000248074516f3: mov    %rdi,(%rax,%rsi,1)
  0x00000248074516f7: jne    0x0000024807451b09
  0x00000248074516fd: jmp    0x0000024807451af4  ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x0000024807451702: cmp    $0x0,%eax
  0x0000024807451705: movabs $0x2481fd12c60,%rbx  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000002480745170f: movabs $0x160,%r11
  0x0000024807451719: jge    0x0000024807451729
  0x000002480745171f: movabs $0x170,%r11
  0x0000024807451729: mov    (%rbx,%r11,1),%r13
  0x000002480745172d: lea    0x1(%r13),%r13
  0x0000024807451731: mov    %r13,(%rbx,%r11,1)
  0x0000024807451735: jge    0x0000024807451740  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000002480745173b: mov    $0x0,%eax          ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x0000024807451740: cmp    $0x0,%ecx
  0x0000024807451743: movabs $0x2481fd12c60,%rbx  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000002480745174d: movabs $0x180,%r11
  0x0000024807451757: jne    0x0000024807451767
  0x000002480745175d: movabs $0x190,%r11
  0x0000024807451767: mov    (%rbx,%r11,1),%r13
  0x000002480745176b: lea    0x1(%r13),%r13
  0x000002480745176f: mov    %r13,(%rbx,%r11,1)
  0x0000024807451773: je     0x0000024807451ae8  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000024807451779: movslq %esi,%rbx
  0x000002480745177c: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x0000024807451b35
  0x000002480745177f: jae    0x0000024807451b3f
  0x0000024807451785: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000002480745178a: mov    %ebx,0x28(%rsp)
  0x000002480745178e: sub    %ecx,%r9d
  0x0000024807451791: add    %r8d,%r9d
  0x0000024807451794: add    %r8d,%eax
  0x0000024807451797: nop
  0x0000024807451798: cmp    %r9d,%eax
  0x000002480745179b: movabs $0x2481fd12c60,%r11  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074517a5: movabs $0x1a0,%r13
  0x00000248074517af: jg     0x00000248074517bf
  0x00000248074517b5: movabs $0x1b0,%r13
  0x00000248074517bf: mov    (%r11,%r13,1),%r14
  0x00000248074517c3: lea    0x1(%r14),%r14
  0x00000248074517c7: mov    %r14,(%r11,%r13,1)
  0x00000248074517cb: jg     0x0000024807451ad7  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x00000248074517d1: movslq %eax,%r11
  0x00000248074517d4: cmp    0xc(%rdx),%eax     ; implicit exception: dispatches to 0x0000024807451b48
  0x00000248074517d7: jae    0x0000024807451b52
  0x00000248074517dd: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000248074517e3: cmp    %ebx,%r11d
  0x00000248074517e6: movabs $0x2481fd12c60,%r11  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074517f0: movabs $0x1c0,%r13
  0x00000248074517fa: je     0x000002480745180a
  0x0000024807451800: movabs $0x1d0,%r13
  0x000002480745180a: mov    (%r11,%r13,1),%r14
  0x000002480745180e: lea    0x1(%r14),%r14
  0x0000024807451812: mov    %r14,(%r11,%r13,1)
  0x0000024807451816: je     0x00000248074518fc
  0x000002480745181c: jmp    0x00000248074518c1  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x0000024807451821: nopl   0x0(%rax)
  0x0000024807451828: movslq %eax,%r11
  0x000002480745182b: cmp    0xc(%rdx),%eax
  0x000002480745182e: jae    0x0000024807451b5b
  0x0000024807451834: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000002480745183a: cmp    %ebx,%r11d
  0x000002480745183d: movabs $0x2481fd12c60,%r11  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451847: movabs $0x200,%r13
  0x0000024807451851: je     0x0000024807451861
  0x0000024807451857: movabs $0x210,%r13
  0x0000024807451861: mov    (%r11,%r13,1),%r14
  0x0000024807451865: lea    0x1(%r14),%r14
  0x0000024807451869: mov    %r14,(%r11,%r13,1)
  0x000002480745186d: je     0x00000248074518fc  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000024807451873: movabs $0x2481fd12c60,%r11  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000002480745187d: mov    0xe0(%r11),%r13d
  0x0000024807451884: add    $0x8,%r13d
  0x0000024807451888: mov    %r13d,0xe0(%r11)
  0x000002480745188f: movabs $0x2481fb057e0,%r11  ;   {metadata({method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451899: and    $0xfff8,%r13d
  0x00000248074518a0: cmp    $0x0,%r13d
  0x00000248074518a4: je     0x0000024807451b64  ; OopMap{rdi=Oop rdx=Oop off=618}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x00000248074518aa: test   %eax,-0x1ea17b0(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x00000248074518b0: movabs $0x2481fd12c60,%r11  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074518ba: incl   0x220(%r11)        ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x00000248074518c1: inc    %eax
  0x00000248074518c3: cmp    %r9d,%eax
  0x00000248074518c6: movabs $0x2481fd12c60,%r11  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074518d0: movabs $0x1e0,%r13
  0x00000248074518da: jg     0x00000248074518ea
  0x00000248074518e0: movabs $0x1f0,%r13
  0x00000248074518ea: mov    (%r11,%r13,1),%r14
  0x00000248074518ee: lea    0x1(%r14),%r14
  0x00000248074518f2: mov    %r14,(%r11,%r13,1)
  0x00000248074518f6: jle    0x0000024807451828  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x00000248074518fc: cmp    %r9d,%eax
  0x00000248074518ff: movabs $0x2481fd12c60,%r11  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451909: movabs $0x238,%r13
  0x0000024807451913: jg     0x0000024807451923
  0x0000024807451919: movabs $0x248,%r13
  0x0000024807451923: mov    (%r11,%r13,1),%r14
  0x0000024807451927: lea    0x1(%r14),%r14
  0x000002480745192b: mov    %r14,(%r11,%r13,1)
  0x000002480745192f: jg     0x0000024807451a6c  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000024807451935: mov    %rax,%r11
  0x0000024807451938: inc    %r11d
  0x000002480745193b: mov    %r11,%r13
  0x000002480745193e: add    %ecx,%r13d
  0x0000024807451941: dec    %r13d
  0x0000024807451944: mov    %rsi,%r14
  0x0000024807451947: inc    %r14d
  0x000002480745194a: jmp    0x00000248074519fa  ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x000002480745194f: nop
  0x0000024807451950: movslq %r11d,%rsi
  0x0000024807451953: cmp    0xc(%rdx),%r11d
  0x0000024807451957: jae    0x0000024807451b7b
  0x000002480745195d: movzwl 0x10(%rdx,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000024807451962: movslq %r14d,%rbx
  0x0000024807451965: cmp    0xc(%rdi),%r14d
  0x0000024807451969: jae    0x0000024807451b84
  0x000002480745196f: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000024807451974: cmp    %ebx,%esi
  0x0000024807451976: movabs $0x2481fd12c60,%rsi  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451980: movabs $0x278,%rbx
  0x000002480745198a: jne    0x000002480745199a
  0x0000024807451990: movabs $0x288,%rbx
  0x000002480745199a: mov    (%rsi,%rbx,1),%r8
  0x000002480745199e: lea    0x1(%r8),%r8
  0x00000248074519a2: mov    %r8,(%rsi,%rbx,1)
  0x00000248074519a6: jne    0x0000024807451a33  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x00000248074519ac: inc    %r11d
  0x00000248074519af: inc    %r14d
  0x00000248074519b2: movabs $0x2481fd12c60,%rsi  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074519bc: mov    0xe0(%rsi),%ebx
  0x00000248074519c2: add    $0x8,%ebx
  0x00000248074519c5: mov    %ebx,0xe0(%rsi)
  0x00000248074519cb: movabs $0x2481fb057e0,%rsi  ;   {metadata({method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074519d5: and    $0xfff8,%ebx
  0x00000248074519db: cmp    $0x0,%ebx
  0x00000248074519de: je     0x0000024807451b8d  ; OopMap{rdi=Oop rdx=Oop off=932}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x00000248074519e4: test   %eax,-0x1ea18ea(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x00000248074519ea: movabs $0x2481fd12c60,%rsi  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000248074519f4: incl   0x298(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x00000248074519fa: cmp    %r13d,%r11d
  0x00000248074519fd: movabs $0x2481fd12c60,%r8  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451a07: movabs $0x258,%rsi
  0x0000024807451a11: jge    0x0000024807451a21
  0x0000024807451a17: movabs $0x268,%rsi
  0x0000024807451a21: mov    (%r8,%rsi,1),%rbx
  0x0000024807451a25: lea    0x1(%rbx),%rbx
  0x0000024807451a29: mov    %rbx,(%r8,%rsi,1)
  0x0000024807451a2d: jl     0x0000024807451950  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000024807451a33: cmp    %r13d,%r11d
  0x0000024807451a36: movabs $0x2481fd12c60,%rsi  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451a40: movabs $0x2b0,%rbx
  0x0000024807451a4a: jne    0x0000024807451a5a
  0x0000024807451a50: movabs $0x2c0,%rbx
  0x0000024807451a5a: mov    (%rsi,%rbx,1),%r8
  0x0000024807451a5e: lea    0x1(%r8),%r8
  0x0000024807451a62: mov    %r8,(%rsi,%rbx,1)
  0x0000024807451a66: je     0x0000024807451ac3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x0000024807451a6c: inc    %eax
  0x0000024807451a6e: movabs $0x2481fd12c60,%rsi  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451a78: mov    0xe0(%rsi),%ebx
  0x0000024807451a7e: add    $0x8,%ebx
  0x0000024807451a81: mov    %ebx,0xe0(%rsi)
  0x0000024807451a87: movabs $0x2481fb057e0,%rsi  ;   {metadata({method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451a91: and    $0xfff8,%ebx
  0x0000024807451a97: cmp    $0x0,%ebx
  0x0000024807451a9a: je     0x0000024807451ba4  ; OopMap{rdi=Oop rdx=Oop off=1120}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000024807451aa0: test   %eax,-0x1ea19a6(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807451aa6: movabs $0x2481fd12c60,%rsi  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451ab0: incl   0x2d0(%rsi)
  0x0000024807451ab6: mov    0x28(%rsp),%ebx
  0x0000024807451aba: mov    0x24(%rsp),%esi
  0x0000024807451abe: jmp    0x0000024807451798  ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000024807451ac3: mov    0x20(%rsp),%r8d
  0x0000024807451ac8: sub    %r8d,%eax
  0x0000024807451acb: add    $0x40,%rsp
  0x0000024807451acf: pop    %rbp
  0x0000024807451ad0: test   %eax,-0x1ea19d6(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807451ad6: ret                       ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x0000024807451ad7: mov    $0xffffffff,%eax
  0x0000024807451adc: add    $0x40,%rsp
  0x0000024807451ae0: pop    %rbp
  0x0000024807451ae1: test   %eax,-0x1ea19e7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807451ae7: ret                       ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x0000024807451ae8: add    $0x40,%rsp
  0x0000024807451aec: pop    %rbp
  0x0000024807451aed: test   %eax,-0x1ea19f3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807451af3: ret                       ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x0000024807451af4: movabs $0x2481fd12c60,%rax  ;   {metadata(method data for {method} {0x000002481fb057e8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807451afe: incl   0x148(%rax)
  0x0000024807451b04: jmp    0x0000024807451b0f  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x0000024807451b09: mov    $0xffffffff,%r9d   ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x0000024807451b0f: mov    %r9,%rax
  0x0000024807451b12: add    $0x40,%rsp
  0x0000024807451b16: pop    %rbp
  0x0000024807451b17: test   %eax,-0x1ea1a1d(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807451b1d: ret    
  0x0000024807451b1e: mov    %rax,0x8(%rsp)
  0x0000024807451b23: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807451b2b: call   0x0000024807433da0  ; OopMap{rdx=Oop rdi=Oop off=1264}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x0000024807451b30: jmp    0x0000024807451687
  0x0000024807451b35: call   0x000002480742f100  ; OopMap{rdi=Oop rdx=Oop off=1274}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000024807451b3a: call   0x000002480742f100  ; OopMap{rdi=Oop rdx=Oop off=1279}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000024807451b3f: mov    %rsi,(%rsp)
  0x0000024807451b43: call   0x000002480742e800  ; OopMap{rdi=Oop rdx=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000024807451b48: call   0x000002480742f100  ; OopMap{rdi=Oop rdx=Oop off=1293}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000024807451b4d: call   0x000002480742f100  ; OopMap{rdi=Oop rdx=Oop off=1298}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000024807451b52: mov    %rax,(%rsp)
  0x0000024807451b56: call   0x000002480742e800  ; OopMap{rdi=Oop rdx=Oop off=1307}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000024807451b5b: mov    %rax,(%rsp)
  0x0000024807451b5f: call   0x000002480742e800  ; OopMap{rdi=Oop rdx=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x0000024807451b64: mov    %r11,0x8(%rsp)
  0x0000024807451b69: movq   $0x58,(%rsp)
  0x0000024807451b71: call   0x0000024807433da0  ; OopMap{rdi=Oop rdx=Oop off=1334}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x0000024807451b76: jmp    0x00000248074518aa
  0x0000024807451b7b: mov    %r11,(%rsp)
  0x0000024807451b7f: call   0x000002480742e800  ; OopMap{rdi=Oop rdx=Oop off=1348}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000024807451b84: mov    %r14,(%rsp)
  0x0000024807451b88: call   0x000002480742e800  ; OopMap{rdi=Oop rdx=Oop off=1357}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000024807451b8d: mov    %rsi,0x8(%rsp)
  0x0000024807451b92: movq   $0x8f,(%rsp)
  0x0000024807451b9a: call   0x0000024807433da0  ; OopMap{rdi=Oop rdx=Oop off=1375}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x0000024807451b9f: jmp    0x00000248074519e4
  0x0000024807451ba4: mov    %rsi,0x8(%rsp)
  0x0000024807451ba9: movq   $0xa1,(%rsp)
  0x0000024807451bb1: call   0x0000024807433da0  ; OopMap{rdi=Oop rdx=Oop off=1398}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x0000024807451bb6: jmp    0x0000024807451aa0
  0x0000024807451bbb: nop
  0x0000024807451bbc: nop
  0x0000024807451bbd: mov    0x308(%r15),%rax
  0x0000024807451bc4: movabs $0x0,%r10
  0x0000024807451bce: mov    %r10,0x308(%r15)
  0x0000024807451bd5: movabs $0x0,%r10
  0x0000024807451bdf: mov    %r10,0x310(%r15)
  0x0000024807451be6: add    $0x40,%rsp
  0x0000024807451bea: pop    %rbp
  0x0000024807451beb: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807451bf0: hlt    
  0x0000024807451bf1: hlt    
  0x0000024807451bf2: hlt    
  0x0000024807451bf3: hlt    
  0x0000024807451bf4: hlt    
  0x0000024807451bf5: hlt    
  0x0000024807451bf6: hlt    
  0x0000024807451bf7: hlt    
  0x0000024807451bf8: hlt    
  0x0000024807451bf9: hlt    
  0x0000024807451bfa: hlt    
  0x0000024807451bfb: hlt    
  0x0000024807451bfc: hlt    
  0x0000024807451bfd: hlt    
  0x0000024807451bfe: hlt    
  0x0000024807451bff: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807451c00: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807451c05: mov    %rsp,-0x28(%rsp)
  0x0000024807451c0a: sub    $0x80,%rsp
  0x0000024807451c11: mov    %rax,0x78(%rsp)
  0x0000024807451c16: mov    %rcx,0x70(%rsp)
  0x0000024807451c1b: mov    %rdx,0x68(%rsp)
  0x0000024807451c20: mov    %rbx,0x60(%rsp)
  0x0000024807451c25: mov    %rbp,0x50(%rsp)
  0x0000024807451c2a: mov    %rsi,0x48(%rsp)
  0x0000024807451c2f: mov    %rdi,0x40(%rsp)
  0x0000024807451c34: mov    %r8,0x38(%rsp)
  0x0000024807451c39: mov    %r9,0x30(%rsp)
  0x0000024807451c3e: mov    %r10,0x28(%rsp)
  0x0000024807451c43: mov    %r11,0x20(%rsp)
  0x0000024807451c48: mov    %r12,0x18(%rsp)
  0x0000024807451c4d: mov    %r13,0x10(%rsp)
  0x0000024807451c52: mov    %r14,0x8(%rsp)
  0x0000024807451c57: mov    %r15,(%rsp)
  0x0000024807451c5b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807451c65: movabs $0x24807451c05,%rdx  ;   {internal_word}
  0x0000024807451c6f: mov    %rsp,%r8
  0x0000024807451c72: and    $0xfffffffffffffff0,%rsp
  0x0000024807451c76: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807451c80: call   *%r10
  0x0000024807451c83: hlt    
[Deopt Handler Code]
  0x0000024807451c84: movabs $0x24807451c84,%r10  ;   {section_word}
  0x0000024807451c8e: push   %r10
  0x0000024807451c90: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807451c95: hlt    
  0x0000024807451c96: hlt    
  0x0000024807451c97: hlt    
<nmethod compile_id='50' compiler='C1' level='3' entry='0x0000024807451640' size='3240' address='0x0000024807451490' relocation_offset='288' insts_offset='432' stub_offset='1904' scopes_data_offset='2064' scopes_pcs_offset='2456' dependencies_offset='3192' nul_chk_table_offset='3200' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='391' backedge_count='27810' iicount='391' stamp='0.940'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480744d250:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe5a878} &apos;linkToVirtual&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480744d380: mov    0x8(%rdx),%r10d
  0x000002480744d384: shl    $0x3,%r10
  0x000002480744d388: mov    0x10(%r9),%r11
  0x000002480744d38c: mov    0x1b8(%r10,%r11,8),%rbx
  0x000002480744d394: test   %rbx,%rbx
  0x000002480744d397: je     0x000002480744d3a0
  0x000002480744d39d: jmp    *0x40(%rbx)
  0x000002480744d3a0: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480744d3a5: hlt    
  0x000002480744d3a6: hlt    
  0x000002480744d3a7: hlt    
<nmethod compile_id='55' compile_kind='c2n' level='0' entry='0x000002480744d380' size='344' address='0x000002480744d250' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle linkToVirtual (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.941'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807452150:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000024807452300: mov    0x8(%rdx),%r10d
  0x0000024807452304: shl    $0x3,%r10
  0x0000024807452308: cmp    %rax,%r10
  0x000002480745230b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807452311: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745231c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807452320: mov    %eax,-0x6000(%rsp)
  0x0000024807452327: push   %rbp
  0x0000024807452328: sub    $0x60,%rsp
  0x000002480745232c: movabs $0x2481fd287f0,%rbx  ;   {metadata(method data for {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000024807452336: mov    0xdc(%rbx),%eax
  0x000002480745233c: add    $0x8,%eax
  0x000002480745233f: mov    %eax,0xdc(%rbx)
  0x0000024807452345: movabs $0x2481fb04208,%rbx  ;   {metadata({method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480745234f: and    $0x1ff8,%eax
  0x0000024807452355: cmp    $0x0,%eax
  0x0000024807452358: je     0x000002480745258e  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x000002480745235e: cmp    $0x0,%r8d
  0x0000024807452362: movabs $0x2481fd287f0,%rbx  ;   {metadata(method data for {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480745236c: movabs $0x108,%rax
  0x0000024807452376: jge    0x0000024807452386
  0x000002480745237c: movabs $0x118,%rax
  0x0000024807452386: mov    (%rbx,%rax,1),%rcx
  0x000002480745238a: lea    0x1(%rcx),%rcx
  0x000002480745238e: mov    %rcx,(%rbx,%rax,1)
  0x0000024807452392: jl     0x000002480745254e  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x0000024807452398: mov    0xc(%rdx),%edx
  0x000002480745239b: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000002480745239f: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00000248074525a5
  0x00000248074523a2: cmp    %ebx,%r9d
  0x00000248074523a5: movabs $0x2481fd287f0,%rbx  ;   {metadata(method data for {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000248074523af: movabs $0x138,%rax
  0x00000248074523b9: jle    0x00000248074523c9
  0x00000248074523bf: movabs $0x148,%rax
  0x00000248074523c9: mov    (%rbx,%rax,1),%rcx
  0x00000248074523cd: lea    0x1(%rcx),%rcx
  0x00000248074523d1: mov    %rcx,(%rbx,%rax,1)
  0x00000248074523d5: jg     0x000002480745250e  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00000248074523db: cmp    %r9d,%r8d
  0x00000248074523de: movabs $0x2481fd287f0,%rbx  ;   {metadata(method data for {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000248074523e8: movabs $0x168,%rax
  0x00000248074523f2: jle    0x0000024807452402
  0x00000248074523f8: movabs $0x178,%rax
  0x0000024807452402: mov    (%rbx,%rax,1),%rcx
  0x0000024807452406: lea    0x1(%rcx),%rcx
  0x000002480745240a: mov    %rcx,(%rbx,%rax,1)
  0x000002480745240e: jg     0x00000248074524c2  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x0000024807452414: movabs $0x2481fd287f0,%rbx  ;   {metadata(method data for {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480745241e: addq   $0x1,0x198(%rbx)
  0x0000024807452426: mov    %r9,%rbx
  0x0000024807452429: sub    %r8d,%ebx
  0x000002480745242c: mov    %rdi,%r9
  0x000002480745242f: mov    %rsi,%rdi
  0x0000024807452432: mov    %rbx,%rsi
  0x0000024807452435: test   %r9,%r9
  0x0000024807452438: je     0x00000248074525aa
  0x000002480745243e: test   %r8d,%r8d
  0x0000024807452441: jl     0x00000248074525aa
  0x0000024807452447: test   %edi,%edi
  0x0000024807452449: jl     0x00000248074525aa
  0x000002480745244f: lea    (%r8,%rsi,1),%rcx
  0x0000024807452453: cmp    0xc(%rdx),%ecx
  0x0000024807452456: ja     0x00000248074525aa
  0x000002480745245c: lea    (%rdi,%rsi,1),%rcx
  0x0000024807452460: cmp    0xc(%r9),%ecx
  0x0000024807452464: ja     0x00000248074525aa
  0x000002480745246a: test   %esi,%esi
  0x000002480745246c: jl     0x00000248074525aa
  0x0000024807452472: je     0x00000248074524b6
  0x0000024807452478: movslq %r8d,%r8
  0x000002480745247b: movslq %edi,%rdi
  0x000002480745247e: lea    0x10(%rdx,%r8,2),%rcx
  0x0000024807452483: lea    0x10(%r9,%rdi,2),%rdx
  0x0000024807452488: mov    %rsi,%r8
  0x000002480745248b: sub    $0x20,%rsp
  0x000002480745248f: test   $0xf,%esp
  0x0000024807452495: je     0x00000248074524ad
  0x000002480745249b: sub    $0x8,%rsp
  0x000002480745249f: call   Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000248074524a4: add    $0x8,%rsp
  0x00000248074524a8: jmp    0x00000248074524b2
  0x00000248074524ad: call   Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000248074524b2: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x00000248074524b6: add    $0x60,%rsp
  0x00000248074524ba: pop    %rbp
  0x00000248074524bb: test   %eax,-0x1ea23c1(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074524c1: ret                       ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00000248074524c2: nopw   0x0(%rax,%rax,1)
  0x00000248074524c8: jmp    0x00000248074525c8  ;   {no_reloc}
  0x00000248074524cd: add    %al,(%rax)
  0x00000248074524cf: add    %al,(%rax)
  0x00000248074524d1: add    %ch,%cl
  0x00000248074524d3: sti    
  0x00000248074524d4: add    %al,(%rax)
  0x00000248074524d6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x00000248074524d9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000248074524dc: lock xchg %edx,%edx
  0x00000248074524df: (bad)  
  0x00000248074524e0: rex.W add (%rax),%al
  0x00000248074524e3: add    %cl,-0x7d(%rax)
  0x00000248074524e6: xchg   %cl,0x1000001(%rax)
  0x00000248074524ec: sub    %r8d,%r9d
  0x00000248074524ef: mov    %r9,%r8
  0x00000248074524f2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00000248074524f5: mov    %rax,0x38(%rsp)
  0x00000248074524fa: nop
  0x00000248074524fb: nop
  0x00000248074524fc: nop
  0x00000248074524fd: nop
  0x00000248074524fe: nop
  0x00000248074524ff: call   0x0000024807375ee0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000024807452504: mov    0x38(%rsp),%rax
  0x0000024807452509: jmp    0x0000024807452656  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000002480745250e: xchg   %ax,%ax
  0x0000024807452510: jmp    0x00000248074525ee  ;   {no_reloc}
  0x0000024807452515: add    %al,(%rax)
  0x0000024807452517: add    %al,(%rax)
  0x0000024807452519: add    %ch,%cl
  0x000002480745251b: flds   (%rax)
  0x000002480745251d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x000002480745251f: mov    %rax,%r8
  0x0000024807452522: movabs $0x2481fd287f0,%rdx  ;   {metadata(method data for {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480745252c: addq   $0x1,0x158(%rdx)
  0x0000024807452534: mov    %r9,%r8
  0x0000024807452537: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x000002480745253a: mov    %rax,0x40(%rsp)
  0x000002480745253f: call   0x0000024807375ee0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000024807452544: mov    0x40(%rsp),%rax
  0x0000024807452549: jmp    0x0000024807452656  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000002480745254e: xchg   %ax,%ax
  0x0000024807452550: jmp    0x0000024807452614  ;   {no_reloc}
  0x0000024807452555: add    %al,(%rax)
  0x0000024807452557: add    %al,(%rax)
  0x0000024807452559: add    %ch,%cl
  0x000002480745255b: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x0000024807452560: mov    %eax,%edx
  0x0000024807452562: movabs $0x2481fd287f0,%rsi  ;   {metadata(method data for {method} {0x000002481fb04210} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480745256c: addq   $0x1,0x128(%rsi)
  0x0000024807452574: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x0000024807452577: mov    %rax,0x48(%rsp)
  0x000002480745257c: nop
  0x000002480745257d: nop
  0x000002480745257e: nop
  0x000002480745257f: call   0x0000024807375ee0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x0000024807452584: mov    0x48(%rsp),%rax
  0x0000024807452589: jmp    0x0000024807452656
  0x000002480745258e: mov    %rbx,0x8(%rsp)
  0x0000024807452593: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745259b: call   0x0000024807433da0  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00000248074525a0: jmp    0x000002480745235e
  0x00000248074525a5: call   0x000002480742f100  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00000248074525aa: nop
  0x00000248074525ab: nop
  0x00000248074525ac: nop
  0x00000248074525ad: nop
  0x00000248074525ae: nop
  0x00000248074525af: call   0x0000024807376360  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00000248074525b4: jmp    0x00000248074524b6
  0x00000248074525b9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000248074525c3: mov    $0xa050f00,%eax
  0x00000248074525c8: call   0x0000024807432b60  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00000248074525cd: jmp    0x00000248074524c8
  0x00000248074525d2: mov    %rdx,%rdx
  0x00000248074525d5: call   0x000002480742f5e0  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00000248074525da: jmp    0x00000248074524d7
  0x00000248074525df: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000248074525e9: mov    $0xa050f00,%eax
  0x00000248074525ee: call   0x0000024807432b60  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00000248074525f3: jmp    0x0000024807452510
  0x00000248074525f8: mov    %rdx,%rdx
  0x00000248074525fb: call   0x000002480742f5e0  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000024807452600: jmp    0x000002480745251f
  0x0000024807452605: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480745260f: mov    $0xa050f00,%eax
  0x0000024807452614: call   0x0000024807432b60  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000024807452619: jmp    0x0000024807452550
  0x000002480745261e: mov    %rdx,%rdx
  0x0000024807452621: call   0x000002480742f5e0  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000024807452626: jmp    0x000002480745255f
  0x000002480745262b: nop
  0x000002480745262c: nop
  0x000002480745262d: mov    0x308(%r15),%rax
  0x0000024807452634: movabs $0x0,%r10
  0x000002480745263e: mov    %r10,0x308(%r15)
  0x0000024807452645: movabs $0x0,%r10
  0x000002480745264f: mov    %r10,0x310(%r15)
  0x0000024807452656: add    $0x60,%rsp
  0x000002480745265a: pop    %rbp
  0x000002480745265b: jmp    0x000002480742eee0  ;   {runtime_call}
[Stub Code]
  0x0000024807452660: nop                       ;   {no_reloc}
  0x0000024807452661: nop
  0x0000024807452662: nop
  0x0000024807452663: nop
  0x0000024807452664: nop
  0x0000024807452665: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745266f: jmp    0x000002480745266f  ;   {runtime_call}
  0x0000024807452674: nop
  0x0000024807452675: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745267f: jmp    0x000002480745267f  ;   {runtime_call}
  0x0000024807452684: nop
  0x0000024807452685: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745268f: jmp    0x000002480745268f  ;   {runtime_call}
  0x0000024807452694: nop
  0x0000024807452695: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745269f: jmp    0x000002480745269f  ;   {runtime_call}
[Exception Handler]
  0x00000248074526a4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074526a9: mov    %rsp,-0x28(%rsp)
  0x00000248074526ae: sub    $0x80,%rsp
  0x00000248074526b5: mov    %rax,0x78(%rsp)
  0x00000248074526ba: mov    %rcx,0x70(%rsp)
  0x00000248074526bf: mov    %rdx,0x68(%rsp)
  0x00000248074526c4: mov    %rbx,0x60(%rsp)
  0x00000248074526c9: mov    %rbp,0x50(%rsp)
  0x00000248074526ce: mov    %rsi,0x48(%rsp)
  0x00000248074526d3: mov    %rdi,0x40(%rsp)
  0x00000248074526d8: mov    %r8,0x38(%rsp)
  0x00000248074526dd: mov    %r9,0x30(%rsp)
  0x00000248074526e2: mov    %r10,0x28(%rsp)
  0x00000248074526e7: mov    %r11,0x20(%rsp)
  0x00000248074526ec: mov    %r12,0x18(%rsp)
  0x00000248074526f1: mov    %r13,0x10(%rsp)
  0x00000248074526f6: mov    %r14,0x8(%rsp)
  0x00000248074526fb: mov    %r15,(%rsp)
  0x00000248074526ff: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807452709: movabs $0x248074526a9,%rdx  ;   {internal_word}
  0x0000024807452713: mov    %rsp,%r8
  0x0000024807452716: and    $0xfffffffffffffff0,%rsp
  0x000002480745271a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807452724: call   *%r10
  0x0000024807452727: hlt    
[Deopt Handler Code]
  0x0000024807452728: movabs $0x24807452728,%r10  ;   {section_word}
  0x0000024807452732: push   %r10
  0x0000024807452734: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807452739: hlt    
  0x000002480745273a: hlt    
  0x000002480745273b: hlt    
  0x000002480745273c: hlt    
  0x000002480745273d: hlt    
  0x000002480745273e: hlt    
  0x000002480745273f: hlt    
<nmethod compile_id='53' compiler='C1' level='3' entry='0x0000024807452300' size='2264' address='0x0000024807452150' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1528' scopes_pcs_offset='1760' dependencies_offset='2240' nul_chk_table_offset='2248' method='java/lang/String getChars (II[CI)V' bytes='62' count='1930' iicount='1930' stamp='0.953'/>
<writer thread='27436'/>
<task_queued compile_id='56' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='640' iicount='640' level='1' stamp='0.954' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480744cdd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb05308} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000002480744cf40: mov    0x8(%rdx),%r10d
  0x000002480744cf44: shl    $0x3,%r10
  0x000002480744cf48: cmp    %rax,%r10
  0x000002480744cf4b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744cf51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744cf5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744cf60: mov    %eax,-0x6000(%rsp)
  0x000002480744cf67: push   %rbp
  0x000002480744cf68: sub    $0x30,%rsp
  0x000002480744cf6c: movabs $0x2481fe5a8d8,%r9  ;   {metadata(method data for {method} {0x000002481fb05308} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000002480744cf76: mov    0xdc(%r9),%esi
  0x000002480744cf7d: add    $0x8,%esi
  0x000002480744cf80: mov    %esi,0xdc(%r9)
  0x000002480744cf87: movabs $0x2481fb05300,%r9  ;   {metadata({method} {0x000002481fb05308} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000002480744cf91: and    $0x1ff8,%esi
  0x000002480744cf97: cmp    $0x0,%esi
  0x000002480744cf9a: je     0x000002480744d050  ;*aload_0
                                                ; - java.lang.String::lastIndexOf@0 (line 1611)

  0x000002480744cfa0: mov    0xc(%rdx),%r9d
  0x000002480744cfa4: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::lastIndexOf@3 (line 1611)

  0x000002480744cfa8: mov    0xc(%r9),%r9d      ;*arraylength
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ; implicit exception: dispatches to 0x000002480744d067
  0x000002480744cfac: mov    %rdx,%rsi
  0x000002480744cfaf: movabs $0x2481fe5a8d8,%rdi  ;   {metadata(method data for {method} {0x000002481fb05308} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000002480744cfb9: mov    0x8(%rsi),%esi
  0x000002480744cfbc: shl    $0x3,%rsi
  0x000002480744cfc0: cmp    0x110(%rdi),%rsi
  0x000002480744cfc7: jne    0x000002480744cfd6
  0x000002480744cfc9: addq   $0x1,0x118(%rdi)
  0x000002480744cfd1: jmp    0x000002480744d03c
  0x000002480744cfd6: cmp    0x120(%rdi),%rsi
  0x000002480744cfdd: jne    0x000002480744cfec
  0x000002480744cfdf: addq   $0x1,0x128(%rdi)
  0x000002480744cfe7: jmp    0x000002480744d03c
  0x000002480744cfec: cmpq   $0x0,0x110(%rdi)
  0x000002480744cff7: jne    0x000002480744d010
  0x000002480744cff9: mov    %rsi,0x110(%rdi)
  0x000002480744d000: movq   $0x1,0x118(%rdi)
  0x000002480744d00b: jmp    0x000002480744d03c
  0x000002480744d010: cmpq   $0x0,0x120(%rdi)
  0x000002480744d01b: jne    0x000002480744d034
  0x000002480744d01d: mov    %rsi,0x120(%rdi)
  0x000002480744d024: movq   $0x1,0x128(%rdi)
  0x000002480744d02f: jmp    0x000002480744d03c
  0x000002480744d034: addq   $0x1,0x108(%rdi)
  0x000002480744d03c: dec    %r9d
  0x000002480744d03f: call   0x0000024807375ee0  ; OopMap{off=260}
                                                ;*invokevirtual lastIndexOf
                                                ; - java.lang.String::lastIndexOf@9 (line 1611)
                                                ;   {optimized virtual_call}
  0x000002480744d044: add    $0x30,%rsp
  0x000002480744d048: pop    %rbp
  0x000002480744d049: test   %eax,-0x1e9cf4f(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744d04f: ret    
  0x000002480744d050: mov    %r9,0x8(%rsp)
  0x000002480744d055: movq   $0xffffffffffffffff,(%rsp)
  0x000002480744d05d: call   0x0000024807433da0  ; OopMap{rdx=Oop off=290}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1611)
                                                ;   {runtime_call}
  0x000002480744d062: jmp    0x000002480744cfa0
  0x000002480744d067: call   0x000002480742f100  ; OopMap{rdx=Oop off=300}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ;   {runtime_call}
  0x000002480744d06c: nop
  0x000002480744d06d: nop
  0x000002480744d06e: mov    0x308(%r15),%rax
  0x000002480744d075: movabs $0x0,%r10
  0x000002480744d07f: mov    %r10,0x308(%r15)
  0x000002480744d086: movabs $0x0,%r10
  0x000002480744d090: mov    %r10,0x310(%r15)
  0x000002480744d097: add    $0x30,%rsp
  0x000002480744d09b: pop    %rbp
  0x000002480744d09c: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744d0a1: hlt    
  0x000002480744d0a2: hlt    
  0x000002480744d0a3: hlt    
  0x000002480744d0a4: hlt    
  0x000002480744d0a5: hlt    
  0x000002480744d0a6: hlt    
  0x000002480744d0a7: hlt    
  0x000002480744d0a8: hlt    
  0x000002480744d0a9: hlt    
  0x000002480744d0aa: hlt    
  0x000002480744d0ab: hlt    
  0x000002480744d0ac: hlt    
  0x000002480744d0ad: hlt    
  0x000002480744d0ae: hlt    
  0x000002480744d0af: hlt    
  0x000002480744d0b0: hlt    
  0x000002480744d0b1: hlt    
  0x000002480744d0b2: hlt    
  0x000002480744d0b3: hlt    
  0x000002480744d0b4: hlt    
  0x000002480744d0b5: hlt    
  0x000002480744d0b6: hlt    
  0x000002480744d0b7: hlt    
  0x000002480744d0b8: hlt    
  0x000002480744d0b9: hlt    
  0x000002480744d0ba: hlt    
  0x000002480744d0bb: hlt    
  0x000002480744d0bc: hlt    
  0x000002480744d0bd: hlt    
  0x000002480744d0be: hlt    
  0x000002480744d0bf: hlt    
[Stub Code]
  0x000002480744d0c0: nop                       ;   {no_reloc}
  0x000002480744d0c1: nop
  0x000002480744d0c2: nop
  0x000002480744d0c3: nop
  0x000002480744d0c4: nop
  0x000002480744d0c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480744d0cf: jmp    0x000002480744d0cf  ;   {runtime_call}
[Exception Handler]
  0x000002480744d0d4: call   0x0000024807431320  ;   {runtime_call}
  0x000002480744d0d9: mov    %rsp,-0x28(%rsp)
  0x000002480744d0de: sub    $0x80,%rsp
  0x000002480744d0e5: mov    %rax,0x78(%rsp)
  0x000002480744d0ea: mov    %rcx,0x70(%rsp)
  0x000002480744d0ef: mov    %rdx,0x68(%rsp)
  0x000002480744d0f4: mov    %rbx,0x60(%rsp)
  0x000002480744d0f9: mov    %rbp,0x50(%rsp)
  0x000002480744d0fe: mov    %rsi,0x48(%rsp)
  0x000002480744d103: mov    %rdi,0x40(%rsp)
  0x000002480744d108: mov    %r8,0x38(%rsp)
  0x000002480744d10d: mov    %r9,0x30(%rsp)
  0x000002480744d112: mov    %r10,0x28(%rsp)
  0x000002480744d117: mov    %r11,0x20(%rsp)
  0x000002480744d11c: mov    %r12,0x18(%rsp)
  0x000002480744d121: mov    %r13,0x10(%rsp)
  0x000002480744d126: mov    %r14,0x8(%rsp)
  0x000002480744d12b: mov    %r15,(%rsp)
  0x000002480744d12f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480744d139: movabs $0x2480744d0d9,%rdx  ;   {internal_word}
  0x000002480744d143: mov    %rsp,%r8
  0x000002480744d146: and    $0xfffffffffffffff0,%rsp
  0x000002480744d14a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480744d154: call   *%r10
  0x000002480744d157: hlt    
[Deopt Handler Code]
  0x000002480744d158: movabs $0x2480744d158,%r10  ;   {section_word}
  0x000002480744d162: push   %r10
  0x000002480744d164: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744d169: hlt    
  0x000002480744d16a: hlt    
  0x000002480744d16b: hlt    
  0x000002480744d16c: hlt    
  0x000002480744d16d: hlt    
  0x000002480744d16e: hlt    
  0x000002480744d16f: hlt    
<nmethod compile_id='51' compiler='C1' level='3' entry='0x000002480744cf40' size='1136' address='0x000002480744cdd0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='936' scopes_pcs_offset='984' dependencies_offset='1112' nul_chk_table_offset='1120' method='java/lang/String lastIndexOf (I)I' bytes='13' count='423' iicount='423' stamp='0.959'/>
Decoding compiled method 0x000002480744cb10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb285b8} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480744cc60: mov    0x8(%rdx),%r10d
  0x000002480744cc64: shl    $0x3,%r10
  0x000002480744cc68: cmp    %rax,%r10
  0x000002480744cc6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480744cc71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480744cc7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480744cc80: mov    %eax,-0x6000(%rsp)
  0x000002480744cc87: push   %rbp
  0x000002480744cc88: sub    $0x30,%rsp
  0x000002480744cc8c: mov    0xc(%rdx),%eax
  0x000002480744cc8f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x000002480744cc93: add    $0x30,%rsp
  0x000002480744cc97: pop    %rbp
  0x000002480744cc98: test   %eax,-0x1e9cb9e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480744cc9e: ret    
  0x000002480744cc9f: nop
  0x000002480744cca0: nop
  0x000002480744cca1: mov    0x308(%r15),%rax
  0x000002480744cca8: movabs $0x0,%r10
  0x000002480744ccb2: mov    %r10,0x308(%r15)
  0x000002480744ccb9: movabs $0x0,%r10
  0x000002480744ccc3: mov    %r10,0x310(%r15)
  0x000002480744ccca: add    $0x30,%rsp
  0x000002480744ccce: pop    %rbp
  0x000002480744cccf: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480744ccd4: hlt    
  0x000002480744ccd5: hlt    
  0x000002480744ccd6: hlt    
  0x000002480744ccd7: hlt    
  0x000002480744ccd8: hlt    
  0x000002480744ccd9: hlt    
  0x000002480744ccda: hlt    
  0x000002480744ccdb: hlt    
  0x000002480744ccdc: hlt    
  0x000002480744ccdd: hlt    
  0x000002480744ccde: hlt    
  0x000002480744ccdf: hlt    
[Exception Handler]
[Stub Code]
  0x000002480744cce0: call   0x0000024807431320  ;   {no_reloc}
  0x000002480744cce5: mov    %rsp,-0x28(%rsp)
  0x000002480744ccea: sub    $0x80,%rsp
  0x000002480744ccf1: mov    %rax,0x78(%rsp)
  0x000002480744ccf6: mov    %rcx,0x70(%rsp)
  0x000002480744ccfb: mov    %rdx,0x68(%rsp)
  0x000002480744cd00: mov    %rbx,0x60(%rsp)
  0x000002480744cd05: mov    %rbp,0x50(%rsp)
  0x000002480744cd0a: mov    %rsi,0x48(%rsp)
  0x000002480744cd0f: mov    %rdi,0x40(%rsp)
  0x000002480744cd14: mov    %r8,0x38(%rsp)
  0x000002480744cd19: mov    %r9,0x30(%rsp)
  0x000002480744cd1e: mov    %r10,0x28(%rsp)
  0x000002480744cd23: mov    %r11,0x20(%rsp)
  0x000002480744cd28: mov    %r12,0x18(%rsp)
  0x000002480744cd2d: mov    %r13,0x10(%rsp)
  0x000002480744cd32: mov    %r14,0x8(%rsp)
  0x000002480744cd37: mov    %r15,(%rsp)
  0x000002480744cd3b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480744cd45: movabs $0x2480744cce5,%rdx  ;   {internal_word}
  0x000002480744cd4f: mov    %rsp,%r8
  0x000002480744cd52: and    $0xfffffffffffffff0,%rsp
  0x000002480744cd56: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480744cd60: call   *%r10
  0x000002480744cd63: hlt    
[Deopt Handler Code]
  0x000002480744cd64: movabs $0x2480744cd64,%r10  ;   {section_word}
  0x000002480744cd6e: push   %r10
  0x000002480744cd70: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480744cd75: hlt    
  0x000002480744cd76: hlt    
  0x000002480744cd77: hlt    
<nmethod compile_id='56' compiler='C1' level='1' entry='0x000002480744cc60' size='688' address='0x000002480744cb10' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='632' dependencies_offset='680' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='645' iicount='645' stamp='0.963'/>
<writer thread='27436'/>
<task_queued compile_id='57' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='1152' iicount='1152' level='3' stamp='0.963' comment='tiered' hot_count='1152'/>
<task_queued compile_id='58' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='768' iicount='768' level='3' stamp='0.963' comment='tiered' hot_count='768'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807452a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000024807452bc0: mov    0x8(%rdx),%r10d
  0x0000024807452bc4: shl    $0x3,%r10
  0x0000024807452bc8: cmp    %rax,%r10
  0x0000024807452bcb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807452bd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807452bdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807452be0: mov    %eax,-0x6000(%rsp)
  0x0000024807452be7: push   %rbp
  0x0000024807452be8: sub    $0x30,%rsp
  0x0000024807452bec: mov    %rdx,%r9
  0x0000024807452bef: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807452bf9: mov    0xdc(%rbx),%edx
  0x0000024807452bff: add    $0x8,%edx
  0x0000024807452c02: mov    %edx,0xdc(%rbx)
  0x0000024807452c08: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807452c12: and    $0x1ff8,%edx
  0x0000024807452c18: cmp    $0x0,%edx
  0x0000024807452c1b: je     0x0000024807452d0c  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@0 (line 67)

  0x0000024807452c21: mov    %r9,%rbx
  0x0000024807452c24: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807452c2e: addq   $0x1,0x108(%rdx)
  0x0000024807452c36: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807452c40: mov    0xdc(%rbx),%edx
  0x0000024807452c46: add    $0x8,%edx
  0x0000024807452c49: mov    %edx,0xdc(%rbx)
  0x0000024807452c4f: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807452c59: and    $0x7ffff8,%edx
  0x0000024807452c5f: cmp    $0x0,%edx
  0x0000024807452c62: je     0x0000024807452d23
  0x0000024807452c68: mov    %r8,%rbx
  0x0000024807452c6b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807452c75: movslq %ebx,%rbx
  0x0000024807452c78: mov    %rbx,%rdi
  0x0000024807452c7b: cmp    $0xffffff,%rbx
  0x0000024807452c82: ja     0x0000024807452d3a
  0x0000024807452c88: movabs $0x17,%rsi
  0x0000024807452c92: lea    (%rsi,%rbx,2),%rsi
  0x0000024807452c96: and    $0xfffffffffffffff8,%rsi
  0x0000024807452c9a: mov    0x60(%r15),%rax
  0x0000024807452c9e: lea    (%rax,%rsi,1),%rsi
  0x0000024807452ca2: cmp    0x70(%r15),%rsi
  0x0000024807452ca6: ja     0x0000024807452d3a
  0x0000024807452cac: mov    %rsi,0x60(%r15)
  0x0000024807452cb0: sub    %rax,%rsi
  0x0000024807452cb3: movq   $0x1,(%rax)
  0x0000024807452cba: mov    %rdx,%rcx
  0x0000024807452cbd: shr    $0x3,%rcx
  0x0000024807452cc1: mov    %ecx,0x8(%rax)
  0x0000024807452cc4: mov    %ebx,0xc(%rax)
  0x0000024807452cc7: sub    $0x10,%rsi
  0x0000024807452ccb: je     0x0000024807452ce2
  0x0000024807452cd1: xor    %rbx,%rbx
  0x0000024807452cd4: shr    $0x3,%rsi
  0x0000024807452cd8: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807452cdd: dec    %rsi
  0x0000024807452ce0: jne    0x0000024807452cd8  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)

  0x0000024807452ce2: mov    %rax,%r10
  0x0000024807452ce5: shr    $0x3,%r10
  0x0000024807452ce9: mov    %r10d,0x10(%r9)
  0x0000024807452ced: shr    $0x9,%r9
  0x0000024807452cf1: movabs $0x248130de000,%rsi
  0x0000024807452cfb: movb   $0x0,(%r9,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)

  0x0000024807452d00: add    $0x30,%rsp
  0x0000024807452d04: pop    %rbp
  0x0000024807452d05: test   %eax,-0x1ea2c0b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807452d0b: ret    
  0x0000024807452d0c: mov    %rbx,0x8(%rsp)
  0x0000024807452d11: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807452d19: call   0x0000024807433da0  ; OopMap{r9=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ;   {runtime_call}
  0x0000024807452d1e: jmp    0x0000024807452c21
  0x0000024807452d23: mov    %rbx,0x8(%rsp)
  0x0000024807452d28: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807452d30: call   0x0000024807433da0  ; OopMap{r9=Oop off=373}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ;   {runtime_call}
  0x0000024807452d35: jmp    0x0000024807452c68
  0x0000024807452d3a: call   0x0000024807430280  ; OopMap{r9=Oop off=383}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ;   {runtime_call}
  0x0000024807452d3f: jmp    0x0000024807452ce2
  0x0000024807452d41: nop
  0x0000024807452d42: nop
  0x0000024807452d43: mov    0x308(%r15),%rax
  0x0000024807452d4a: movabs $0x0,%r10
  0x0000024807452d54: mov    %r10,0x308(%r15)
  0x0000024807452d5b: movabs $0x0,%r10
  0x0000024807452d65: mov    %r10,0x310(%r15)
  0x0000024807452d6c: add    $0x30,%rsp
  0x0000024807452d70: pop    %rbp
  0x0000024807452d71: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807452d76: hlt    
  0x0000024807452d77: hlt    
  0x0000024807452d78: hlt    
  0x0000024807452d79: hlt    
  0x0000024807452d7a: hlt    
  0x0000024807452d7b: hlt    
  0x0000024807452d7c: hlt    
  0x0000024807452d7d: hlt    
  0x0000024807452d7e: hlt    
  0x0000024807452d7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807452d80: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807452d85: mov    %rsp,-0x28(%rsp)
  0x0000024807452d8a: sub    $0x80,%rsp
  0x0000024807452d91: mov    %rax,0x78(%rsp)
  0x0000024807452d96: mov    %rcx,0x70(%rsp)
  0x0000024807452d9b: mov    %rdx,0x68(%rsp)
  0x0000024807452da0: mov    %rbx,0x60(%rsp)
  0x0000024807452da5: mov    %rbp,0x50(%rsp)
  0x0000024807452daa: mov    %rsi,0x48(%rsp)
  0x0000024807452daf: mov    %rdi,0x40(%rsp)
  0x0000024807452db4: mov    %r8,0x38(%rsp)
  0x0000024807452db9: mov    %r9,0x30(%rsp)
  0x0000024807452dbe: mov    %r10,0x28(%rsp)
  0x0000024807452dc3: mov    %r11,0x20(%rsp)
  0x0000024807452dc8: mov    %r12,0x18(%rsp)
  0x0000024807452dcd: mov    %r13,0x10(%rsp)
  0x0000024807452dd2: mov    %r14,0x8(%rsp)
  0x0000024807452dd7: mov    %r15,(%rsp)
  0x0000024807452ddb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807452de5: movabs $0x24807452d85,%rdx  ;   {internal_word}
  0x0000024807452def: mov    %rsp,%r8
  0x0000024807452df2: and    $0xfffffffffffffff0,%rsp
  0x0000024807452df6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807452e00: call   *%r10
  0x0000024807452e03: hlt    
[Deopt Handler Code]
  0x0000024807452e04: movabs $0x24807452e04,%r10  ;   {section_word}
  0x0000024807452e0e: push   %r10
  0x0000024807452e10: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807452e15: hlt    
  0x0000024807452e16: hlt    
  0x0000024807452e17: hlt    
<nmethod compile_id='57' compiler='C1' level='3' entry='0x0000024807452bc0' size='1192' address='0x0000024807452a50' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1056' dependencies_offset='1184' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='1160' iicount='1160' stamp='0.971'/>
<writer thread='27436'/>
<task_queued compile_id='59' method='java/lang/invoke/MethodType returnType ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='0.971' comment='tiered' hot_count='128'/>
<task_queued compile_id='60' method='java/lang/invoke/MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='0.972' comment='tiered' hot_count='128'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807452f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb75840} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000248074530a0: mov    0x8(%rdx),%r10d
  0x00000248074530a4: shl    $0x3,%r10
  0x00000248074530a8: cmp    %rax,%r10
  0x00000248074530ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074530b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074530bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074530c0: mov    %eax,-0x6000(%rsp)
  0x00000248074530c7: push   %rbp
  0x00000248074530c8: sub    $0x40,%rsp
  0x00000248074530cc: movabs $0x2481fd59d00,%rax  ;   {metadata(method data for {method} {0x000002481fb75840} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074530d6: mov    0xdc(%rax),%esi
  0x00000248074530dc: add    $0x8,%esi
  0x00000248074530df: mov    %esi,0xdc(%rax)
  0x00000248074530e5: movabs $0x2481fb75838,%rax  ;   {metadata({method} {0x000002481fb75840} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074530ef: and    $0x1ff8,%esi
  0x00000248074530f5: cmp    $0x0,%esi
  0x00000248074530f8: je     0x0000024807453346  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@0 (line 150)

  0x00000248074530fe: mov    0x10(%rdx),%eax
  0x0000024807453101: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)

  0x0000024807453105: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; implicit exception: dispatches to 0x000002480745335d
  0x0000024807453108: shl    %eax
  0x000002480745310a: add    $0x2,%eax
  0x000002480745310d: mov    %rax,%rsi
  0x0000024807453110: sub    %r8d,%esi
  0x0000024807453113: cmp    $0x0,%esi
  0x0000024807453116: movabs $0x2481fd59d00,%rsi  ;   {metadata(method data for {method} {0x000002481fb75840} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807453120: movabs $0x108,%rdi
  0x000002480745312a: jge    0x000002480745313a
  0x0000024807453130: movabs $0x118,%rdi
  0x000002480745313a: mov    (%rsi,%rdi,1),%rcx
  0x000002480745313e: lea    0x1(%rcx),%rcx
  0x0000024807453142: mov    %rcx,(%rsi,%rdi,1)
  0x0000024807453146: jge    0x000002480745314f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)

  0x000002480745314c: mov    %r8,%rax           ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)

  0x000002480745314f: cmp    $0x0,%eax
  0x0000024807453152: movabs $0x2481fd59d00,%rsi  ;   {metadata(method data for {method} {0x000002481fb75840} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745315c: movabs $0x128,%rdi
  0x0000024807453166: jle    0x0000024807453176
  0x000002480745316c: movabs $0x138,%rdi
  0x0000024807453176: mov    (%rsi,%rdi,1),%rcx
  0x000002480745317a: lea    0x1(%rcx),%rcx
  0x000002480745317e: mov    %rcx,(%rsi,%rdi,1)
  0x0000024807453182: jle    0x00000248074531c8  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)

  0x0000024807453188: mov    $0x7ffffff7,%esi
  0x000002480745318d: sub    %eax,%esi
  0x000002480745318f: cmp    $0x0,%esi
  0x0000024807453192: movabs $0x2481fd59d00,%rsi  ;   {metadata(method data for {method} {0x000002481fb75840} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745319c: movabs $0x148,%rdi
  0x00000248074531a6: jge    0x00000248074531b6
  0x00000248074531ac: movabs $0x158,%rdi
  0x00000248074531b6: mov    (%rsi,%rdi,1),%rcx
  0x00000248074531ba: lea    0x1(%rcx),%rcx
  0x00000248074531be: mov    %rcx,(%rsi,%rdi,1)
  0x00000248074531c2: jge    0x00000248074532ba  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)

  0x00000248074531c8: movabs $0x2481fd59d00,%rax  ;   {metadata(method data for {method} {0x000002481fb75840} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074531d2: addq   $0x1,0x168(%rax)
  0x00000248074531da: movabs $0x2481fe5abb8,%rax  ;   {metadata(method data for {method} {0x000002481fb758f0} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074531e4: mov    0xdc(%rax),%edx
  0x00000248074531ea: add    $0x8,%edx
  0x00000248074531ed: mov    %edx,0xdc(%rax)
  0x00000248074531f3: movabs $0x2481fb758e8,%rax  ;   {metadata({method} {0x000002481fb758f0} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074531fd: and    $0x7ffff8,%edx
  0x0000024807453203: cmp    $0x0,%edx
  0x0000024807453206: je     0x0000024807453362
  0x000002480745320c: mov    $0x7fffffff,%eax
  0x0000024807453211: sub    %r8d,%eax
  0x0000024807453214: cmp    $0x0,%eax
  0x0000024807453217: movabs $0x2481fe5abb8,%rax  ;   {metadata(method data for {method} {0x000002481fb758f0} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807453221: movabs $0x108,%rdx
  0x000002480745322b: jge    0x000002480745323b
  0x0000024807453231: movabs $0x118,%rdx
  0x000002480745323b: mov    (%rax,%rdx,1),%rsi
  0x000002480745323f: lea    0x1(%rsi),%rsi
  0x0000024807453243: mov    %rsi,(%rax,%rdx,1)
  0x0000024807453247: jl     0x00000248074532cc  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@4 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000002480745324d: cmp    $0x7ffffff7,%r8d
  0x0000024807453254: movabs $0x2481fe5abb8,%rax  ;   {metadata(method data for {method} {0x000002481fb758f0} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745325e: movabs $0x138,%rdx
  0x0000024807453268: jle    0x0000024807453278
  0x000002480745326e: movabs $0x148,%rdx
  0x0000024807453278: mov    (%rax,%rdx,1),%rsi
  0x000002480745327c: lea    0x1(%rsi),%rsi
  0x0000024807453280: mov    %rsi,(%rax,%rdx,1)
  0x0000024807453284: jle    0x000002480745329f  ;*if_icmple
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@18 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000002480745328a: movabs $0x2481fe5abb8,%rax  ;   {metadata(method data for {method} {0x000002481fb758f0} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807453294: incl   0x158(%rax)
  0x000002480745329a: jmp    0x00000248074532a5  ;*goto
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@22 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000002480745329f: mov    $0x7ffffff7,%r8d   ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@27 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00000248074532a5: movabs $0x2481fd59d00,%rax  ;   {metadata(method data for {method} {0x000002481fb75840} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074532af: incl   0x178(%rax)
  0x00000248074532b5: jmp    0x00000248074532bd  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)

  0x00000248074532ba: mov    %rax,%r8
  0x00000248074532bd: mov    %r8,%rax
  0x00000248074532c0: add    $0x40,%rsp
  0x00000248074532c4: pop    %rbp
  0x00000248074532c5: test   %eax,-0x1ea31cb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074532cb: ret                       ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)

  0x00000248074532cc: nopl   0x0(%rax)
  0x00000248074532d0: jmp    0x0000024807453388  ;   {no_reloc}
  0x00000248074532d5: add    %al,(%rax)
  0x00000248074532d7: add    %al,(%rax)
  0x00000248074532d9: add    %cl,-0x75(%rcx)
  0x00000248074532dc: rex.RXB (bad) 
  0x00000248074532de: lea    0x20(%rax),%rdi
  0x00000248074532e2: cmp    0x70(%r15),%rdi
  0x00000248074532e6: ja     0x0000024807453392
  0x00000248074532ec: mov    %rdi,0x60(%r15)
  0x00000248074532f0: mov    0xa8(%rdx),%rcx
  0x00000248074532f7: mov    %rcx,(%rax)
  0x00000248074532fa: mov    %rdx,%rcx
  0x00000248074532fd: shr    $0x3,%rcx
  0x0000024807453301: mov    %ecx,0x8(%rax)
  0x0000024807453304: xor    %rcx,%rcx
  0x0000024807453307: mov    %ecx,0xc(%rax)
  0x000002480745330a: xor    %rcx,%rcx
  0x000002480745330d: mov    %rcx,0x10(%rax)
  0x0000024807453311: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000024807453315: mov    %rax,%rdx
  0x0000024807453318: movabs $0x2481fe5abb8,%rsi  ;   {metadata(method data for {method} {0x000002481fb758f0} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807453322: addq   $0x1,0x128(%rsi)
  0x000002480745332a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000002480745332d: mov    %rax,0x30(%rsp)
  0x0000024807453332: nop
  0x0000024807453333: nop
  0x0000024807453334: nop
  0x0000024807453335: nop
  0x0000024807453336: nop
  0x0000024807453337: call   0x0000024807375ee0  ; OopMap{[48]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {optimized virtual_call}
  0x000002480745333c: mov    0x30(%rsp),%rax
  0x0000024807453341: jmp    0x00000248074533ca
  0x0000024807453346: mov    %rax,0x8(%rsp)
  0x000002480745334b: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807453353: call   0x0000024807433da0  ; OopMap{rdx=Oop off=696}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ;   {runtime_call}
  0x0000024807453358: jmp    0x00000248074530fe
  0x000002480745335d: call   0x000002480742f100  ; OopMap{rdx=Oop off=706}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ;   {runtime_call}
  0x0000024807453362: mov    %rax,0x8(%rsp)
  0x0000024807453367: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745336f: call   0x0000024807433da0  ; OopMap{off=724}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@-1 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x0000024807453374: jmp    0x000002480745320c
  0x0000024807453379: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807453383: mov    $0xa050f00,%eax
  0x0000024807453388: call   0x0000024807432b60  ; OopMap{off=749}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000002480745338d: jmp    0x00000248074532d0
  0x0000024807453392: mov    %rdx,%rdx
  0x0000024807453395: call   0x000002480742f900  ; OopMap{off=762}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000002480745339a: jmp    0x0000024807453315
  0x000002480745339f: nop
  0x00000248074533a0: nop
  0x00000248074533a1: mov    0x308(%r15),%rax
  0x00000248074533a8: movabs $0x0,%r10
  0x00000248074533b2: mov    %r10,0x308(%r15)
  0x00000248074533b9: movabs $0x0,%r10
  0x00000248074533c3: mov    %r10,0x310(%r15)
  0x00000248074533ca: add    $0x40,%rsp
  0x00000248074533ce: pop    %rbp
  0x00000248074533cf: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074533d4: hlt    
  0x00000248074533d5: hlt    
  0x00000248074533d6: hlt    
  0x00000248074533d7: hlt    
  0x00000248074533d8: hlt    
  0x00000248074533d9: hlt    
  0x00000248074533da: hlt    
  0x00000248074533db: hlt    
  0x00000248074533dc: hlt    
  0x00000248074533dd: hlt    
  0x00000248074533de: hlt    
  0x00000248074533df: hlt    
[Stub Code]
  0x00000248074533e0: nop                       ;   {no_reloc}
  0x00000248074533e1: nop
  0x00000248074533e2: nop
  0x00000248074533e3: nop
  0x00000248074533e4: nop
  0x00000248074533e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074533ef: jmp    0x00000248074533ef  ;   {runtime_call}
[Exception Handler]
  0x00000248074533f4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074533f9: mov    %rsp,-0x28(%rsp)
  0x00000248074533fe: sub    $0x80,%rsp
  0x0000024807453405: mov    %rax,0x78(%rsp)
  0x000002480745340a: mov    %rcx,0x70(%rsp)
  0x000002480745340f: mov    %rdx,0x68(%rsp)
  0x0000024807453414: mov    %rbx,0x60(%rsp)
  0x0000024807453419: mov    %rbp,0x50(%rsp)
  0x000002480745341e: mov    %rsi,0x48(%rsp)
  0x0000024807453423: mov    %rdi,0x40(%rsp)
  0x0000024807453428: mov    %r8,0x38(%rsp)
  0x000002480745342d: mov    %r9,0x30(%rsp)
  0x0000024807453432: mov    %r10,0x28(%rsp)
  0x0000024807453437: mov    %r11,0x20(%rsp)
  0x000002480745343c: mov    %r12,0x18(%rsp)
  0x0000024807453441: mov    %r13,0x10(%rsp)
  0x0000024807453446: mov    %r14,0x8(%rsp)
  0x000002480745344b: mov    %r15,(%rsp)
  0x000002480745344f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807453459: movabs $0x248074533f9,%rdx  ;   {internal_word}
  0x0000024807453463: mov    %rsp,%r8
  0x0000024807453466: and    $0xfffffffffffffff0,%rsp
  0x000002480745346a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807453474: call   *%r10
  0x0000024807453477: hlt    
[Deopt Handler Code]
  0x0000024807453478: movabs $0x24807453478,%r10  ;   {section_word}
  0x0000024807453482: push   %r10
  0x0000024807453484: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807453489: hlt    
  0x000002480745348a: hlt    
  0x000002480745348b: hlt    
  0x000002480745348c: hlt    
  0x000002480745348d: hlt    
  0x000002480745348e: hlt    
  0x000002480745348f: hlt    
<nmethod compile_id='58' compiler='C1' level='3' entry='0x00000248074530a0' size='1984' address='0x0000024807452f10' relocation_offset='288' insts_offset='400' stub_offset='1232' scopes_data_offset='1424' scopes_pcs_offset='1592' dependencies_offset='1960' nul_chk_table_offset='1968' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='776' iicount='776' stamp='0.981'/>
Decoding compiled method 0x0000024807453910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb055f8} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000024807453a80: mov    0x8(%rdx),%r10d
  0x0000024807453a84: shl    $0x3,%r10
  0x0000024807453a88: cmp    %rax,%r10
  0x0000024807453a8b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807453a91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807453a9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807453aa0: mov    %eax,-0x6000(%rsp)
  0x0000024807453aa7: push   %rbp
  0x0000024807453aa8: sub    $0x50,%rsp
  0x0000024807453aac: mov    %r9,%rbx
  0x0000024807453aaf: movabs $0x2481fe5b928,%r9  ;   {metadata(method data for {method} {0x000002481fb055f8} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807453ab9: mov    0xdc(%r9),%edi
  0x0000024807453ac0: add    $0x8,%edi
  0x0000024807453ac3: mov    %edi,0xdc(%r9)
  0x0000024807453aca: movabs $0x2481fb055f0,%r9  ;   {metadata({method} {0x000002481fb055f8} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807453ad4: and    $0x1ff8,%edi
  0x0000024807453ada: cmp    $0x0,%edi
  0x0000024807453add: je     0x0000024807453b30  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1718)

  0x0000024807453ae3: mov    0xc(%rdx),%edx
  0x0000024807453ae6: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1718)

  0x0000024807453aea: mov    0xc(%rdx),%r9d     ;*arraylength
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ; implicit exception: dispatches to 0x0000024807453b44
  0x0000024807453aee: mov    0xc(%r8),%edi      ; implicit exception: dispatches to 0x0000024807453b49
  0x0000024807453af2: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::indexOf@11 (line 1718)

  0x0000024807453af6: mov    0xc(%rdi),%ecx     ;*arraylength
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ; implicit exception: dispatches to 0x0000024807453b4e
  0x0000024807453af9: movabs $0x2481fe5b928,%r8  ;   {metadata(method data for {method} {0x000002481fb055f8} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807453b03: addq   $0x1,0x108(%r8)
  0x0000024807453b0b: mov    $0x0,%r8d
  0x0000024807453b11: mov    $0x0,%esi
  0x0000024807453b16: mov    %ebx,(%rsp)        ;*invokestatic indexOf
                                                ; - java.lang.String::indexOf@21 (line 1718)

  0x0000024807453b19: nop
  0x0000024807453b1a: nop
  0x0000024807453b1b: nop
  0x0000024807453b1c: nop
  0x0000024807453b1d: nop
  0x0000024807453b1e: nop
  0x0000024807453b1f: call   0x0000024807376360  ; OopMap{off=164}
                                                ;*invokestatic indexOf
                                                ; - java.lang.String::indexOf@21 (line 1718)
                                                ;   {static_call}
  0x0000024807453b24: add    $0x50,%rsp
  0x0000024807453b28: pop    %rbp
  0x0000024807453b29: test   %eax,-0x1ea3a2f(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807453b2f: ret    
  0x0000024807453b30: mov    %r9,0x8(%rsp)
  0x0000024807453b35: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807453b3d: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=194}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1718)
                                                ;   {runtime_call}
  0x0000024807453b42: jmp    0x0000024807453ae3
  0x0000024807453b44: call   0x000002480742f100  ; OopMap{r8=Oop rdx=Oop off=201}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ;   {runtime_call}
  0x0000024807453b49: call   0x000002480742f100  ; OopMap{rdx=Oop off=206}
                                                ;*getfield value
                                                ; - java.lang.String::indexOf@11 (line 1718)
                                                ;   {runtime_call}
  0x0000024807453b4e: call   0x000002480742f100  ; OopMap{rdx=Oop rdi=Oop off=211}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ;   {runtime_call}
  0x0000024807453b53: nop
  0x0000024807453b54: nop
  0x0000024807453b55: mov    0x308(%r15),%rax
  0x0000024807453b5c: movabs $0x0,%r10
  0x0000024807453b66: mov    %r10,0x308(%r15)
  0x0000024807453b6d: movabs $0x0,%r10
  0x0000024807453b77: mov    %r10,0x310(%r15)
  0x0000024807453b7e: add    $0x50,%rsp
  0x0000024807453b82: pop    %rbp
  0x0000024807453b83: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807453b88: hlt    
  0x0000024807453b89: hlt    
  0x0000024807453b8a: hlt    
  0x0000024807453b8b: hlt    
  0x0000024807453b8c: hlt    
  0x0000024807453b8d: hlt    
  0x0000024807453b8e: hlt    
  0x0000024807453b8f: hlt    
  0x0000024807453b90: hlt    
  0x0000024807453b91: hlt    
  0x0000024807453b92: hlt    
  0x0000024807453b93: hlt    
  0x0000024807453b94: hlt    
  0x0000024807453b95: hlt    
  0x0000024807453b96: hlt    
  0x0000024807453b97: hlt    
  0x0000024807453b98: hlt    
  0x0000024807453b99: hlt    
  0x0000024807453b9a: hlt    
  0x0000024807453b9b: hlt    
  0x0000024807453b9c: hlt    
  0x0000024807453b9d: hlt    
  0x0000024807453b9e: hlt    
  0x0000024807453b9f: hlt    
[Stub Code]
  0x0000024807453ba0: nop                       ;   {no_reloc}
  0x0000024807453ba1: nop
  0x0000024807453ba2: nop
  0x0000024807453ba3: nop
  0x0000024807453ba4: nop
  0x0000024807453ba5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807453baf: jmp    0x0000024807453baf  ;   {runtime_call}
[Exception Handler]
  0x0000024807453bb4: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807453bb9: mov    %rsp,-0x28(%rsp)
  0x0000024807453bbe: sub    $0x80,%rsp
  0x0000024807453bc5: mov    %rax,0x78(%rsp)
  0x0000024807453bca: mov    %rcx,0x70(%rsp)
  0x0000024807453bcf: mov    %rdx,0x68(%rsp)
  0x0000024807453bd4: mov    %rbx,0x60(%rsp)
  0x0000024807453bd9: mov    %rbp,0x50(%rsp)
  0x0000024807453bde: mov    %rsi,0x48(%rsp)
  0x0000024807453be3: mov    %rdi,0x40(%rsp)
  0x0000024807453be8: mov    %r8,0x38(%rsp)
  0x0000024807453bed: mov    %r9,0x30(%rsp)
  0x0000024807453bf2: mov    %r10,0x28(%rsp)
  0x0000024807453bf7: mov    %r11,0x20(%rsp)
  0x0000024807453bfc: mov    %r12,0x18(%rsp)
  0x0000024807453c01: mov    %r13,0x10(%rsp)
  0x0000024807453c06: mov    %r14,0x8(%rsp)
  0x0000024807453c0b: mov    %r15,(%rsp)
  0x0000024807453c0f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807453c19: movabs $0x24807453bb9,%rdx  ;   {internal_word}
  0x0000024807453c23: mov    %rsp,%r8
  0x0000024807453c26: and    $0xfffffffffffffff0,%rsp
  0x0000024807453c2a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807453c34: call   *%r10
  0x0000024807453c37: hlt    
[Deopt Handler Code]
  0x0000024807453c38: movabs $0x24807453c38,%r10  ;   {section_word}
  0x0000024807453c42: push   %r10
  0x0000024807453c44: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807453c49: hlt    
  0x0000024807453c4a: hlt    
  0x0000024807453c4b: hlt    
  0x0000024807453c4c: hlt    
  0x0000024807453c4d: hlt    
  0x0000024807453c4e: hlt    
  0x0000024807453c4f: hlt    
<nmethod compile_id='49' compiler='C1' level='3' entry='0x0000024807453a80' size='1176' address='0x0000024807453910' relocation_offset='288' insts_offset='368' stub_offset='656' scopes_data_offset='840' scopes_pcs_offset='928' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='409' iicount='409' stamp='0.987'/>
Decoding compiled method 0x0000024807453dd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x0000024807453f80: mov    0x8(%rdx),%r10d
  0x0000024807453f84: shl    $0x3,%r10
  0x0000024807453f88: cmp    %rax,%r10
  0x0000024807453f8b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807453f91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807453f9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807453fa0: mov    %eax,-0x6000(%rsp)
  0x0000024807453fa7: push   %rbp
  0x0000024807453fa8: sub    $0x60,%rsp
  0x0000024807453fac: mov    %rdx,%rbx
  0x0000024807453faf: mov    %r8,%r11
  0x0000024807453fb2: movabs $0x2481fe5a480,%rdx  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807453fbc: mov    0xdc(%rdx),%esi
  0x0000024807453fc2: add    $0x8,%esi
  0x0000024807453fc5: mov    %esi,0xdc(%rdx)
  0x0000024807453fcb: movabs $0x2481fb05cb8,%rdx  ;   {metadata({method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807453fd5: and    $0x1ff8,%esi
  0x0000024807453fdb: cmp    $0x0,%esi
  0x0000024807453fde: je     0x0000024807454276  ;*iload_1
                                                ; - java.lang.String::substring@0 (line 1959)

  0x0000024807453fe4: cmp    $0x0,%r11d
  0x0000024807453fe8: movabs $0x2481fe5a480,%rdx  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807453ff2: movabs $0x108,%rsi
  0x0000024807453ffc: jge    0x000002480745400c
  0x0000024807454002: movabs $0x118,%rsi
  0x000002480745400c: mov    (%rdx,%rsi,1),%rdi
  0x0000024807454010: lea    0x1(%rdi),%rdi
  0x0000024807454014: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807454018: jl     0x0000024807454236  ;*ifge
                                                ; - java.lang.String::substring@1 (line 1959)

  0x000002480745401e: mov    0xc(%rbx),%r8d
  0x0000024807454022: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::substring@15 (line 1962)

  0x0000024807454026: mov    0xc(%r8),%edx      ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ; implicit exception: dispatches to 0x000002480745428d
  0x000002480745402a: cmp    %edx,%r9d
  0x000002480745402d: movabs $0x2481fe5a480,%rsi  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807454037: movabs $0x138,%rdi
  0x0000024807454041: jle    0x0000024807454051
  0x0000024807454047: movabs $0x148,%rdi
  0x0000024807454051: mov    (%rsi,%rdi,1),%rax
  0x0000024807454055: lea    0x1(%rax),%rax
  0x0000024807454059: mov    %rax,(%rsi,%rdi,1)
  0x000002480745405d: jg     0x00000248074541f6  ;*if_icmple
                                                ; - java.lang.String::substring@19 (line 1962)

  0x0000024807454063: mov    %r9,%r13
  0x0000024807454066: sub    %r11d,%r13d
  0x0000024807454069: cmp    $0x0,%r13d
  0x000002480745406d: movabs $0x2481fe5a480,%rsi  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807454077: movabs $0x168,%rdi
  0x0000024807454081: jge    0x0000024807454091
  0x0000024807454087: movabs $0x178,%rdi
  0x0000024807454091: mov    (%rsi,%rdi,1),%rax
  0x0000024807454095: lea    0x1(%rax),%rax
  0x0000024807454099: mov    %rax,(%rsi,%rdi,1)
  0x000002480745409d: jl     0x00000248074541b4  ;*ifge
                                                ; - java.lang.String::substring@36 (line 1966)

  0x00000248074540a3: cmp    $0x0,%r11d
  0x00000248074540a7: movabs $0x2481fe5a480,%rsi  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000248074540b1: movabs $0x198,%rdi
  0x00000248074540bb: jne    0x00000248074540cb
  0x00000248074540c1: movabs $0x1a8,%rdi
  0x00000248074540cb: mov    (%rsi,%rdi,1),%rax
  0x00000248074540cf: lea    0x1(%rax),%rax
  0x00000248074540d3: mov    %rax,(%rsi,%rdi,1)
  0x00000248074540d7: jne    0x0000024807454116  ;*ifne
                                                ; - java.lang.String::substring@49 (line 1969)

  0x00000248074540dd: cmp    %edx,%r9d
  0x00000248074540e0: movabs $0x2481fe5a480,%rdx  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000248074540ea: movabs $0x1b8,%rsi
  0x00000248074540f4: jne    0x0000024807454104
  0x00000248074540fa: movabs $0x1c8,%rsi
  0x0000024807454104: mov    (%rdx,%rsi,1),%rdi
  0x0000024807454108: lea    0x1(%rdi),%rdi
  0x000002480745410c: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807454110: je     0x0000024807454195  ;*if_icmpne
                                                ; - java.lang.String::substring@58 (line 1969)

  0x0000024807454116: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000024807454120: mov    0x60(%r15),%rax
  0x0000024807454124: lea    0x18(%rax),%rdi
  0x0000024807454128: cmp    0x70(%r15),%rdi
  0x000002480745412c: ja     0x0000024807454292
  0x0000024807454132: mov    %rdi,0x60(%r15)
  0x0000024807454136: mov    0xa8(%rdx),%rcx
  0x000002480745413d: mov    %rcx,(%rax)
  0x0000024807454140: mov    %rdx,%rcx
  0x0000024807454143: shr    $0x3,%rcx
  0x0000024807454147: mov    %ecx,0x8(%rax)
  0x000002480745414a: xor    %rcx,%rcx
  0x000002480745414d: mov    %ecx,0xc(%rax)
  0x0000024807454150: xor    %rcx,%rcx
  0x0000024807454153: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::substring@65 (line 1969)

  0x0000024807454157: mov    %rax,%r9
  0x000002480745415a: movabs $0x2481fe5a480,%rdi  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807454164: addq   $0x1,0x1f0(%rdi)
  0x000002480745416c: mov    %r11,%r9
  0x000002480745416f: mov    %r13,%rdi
  0x0000024807454172: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@75 (line 1969)

  0x0000024807454175: mov    %rax,0x30(%rsp)
  0x000002480745417a: nop
  0x000002480745417b: nop
  0x000002480745417c: nop
  0x000002480745417d: nop
  0x000002480745417e: nop
  0x000002480745417f: call   0x0000024807375ee0  ; OopMap{[48]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@75 (line 1969)
                                                ;   {optimized virtual_call}
  0x0000024807454184: mov    0x30(%rsp),%rax    ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x0000024807454189: add    $0x60,%rsp
  0x000002480745418d: pop    %rbp
  0x000002480745418e: test   %eax,-0x1ea4094(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807454194: ret    
  0x0000024807454195: movabs $0x2481fe5a480,%rax  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480745419f: incl   0x1d8(%rax)
  0x00000248074541a5: mov    %rbx,%rax          ;*goto
                                                ; - java.lang.String::substring@62 (line 1969)

  0x00000248074541a8: add    $0x60,%rsp
  0x00000248074541ac: pop    %rbp
  0x00000248074541ad: test   %eax,-0x1ea40b3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074541b3: ret                       ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x00000248074541b4: nopl   0x0(%rax)
  0x00000248074541b8: jmp    0x00000248074542ae  ;   {no_reloc}
  0x00000248074541bd: add    %al,(%rax)
  0x00000248074541bf: add    %al,(%rax)
  0x00000248074541c1: add    %ch,%cl
  0x00000248074541c3: icebp  
  0x00000248074541c4: add    %al,(%rax)
  0x00000248074541c6: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::substring@39 (line 1967)

  0x00000248074541ca: movabs $0x2481fe5a480,%rdx  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000248074541d4: addq   $0x1,0x188(%rdx)
  0x00000248074541dc: mov    %r13,%r8
  0x00000248074541df: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@44 (line 1967)

  0x00000248074541e2: mov    %rax,0x38(%rsp)
  0x00000248074541e7: call   0x0000024807375ee0  ; OopMap{[56]=Oop off=620}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@44 (line 1967)
                                                ;   {optimized virtual_call}
  0x00000248074541ec: mov    0x38(%rsp),%rax
  0x00000248074541f1: jmp    0x000002480745433c  ;*athrow
                                                ; - java.lang.String::substring@47 (line 1967)

  0x00000248074541f6: xchg   %ax,%ax
  0x00000248074541f8: jmp    0x00000248074542d4  ;   {no_reloc}
  0x00000248074541fd: add    %al,(%rax)
  0x00000248074541ff: add    %al,(%rax)
  0x0000024807454201: add    %ch,%cl
  0x0000024807454203: xlat   %ds:(%rbx)
  0x0000024807454204: add    %al,(%rax)
  0x0000024807454206: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::substring@22 (line 1963)

  0x000002480745420a: movabs $0x2481fe5a480,%rdx  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807454214: addq   $0x1,0x158(%rdx)
  0x000002480745421c: mov    %r9,%r8
  0x000002480745421f: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@27 (line 1963)

  0x0000024807454222: mov    %rax,0x40(%rsp)
  0x0000024807454227: call   0x0000024807375ee0  ; OopMap{[64]=Oop off=684}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@27 (line 1963)
                                                ;   {optimized virtual_call}
  0x000002480745422c: mov    0x40(%rsp),%rax
  0x0000024807454231: jmp    0x000002480745433c  ;*athrow
                                                ; - java.lang.String::substring@30 (line 1963)

  0x0000024807454236: xchg   %ax,%ax
  0x0000024807454238: jmp    0x00000248074542fa  ;   {no_reloc}
  0x000002480745423d: add    %al,(%rax)
  0x000002480745423f: add    %al,(%rax)
  0x0000024807454241: add    %ch,%cl
  0x0000024807454243: mov    $0x4c000000,%ebp   ;*new  ; - java.lang.String::substring@4 (line 1960)

  0x0000024807454248: mov    %eax,%eax
  0x000002480745424a: movabs $0x2481fe5a480,%rdx  ;   {metadata(method data for {method} {0x000002481fb05cc0} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807454254: addq   $0x1,0x128(%rdx)
  0x000002480745425c: mov    %r11,%r8
  0x000002480745425f: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@9 (line 1960)

  0x0000024807454262: mov    %rax,0x48(%rsp)
  0x0000024807454267: call   0x0000024807375ee0  ; OopMap{[72]=Oop off=748}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@9 (line 1960)
                                                ;   {optimized virtual_call}
  0x000002480745426c: mov    0x48(%rsp),%rax
  0x0000024807454271: jmp    0x000002480745433c
  0x0000024807454276: mov    %rdx,0x8(%rsp)
  0x000002480745427b: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807454283: call   0x0000024807433da0  ; OopMap{rbx=Oop off=776}
                                                ;*synchronization entry
                                                ; - java.lang.String::substring@-1 (line 1959)
                                                ;   {runtime_call}
  0x0000024807454288: jmp    0x0000024807453fe4
  0x000002480745428d: call   0x000002480742f100  ; OopMap{rbx=Oop r8=Oop off=786}
                                                ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ;   {runtime_call}
  0x0000024807454292: mov    %rdx,%rdx
  0x0000024807454295: call   0x000002480742f900  ; OopMap{rbx=Oop r8=Oop off=794}
                                                ;*new  ; - java.lang.String::substring@65 (line 1969)
                                                ;   {runtime_call}
  0x000002480745429a: jmp    0x0000024807454157
  0x000002480745429f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000248074542a9: mov    $0xa050f00,%eax
  0x00000248074542ae: call   0x0000024807432b60  ; OopMap{off=819}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x00000248074542b3: jmp    0x00000248074541b8
  0x00000248074542b8: mov    %rdx,%rdx
  0x00000248074542bb: call   0x000002480742f5e0  ; OopMap{off=832}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x00000248074542c0: jmp    0x00000248074541c7
  0x00000248074542c5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000248074542cf: mov    $0xa050f00,%eax
  0x00000248074542d4: call   0x0000024807432b60  ; OopMap{off=857}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x00000248074542d9: jmp    0x00000248074541f8
  0x00000248074542de: mov    %rdx,%rdx
  0x00000248074542e1: call   0x000002480742f5e0  ; OopMap{off=870}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x00000248074542e6: jmp    0x0000024807454207
  0x00000248074542eb: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000248074542f5: mov    $0xa050f00,%eax
  0x00000248074542fa: call   0x0000024807432b60  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x00000248074542ff: jmp    0x0000024807454238
  0x0000024807454304: mov    %rdx,%rdx
  0x0000024807454307: call   0x000002480742f5e0  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x000002480745430c: jmp    0x0000024807454247
  0x0000024807454311: nop
  0x0000024807454312: nop
  0x0000024807454313: mov    0x308(%r15),%rax
  0x000002480745431a: movabs $0x0,%r10
  0x0000024807454324: mov    %r10,0x308(%r15)
  0x000002480745432b: movabs $0x0,%r10
  0x0000024807454335: mov    %r10,0x310(%r15)
  0x000002480745433c: add    $0x60,%rsp
  0x0000024807454340: pop    %rbp
  0x0000024807454341: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807454346: hlt    
  0x0000024807454347: hlt    
  0x0000024807454348: hlt    
  0x0000024807454349: hlt    
  0x000002480745434a: hlt    
  0x000002480745434b: hlt    
  0x000002480745434c: hlt    
  0x000002480745434d: hlt    
  0x000002480745434e: hlt    
  0x000002480745434f: hlt    
  0x0000024807454350: hlt    
  0x0000024807454351: hlt    
  0x0000024807454352: hlt    
  0x0000024807454353: hlt    
  0x0000024807454354: hlt    
  0x0000024807454355: hlt    
  0x0000024807454356: hlt    
  0x0000024807454357: hlt    
  0x0000024807454358: hlt    
  0x0000024807454359: hlt    
  0x000002480745435a: hlt    
  0x000002480745435b: hlt    
  0x000002480745435c: hlt    
  0x000002480745435d: hlt    
  0x000002480745435e: hlt    
  0x000002480745435f: hlt    
[Stub Code]
  0x0000024807454360: nop                       ;   {no_reloc}
  0x0000024807454361: nop
  0x0000024807454362: nop
  0x0000024807454363: nop
  0x0000024807454364: nop
  0x0000024807454365: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745436f: jmp    0x000002480745436f  ;   {runtime_call}
  0x0000024807454374: nop
  0x0000024807454375: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745437f: jmp    0x000002480745437f  ;   {runtime_call}
  0x0000024807454384: nop
  0x0000024807454385: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745438f: jmp    0x000002480745438f  ;   {runtime_call}
  0x0000024807454394: nop
  0x0000024807454395: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745439f: jmp    0x000002480745439f  ;   {runtime_call}
[Exception Handler]
  0x00000248074543a4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074543a9: mov    %rsp,-0x28(%rsp)
  0x00000248074543ae: sub    $0x80,%rsp
  0x00000248074543b5: mov    %rax,0x78(%rsp)
  0x00000248074543ba: mov    %rcx,0x70(%rsp)
  0x00000248074543bf: mov    %rdx,0x68(%rsp)
  0x00000248074543c4: mov    %rbx,0x60(%rsp)
  0x00000248074543c9: mov    %rbp,0x50(%rsp)
  0x00000248074543ce: mov    %rsi,0x48(%rsp)
  0x00000248074543d3: mov    %rdi,0x40(%rsp)
  0x00000248074543d8: mov    %r8,0x38(%rsp)
  0x00000248074543dd: mov    %r9,0x30(%rsp)
  0x00000248074543e2: mov    %r10,0x28(%rsp)
  0x00000248074543e7: mov    %r11,0x20(%rsp)
  0x00000248074543ec: mov    %r12,0x18(%rsp)
  0x00000248074543f1: mov    %r13,0x10(%rsp)
  0x00000248074543f6: mov    %r14,0x8(%rsp)
  0x00000248074543fb: mov    %r15,(%rsp)
  0x00000248074543ff: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807454409: movabs $0x248074543a9,%rdx  ;   {internal_word}
  0x0000024807454413: mov    %rsp,%r8
  0x0000024807454416: and    $0xfffffffffffffff0,%rsp
  0x000002480745441a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807454424: call   *%r10
  0x0000024807454427: hlt    
[Deopt Handler Code]
  0x0000024807454428: movabs $0x24807454428,%r10  ;   {section_word}
  0x0000024807454432: push   %r10
  0x0000024807454434: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807454439: hlt    
  0x000002480745443a: hlt    
  0x000002480745443b: hlt    
  0x000002480745443c: hlt    
  0x000002480745443d: hlt    
  0x000002480745443e: hlt    
  0x000002480745443f: hlt    
<nmethod compile_id='48' compiler='C1' level='3' entry='0x0000024807453f80' size='2520' address='0x0000024807453dd0' relocation_offset='288' insts_offset='432' stub_offset='1424' scopes_data_offset='1656' scopes_pcs_offset='1920' dependencies_offset='2496' nul_chk_table_offset='2504' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='539' iicount='539' stamp='1.004'/>
<writer thread='27436'/>
<task_queued compile_id='61' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='150' backedge_count='4096' iicount='150' level='3' stamp='1.004' comment='tiered' hot_count='150'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074547d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc95340} &apos;ordinal&apos; &apos;()I&apos; in &apos;java/lang/Enum&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807454920: mov    0x8(%rdx),%r10d
  0x0000024807454924: shl    $0x3,%r10
  0x0000024807454928: cmp    %rax,%r10
  0x000002480745492b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807454931: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745493c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807454940: mov    %eax,-0x6000(%rsp)
  0x0000024807454947: push   %rbp
  0x0000024807454948: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.Enum::ordinal@0 (line 103)

  0x000002480745494c: mov    0xc(%rdx),%eax     ;*getfield ordinal
                                                ; - java.lang.Enum::ordinal@1 (line 103)

  0x000002480745494f: add    $0x30,%rsp
  0x0000024807454953: pop    %rbp
  0x0000024807454954: test   %eax,-0x1ea485a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745495a: ret    
  0x000002480745495b: nop
  0x000002480745495c: nop
  0x000002480745495d: mov    0x308(%r15),%rax
  0x0000024807454964: movabs $0x0,%r10
  0x000002480745496e: mov    %r10,0x308(%r15)
  0x0000024807454975: movabs $0x0,%r10
  0x000002480745497f: mov    %r10,0x310(%r15)
  0x0000024807454986: add    $0x30,%rsp
  0x000002480745498a: pop    %rbp
  0x000002480745498b: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807454990: hlt    
  0x0000024807454991: hlt    
  0x0000024807454992: hlt    
  0x0000024807454993: hlt    
  0x0000024807454994: hlt    
  0x0000024807454995: hlt    
  0x0000024807454996: hlt    
  0x0000024807454997: hlt    
  0x0000024807454998: hlt    
  0x0000024807454999: hlt    
  0x000002480745499a: hlt    
  0x000002480745499b: hlt    
  0x000002480745499c: hlt    
  0x000002480745499d: hlt    
  0x000002480745499e: hlt    
  0x000002480745499f: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074549a0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074549a5: mov    %rsp,-0x28(%rsp)
  0x00000248074549aa: sub    $0x80,%rsp
  0x00000248074549b1: mov    %rax,0x78(%rsp)
  0x00000248074549b6: mov    %rcx,0x70(%rsp)
  0x00000248074549bb: mov    %rdx,0x68(%rsp)
  0x00000248074549c0: mov    %rbx,0x60(%rsp)
  0x00000248074549c5: mov    %rbp,0x50(%rsp)
  0x00000248074549ca: mov    %rsi,0x48(%rsp)
  0x00000248074549cf: mov    %rdi,0x40(%rsp)
  0x00000248074549d4: mov    %r8,0x38(%rsp)
  0x00000248074549d9: mov    %r9,0x30(%rsp)
  0x00000248074549de: mov    %r10,0x28(%rsp)
  0x00000248074549e3: mov    %r11,0x20(%rsp)
  0x00000248074549e8: mov    %r12,0x18(%rsp)
  0x00000248074549ed: mov    %r13,0x10(%rsp)
  0x00000248074549f2: mov    %r14,0x8(%rsp)
  0x00000248074549f7: mov    %r15,(%rsp)
  0x00000248074549fb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807454a05: movabs $0x248074549a5,%rdx  ;   {internal_word}
  0x0000024807454a0f: mov    %rsp,%r8
  0x0000024807454a12: and    $0xfffffffffffffff0,%rsp
  0x0000024807454a16: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807454a20: call   *%r10
  0x0000024807454a23: hlt    
[Deopt Handler Code]
  0x0000024807454a24: movabs $0x24807454a24,%r10  ;   {section_word}
  0x0000024807454a2e: push   %r10
  0x0000024807454a30: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807454a35: hlt    
  0x0000024807454a36: hlt    
  0x0000024807454a37: hlt    
<nmethod compile_id='54' compiler='C1' level='1' entry='0x0000024807454920' size='712' address='0x00000248074547d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Enum ordinal ()I' bytes='5' count='196' iicount='196' stamp='1.008'/>
<writer thread='27436'/>
<task_queued compile_id='62' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='640' iicount='640' level='3' stamp='1.008' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807454ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x0000024807454cc0: mov    0x8(%rdx),%r10d
  0x0000024807454cc4: shl    $0x3,%r10
  0x0000024807454cc8: cmp    %rax,%r10
  0x0000024807454ccb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807454cd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807454cdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807454ce0: mov    %eax,-0x6000(%rsp)
  0x0000024807454ce7: push   %rbp
  0x0000024807454ce8: sub    $0x90,%rsp
  0x0000024807454cef: mov    %rdx,0x48(%rsp)
  0x0000024807454cf4: mov    %r8,0x58(%rsp)
  0x0000024807454cf9: movabs $0x2481fe5c3a8,%rsi  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807454d03: mov    0xdc(%rsi),%edi
  0x0000024807454d09: add    $0x8,%edi
  0x0000024807454d0c: mov    %edi,0xdc(%rsi)
  0x0000024807454d12: movabs $0x2481fe3f868,%rsi  ;   {metadata({method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807454d1c: and    $0x1ff8,%edi
  0x0000024807454d22: cmp    $0x0,%edi
  0x0000024807454d25: je     0x00000248074552ce  ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@0 (line 240)

  0x0000024807454d2b: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x00000248074552e5
  0x0000024807454d2e: mov    %r8,%rsi
  0x0000024807454d31: movabs $0x2481fe5c3a8,%rdi  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807454d3b: mov    0x8(%rsi),%esi
  0x0000024807454d3e: shl    $0x3,%rsi
  0x0000024807454d42: cmp    0x110(%rdi),%rsi
  0x0000024807454d49: jne    0x0000024807454d58
  0x0000024807454d4b: addq   $0x1,0x118(%rdi)
  0x0000024807454d53: jmp    0x0000024807454dbe
  0x0000024807454d58: cmp    0x120(%rdi),%rsi
  0x0000024807454d5f: jne    0x0000024807454d6e
  0x0000024807454d61: addq   $0x1,0x128(%rdi)
  0x0000024807454d69: jmp    0x0000024807454dbe
  0x0000024807454d6e: cmpq   $0x0,0x110(%rdi)
  0x0000024807454d79: jne    0x0000024807454d92
  0x0000024807454d7b: mov    %rsi,0x110(%rdi)
  0x0000024807454d82: movq   $0x1,0x118(%rdi)
  0x0000024807454d8d: jmp    0x0000024807454dbe
  0x0000024807454d92: cmpq   $0x0,0x120(%rdi)
  0x0000024807454d9d: jne    0x0000024807454db6
  0x0000024807454d9f: mov    %rsi,0x120(%rdi)
  0x0000024807454da6: movq   $0x1,0x128(%rdi)
  0x0000024807454db1: jmp    0x0000024807454dbe
  0x0000024807454db6: addq   $0x1,0x108(%rdi)
  0x0000024807454dbe: movabs $0x2481fc35dc0,%rsi  ;   {metadata(method data for {method} {0x000002481fb03c68} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807454dc8: mov    0xdc(%rsi),%edi
  0x0000024807454dce: add    $0x8,%edi
  0x0000024807454dd1: mov    %edi,0xdc(%rsi)
  0x0000024807454dd7: movabs $0x2481fb03c60,%rsi  ;   {metadata({method} {0x000002481fb03c68} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000024807454de1: and    $0x7ffff8,%edi
  0x0000024807454de7: cmp    $0x0,%edi
  0x0000024807454dea: je     0x00000248074552ea
  0x0000024807454df0: mov    0xc(%r8),%esi
  0x0000024807454df4: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x0000024807454df8: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x0000024807455301
  0x0000024807454dfb: mov    %esi,0x50(%rsp)
  0x0000024807454dff: cmp    $0xffff,%esi
  0x0000024807454e05: movabs $0x2481fe5c3a8,%rdi  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807454e0f: movabs $0x138,%rbx
  0x0000024807454e19: jle    0x0000024807454e29
  0x0000024807454e1f: movabs $0x148,%rbx
  0x0000024807454e29: mov    (%rdi,%rbx,1),%rax
  0x0000024807454e2d: lea    0x1(%rax),%rax
  0x0000024807454e31: mov    %rax,(%rdi,%rbx,1)
  0x0000024807454e35: jg     0x0000024807455256  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x0000024807454e3b: mov    0xc(%rdx),%edi     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@20 (line 244)

  0x0000024807454e3e: mov    0x10(%rdx),%ebx
  0x0000024807454e41: shl    $0x3,%rbx          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@30 (line 245)

  0x0000024807454e45: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ; implicit exception: dispatches to 0x0000024807455306
  0x0000024807454e48: mov    %rdi,%rax
  0x0000024807454e4b: add    $0x2,%eax
  0x0000024807454e4e: add    %esi,%eax
  0x0000024807454e50: cmp    %ebx,%eax
  0x0000024807454e52: movabs $0x2481fe5c3a8,%rbx  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807454e5c: movabs $0x168,%rax
  0x0000024807454e66: jle    0x0000024807454e76
  0x0000024807454e6c: movabs $0x178,%rax
  0x0000024807454e76: mov    (%rbx,%rax,1),%rcx
  0x0000024807454e7a: lea    0x1(%rcx),%rcx
  0x0000024807454e7e: mov    %rcx,(%rbx,%rax,1)
  0x0000024807454e82: jle    0x0000024807454ec5  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@34 (line 245)

  0x0000024807454e88: mov    %edi,0x54(%rsp)
  0x0000024807454e8c: mov    %rdx,%rbx
  0x0000024807454e8f: movabs $0x2481fe5c3a8,%rax  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807454e99: addq   $0x1,0x188(%rax)
  0x0000024807454ea1: mov    %rsi,%rbx
  0x0000024807454ea4: add    $0x2,%ebx
  0x0000024807454ea7: mov    %rbx,%r8
  0x0000024807454eaa: mov    %rdx,%rbx
  0x0000024807454ead: mov    %rbx,%rdx          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)

  0x0000024807454eb0: nop
  0x0000024807454eb1: nop
  0x0000024807454eb2: nop
  0x0000024807454eb3: nop
  0x0000024807454eb4: nop
  0x0000024807454eb5: nop
  0x0000024807454eb6: nop
  0x0000024807454eb7: call   0x0000024807375ee0  ; OopMap{[72]=Oop [88]=Oop off=508}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {optimized virtual_call}
  0x0000024807454ebc: mov    0x54(%rsp),%edi
  0x0000024807454ec0: mov    0x48(%rsp),%rdx
  0x0000024807454ec5: mov    0x10(%rdx),%esi
  0x0000024807454ec8: shl    $0x3,%rsi          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x0000024807454ecc: mov    0x50(%rsp),%r8d
  0x0000024807454ed1: shr    $0x8,%r8d
  0x0000024807454ed5: movslq %edi,%r9
  0x0000024807454ed8: cmp    0xc(%rsi),%edi     ; implicit exception: dispatches to 0x000002480745530b
  0x0000024807454edb: jae    0x0000024807455315
  0x0000024807454ee1: mov    %r8b,0x10(%rsi,%r9,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x0000024807454ee6: inc    %edi
  0x0000024807454ee8: mov    %rdi,%r8
  0x0000024807454eeb: inc    %r8d
  0x0000024807454eee: mov    0x50(%rsp),%r9d
  0x0000024807454ef3: movslq %edi,%rbx
  0x0000024807454ef6: cmp    0xc(%rsi),%edi
  0x0000024807454ef9: jae    0x000002480745531e
  0x0000024807454eff: mov    %r9b,0x10(%rsi,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x0000024807454f04: mov    $0x0,%edi          ;*iload
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@74 (line 257)

  0x0000024807454f09: mov    0x50(%rsp),%ebx
  0x0000024807454f0d: mov    0x58(%rsp),%rcx
  0x0000024807454f12: nopw   0x0(%rax,%rax,1)
  0x0000024807454f18: cmp    %ebx,%edi
  0x0000024807454f1a: movabs $0x2481fe5c3a8,%r9  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807454f24: movabs $0x198,%rax
  0x0000024807454f2e: jge    0x0000024807454f3e
  0x0000024807454f34: movabs $0x1a8,%rax
  0x0000024807454f3e: mov    (%r9,%rax,1),%r11
  0x0000024807454f42: lea    0x1(%r11),%r11
  0x0000024807454f46: mov    %r11,(%r9,%rax,1)
  0x0000024807454f4a: jge    0x00000248074551eb  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000024807454f50: mov    %rcx,%r9
  0x0000024807454f53: movabs $0x2481fe5c3a8,%rax  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807454f5d: mov    0x8(%r9),%r9d
  0x0000024807454f61: shl    $0x3,%r9
  0x0000024807454f65: cmp    0x1c0(%rax),%r9
  0x0000024807454f6c: jne    0x0000024807454f7b
  0x0000024807454f6e: addq   $0x1,0x1c8(%rax)
  0x0000024807454f76: jmp    0x0000024807454fe1
  0x0000024807454f7b: cmp    0x1d0(%rax),%r9
  0x0000024807454f82: jne    0x0000024807454f91
  0x0000024807454f84: addq   $0x1,0x1d8(%rax)
  0x0000024807454f8c: jmp    0x0000024807454fe1
  0x0000024807454f91: cmpq   $0x0,0x1c0(%rax)
  0x0000024807454f9c: jne    0x0000024807454fb5
  0x0000024807454f9e: mov    %r9,0x1c0(%rax)
  0x0000024807454fa5: movq   $0x1,0x1c8(%rax)
  0x0000024807454fb0: jmp    0x0000024807454fe1
  0x0000024807454fb5: cmpq   $0x0,0x1d0(%rax)
  0x0000024807454fc0: jne    0x0000024807454fd9
  0x0000024807454fc2: mov    %r9,0x1d0(%rax)
  0x0000024807454fc9: movq   $0x1,0x1d8(%rax)
  0x0000024807454fd4: jmp    0x0000024807454fe1
  0x0000024807454fd9: addq   $0x1,0x1b8(%rax)
  0x0000024807454fe1: movabs $0x2481fc35c48,%r9  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807454feb: mov    0xdc(%r9),%eax
  0x0000024807454ff2: add    $0x8,%eax
  0x0000024807454ff5: mov    %eax,0xdc(%r9)
  0x0000024807454ffc: movabs $0x2481fb03db0,%r9  ;   {metadata({method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807455006: and    $0x7ffff8,%eax
  0x000002480745500c: cmp    $0x0,%eax
  0x000002480745500f: je     0x0000024807455327
  0x0000024807455015: cmp    $0x0,%edi
  0x0000024807455018: movabs $0x2481fc35c48,%r9  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807455022: movabs $0x108,%rax
  0x000002480745502c: jl     0x000002480745503c
  0x0000024807455032: movabs $0x118,%rax
  0x000002480745503c: mov    (%r9,%rax,1),%r11
  0x0000024807455040: lea    0x1(%r11),%r11
  0x0000024807455044: mov    %r11,(%r9,%rax,1)
  0x0000024807455048: jl     0x0000024807455201  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000002480745504e: mov    0xc(%rcx),%r9d
  0x0000024807455052: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807455056: mov    0xc(%r9),%eax      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ; implicit exception: dispatches to 0x000002480745533e
  0x000002480745505a: cmp    %eax,%edi
  0x000002480745505c: movabs $0x2481fc35c48,%rax  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807455066: movabs $0x128,%r11
  0x0000024807455070: jl     0x0000024807455080
  0x0000024807455076: movabs $0x138,%r11
  0x0000024807455080: mov    (%rax,%r11,1),%r13
  0x0000024807455084: lea    0x1(%r13),%r13
  0x0000024807455088: mov    %r13,(%rax,%r11,1)
  0x000002480745508c: jge    0x0000024807455201  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807455092: movslq %edi,%rax
  0x0000024807455095: cmp    0xc(%r9),%edi
  0x0000024807455099: jae    0x0000024807455343
  0x000002480745509f: movzwl 0x10(%r9,%rax,2),%r9d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x00000248074550a5: and    $0xffff,%r9d
  0x00000248074550ac: cmp    $0x1,%r9d
  0x00000248074550b0: movabs $0x2481fe5c3a8,%rax  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000248074550ba: movabs $0x1e8,%r11
  0x00000248074550c4: jl     0x00000248074550d4
  0x00000248074550ca: movabs $0x1f8,%r11
  0x00000248074550d4: mov    (%rax,%r11,1),%r13
  0x00000248074550d8: lea    0x1(%r13),%r13
  0x00000248074550dc: mov    %r13,(%rax,%r11,1)
  0x00000248074550e0: jl     0x00000248074551a0  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x00000248074550e6: cmp    $0x7f,%r9d
  0x00000248074550ea: movabs $0x2481fe5c3a8,%rax  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000248074550f4: movabs $0x208,%r11
  0x00000248074550fe: jg     0x000002480745510e
  0x0000024807455104: movabs $0x218,%r11
  0x000002480745510e: mov    (%rax,%r11,1),%r13
  0x0000024807455112: lea    0x1(%r13),%r13
  0x0000024807455116: mov    %r13,(%rax,%r11,1)
  0x000002480745511a: jg     0x00000248074551a0  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000024807455120: mov    %r8,%rax
  0x0000024807455123: inc    %eax
  0x0000024807455125: movslq %r8d,%r11
  0x0000024807455128: cmp    0xc(%rsi),%r8d
  0x000002480745512c: jae    0x000002480745534c
  0x0000024807455132: mov    %r9b,0x10(%rsi,%r11,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000024807455137: movabs $0x2481fe5c3a8,%r8  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807455141: incl   0x228(%r8)         ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@111 (line 260)

  0x0000024807455148: inc    %edi
  0x000002480745514a: movabs $0x2481fe5c3a8,%r8  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807455154: mov    0xe0(%r8),%r9d
  0x000002480745515b: add    $0x8,%r9d
  0x000002480745515f: mov    %r9d,0xe0(%r8)
  0x0000024807455166: movabs $0x2481fe3f868,%r8  ;   {metadata({method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807455170: and    $0xfff8,%r9d
  0x0000024807455177: cmp    $0x0,%r9d
  0x000002480745517b: je     0x0000024807455355  ; OopMap{rdx=Oop [72]=Oop rsi=Oop rcx=Oop [88]=Oop off=1217}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x0000024807455181: test   %eax,-0x1ea5087(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807455187: movabs $0x2481fe5c3a8,%r8  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807455191: incl   0x270(%r8)
  0x0000024807455198: mov    %rax,%r8
  0x000002480745519b: jmp    0x0000024807454f18  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x00000248074551a0: mov    %r8d,0xc(%rdx)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@116 (line 262)

  0x00000248074551a4: mov    %rdx,%r8
  0x00000248074551a7: movabs $0x2481fe5c3a8,%r9  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000248074551b1: movabs $0x7c005f9c0,%r10  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000248074551bb: mov    %r10,0x248(%r9)
  0x00000248074551c2: addq   $0x1,0x250(%r9)
  0x00000248074551ca: mov    %rcx,%r8
  0x00000248074551cd: mov    %rdi,%r9
  0x00000248074551d0: mov    $0xffff,%edi       ;*invokevirtual encodeUTF8
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@125 (line 263)

  0x00000248074551d5: nop
  0x00000248074551d6: nop
  0x00000248074551d7: call   0x0000024807375ee0  ; OopMap{off=1308}
                                                ;*invokevirtual encodeUTF8
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@125 (line 263)
                                                ;   {optimized virtual_call}
  0x00000248074551dc: add    $0x90,%rsp
  0x00000248074551e3: pop    %rbp
  0x00000248074551e4: test   %eax,-0x1ea50ea(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074551ea: ret                       ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@128 (line 263)

  0x00000248074551eb: mov    %r8d,0xc(%rdx)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@137 (line 266)

  0x00000248074551ef: mov    %rdx,%rax
  0x00000248074551f2: add    $0x90,%rsp
  0x00000248074551f9: pop    %rbp
  0x00000248074551fa: test   %eax,-0x1ea5100(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807455200: ret                       ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@141 (line 267)

  0x0000024807455201: mov    %r8d,0x70(%rsp)
  0x0000024807455206: mov    %rsi,0x68(%rsp)
  0x000002480745520b: nopl   0x0(%rax,%rax,1)
  0x0000024807455210: jmp    0x000002480745537b  ;   {no_reloc}
  0x0000024807455215: add    %al,(%rax)
  0x0000024807455217: add    %al,(%rax)
  0x0000024807455219: add    %ch,%cl
  0x000002480745521b: add    %ax,(%rax)
  0x000002480745521e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807455221: rorb   -0x45(%rcx)        ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807455224: rex.W pop %rsp
  0x0000024807455226: ret    
  0x0000024807455227: (bad)  
  0x0000024807455228: rex.W add (%rax),%al
  0x000002480745522b: add    %cl,-0x7d(%rcx)
  0x000002480745522e: orl    $0x0,0x1(%rax)
  0x0000024807455232: add    %al,(%rcx)
  0x0000024807455234: mov    %rdi,%r8
  0x0000024807455237: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000002480745523a: mov    %edi,0x74(%rsp)
  0x000002480745523e: mov    %rax,0x60(%rsp)
  0x0000024807455243: nop
  0x0000024807455244: nop
  0x0000024807455245: nop
  0x0000024807455246: nop
  0x0000024807455247: call   0x0000024807375ee0  ; OopMap{[88]=Oop [96]=Oop [72]=Oop [104]=Oop off=1420}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {optimized virtual_call}
  0x000002480745524c: mov    0x60(%rsp),%rax
  0x0000024807455251: jmp    0x00000248074553e3  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807455256: xchg   %ax,%ax
  0x0000024807455258: jmp    0x00000248074553a1  ;   {no_reloc}
  0x000002480745525d: add    %al,(%rax)
  0x000002480745525f: add    %al,(%rax)
  0x0000024807455261: add    %cl,-0x75(%rcx)
  0x0000024807455264: rex.RXB (bad) 
  0x0000024807455266: lea    0x20(%rax),%rdi
  0x000002480745526a: cmp    0x70(%r15),%rdi
  0x000002480745526e: ja     0x00000248074553ab
  0x0000024807455274: mov    %rdi,0x60(%r15)
  0x0000024807455278: mov    0xa8(%rdx),%rcx
  0x000002480745527f: mov    %rcx,(%rax)
  0x0000024807455282: mov    %rdx,%rcx
  0x0000024807455285: shr    $0x3,%rcx
  0x0000024807455289: mov    %ecx,0x8(%rax)
  0x000002480745528c: xor    %rcx,%rcx
  0x000002480745528f: mov    %ecx,0xc(%rax)
  0x0000024807455292: xor    %rcx,%rcx
  0x0000024807455295: mov    %rcx,0x10(%rax)
  0x0000024807455299: mov    %rcx,0x18(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)

  0x000002480745529d: mov    %rax,%rdx
  0x00000248074552a0: movabs $0x2481fe5c3a8,%rsi  ;   {metadata(method data for {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000248074552aa: addq   $0x1,0x158(%rsi)
  0x00000248074552b2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@15 (line 242)

  0x00000248074552b5: mov    %rax,0x78(%rsp)
  0x00000248074552ba: nop
  0x00000248074552bb: nop
  0x00000248074552bc: nop
  0x00000248074552bd: nop
  0x00000248074552be: nop
  0x00000248074552bf: call   0x0000024807375ee0  ; OopMap{[120]=Oop off=1540}
                                                ;*invokespecial &lt;init&gt;
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@15 (line 242)
                                                ;   {optimized virtual_call}
  0x00000248074552c4: mov    0x78(%rsp),%rax
  0x00000248074552c9: jmp    0x00000248074553e3
  0x00000248074552ce: mov    %rsi,0x8(%rsp)
  0x00000248074552d3: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074552db: call   0x0000024807433da0  ; OopMap{rdx=Oop [72]=Oop r8=Oop [88]=Oop off=1568}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 240)
                                                ;   {runtime_call}
  0x00000248074552e0: jmp    0x0000024807454d2b
  0x00000248074552e5: call   0x000002480742f100  ; OopMap{rdx=Oop [72]=Oop r8=Oop [88]=Oop off=1578}
                                                ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x00000248074552ea: mov    %rsi,0x8(%rsp)
  0x00000248074552ef: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074552f7: call   0x0000024807433da0  ; OopMap{rdx=Oop [72]=Oop r8=Oop [88]=Oop off=1596}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x00000248074552fc: jmp    0x0000024807454df0
  0x0000024807455301: call   0x000002480742f100  ; OopMap{rdx=Oop [72]=Oop r8=Oop [88]=Oop off=1606}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x0000024807455306: call   0x000002480742f100  ; OopMap{rdx=Oop [72]=Oop r8=Oop [88]=Oop off=1611}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call}
  0x000002480745530b: call   0x000002480742f100  ; OopMap{[88]=Oop rdx=Oop [72]=Oop rsi=Oop off=1616}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x0000024807455310: call   0x000002480742f100  ; OopMap{[88]=Oop rdx=Oop [72]=Oop rsi=Oop off=1621}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x0000024807455315: mov    %rdi,(%rsp)
  0x0000024807455319: call   0x000002480742e800  ; OopMap{[88]=Oop rdx=Oop [72]=Oop rsi=Oop off=1630}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x000002480745531e: mov    %rdi,(%rsp)
  0x0000024807455322: call   0x000002480742e800  ; OopMap{[88]=Oop rdx=Oop [72]=Oop rsi=Oop off=1639}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x0000024807455327: mov    %r9,0x8(%rsp)
  0x000002480745532c: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807455334: call   0x0000024807433da0  ; OopMap{rdx=Oop [72]=Oop rsi=Oop rcx=Oop [88]=Oop off=1657}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x0000024807455339: jmp    0x0000024807455015
  0x000002480745533e: call   0x000002480742f100  ; OopMap{rdx=Oop [72]=Oop rsi=Oop rcx=Oop [88]=Oop r9=Oop off=1667}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x0000024807455343: mov    %rdi,(%rsp)
  0x0000024807455347: call   0x000002480742e800  ; OopMap{rdx=Oop [72]=Oop rsi=Oop rcx=Oop [88]=Oop r9=Oop off=1676}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000002480745534c: mov    %r8,(%rsp)
  0x0000024807455350: call   0x000002480742e800  ; OopMap{rdx=Oop [72]=Oop rsi=Oop rcx=Oop [88]=Oop off=1685}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)
                                                ;   {runtime_call}
  0x0000024807455355: mov    %r8,0x8(%rsp)
  0x000002480745535a: movq   $0x84,(%rsp)
  0x0000024807455362: call   0x0000024807433da0  ; OopMap{rdx=Oop [72]=Oop rsi=Oop rcx=Oop [88]=Oop off=1703}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)
                                                ;   {runtime_call}
  0x0000024807455367: jmp    0x0000024807455181
  0x000002480745536c: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807455376: mov    $0xa050f00,%eax
  0x000002480745537b: call   0x0000024807432b60  ; OopMap{[88]=Oop [104]=Oop [72]=Oop off=1728}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x0000024807455380: jmp    0x0000024807455210
  0x0000024807455385: mov    %rdx,%rdx
  0x0000024807455388: call   0x000002480742f5e0  ; OopMap{[88]=Oop [104]=Oop [72]=Oop off=1741}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000002480745538d: jmp    0x000002480745521f
  0x0000024807455392: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480745539c: mov    $0xa050f00,%eax
  0x00000248074553a1: call   0x0000024807432b60  ; OopMap{off=1766}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)
                                                ;   {runtime_call}
  0x00000248074553a6: jmp    0x0000024807455258
  0x00000248074553ab: mov    %rdx,%rdx
  0x00000248074553ae: call   0x000002480742f900  ; OopMap{off=1779}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)
                                                ;   {runtime_call}
  0x00000248074553b3: jmp    0x000002480745529d
  0x00000248074553b8: nop
  0x00000248074553b9: nop
  0x00000248074553ba: mov    0x308(%r15),%rax
  0x00000248074553c1: movabs $0x0,%r10
  0x00000248074553cb: mov    %r10,0x308(%r15)
  0x00000248074553d2: movabs $0x0,%r10
  0x00000248074553dc: mov    %r10,0x310(%r15)
  0x00000248074553e3: add    $0x90,%rsp
  0x00000248074553ea: pop    %rbp
  0x00000248074553eb: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074553f0: hlt    
  0x00000248074553f1: hlt    
  0x00000248074553f2: hlt    
  0x00000248074553f3: hlt    
  0x00000248074553f4: hlt    
  0x00000248074553f5: hlt    
  0x00000248074553f6: hlt    
  0x00000248074553f7: hlt    
  0x00000248074553f8: hlt    
  0x00000248074553f9: hlt    
  0x00000248074553fa: hlt    
  0x00000248074553fb: hlt    
  0x00000248074553fc: hlt    
  0x00000248074553fd: hlt    
  0x00000248074553fe: hlt    
  0x00000248074553ff: hlt    
[Stub Code]
  0x0000024807455400: nop                       ;   {no_reloc}
  0x0000024807455401: nop
  0x0000024807455402: nop
  0x0000024807455403: nop
  0x0000024807455404: nop
  0x0000024807455405: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745540f: jmp    0x000002480745540f  ;   {runtime_call}
  0x0000024807455414: nop
  0x0000024807455415: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745541f: jmp    0x000002480745541f  ;   {runtime_call}
  0x0000024807455424: nop
  0x0000024807455425: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745542f: jmp    0x000002480745542f  ;   {runtime_call}
  0x0000024807455434: nop
  0x0000024807455435: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745543f: jmp    0x000002480745543f  ;   {runtime_call}
[Exception Handler]
  0x0000024807455444: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807455449: mov    %rsp,-0x28(%rsp)
  0x000002480745544e: sub    $0x80,%rsp
  0x0000024807455455: mov    %rax,0x78(%rsp)
  0x000002480745545a: mov    %rcx,0x70(%rsp)
  0x000002480745545f: mov    %rdx,0x68(%rsp)
  0x0000024807455464: mov    %rbx,0x60(%rsp)
  0x0000024807455469: mov    %rbp,0x50(%rsp)
  0x000002480745546e: mov    %rsi,0x48(%rsp)
  0x0000024807455473: mov    %rdi,0x40(%rsp)
  0x0000024807455478: mov    %r8,0x38(%rsp)
  0x000002480745547d: mov    %r9,0x30(%rsp)
  0x0000024807455482: mov    %r10,0x28(%rsp)
  0x0000024807455487: mov    %r11,0x20(%rsp)
  0x000002480745548c: mov    %r12,0x18(%rsp)
  0x0000024807455491: mov    %r13,0x10(%rsp)
  0x0000024807455496: mov    %r14,0x8(%rsp)
  0x000002480745549b: mov    %r15,(%rsp)
  0x000002480745549f: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074554a9: movabs $0x24807455449,%rdx  ;   {internal_word}
  0x00000248074554b3: mov    %rsp,%r8
  0x00000248074554b6: and    $0xfffffffffffffff0,%rsp
  0x00000248074554ba: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074554c4: call   *%r10
  0x00000248074554c7: hlt    
[Deopt Handler Code]
  0x00000248074554c8: movabs $0x248074554c8,%r10  ;   {section_word}
  0x00000248074554d2: push   %r10
  0x00000248074554d4: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074554d9: hlt    
  0x00000248074554da: hlt    
  0x00000248074554db: hlt    
  0x00000248074554dc: hlt    
  0x00000248074554dd: hlt    
  0x00000248074554de: hlt    
  0x00000248074554df: hlt    
<nmethod compile_id='61' compiler='C1' level='3' entry='0x0000024807454cc0' size='4176' address='0x0000024807454ad0' relocation_offset='288' insts_offset='496' stub_offset='2352' scopes_data_offset='2608' scopes_pcs_offset='3152' dependencies_offset='4112' nul_chk_table_offset='4120' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='190' backedge_count='4903' iicount='190' stamp='1.041'/>
<writer thread='27436'/>
<task_queued compile_id='63' method='java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='128' iicount='128' level='1' stamp='1.041' comment='tiered' hot_count='128'/>
<task_queued compile_id='64' method='jdk/internal/org/objectweb/asm/Item set (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' bytes='143' count='384' iicount='384' level='3' stamp='1.041' comment='tiered' hot_count='384'/>
<task_queued compile_id='65' method='jdk/internal/org/objectweb/asm/ClassWriter get (Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' bytes='49' count='384' backedge_count='12' iicount='384' level='3' stamp='1.041' comment='tiered' hot_count='384'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807455b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000024807455cc0: mov    0x8(%rdx),%r10d
  0x0000024807455cc4: shl    $0x3,%r10
  0x0000024807455cc8: cmp    %rax,%r10
  0x0000024807455ccb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807455cd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807455cdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807455ce0: mov    %eax,-0x6000(%rsp)
  0x0000024807455ce7: push   %rbp
  0x0000024807455ce8: sub    $0x40,%rsp
  0x0000024807455cec: mov    %rdx,%r8
  0x0000024807455cef: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807455cf9: mov    0xdc(%rdx),%esi
  0x0000024807455cff: add    $0x8,%esi
  0x0000024807455d02: mov    %esi,0xdc(%rdx)
  0x0000024807455d08: movabs $0x2481fb7a8d0,%rdx  ;   {metadata({method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807455d12: and    $0x1ff8,%esi
  0x0000024807455d18: cmp    $0x0,%esi
  0x0000024807455d1b: je     0x0000024807455dad
  0x0000024807455d21: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000024807455d2b: mov    0x60(%r15),%rax
  0x0000024807455d2f: lea    0x18(%rax),%rdi
  0x0000024807455d33: cmp    0x70(%r15),%rdi
  0x0000024807455d37: ja     0x0000024807455dc4
  0x0000024807455d3d: mov    %rdi,0x60(%r15)
  0x0000024807455d41: mov    0xa8(%rdx),%rcx
  0x0000024807455d48: mov    %rcx,(%rax)
  0x0000024807455d4b: mov    %rdx,%rcx
  0x0000024807455d4e: shr    $0x3,%rcx
  0x0000024807455d52: mov    %ecx,0x8(%rax)
  0x0000024807455d55: xor    %rcx,%rcx
  0x0000024807455d58: mov    %ecx,0xc(%rax)
  0x0000024807455d5b: xor    %rcx,%rcx
  0x0000024807455d5e: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)

  0x0000024807455d62: mov    0x10(%r8),%r9d
  0x0000024807455d66: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)

  0x0000024807455d6a: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)

  0x0000024807455d6e: mov    %rax,%r8
  0x0000024807455d71: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807455d7b: addq   $0x1,0x108(%rdx)
  0x0000024807455d83: mov    %r9,%r8
  0x0000024807455d86: mov    $0x0,%r9d
  0x0000024807455d8c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)

  0x0000024807455d8f: mov    %rax,0x30(%rsp)
  0x0000024807455d94: nop
  0x0000024807455d95: nop
  0x0000024807455d96: nop
  0x0000024807455d97: call   0x0000024807375ee0  ; OopMap{[48]=Oop off=220}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ;   {optimized virtual_call}
  0x0000024807455d9c: mov    0x30(%rsp),%rax
  0x0000024807455da1: add    $0x40,%rsp
  0x0000024807455da5: pop    %rbp
  0x0000024807455da6: test   %eax,-0x1ea5cac(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807455dac: ret    
  0x0000024807455dad: mov    %rdx,0x8(%rsp)
  0x0000024807455db2: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807455dba: call   0x0000024807433da0  ; OopMap{r8=Oop off=255}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ;   {runtime_call}
  0x0000024807455dbf: jmp    0x0000024807455d21
  0x0000024807455dc4: mov    %rdx,%rdx
  0x0000024807455dc7: call   0x000002480742f900  ; OopMap{r8=Oop off=268}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ;   {runtime_call}
  0x0000024807455dcc: jmp    0x0000024807455d62
  0x0000024807455dce: nop
  0x0000024807455dcf: nop
  0x0000024807455dd0: mov    0x308(%r15),%rax
  0x0000024807455dd7: movabs $0x0,%r10
  0x0000024807455de1: mov    %r10,0x308(%r15)
  0x0000024807455de8: movabs $0x0,%r10
  0x0000024807455df2: mov    %r10,0x310(%r15)
  0x0000024807455df9: add    $0x40,%rsp
  0x0000024807455dfd: pop    %rbp
  0x0000024807455dfe: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807455e03: hlt    
  0x0000024807455e04: hlt    
  0x0000024807455e05: hlt    
  0x0000024807455e06: hlt    
  0x0000024807455e07: hlt    
  0x0000024807455e08: hlt    
  0x0000024807455e09: hlt    
  0x0000024807455e0a: hlt    
  0x0000024807455e0b: hlt    
  0x0000024807455e0c: hlt    
  0x0000024807455e0d: hlt    
  0x0000024807455e0e: hlt    
  0x0000024807455e0f: hlt    
  0x0000024807455e10: hlt    
  0x0000024807455e11: hlt    
  0x0000024807455e12: hlt    
  0x0000024807455e13: hlt    
  0x0000024807455e14: hlt    
  0x0000024807455e15: hlt    
  0x0000024807455e16: hlt    
  0x0000024807455e17: hlt    
  0x0000024807455e18: hlt    
  0x0000024807455e19: hlt    
  0x0000024807455e1a: hlt    
  0x0000024807455e1b: hlt    
  0x0000024807455e1c: hlt    
  0x0000024807455e1d: hlt    
  0x0000024807455e1e: hlt    
  0x0000024807455e1f: hlt    
[Stub Code]
  0x0000024807455e20: nop                       ;   {no_reloc}
  0x0000024807455e21: nop
  0x0000024807455e22: nop
  0x0000024807455e23: nop
  0x0000024807455e24: nop
  0x0000024807455e25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807455e2f: jmp    0x0000024807455e2f  ;   {runtime_call}
[Exception Handler]
  0x0000024807455e34: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807455e39: mov    %rsp,-0x28(%rsp)
  0x0000024807455e3e: sub    $0x80,%rsp
  0x0000024807455e45: mov    %rax,0x78(%rsp)
  0x0000024807455e4a: mov    %rcx,0x70(%rsp)
  0x0000024807455e4f: mov    %rdx,0x68(%rsp)
  0x0000024807455e54: mov    %rbx,0x60(%rsp)
  0x0000024807455e59: mov    %rbp,0x50(%rsp)
  0x0000024807455e5e: mov    %rsi,0x48(%rsp)
  0x0000024807455e63: mov    %rdi,0x40(%rsp)
  0x0000024807455e68: mov    %r8,0x38(%rsp)
  0x0000024807455e6d: mov    %r9,0x30(%rsp)
  0x0000024807455e72: mov    %r10,0x28(%rsp)
  0x0000024807455e77: mov    %r11,0x20(%rsp)
  0x0000024807455e7c: mov    %r12,0x18(%rsp)
  0x0000024807455e81: mov    %r13,0x10(%rsp)
  0x0000024807455e86: mov    %r14,0x8(%rsp)
  0x0000024807455e8b: mov    %r15,(%rsp)
  0x0000024807455e8f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807455e99: movabs $0x24807455e39,%rdx  ;   {internal_word}
  0x0000024807455ea3: mov    %rsp,%r8
  0x0000024807455ea6: and    $0xfffffffffffffff0,%rsp
  0x0000024807455eaa: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807455eb4: call   *%r10
  0x0000024807455eb7: hlt    
[Deopt Handler Code]
  0x0000024807455eb8: movabs $0x24807455eb8,%r10  ;   {section_word}
  0x0000024807455ec2: push   %r10
  0x0000024807455ec4: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807455ec9: hlt    
  0x0000024807455eca: hlt    
  0x0000024807455ecb: hlt    
  0x0000024807455ecc: hlt    
  0x0000024807455ecd: hlt    
  0x0000024807455ece: hlt    
  0x0000024807455ecf: hlt    
<nmethod compile_id='62' compiler='C1' level='3' entry='0x0000024807455cc0' size='1112' address='0x0000024807455b50' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='904' scopes_pcs_offset='960' dependencies_offset='1104' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='658' iicount='658' stamp='1.050'/>
<writer thread='27436'/>
<task_queued compile_id='66' method='java/lang/invoke/MemberName testFlags (II)Z' bytes='16' count='384' iicount='384' level='3' stamp='1.050' comment='tiered' hot_count='384'/>
<task_queued compile_id='67' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='640' iicount='640' level='3' stamp='1.050' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807455fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # parm0:    r8:r8     = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000024807456160: mov    0x8(%rdx),%r10d
  0x0000024807456164: shl    $0x3,%r10
  0x0000024807456168: cmp    %rax,%r10
  0x000002480745616b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807456171: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745617c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807456180: mov    %eax,-0x6000(%rsp)
  0x0000024807456187: push   %rbp
  0x0000024807456188: sub    $0x40,%rsp
  0x000002480745618c: mov    %r8,0x28(%rsp)
  0x0000024807456191: movabs $0x2481fe5cd80,%rax  ;   {metadata(method data for {method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480745619b: mov    0xdc(%rax),%esi
  0x00000248074561a1: add    $0x8,%esi
  0x00000248074561a4: mov    %esi,0xdc(%rax)
  0x00000248074561aa: movabs $0x2481fe3c8a8,%rax  ;   {metadata({method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074561b4: and    $0x1ff8,%esi
  0x00000248074561ba: cmp    $0x0,%esi
  0x00000248074561bd: je     0x00000248074563c5  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@0 (line 1741)

  0x00000248074561c3: mov    0x58(%rdx),%esi
  0x00000248074561c6: shl    $0x3,%rsi          ;*getfield items
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@1 (line 1741)

  0x00000248074561ca: mov    0x20(%r8),%eax     ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5 (line 1741)
                                                ; implicit exception: dispatches to 0x00000248074563dc
  0x00000248074561ce: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12 (line 1741)
                                                ; implicit exception: dispatches to 0x00000248074563e1
  0x00000248074561d1: cmp    $0x80000000,%eax
  0x00000248074561d7: jne    0x00000248074561e8
  0x00000248074561dd: xor    %edx,%edx
  0x00000248074561df: cmp    $0xffffffff,%edi
  0x00000248074561e2: je     0x00000248074561eb
  0x00000248074561e8: cltd   
  0x00000248074561e9: idiv   %edi               ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13 (line 1741)
                                                ; implicit exception: dispatches to 0x00000248074563e6
  0x00000248074561eb: movslq %edx,%rdi
  0x00000248074561ee: cmp    0xc(%rsi),%edx
  0x00000248074561f1: jae    0x00000248074563eb
  0x00000248074561f7: mov    0x10(%rsi,%rdi,4),%edx
  0x00000248074561fb: shl    $0x3,%rdx          ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14 (line 1741)

  0x00000248074561ff: nop
  0x0000024807456200: cmp    $0x0,%rdx
  0x0000024807456204: movabs $0x2481fe5cd80,%rsi  ;   {metadata(method data for {method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480745620e: movabs $0x108,%rdi
  0x0000024807456218: je     0x0000024807456228
  0x000002480745621e: movabs $0x118,%rdi
  0x0000024807456228: mov    (%rsi,%rdi,1),%rbx
  0x000002480745622c: lea    0x1(%rbx),%rbx
  0x0000024807456230: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807456234: je     0x00000248074563b6  ;*ifnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@17 (line 1742)

  0x000002480745623a: mov    0x18(%rdx),%esi    ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21 (line 1742)
                                                ; implicit exception: dispatches to 0x00000248074563f4
  0x000002480745623d: mov    0x18(%r8),%edi     ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@25 (line 1742)

  0x0000024807456241: cmp    %edi,%esi
  0x0000024807456243: movabs $0x2481fe5cd80,%rsi  ;   {metadata(method data for {method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480745624d: movabs $0x128,%rdi
  0x0000024807456257: jne    0x0000024807456267
  0x000002480745625d: movabs $0x138,%rdi
  0x0000024807456267: mov    (%rsi,%rdi,1),%rbx
  0x000002480745626b: lea    0x1(%rbx),%rbx
  0x000002480745626f: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807456273: jne    0x000002480745635a  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@28 (line 1742)

  0x0000024807456279: mov    %r8,%rsi
  0x000002480745627c: movabs $0x2481fe5cd80,%rdi  ;   {metadata(method data for {method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807456286: mov    0x8(%rsi),%esi
  0x0000024807456289: shl    $0x3,%rsi
  0x000002480745628d: cmp    0x150(%rdi),%rsi
  0x0000024807456294: jne    0x00000248074562a3
  0x0000024807456296: addq   $0x1,0x158(%rdi)
  0x000002480745629e: jmp    0x0000024807456309
  0x00000248074562a3: cmp    0x160(%rdi),%rsi
  0x00000248074562aa: jne    0x00000248074562b9
  0x00000248074562ac: addq   $0x1,0x168(%rdi)
  0x00000248074562b4: jmp    0x0000024807456309
  0x00000248074562b9: cmpq   $0x0,0x150(%rdi)
  0x00000248074562c4: jne    0x00000248074562dd
  0x00000248074562c6: mov    %rsi,0x150(%rdi)
  0x00000248074562cd: movq   $0x1,0x158(%rdi)
  0x00000248074562d8: jmp    0x0000024807456309
  0x00000248074562dd: cmpq   $0x0,0x160(%rdi)
  0x00000248074562e8: jne    0x0000024807456301
  0x00000248074562ea: mov    %rsi,0x160(%rdi)
  0x00000248074562f1: movq   $0x1,0x168(%rdi)
  0x00000248074562fc: jmp    0x0000024807456309
  0x0000024807456301: addq   $0x1,0x148(%rdi)
  0x0000024807456309: mov    %r8,%rsi
  0x000002480745630c: mov    %rdx,%r8
  0x000002480745630f: mov    %rdx,0x20(%rsp)
  0x0000024807456314: mov    %rsi,%rdx          ;*invokevirtual isEqualTo
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33 (line 1742)

  0x0000024807456317: call   0x0000024807375ee0  ; OopMap{[40]=Oop [32]=Oop off=444}
                                                ;*invokevirtual isEqualTo
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33 (line 1742)
                                                ;   {optimized virtual_call}
  0x000002480745631c: cmp    $0x0,%eax
  0x000002480745631f: movabs $0x2481fe5cd80,%rax  ;   {metadata(method data for {method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807456329: movabs $0x178,%rsi
  0x0000024807456333: jne    0x0000024807456343
  0x0000024807456339: movabs $0x188,%rsi
  0x0000024807456343: mov    (%rax,%rsi,1),%rdi
  0x0000024807456347: lea    0x1(%rdi),%rdi
  0x000002480745634b: mov    %rdi,(%rax,%rsi,1)
  0x000002480745634f: mov    0x20(%rsp),%rdx
  0x0000024807456354: jne    0x00000248074563b6  ;*ifne
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@36 (line 1742)

  0x000002480745635a: mov    0x30(%rdx),%eax
  0x000002480745635d: shl    $0x3,%rax          ;*getfield next
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@40 (line 1743)

  0x0000024807456361: movabs $0x2481fe5cd80,%rsi  ;   {metadata(method data for {method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480745636b: mov    0xe0(%rsi),%edi
  0x0000024807456371: add    $0x8,%edi
  0x0000024807456374: mov    %edi,0xe0(%rsi)
  0x000002480745637a: movabs $0x2481fe3c8a8,%rsi  ;   {metadata({method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807456384: and    $0xfff8,%edi
  0x000002480745638a: cmp    $0x0,%edi
  0x000002480745638d: je     0x00000248074563f9  ; OopMap{[40]=Oop rax=Oop off=563}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1743)

  0x0000024807456393: test   %eax,-0x1ea6299(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807456399: movabs $0x2481fe5cd80,%rsi  ;   {metadata(method data for {method} {0x000002481fe3c8b0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074563a3: incl   0x198(%rsi)
  0x00000248074563a9: mov    %rax,%rdx
  0x00000248074563ac: mov    0x28(%rsp),%r8
  0x00000248074563b1: jmp    0x0000024807456200  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1743)

  0x00000248074563b6: mov    %rdx,%rax
  0x00000248074563b9: add    $0x40,%rsp
  0x00000248074563bd: pop    %rbp
  0x00000248074563be: test   %eax,-0x1ea62c4(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074563c4: ret    
  0x00000248074563c5: mov    %rax,0x8(%rsp)
  0x00000248074563ca: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074563d2: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop [40]=Oop off=631}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@-1 (line 1741)
                                                ;   {runtime_call}
  0x00000248074563d7: jmp    0x00000248074561c3
  0x00000248074563dc: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rsi=Oop off=641}
                                                ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5 (line 1741)
                                                ;   {runtime_call}
  0x00000248074563e1: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rsi=Oop off=646}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12 (line 1741)
                                                ;   {runtime_call}
  0x00000248074563e6: call   0x000002480742e340  ; OopMap{r8=Oop [40]=Oop rsi=Oop off=651}
                                                ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13 (line 1741)
                                                ;   {runtime_call}
  0x00000248074563eb: mov    %rdx,(%rsp)
  0x00000248074563ef: call   0x000002480742e800  ; OopMap{r8=Oop [40]=Oop rsi=Oop off=660}
                                                ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14 (line 1741)
                                                ;   {runtime_call}
  0x00000248074563f4: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rdx=Oop off=665}
                                                ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21 (line 1742)
                                                ;   {runtime_call}
  0x00000248074563f9: mov    %rsi,0x8(%rsp)
  0x00000248074563fe: movq   $0x2c,(%rsp)
  0x0000024807456406: call   0x0000024807433da0  ; OopMap{[40]=Oop rax=Oop off=683}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1743)
                                                ;   {runtime_call}
  0x000002480745640b: jmp    0x0000024807456393
  0x000002480745640d: nop
  0x000002480745640e: nop
  0x000002480745640f: mov    0x308(%r15),%rax
  0x0000024807456416: movabs $0x0,%r10
  0x0000024807456420: mov    %r10,0x308(%r15)
  0x0000024807456427: movabs $0x0,%r10
  0x0000024807456431: mov    %r10,0x310(%r15)
  0x0000024807456438: add    $0x40,%rsp
  0x000002480745643c: pop    %rbp
  0x000002480745643d: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807456442: hlt    
  0x0000024807456443: hlt    
  0x0000024807456444: hlt    
  0x0000024807456445: hlt    
  0x0000024807456446: hlt    
  0x0000024807456447: hlt    
  0x0000024807456448: hlt    
  0x0000024807456449: hlt    
  0x000002480745644a: hlt    
  0x000002480745644b: hlt    
  0x000002480745644c: hlt    
  0x000002480745644d: hlt    
  0x000002480745644e: hlt    
  0x000002480745644f: hlt    
  0x0000024807456450: hlt    
  0x0000024807456451: hlt    
  0x0000024807456452: hlt    
  0x0000024807456453: hlt    
  0x0000024807456454: hlt    
  0x0000024807456455: hlt    
  0x0000024807456456: hlt    
  0x0000024807456457: hlt    
  0x0000024807456458: hlt    
  0x0000024807456459: hlt    
  0x000002480745645a: hlt    
  0x000002480745645b: hlt    
  0x000002480745645c: hlt    
  0x000002480745645d: hlt    
  0x000002480745645e: hlt    
  0x000002480745645f: hlt    
[Stub Code]
  0x0000024807456460: nop                       ;   {no_reloc}
  0x0000024807456461: nop
  0x0000024807456462: nop
  0x0000024807456463: nop
  0x0000024807456464: nop
  0x0000024807456465: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745646f: jmp    0x000002480745646f  ;   {runtime_call}
[Exception Handler]
  0x0000024807456474: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807456479: mov    %rsp,-0x28(%rsp)
  0x000002480745647e: sub    $0x80,%rsp
  0x0000024807456485: mov    %rax,0x78(%rsp)
  0x000002480745648a: mov    %rcx,0x70(%rsp)
  0x000002480745648f: mov    %rdx,0x68(%rsp)
  0x0000024807456494: mov    %rbx,0x60(%rsp)
  0x0000024807456499: mov    %rbp,0x50(%rsp)
  0x000002480745649e: mov    %rsi,0x48(%rsp)
  0x00000248074564a3: mov    %rdi,0x40(%rsp)
  0x00000248074564a8: mov    %r8,0x38(%rsp)
  0x00000248074564ad: mov    %r9,0x30(%rsp)
  0x00000248074564b2: mov    %r10,0x28(%rsp)
  0x00000248074564b7: mov    %r11,0x20(%rsp)
  0x00000248074564bc: mov    %r12,0x18(%rsp)
  0x00000248074564c1: mov    %r13,0x10(%rsp)
  0x00000248074564c6: mov    %r14,0x8(%rsp)
  0x00000248074564cb: mov    %r15,(%rsp)
  0x00000248074564cf: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074564d9: movabs $0x24807456479,%rdx  ;   {internal_word}
  0x00000248074564e3: mov    %rsp,%r8
  0x00000248074564e6: and    $0xfffffffffffffff0,%rsp
  0x00000248074564ea: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074564f4: call   *%r10
  0x00000248074564f7: hlt    
[Deopt Handler Code]
  0x00000248074564f8: movabs $0x248074564f8,%r10  ;   {section_word}
  0x0000024807456502: push   %r10
  0x0000024807456504: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807456509: hlt    
  0x000002480745650a: hlt    
  0x000002480745650b: hlt    
  0x000002480745650c: hlt    
  0x000002480745650d: hlt    
  0x000002480745650e: hlt    
  0x000002480745650f: hlt    
<nmethod compile_id='65' compiler='C1' level='3' entry='0x0000024807456160' size='1968' address='0x0000024807455fd0' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1352' scopes_pcs_offset='1520' dependencies_offset='1920' nul_chk_table_offset='1928' method='jdk/internal/org/objectweb/asm/ClassWriter get (Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' bytes='49' count='458' backedge_count='13' iicount='458' stamp='1.065'/>
<writer thread='27436'/>
<task_queued compile_id='68' method='jdk/internal/org/objectweb/asm/ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='512' iicount='512' level='3' stamp='1.066' comment='tiered' hot_count='512'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807456790:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/String&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/String&apos;
  # parm3:    rsi:rsi   = &apos;java/lang/String&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000024807456940: mov    0x8(%rdx),%r10d
  0x0000024807456944: shl    $0x3,%r10
  0x0000024807456948: cmp    %rax,%r10
  0x000002480745694b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807456951: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745695c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807456960: mov    %eax,-0x6000(%rsp)
  0x0000024807456967: push   %rbp
  0x0000024807456968: sub    $0x60,%rsp
  0x000002480745696c: mov    %rdx,0x48(%rsp)
  0x0000024807456971: mov    %r8d,0x40(%rsp)
  0x0000024807456976: mov    %rdi,0x30(%rsp)
  0x000002480745697b: movabs $0x2481fe5d6c8,%rbx  ;   {metadata(method data for {method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807456985: mov    0xdc(%rbx),%eax
  0x000002480745698b: add    $0x8,%eax
  0x000002480745698e: mov    %eax,0xdc(%rbx)
  0x0000024807456994: movabs $0x2481fe40738,%rbx  ;   {metadata({method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x000002480745699e: and    $0x1ff8,%eax
  0x00000248074569a4: cmp    $0x0,%eax
  0x00000248074569a7: je     0x0000024807456e8a  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Item::set@0 (line 235)

  0x00000248074569ad: mov    %r8d,0x18(%rdx)    ;*putfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::set@2 (line 235)

  0x00000248074569b1: mov    %r9,%r10
  0x00000248074569b4: shr    $0x3,%r10
  0x00000248074569b8: mov    %r10d,0x24(%rdx)
  0x00000248074569bc: mov    %rdx,%rbx
  0x00000248074569bf: shr    $0x9,%rbx
  0x00000248074569c3: movabs $0x248130de000,%rax
  0x00000248074569cd: movb   $0x0,(%rbx,%rax,1)  ;*putfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::set@7 (line 236)

  0x00000248074569d1: mov    %rdi,%r10
  0x00000248074569d4: shr    $0x3,%r10
  0x00000248074569d8: mov    %r10d,0x28(%rdx)
  0x00000248074569dc: mov    %rdx,%rbx
  0x00000248074569df: shr    $0x9,%rbx
  0x00000248074569e3: movb   $0x0,(%rbx,%rax,1)  ;*putfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::set@12 (line 237)

  0x00000248074569e7: mov    %rsi,%r10
  0x00000248074569ea: shr    $0x3,%r10
  0x00000248074569ee: mov    %r10d,0x2c(%rdx)
  0x00000248074569f2: mov    %rdx,%rbx
  0x00000248074569f5: shr    $0x9,%rbx
  0x00000248074569f9: movb   $0x0,(%rbx,%rax,1)  ;*putfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::set@18 (line 238)

  0x00000248074569fd: cmp    $0x1,%r8d
  0x0000024807456a01: je     0x0000024807456dcb
  0x0000024807456a07: cmp    $0x7,%r8d
  0x0000024807456a0b: je     0x0000024807456dc1
  0x0000024807456a11: cmp    $0x8,%r8d
  0x0000024807456a15: je     0x0000024807456dcb
  0x0000024807456a1b: cmp    $0xc,%r8d
  0x0000024807456a1f: je     0x0000024807456c59
  0x0000024807456a25: cmp    $0x10,%r8d
  0x0000024807456a29: je     0x0000024807456dcb
  0x0000024807456a2f: cmp    $0x1e,%r8d
  0x0000024807456a33: je     0x0000024807456dcb  ;*lookupswitch
                                                ; - jdk.internal.org.objectweb.asm.Item::set@22 (line 239)

  0x0000024807456a39: mov    %rsi,0x38(%rsp)
  0x0000024807456a3e: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000024807456ea1
  0x0000024807456a41: mov    %r9,%rbx
  0x0000024807456a44: movabs $0x2481fe5d6c8,%rax  ;   {metadata(method data for {method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807456a4e: mov    0x8(%rbx),%ebx
  0x0000024807456a51: shl    $0x3,%rbx
  0x0000024807456a55: cmp    0x220(%rax),%rbx
  0x0000024807456a5c: jne    0x0000024807456a6b
  0x0000024807456a5e: addq   $0x1,0x228(%rax)
  0x0000024807456a66: jmp    0x0000024807456ad1
  0x0000024807456a6b: cmp    0x230(%rax),%rbx
  0x0000024807456a72: jne    0x0000024807456a81
  0x0000024807456a74: addq   $0x1,0x238(%rax)
  0x0000024807456a7c: jmp    0x0000024807456ad1
  0x0000024807456a81: cmpq   $0x0,0x220(%rax)
  0x0000024807456a8c: jne    0x0000024807456aa5
  0x0000024807456a8e: mov    %rbx,0x220(%rax)
  0x0000024807456a95: movq   $0x1,0x228(%rax)
  0x0000024807456aa0: jmp    0x0000024807456ad1
  0x0000024807456aa5: cmpq   $0x0,0x230(%rax)
  0x0000024807456ab0: jne    0x0000024807456ac9
  0x0000024807456ab2: mov    %rbx,0x230(%rax)
  0x0000024807456ab9: movq   $0x1,0x238(%rax)
  0x0000024807456ac4: jmp    0x0000024807456ad1
  0x0000024807456ac9: addq   $0x1,0x218(%rax)
  0x0000024807456ad1: mov    %r9,%rdx           ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@123 (line 258)

  0x0000024807456ad4: nop
  0x0000024807456ad5: nop
  0x0000024807456ad6: nop
  0x0000024807456ad7: call   0x0000024807375ee0  ; OopMap{[72]=Oop [48]=Oop [56]=Oop off=412}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@123 (line 258)
                                                ;   {optimized virtual_call}
  0x0000024807456adc: mov    0x30(%rsp),%rdi
  0x0000024807456ae1: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x0000024807456ea6
  0x0000024807456ae4: mov    %rdi,%rdx
  0x0000024807456ae7: movabs $0x2481fe5d6c8,%rsi  ;   {metadata(method data for {method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807456af1: mov    0x8(%rdx),%edx
  0x0000024807456af4: shl    $0x3,%rdx
  0x0000024807456af8: cmp    0x250(%rsi),%rdx
  0x0000024807456aff: jne    0x0000024807456b0e
  0x0000024807456b01: addq   $0x1,0x258(%rsi)
  0x0000024807456b09: jmp    0x0000024807456b74
  0x0000024807456b0e: cmp    0x260(%rsi),%rdx
  0x0000024807456b15: jne    0x0000024807456b24
  0x0000024807456b17: addq   $0x1,0x268(%rsi)
  0x0000024807456b1f: jmp    0x0000024807456b74
  0x0000024807456b24: cmpq   $0x0,0x250(%rsi)
  0x0000024807456b2f: jne    0x0000024807456b48
  0x0000024807456b31: mov    %rdx,0x250(%rsi)
  0x0000024807456b38: movq   $0x1,0x258(%rsi)
  0x0000024807456b43: jmp    0x0000024807456b74
  0x0000024807456b48: cmpq   $0x0,0x260(%rsi)
  0x0000024807456b53: jne    0x0000024807456b6c
  0x0000024807456b55: mov    %rdx,0x260(%rsi)
  0x0000024807456b5c: movq   $0x1,0x268(%rsi)
  0x0000024807456b67: jmp    0x0000024807456b74
  0x0000024807456b6c: addq   $0x1,0x248(%rsi)
  0x0000024807456b74: mov    %rdi,%rdx          ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@127 (line 259)

  0x0000024807456b77: mov    %eax,0x44(%rsp)
  0x0000024807456b7b: nop
  0x0000024807456b7c: nop
  0x0000024807456b7d: nop
  0x0000024807456b7e: nop
  0x0000024807456b7f: call   0x0000024807375ee0  ; OopMap{[72]=Oop [56]=Oop off=580}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@127 (line 259)
                                                ;   {optimized virtual_call}
  0x0000024807456b84: mov    0x38(%rsp),%rsi
  0x0000024807456b89: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807456eab
  0x0000024807456b8c: mov    %rsi,%rdx
  0x0000024807456b8f: movabs $0x2481fe5d6c8,%rdi  ;   {metadata(method data for {method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807456b99: mov    0x8(%rdx),%edx
  0x0000024807456b9c: shl    $0x3,%rdx
  0x0000024807456ba0: cmp    0x280(%rdi),%rdx
  0x0000024807456ba7: jne    0x0000024807456bb6
  0x0000024807456ba9: addq   $0x1,0x288(%rdi)
  0x0000024807456bb1: jmp    0x0000024807456c1c
  0x0000024807456bb6: cmp    0x290(%rdi),%rdx
  0x0000024807456bbd: jne    0x0000024807456bcc
  0x0000024807456bbf: addq   $0x1,0x298(%rdi)
  0x0000024807456bc7: jmp    0x0000024807456c1c
  0x0000024807456bcc: cmpq   $0x0,0x280(%rdi)
  0x0000024807456bd7: jne    0x0000024807456bf0
  0x0000024807456bd9: mov    %rdx,0x280(%rdi)
  0x0000024807456be0: movq   $0x1,0x288(%rdi)
  0x0000024807456beb: jmp    0x0000024807456c1c
  0x0000024807456bf0: cmpq   $0x0,0x290(%rdi)
  0x0000024807456bfb: jne    0x0000024807456c14
  0x0000024807456bfd: mov    %rdx,0x290(%rdi)
  0x0000024807456c04: movq   $0x1,0x298(%rdi)
  0x0000024807456c0f: jmp    0x0000024807456c1c
  0x0000024807456c14: addq   $0x1,0x278(%rdi)
  0x0000024807456c1c: mov    0x44(%rsp),%edi
  0x0000024807456c20: imul   %eax,%edi
  0x0000024807456c23: mov    %rsi,%rdx          ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@133 (line 259)

  0x0000024807456c26: mov    %edi,0x50(%rsp)
  0x0000024807456c2a: nop
  0x0000024807456c2b: nop
  0x0000024807456c2c: nop
  0x0000024807456c2d: nop
  0x0000024807456c2e: nop
  0x0000024807456c2f: call   0x0000024807375ee0  ; OopMap{[72]=Oop off=756}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@133 (line 259)
                                                ;   {optimized virtual_call}
  0x0000024807456c34: mov    0x50(%rsp),%edi
  0x0000024807456c38: imul   %eax,%edi
  0x0000024807456c3b: add    0x40(%rsp),%edi
  0x0000024807456c3f: and    $0x7fffffff,%edi
  0x0000024807456c45: mov    0x48(%rsp),%rdx
  0x0000024807456c4a: mov    %edi,0x20(%rdx)    ;*putfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@139 (line 259)

  0x0000024807456c4d: add    $0x60,%rsp
  0x0000024807456c51: pop    %rbp
  0x0000024807456c52: test   %eax,-0x1ea6b58(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807456c58: ret                       ;*return
                                                ; - jdk.internal.org.objectweb.asm.Item::set@142 (line 261)

  0x0000024807456c59: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000024807456eb0
  0x0000024807456c5c: mov    %r9,%rsi
  0x0000024807456c5f: movabs $0x2481fe5d6c8,%rbx  ;   {metadata(method data for {method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807456c69: mov    0x8(%rsi),%esi
  0x0000024807456c6c: shl    $0x3,%rsi
  0x0000024807456c70: cmp    0x1c0(%rbx),%rsi
  0x0000024807456c77: jne    0x0000024807456c86
  0x0000024807456c79: addq   $0x1,0x1c8(%rbx)
  0x0000024807456c81: jmp    0x0000024807456cec
  0x0000024807456c86: cmp    0x1d0(%rbx),%rsi
  0x0000024807456c8d: jne    0x0000024807456c9c
  0x0000024807456c8f: addq   $0x1,0x1d8(%rbx)
  0x0000024807456c97: jmp    0x0000024807456cec
  0x0000024807456c9c: cmpq   $0x0,0x1c0(%rbx)
  0x0000024807456ca7: jne    0x0000024807456cc0
  0x0000024807456ca9: mov    %rsi,0x1c0(%rbx)
  0x0000024807456cb0: movq   $0x1,0x1c8(%rbx)
  0x0000024807456cbb: jmp    0x0000024807456cec
  0x0000024807456cc0: cmpq   $0x0,0x1d0(%rbx)
  0x0000024807456ccb: jne    0x0000024807456ce4
  0x0000024807456ccd: mov    %rsi,0x1d0(%rbx)
  0x0000024807456cd4: movq   $0x1,0x1d8(%rbx)
  0x0000024807456cdf: jmp    0x0000024807456cec
  0x0000024807456ce4: addq   $0x1,0x1b8(%rbx)
  0x0000024807456cec: mov    %r9,%rdx           ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@104 (line 249)

  0x0000024807456cef: call   0x0000024807375ee0  ; OopMap{[72]=Oop [48]=Oop off=948}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@104 (line 249)
                                                ;   {optimized virtual_call}
  0x0000024807456cf4: mov    0x30(%rsp),%rdi
  0x0000024807456cf9: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x0000024807456eb5
  0x0000024807456cfc: mov    %rdi,%rdx
  0x0000024807456cff: movabs $0x2481fe5d6c8,%rsi  ;   {metadata(method data for {method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807456d09: mov    0x8(%rdx),%edx
  0x0000024807456d0c: shl    $0x3,%rdx
  0x0000024807456d10: cmp    0x1f0(%rsi),%rdx
  0x0000024807456d17: jne    0x0000024807456d26
  0x0000024807456d19: addq   $0x1,0x1f8(%rsi)
  0x0000024807456d21: jmp    0x0000024807456d8c
  0x0000024807456d26: cmp    0x200(%rsi),%rdx
  0x0000024807456d2d: jne    0x0000024807456d3c
  0x0000024807456d2f: addq   $0x1,0x208(%rsi)
  0x0000024807456d37: jmp    0x0000024807456d8c
  0x0000024807456d3c: cmpq   $0x0,0x1f0(%rsi)
  0x0000024807456d47: jne    0x0000024807456d60
  0x0000024807456d49: mov    %rdx,0x1f0(%rsi)
  0x0000024807456d50: movq   $0x1,0x1f8(%rsi)
  0x0000024807456d5b: jmp    0x0000024807456d8c
  0x0000024807456d60: cmpq   $0x0,0x200(%rsi)
  0x0000024807456d6b: jne    0x0000024807456d84
  0x0000024807456d6d: mov    %rdx,0x200(%rsi)
  0x0000024807456d74: movq   $0x1,0x208(%rsi)
  0x0000024807456d7f: jmp    0x0000024807456d8c
  0x0000024807456d84: addq   $0x1,0x1e8(%rsi)
  0x0000024807456d8c: mov    %rdi,%rdx          ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@108 (line 250)

  0x0000024807456d8f: mov    %eax,0x54(%rsp)
  0x0000024807456d93: nop
  0x0000024807456d94: nop
  0x0000024807456d95: nop
  0x0000024807456d96: nop
  0x0000024807456d97: call   0x0000024807375ee0  ; OopMap{[72]=Oop off=1116}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@108 (line 250)
                                                ;   {optimized virtual_call}
  0x0000024807456d9c: mov    0x54(%rsp),%edx
  0x0000024807456da0: imul   %eax,%edx
  0x0000024807456da3: add    0x40(%rsp),%edx
  0x0000024807456da7: and    $0x7fffffff,%edx
  0x0000024807456dad: mov    0x48(%rsp),%rsi
  0x0000024807456db2: mov    %edx,0x20(%rsi)    ;*putfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@114 (line 250)

  0x0000024807456db5: add    $0x60,%rsp
  0x0000024807456db9: pop    %rbp
  0x0000024807456dba: test   %eax,-0x1ea6cc0(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807456dc0: ret                       ;*return
                                                ; - jdk.internal.org.objectweb.asm.Item::set@117 (line 251)

  0x0000024807456dc1: mov    %rdx,%rsi
  0x0000024807456dc4: movl   $0x0,0x1c(%rsi)    ;*putfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::set@82 (line 241)

  0x0000024807456dcb: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000024807456eba
  0x0000024807456dce: mov    %r9,%rsi
  0x0000024807456dd1: movabs $0x2481fe5d6c8,%rdi  ;   {metadata(method data for {method} {0x000002481fe40740} &apos;set&apos; &apos;(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807456ddb: mov    0x8(%rsi),%esi
  0x0000024807456dde: shl    $0x3,%rsi
  0x0000024807456de2: cmp    0x190(%rdi),%rsi
  0x0000024807456de9: jne    0x0000024807456df8
  0x0000024807456deb: addq   $0x1,0x198(%rdi)
  0x0000024807456df3: jmp    0x0000024807456e5e
  0x0000024807456df8: cmp    0x1a0(%rdi),%rsi
  0x0000024807456dff: jne    0x0000024807456e0e
  0x0000024807456e01: addq   $0x1,0x1a8(%rdi)
  0x0000024807456e09: jmp    0x0000024807456e5e
  0x0000024807456e0e: cmpq   $0x0,0x190(%rdi)
  0x0000024807456e19: jne    0x0000024807456e32
  0x0000024807456e1b: mov    %rsi,0x190(%rdi)
  0x0000024807456e22: movq   $0x1,0x198(%rdi)
  0x0000024807456e2d: jmp    0x0000024807456e5e
  0x0000024807456e32: cmpq   $0x0,0x1a0(%rdi)
  0x0000024807456e3d: jne    0x0000024807456e56
  0x0000024807456e3f: mov    %rsi,0x1a0(%rdi)
  0x0000024807456e46: movq   $0x1,0x1a8(%rdi)
  0x0000024807456e51: jmp    0x0000024807456e5e
  0x0000024807456e56: addq   $0x1,0x188(%rdi)
  0x0000024807456e5e: mov    %r9,%rdx           ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@90 (line 246)

  0x0000024807456e61: nop
  0x0000024807456e62: nop
  0x0000024807456e63: nop
  0x0000024807456e64: nop
  0x0000024807456e65: nop
  0x0000024807456e66: nop
  0x0000024807456e67: call   0x0000024807375ee0  ; OopMap{[72]=Oop off=1324}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@90 (line 246)
                                                ;   {optimized virtual_call}
  0x0000024807456e6c: add    0x40(%rsp),%eax
  0x0000024807456e70: and    $0x7fffffff,%eax
  0x0000024807456e76: mov    0x48(%rsp),%rdx
  0x0000024807456e7b: mov    %eax,0x20(%rdx)    ;*putfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@95 (line 246)

  0x0000024807456e7e: add    $0x60,%rsp
  0x0000024807456e82: pop    %rbp
  0x0000024807456e83: test   %eax,-0x1ea6d89(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807456e89: ret    
  0x0000024807456e8a: mov    %rbx,0x8(%rsp)
  0x0000024807456e8f: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807456e97: call   0x0000024807433da0  ; OopMap{rdx=Oop [72]=Oop r9=Oop rdi=Oop [48]=Oop rsi=Oop off=1372}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Item::set@-1 (line 235)
                                                ;   {runtime_call}
  0x0000024807456e9c: jmp    0x00000248074569ad
  0x0000024807456ea1: call   0x000002480742f100  ; OopMap{r9=Oop [72]=Oop [56]=Oop [48]=Oop off=1382}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@123 (line 258)
                                                ;   {runtime_call}
  0x0000024807456ea6: call   0x000002480742f100  ; OopMap{[72]=Oop [56]=Oop rdi=Oop [48]=Oop off=1387}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@127 (line 259)
                                                ;   {runtime_call}
  0x0000024807456eab: call   0x000002480742f100  ; OopMap{[72]=Oop rsi=Oop off=1392}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@133 (line 259)
                                                ;   {runtime_call}
  0x0000024807456eb0: call   0x000002480742f100  ; OopMap{[72]=Oop [48]=Oop r9=Oop off=1397}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@104 (line 249)
                                                ;   {runtime_call}
  0x0000024807456eb5: call   0x000002480742f100  ; OopMap{[72]=Oop rdi=Oop [48]=Oop off=1402}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@108 (line 250)
                                                ;   {runtime_call}
  0x0000024807456eba: call   0x000002480742f100  ; OopMap{r9=Oop [72]=Oop off=1407}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@90 (line 246)
                                                ;   {runtime_call}
  0x0000024807456ebf: nop
  0x0000024807456ec0: nop
  0x0000024807456ec1: mov    0x308(%r15),%rax
  0x0000024807456ec8: movabs $0x0,%r10
  0x0000024807456ed2: mov    %r10,0x308(%r15)
  0x0000024807456ed9: movabs $0x0,%r10
  0x0000024807456ee3: mov    %r10,0x310(%r15)
  0x0000024807456eea: add    $0x60,%rsp
  0x0000024807456eee: pop    %rbp
  0x0000024807456eef: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807456ef4: hlt    
  0x0000024807456ef5: hlt    
  0x0000024807456ef6: hlt    
  0x0000024807456ef7: hlt    
  0x0000024807456ef8: hlt    
  0x0000024807456ef9: hlt    
  0x0000024807456efa: hlt    
  0x0000024807456efb: hlt    
  0x0000024807456efc: hlt    
  0x0000024807456efd: hlt    
  0x0000024807456efe: hlt    
  0x0000024807456eff: hlt    
[Stub Code]
  0x0000024807456f00: nop                       ;   {no_reloc}
  0x0000024807456f01: nop
  0x0000024807456f02: nop
  0x0000024807456f03: nop
  0x0000024807456f04: nop
  0x0000024807456f05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807456f0f: jmp    0x0000024807456f0f  ;   {runtime_call}
  0x0000024807456f14: nop
  0x0000024807456f15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807456f1f: jmp    0x0000024807456f1f  ;   {runtime_call}
  0x0000024807456f24: nop
  0x0000024807456f25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807456f2f: jmp    0x0000024807456f2f  ;   {runtime_call}
  0x0000024807456f34: nop
  0x0000024807456f35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807456f3f: jmp    0x0000024807456f3f  ;   {runtime_call}
  0x0000024807456f44: nop
  0x0000024807456f45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807456f4f: jmp    0x0000024807456f4f  ;   {runtime_call}
  0x0000024807456f54: nop
  0x0000024807456f55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807456f5f: jmp    0x0000024807456f5f  ;   {runtime_call}
[Exception Handler]
  0x0000024807456f64: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807456f69: mov    %rsp,-0x28(%rsp)
  0x0000024807456f6e: sub    $0x80,%rsp
  0x0000024807456f75: mov    %rax,0x78(%rsp)
  0x0000024807456f7a: mov    %rcx,0x70(%rsp)
  0x0000024807456f7f: mov    %rdx,0x68(%rsp)
  0x0000024807456f84: mov    %rbx,0x60(%rsp)
  0x0000024807456f89: mov    %rbp,0x50(%rsp)
  0x0000024807456f8e: mov    %rsi,0x48(%rsp)
  0x0000024807456f93: mov    %rdi,0x40(%rsp)
  0x0000024807456f98: mov    %r8,0x38(%rsp)
  0x0000024807456f9d: mov    %r9,0x30(%rsp)
  0x0000024807456fa2: mov    %r10,0x28(%rsp)
  0x0000024807456fa7: mov    %r11,0x20(%rsp)
  0x0000024807456fac: mov    %r12,0x18(%rsp)
  0x0000024807456fb1: mov    %r13,0x10(%rsp)
  0x0000024807456fb6: mov    %r14,0x8(%rsp)
  0x0000024807456fbb: mov    %r15,(%rsp)
  0x0000024807456fbf: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807456fc9: movabs $0x24807456f69,%rdx  ;   {internal_word}
  0x0000024807456fd3: mov    %rsp,%r8
  0x0000024807456fd6: and    $0xfffffffffffffff0,%rsp
  0x0000024807456fda: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807456fe4: call   *%r10
  0x0000024807456fe7: hlt    
[Deopt Handler Code]
  0x0000024807456fe8: movabs $0x24807456fe8,%r10  ;   {section_word}
  0x0000024807456ff2: push   %r10
  0x0000024807456ff4: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807456ff9: hlt    
  0x0000024807456ffa: hlt    
  0x0000024807456ffb: hlt    
  0x0000024807456ffc: hlt    
  0x0000024807456ffd: hlt    
  0x0000024807456ffe: hlt    
  0x0000024807456fff: hlt    
<nmethod compile_id='64' compiler='C1' level='3' entry='0x0000024807456940' size='3080' address='0x0000024807456790' relocation_offset='288' insts_offset='432' stub_offset='1904' scopes_data_offset='2168' scopes_pcs_offset='2488' dependencies_offset='3016' nul_chk_table_offset='3024' method='jdk/internal/org/objectweb/asm/Item set (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' bytes='143' count='504' iicount='504' stamp='1.088'/>
Decoding compiled method 0x00000248074573d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000024807457540: mov    0x8(%rdx),%r10d
  0x0000024807457544: shl    $0x3,%r10
  0x0000024807457548: cmp    %rax,%r10
  0x000002480745754b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807457551: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745755c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807457560: mov    %eax,-0x6000(%rsp)
  0x0000024807457567: push   %rbp
  0x0000024807457568: sub    $0x40,%rsp
  0x000002480745756c: mov    %rdx,%r8
  0x000002480745756f: movabs $0x2481fd6d330,%rbx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807457579: mov    0xdc(%rbx),%edx
  0x000002480745757f: add    $0x8,%edx
  0x0000024807457582: mov    %edx,0xdc(%rbx)
  0x0000024807457588: movabs $0x2481fb79208,%rbx  ;   {metadata({method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807457592: and    $0x1ff8,%edx
  0x0000024807457598: cmp    $0x0,%edx
  0x000002480745759b: je     0x00000248074576d5  ;*aload_0
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 94)

  0x00000248074575a1: mov    %r8,%rbx
  0x00000248074575a4: movabs $0x2481fd6d330,%rdx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000248074575ae: addq   $0x1,0x108(%rdx)
  0x00000248074575b6: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074575c0: mov    0xdc(%rbx),%edx
  0x00000248074575c6: add    $0x8,%edx
  0x00000248074575c9: mov    %edx,0xdc(%rbx)
  0x00000248074575cf: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074575d9: and    $0x7ffff8,%edx
  0x00000248074575df: cmp    $0x0,%edx
  0x00000248074575e2: je     0x00000248074576ec
  0x00000248074575e8: mov    %r8,%rbx
  0x00000248074575eb: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074575f5: addq   $0x1,0x108(%rdx)
  0x00000248074575fd: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807457607: mov    0xdc(%rbx),%edx
  0x000002480745760d: add    $0x8,%edx
  0x0000024807457610: mov    %edx,0xdc(%rbx)
  0x0000024807457616: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807457620: and    $0x7ffff8,%edx
  0x0000024807457626: cmp    $0x0,%edx
  0x0000024807457629: je     0x0000024807457703
  0x000002480745762f: mov    $0x10,%ebx
  0x0000024807457634: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480745763e: movslq %ebx,%rbx
  0x0000024807457641: mov    %rbx,%rdi
  0x0000024807457644: cmp    $0xffffff,%rbx
  0x000002480745764b: ja     0x000002480745771a
  0x0000024807457651: movabs $0x17,%rsi
  0x000002480745765b: lea    (%rsi,%rbx,2),%rsi
  0x000002480745765f: and    $0xfffffffffffffff8,%rsi
  0x0000024807457663: mov    0x60(%r15),%rax
  0x0000024807457667: lea    (%rax,%rsi,1),%rsi
  0x000002480745766b: cmp    0x70(%r15),%rsi
  0x000002480745766f: ja     0x000002480745771a
  0x0000024807457675: mov    %rsi,0x60(%r15)
  0x0000024807457679: sub    %rax,%rsi
  0x000002480745767c: movq   $0x1,(%rax)
  0x0000024807457683: mov    %rdx,%rcx
  0x0000024807457686: shr    $0x3,%rcx
  0x000002480745768a: mov    %ecx,0x8(%rax)
  0x000002480745768d: mov    %ebx,0xc(%rax)
  0x0000024807457690: sub    $0x10,%rsi
  0x0000024807457694: je     0x00000248074576ab
  0x000002480745769a: xor    %rbx,%rbx
  0x000002480745769d: shr    $0x3,%rsi
  0x00000248074576a1: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000248074576a6: dec    %rsi
  0x00000248074576a9: jne    0x00000248074576a1  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)

  0x00000248074576ab: mov    %rax,%r10
  0x00000248074576ae: shr    $0x3,%r10
  0x00000248074576b2: mov    %r10d,0x10(%r8)
  0x00000248074576b6: shr    $0x9,%r8
  0x00000248074576ba: movabs $0x248130de000,%rsi
  0x00000248074576c4: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)

  0x00000248074576c9: add    $0x40,%rsp
  0x00000248074576cd: pop    %rbp
  0x00000248074576ce: test   %eax,-0x1ea75d4(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074576d4: ret    
  0x00000248074576d5: mov    %rbx,0x8(%rsp)
  0x00000248074576da: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074576e2: call   0x0000024807433da0  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ;   {runtime_call}
  0x00000248074576e7: jmp    0x00000248074575a1
  0x00000248074576ec: mov    %rbx,0x8(%rsp)
  0x00000248074576f1: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074576f9: call   0x0000024807433da0  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ;   {runtime_call}
  0x00000248074576fe: jmp    0x00000248074575e8
  0x0000024807457703: mov    %rbx,0x8(%rsp)
  0x0000024807457708: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807457710: call   0x0000024807433da0  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ;   {runtime_call}
  0x0000024807457715: jmp    0x000002480745762f
  0x000002480745771a: call   0x0000024807430280  ; OopMap{r8=Oop off=479}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ;   {runtime_call}
  0x000002480745771f: jmp    0x00000248074576ab
  0x0000024807457721: nop
  0x0000024807457722: nop
  0x0000024807457723: mov    0x308(%r15),%rax
  0x000002480745772a: movabs $0x0,%r10
  0x0000024807457734: mov    %r10,0x308(%r15)
  0x000002480745773b: movabs $0x0,%r10
  0x0000024807457745: mov    %r10,0x310(%r15)
  0x000002480745774c: add    $0x40,%rsp
  0x0000024807457750: pop    %rbp
  0x0000024807457751: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807457756: hlt    
  0x0000024807457757: hlt    
  0x0000024807457758: hlt    
  0x0000024807457759: hlt    
  0x000002480745775a: hlt    
  0x000002480745775b: hlt    
  0x000002480745775c: hlt    
  0x000002480745775d: hlt    
  0x000002480745775e: hlt    
  0x000002480745775f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807457760: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807457765: mov    %rsp,-0x28(%rsp)
  0x000002480745776a: sub    $0x80,%rsp
  0x0000024807457771: mov    %rax,0x78(%rsp)
  0x0000024807457776: mov    %rcx,0x70(%rsp)
  0x000002480745777b: mov    %rdx,0x68(%rsp)
  0x0000024807457780: mov    %rbx,0x60(%rsp)
  0x0000024807457785: mov    %rbp,0x50(%rsp)
  0x000002480745778a: mov    %rsi,0x48(%rsp)
  0x000002480745778f: mov    %rdi,0x40(%rsp)
  0x0000024807457794: mov    %r8,0x38(%rsp)
  0x0000024807457799: mov    %r9,0x30(%rsp)
  0x000002480745779e: mov    %r10,0x28(%rsp)
  0x00000248074577a3: mov    %r11,0x20(%rsp)
  0x00000248074577a8: mov    %r12,0x18(%rsp)
  0x00000248074577ad: mov    %r13,0x10(%rsp)
  0x00000248074577b2: mov    %r14,0x8(%rsp)
  0x00000248074577b7: mov    %r15,(%rsp)
  0x00000248074577bb: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074577c5: movabs $0x24807457765,%rdx  ;   {internal_word}
  0x00000248074577cf: mov    %rsp,%r8
  0x00000248074577d2: and    $0xfffffffffffffff0,%rsp
  0x00000248074577d6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074577e0: call   *%r10
  0x00000248074577e3: hlt    
[Deopt Handler Code]
  0x00000248074577e4: movabs $0x248074577e4,%r10  ;   {section_word}
  0x00000248074577ee: push   %r10
  0x00000248074577f0: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074577f5: hlt    
  0x00000248074577f6: hlt    
  0x00000248074577f7: hlt    
<nmethod compile_id='67' compiler='C1' level='3' entry='0x0000024807457540' size='1320' address='0x00000248074573d0' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1088' scopes_pcs_offset='1168' dependencies_offset='1312' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='654' iicount='654' stamp='1.100'/>
Decoding compiled method 0x0000024807457910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3f458} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000024807457a80: mov    0x8(%rdx),%r10d
  0x0000024807457a84: shl    $0x3,%r10
  0x0000024807457a88: cmp    %rax,%r10
  0x0000024807457a8b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807457a91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807457a9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807457aa0: mov    %eax,-0x6000(%rsp)
  0x0000024807457aa7: push   %rbp
  0x0000024807457aa8: sub    $0x40,%rsp
  0x0000024807457aac: movabs $0x2481fe5d9f0,%rsi  ;   {metadata(method data for {method} {0x000002481fe3f458} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807457ab6: mov    0xdc(%rsi),%edi
  0x0000024807457abc: add    $0x8,%edi
  0x0000024807457abf: mov    %edi,0xdc(%rsi)
  0x0000024807457ac5: movabs $0x2481fe3f450,%rsi  ;   {metadata({method} {0x000002481fe3f458} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807457acf: and    $0x1ff8,%edi
  0x0000024807457ad5: cmp    $0x0,%edi
  0x0000024807457ad8: je     0x0000024807457bba  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@0 (line 147)

  0x0000024807457ade: mov    0xc(%rdx),%esi     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@1 (line 147)

  0x0000024807457ae1: mov    0x10(%rdx),%edi
  0x0000024807457ae4: shl    $0x3,%rdi          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@9 (line 148)

  0x0000024807457ae8: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@12 (line 148)
                                                ; implicit exception: dispatches to 0x0000024807457bd1
  0x0000024807457aeb: mov    %rsi,%rbx
  0x0000024807457aee: add    $0x2,%ebx
  0x0000024807457af1: cmp    %edi,%ebx
  0x0000024807457af3: movabs $0x2481fe5d9f0,%rdi  ;   {metadata(method data for {method} {0x000002481fe3f458} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807457afd: movabs $0x108,%rbx
  0x0000024807457b07: jle    0x0000024807457b17
  0x0000024807457b0d: movabs $0x118,%rbx
  0x0000024807457b17: mov    (%rdi,%rbx,1),%rax
  0x0000024807457b1b: lea    0x1(%rax),%rax
  0x0000024807457b1f: mov    %rax,(%rdi,%rbx,1)
  0x0000024807457b23: jle    0x0000024807457b72  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@13 (line 148)

  0x0000024807457b29: mov    %esi,0x34(%rsp)
  0x0000024807457b2d: mov    %r8d,0x30(%rsp)
  0x0000024807457b32: mov    %rdx,%rdi
  0x0000024807457b35: movabs $0x2481fe5d9f0,%rbx  ;   {metadata(method data for {method} {0x000002481fe3f458} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807457b3f: addq   $0x1,0x128(%rbx)
  0x0000024807457b47: mov    $0x2,%r8d
  0x0000024807457b4d: mov    %rdx,%rbx
  0x0000024807457b50: mov    %rbx,%rdx          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@18 (line 149)

  0x0000024807457b53: mov    %rbx,0x28(%rsp)
  0x0000024807457b58: nop
  0x0000024807457b59: nop
  0x0000024807457b5a: nop
  0x0000024807457b5b: nop
  0x0000024807457b5c: nop
  0x0000024807457b5d: nop
  0x0000024807457b5e: nop
  0x0000024807457b5f: call   0x0000024807375ee0  ; OopMap{[40]=Oop off=228}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@18 (line 149)
                                                ;   {optimized virtual_call}
  0x0000024807457b64: mov    0x34(%rsp),%esi
  0x0000024807457b68: mov    0x30(%rsp),%r8d
  0x0000024807457b6d: mov    0x28(%rsp),%rdx
  0x0000024807457b72: mov    0x10(%rdx),%eax
  0x0000024807457b75: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@22 (line 151)

  0x0000024807457b79: mov    %r8,%rdi
  0x0000024807457b7c: shr    $0x8,%edi
  0x0000024807457b7f: movslq %esi,%rbx
  0x0000024807457b82: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000024807457bd6
  0x0000024807457b85: jae    0x0000024807457be0
  0x0000024807457b8b: mov    %dil,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)

  0x0000024807457b90: inc    %esi
  0x0000024807457b92: mov    %rsi,%rdi
  0x0000024807457b95: inc    %edi
  0x0000024807457b97: movslq %esi,%rbx
  0x0000024807457b9a: cmp    0xc(%rax),%esi
  0x0000024807457b9d: jae    0x0000024807457be9
  0x0000024807457ba3: mov    %r8b,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@44 (line 153)

  0x0000024807457ba8: mov    %edi,0xc(%rdx)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@47 (line 154)

  0x0000024807457bab: mov    %rdx,%rax
  0x0000024807457bae: add    $0x40,%rsp
  0x0000024807457bb2: pop    %rbp
  0x0000024807457bb3: test   %eax,-0x1ea7ab9(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807457bb9: ret    
  0x0000024807457bba: mov    %rsi,0x8(%rsp)
  0x0000024807457bbf: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807457bc7: call   0x0000024807433da0  ; OopMap{rdx=Oop off=332}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@-1 (line 147)
                                                ;   {runtime_call}
  0x0000024807457bcc: jmp    0x0000024807457ade
  0x0000024807457bd1: call   0x000002480742f100  ; OopMap{rdx=Oop off=342}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@12 (line 148)
                                                ;   {runtime_call}
  0x0000024807457bd6: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=347}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call}
  0x0000024807457bdb: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=352}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call}
  0x0000024807457be0: mov    %rsi,(%rsp)
  0x0000024807457be4: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=361}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call}
  0x0000024807457be9: mov    %rsi,(%rsp)
  0x0000024807457bed: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=370}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@44 (line 153)
                                                ;   {runtime_call}
  0x0000024807457bf2: nop
  0x0000024807457bf3: nop
  0x0000024807457bf4: mov    0x308(%r15),%rax
  0x0000024807457bfb: movabs $0x0,%r10
  0x0000024807457c05: mov    %r10,0x308(%r15)
  0x0000024807457c0c: movabs $0x0,%r10
  0x0000024807457c16: mov    %r10,0x310(%r15)
  0x0000024807457c1d: add    $0x40,%rsp
  0x0000024807457c21: pop    %rbp
  0x0000024807457c22: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807457c27: hlt    
  0x0000024807457c28: hlt    
  0x0000024807457c29: hlt    
  0x0000024807457c2a: hlt    
  0x0000024807457c2b: hlt    
  0x0000024807457c2c: hlt    
  0x0000024807457c2d: hlt    
  0x0000024807457c2e: hlt    
  0x0000024807457c2f: hlt    
  0x0000024807457c30: hlt    
  0x0000024807457c31: hlt    
  0x0000024807457c32: hlt    
  0x0000024807457c33: hlt    
  0x0000024807457c34: hlt    
  0x0000024807457c35: hlt    
  0x0000024807457c36: hlt    
  0x0000024807457c37: hlt    
  0x0000024807457c38: hlt    
  0x0000024807457c39: hlt    
  0x0000024807457c3a: hlt    
  0x0000024807457c3b: hlt    
  0x0000024807457c3c: hlt    
  0x0000024807457c3d: hlt    
  0x0000024807457c3e: hlt    
  0x0000024807457c3f: hlt    
[Stub Code]
  0x0000024807457c40: nop                       ;   {no_reloc}
  0x0000024807457c41: nop
  0x0000024807457c42: nop
  0x0000024807457c43: nop
  0x0000024807457c44: nop
  0x0000024807457c45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807457c4f: jmp    0x0000024807457c4f  ;   {runtime_call}
[Exception Handler]
  0x0000024807457c54: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807457c59: mov    %rsp,-0x28(%rsp)
  0x0000024807457c5e: sub    $0x80,%rsp
  0x0000024807457c65: mov    %rax,0x78(%rsp)
  0x0000024807457c6a: mov    %rcx,0x70(%rsp)
  0x0000024807457c6f: mov    %rdx,0x68(%rsp)
  0x0000024807457c74: mov    %rbx,0x60(%rsp)
  0x0000024807457c79: mov    %rbp,0x50(%rsp)
  0x0000024807457c7e: mov    %rsi,0x48(%rsp)
  0x0000024807457c83: mov    %rdi,0x40(%rsp)
  0x0000024807457c88: mov    %r8,0x38(%rsp)
  0x0000024807457c8d: mov    %r9,0x30(%rsp)
  0x0000024807457c92: mov    %r10,0x28(%rsp)
  0x0000024807457c97: mov    %r11,0x20(%rsp)
  0x0000024807457c9c: mov    %r12,0x18(%rsp)
  0x0000024807457ca1: mov    %r13,0x10(%rsp)
  0x0000024807457ca6: mov    %r14,0x8(%rsp)
  0x0000024807457cab: mov    %r15,(%rsp)
  0x0000024807457caf: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807457cb9: movabs $0x24807457c59,%rdx  ;   {internal_word}
  0x0000024807457cc3: mov    %rsp,%r8
  0x0000024807457cc6: and    $0xfffffffffffffff0,%rsp
  0x0000024807457cca: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807457cd4: call   *%r10
  0x0000024807457cd7: hlt    
[Deopt Handler Code]
  0x0000024807457cd8: movabs $0x24807457cd8,%r10  ;   {section_word}
  0x0000024807457ce2: push   %r10
  0x0000024807457ce4: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807457ce9: hlt    
  0x0000024807457cea: hlt    
  0x0000024807457ceb: hlt    
  0x0000024807457cec: hlt    
  0x0000024807457ced: hlt    
  0x0000024807457cee: hlt    
  0x0000024807457cef: hlt    
<nmethod compile_id='68' compiler='C1' level='3' entry='0x0000024807457a80' size='1480' address='0x0000024807457910' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='1008' scopes_pcs_offset='1136' dependencies_offset='1440' nul_chk_table_offset='1448' method='jdk/internal/org/objectweb/asm/ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='526' iicount='526' stamp='1.112'/>
Decoding compiled method 0x0000024807457f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000024807458060: mov    0x8(%rdx),%r10d
  0x0000024807458064: shl    $0x3,%r10
  0x0000024807458068: cmp    %rax,%r10
  0x000002480745806b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807458071: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745807c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807458080: mov    %eax,-0x6000(%rsp)
  0x0000024807458087: push   %rbp
  0x0000024807458088: sub    $0x30,%rsp
  0x000002480745808c: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807458096: mov    0xdc(%rax),%esi
  0x000002480745809c: add    $0x8,%esi
  0x000002480745809f: mov    %esi,0xdc(%rax)
  0x00000248074580a5: movabs $0x2481fb5a058,%rax  ;   {metadata({method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074580af: and    $0x1ff8,%esi
  0x00000248074580b5: cmp    $0x0,%esi
  0x00000248074580b8: je     0x000002480745812b  ;*aload_0
                                                ; - java.lang.invoke.MemberName::testFlags@0 (line 334)

  0x00000248074580be: mov    0xc(%rdx),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)

  0x00000248074580c1: and    %r8,%rax
  0x00000248074580c4: cmp    %r9d,%eax
  0x00000248074580c7: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074580d1: movabs $0x108,%rsi
  0x00000248074580db: jne    0x00000248074580eb
  0x00000248074580e1: movabs $0x118,%rsi
  0x00000248074580eb: mov    (%rax,%rsi,1),%rdi
  0x00000248074580ef: lea    0x1(%rdi),%rdi
  0x00000248074580f3: mov    %rdi,(%rax,%rsi,1)
  0x00000248074580f7: jne    0x0000024807458117  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)

  0x00000248074580fd: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807458107: incl   0x128(%rax)
  0x000002480745810d: mov    $0x1,%eax
  0x0000024807458112: jmp    0x000002480745811c  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)

  0x0000024807458117: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)

  0x000002480745811c: and    $0x1,%eax
  0x000002480745811f: add    $0x30,%rsp
  0x0000024807458123: pop    %rbp
  0x0000024807458124: test   %eax,-0x1ea802a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745812a: ret    
  0x000002480745812b: mov    %rax,0x8(%rsp)
  0x0000024807458130: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807458138: call   0x0000024807433da0  ; OopMap{rdx=Oop off=221}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ;   {runtime_call}
  0x000002480745813d: jmp    0x00000248074580be
  0x0000024807458142: nop
  0x0000024807458143: nop
  0x0000024807458144: mov    0x308(%r15),%rax
  0x000002480745814b: movabs $0x0,%r10
  0x0000024807458155: mov    %r10,0x308(%r15)
  0x000002480745815c: movabs $0x0,%r10
  0x0000024807458166: mov    %r10,0x310(%r15)
  0x000002480745816d: add    $0x30,%rsp
  0x0000024807458171: pop    %rbp
  0x0000024807458172: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807458177: hlt    
  0x0000024807458178: hlt    
  0x0000024807458179: hlt    
  0x000002480745817a: hlt    
  0x000002480745817b: hlt    
  0x000002480745817c: hlt    
  0x000002480745817d: hlt    
  0x000002480745817e: hlt    
  0x000002480745817f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807458180: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807458185: mov    %rsp,-0x28(%rsp)
  0x000002480745818a: sub    $0x80,%rsp
  0x0000024807458191: mov    %rax,0x78(%rsp)
  0x0000024807458196: mov    %rcx,0x70(%rsp)
  0x000002480745819b: mov    %rdx,0x68(%rsp)
  0x00000248074581a0: mov    %rbx,0x60(%rsp)
  0x00000248074581a5: mov    %rbp,0x50(%rsp)
  0x00000248074581aa: mov    %rsi,0x48(%rsp)
  0x00000248074581af: mov    %rdi,0x40(%rsp)
  0x00000248074581b4: mov    %r8,0x38(%rsp)
  0x00000248074581b9: mov    %r9,0x30(%rsp)
  0x00000248074581be: mov    %r10,0x28(%rsp)
  0x00000248074581c3: mov    %r11,0x20(%rsp)
  0x00000248074581c8: mov    %r12,0x18(%rsp)
  0x00000248074581cd: mov    %r13,0x10(%rsp)
  0x00000248074581d2: mov    %r14,0x8(%rsp)
  0x00000248074581d7: mov    %r15,(%rsp)
  0x00000248074581db: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074581e5: movabs $0x24807458185,%rdx  ;   {internal_word}
  0x00000248074581ef: mov    %rsp,%r8
  0x00000248074581f2: and    $0xfffffffffffffff0,%rsp
  0x00000248074581f6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807458200: call   *%r10
  0x0000024807458203: hlt    
[Deopt Handler Code]
  0x0000024807458204: movabs $0x24807458204,%r10  ;   {section_word}
  0x000002480745820e: push   %r10
  0x0000024807458210: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807458215: hlt    
  0x0000024807458216: hlt    
  0x0000024807458217: hlt    
<nmethod compile_id='66' compiler='C1' level='3' entry='0x0000024807458060' size='968' address='0x0000024807457f10' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='784' scopes_pcs_offset='832' dependencies_offset='960' method='java/lang/invoke/MemberName testFlags (II)Z' bytes='16' count='409' iicount='409' stamp='1.117'/>
Decoding compiled method 0x0000024807458310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb6b570} &apos;returnType&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807458460: mov    0x8(%rdx),%r10d
  0x0000024807458464: shl    $0x3,%r10
  0x0000024807458468: cmp    %rax,%r10
  0x000002480745846b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807458471: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745847c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807458480: mov    %eax,-0x6000(%rsp)
  0x0000024807458487: push   %rbp
  0x0000024807458488: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodType::returnType@0 (line 721)

  0x000002480745848c: mov    0xc(%rdx),%eax
  0x000002480745848f: shl    $0x3,%rax          ;*getfield rtype
                                                ; - java.lang.invoke.MethodType::returnType@1 (line 721)

  0x0000024807458493: add    $0x30,%rsp
  0x0000024807458497: pop    %rbp
  0x0000024807458498: test   %eax,-0x1ea839e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745849e: ret    
  0x000002480745849f: nop
  0x00000248074584a0: nop
  0x00000248074584a1: mov    0x308(%r15),%rax
  0x00000248074584a8: movabs $0x0,%r10
  0x00000248074584b2: mov    %r10,0x308(%r15)
  0x00000248074584b9: movabs $0x0,%r10
  0x00000248074584c3: mov    %r10,0x310(%r15)
  0x00000248074584ca: add    $0x30,%rsp
  0x00000248074584ce: pop    %rbp
  0x00000248074584cf: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074584d4: hlt    
  0x00000248074584d5: hlt    
  0x00000248074584d6: hlt    
  0x00000248074584d7: hlt    
  0x00000248074584d8: hlt    
  0x00000248074584d9: hlt    
  0x00000248074584da: hlt    
  0x00000248074584db: hlt    
  0x00000248074584dc: hlt    
  0x00000248074584dd: hlt    
  0x00000248074584de: hlt    
  0x00000248074584df: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074584e0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074584e5: mov    %rsp,-0x28(%rsp)
  0x00000248074584ea: sub    $0x80,%rsp
  0x00000248074584f1: mov    %rax,0x78(%rsp)
  0x00000248074584f6: mov    %rcx,0x70(%rsp)
  0x00000248074584fb: mov    %rdx,0x68(%rsp)
  0x0000024807458500: mov    %rbx,0x60(%rsp)
  0x0000024807458505: mov    %rbp,0x50(%rsp)
  0x000002480745850a: mov    %rsi,0x48(%rsp)
  0x000002480745850f: mov    %rdi,0x40(%rsp)
  0x0000024807458514: mov    %r8,0x38(%rsp)
  0x0000024807458519: mov    %r9,0x30(%rsp)
  0x000002480745851e: mov    %r10,0x28(%rsp)
  0x0000024807458523: mov    %r11,0x20(%rsp)
  0x0000024807458528: mov    %r12,0x18(%rsp)
  0x000002480745852d: mov    %r13,0x10(%rsp)
  0x0000024807458532: mov    %r14,0x8(%rsp)
  0x0000024807458537: mov    %r15,(%rsp)
  0x000002480745853b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807458545: movabs $0x248074584e5,%rdx  ;   {internal_word}
  0x000002480745854f: mov    %rsp,%r8
  0x0000024807458552: and    $0xfffffffffffffff0,%rsp
  0x0000024807458556: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807458560: call   *%r10
  0x0000024807458563: hlt    
[Deopt Handler Code]
  0x0000024807458564: movabs $0x24807458564,%r10  ;   {section_word}
  0x000002480745856e: push   %r10
  0x0000024807458570: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807458575: hlt    
  0x0000024807458576: hlt    
  0x0000024807458577: hlt    
<nmethod compile_id='59' compiler='C1' level='1' entry='0x0000024807458460' size='712' address='0x0000024807458310' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/invoke/MethodType returnType ()Ljava/lang/Class;' bytes='5' count='186' iicount='186' stamp='1.121'/>
Decoding compiled method 0x0000024807458610:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb58f30} &apos;getDeclaringClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807458760: mov    0x8(%rdx),%r10d
  0x0000024807458764: shl    $0x3,%r10
  0x0000024807458768: cmp    %rax,%r10
  0x000002480745876b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807458771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745877c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807458780: mov    %eax,-0x6000(%rsp)
  0x0000024807458787: push   %rbp
  0x0000024807458788: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MemberName::getDeclaringClass@0 (line 85)

  0x000002480745878c: mov    0x20(%rdx),%eax
  0x000002480745878f: shl    $0x3,%rax          ;*getfield clazz
                                                ; - java.lang.invoke.MemberName::getDeclaringClass@1 (line 85)

  0x0000024807458793: add    $0x30,%rsp
  0x0000024807458797: pop    %rbp
  0x0000024807458798: test   %eax,-0x1ea869e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745879e: ret    
  0x000002480745879f: nop
  0x00000248074587a0: nop
  0x00000248074587a1: mov    0x308(%r15),%rax
  0x00000248074587a8: movabs $0x0,%r10
  0x00000248074587b2: mov    %r10,0x308(%r15)
  0x00000248074587b9: movabs $0x0,%r10
  0x00000248074587c3: mov    %r10,0x310(%r15)
  0x00000248074587ca: add    $0x30,%rsp
  0x00000248074587ce: pop    %rbp
  0x00000248074587cf: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074587d4: hlt    
  0x00000248074587d5: hlt    
  0x00000248074587d6: hlt    
  0x00000248074587d7: hlt    
  0x00000248074587d8: hlt    
  0x00000248074587d9: hlt    
  0x00000248074587da: hlt    
  0x00000248074587db: hlt    
  0x00000248074587dc: hlt    
  0x00000248074587dd: hlt    
  0x00000248074587de: hlt    
  0x00000248074587df: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074587e0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074587e5: mov    %rsp,-0x28(%rsp)
  0x00000248074587ea: sub    $0x80,%rsp
  0x00000248074587f1: mov    %rax,0x78(%rsp)
  0x00000248074587f6: mov    %rcx,0x70(%rsp)
  0x00000248074587fb: mov    %rdx,0x68(%rsp)
  0x0000024807458800: mov    %rbx,0x60(%rsp)
  0x0000024807458805: mov    %rbp,0x50(%rsp)
  0x000002480745880a: mov    %rsi,0x48(%rsp)
  0x000002480745880f: mov    %rdi,0x40(%rsp)
  0x0000024807458814: mov    %r8,0x38(%rsp)
  0x0000024807458819: mov    %r9,0x30(%rsp)
  0x000002480745881e: mov    %r10,0x28(%rsp)
  0x0000024807458823: mov    %r11,0x20(%rsp)
  0x0000024807458828: mov    %r12,0x18(%rsp)
  0x000002480745882d: mov    %r13,0x10(%rsp)
  0x0000024807458832: mov    %r14,0x8(%rsp)
  0x0000024807458837: mov    %r15,(%rsp)
  0x000002480745883b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807458845: movabs $0x248074587e5,%rdx  ;   {internal_word}
  0x000002480745884f: mov    %rsp,%r8
  0x0000024807458852: and    $0xfffffffffffffff0,%rsp
  0x0000024807458856: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807458860: call   *%r10
  0x0000024807458863: hlt    
[Deopt Handler Code]
  0x0000024807458864: movabs $0x24807458864,%r10  ;   {section_word}
  0x000002480745886e: push   %r10
  0x0000024807458870: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807458875: hlt    
  0x0000024807458876: hlt    
  0x0000024807458877: hlt    
<nmethod compile_id='60' compiler='C1' level='1' entry='0x0000024807458760' size='712' address='0x0000024807458610' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/invoke/MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='159' iicount='159' stamp='1.125'/>
<writer thread='27436'/>
<task_queued compile_id='69' method='java/util/SubList access$000 (Ljava/util/SubList;)I' bytes='5' count='128' iicount='128' level='1' stamp='1.126' comment='tiered' hot_count='128'/>
<task_queued compile_id='70' method='java/util/AbstractList$ListItr nextIndex ()I' bytes='5' count='128' iicount='128' level='1' stamp='1.126' comment='tiered' hot_count='128'/>
<task_queued compile_id='71' method='java/util/SubList access$200 (Ljava/util/SubList;)I' bytes='5' count='128' iicount='128' level='1' stamp='1.126' comment='tiered' hot_count='128'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807458910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fdf3ea8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807458a60: mov    0x8(%rdx),%r10d
  0x0000024807458a64: shl    $0x3,%r10
  0x0000024807458a68: cmp    %rax,%r10
  0x0000024807458a6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807458a71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807458a7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807458a80: mov    %eax,-0x6000(%rsp)
  0x0000024807458a87: push   %rbp
  0x0000024807458a88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@0 (line 1285)

  0x0000024807458a8c: mov    0x1c(%rdx),%eax    ;*getfield hashcode
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@1 (line 1285)

  0x0000024807458a8f: add    $0x30,%rsp
  0x0000024807458a93: pop    %rbp
  0x0000024807458a94: test   %eax,-0x1ea899a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807458a9a: ret    
  0x0000024807458a9b: nop
  0x0000024807458a9c: nop
  0x0000024807458a9d: mov    0x308(%r15),%rax
  0x0000024807458aa4: movabs $0x0,%r10
  0x0000024807458aae: mov    %r10,0x308(%r15)
  0x0000024807458ab5: movabs $0x0,%r10
  0x0000024807458abf: mov    %r10,0x310(%r15)
  0x0000024807458ac6: add    $0x30,%rsp
  0x0000024807458aca: pop    %rbp
  0x0000024807458acb: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807458ad0: hlt    
  0x0000024807458ad1: hlt    
  0x0000024807458ad2: hlt    
  0x0000024807458ad3: hlt    
  0x0000024807458ad4: hlt    
  0x0000024807458ad5: hlt    
  0x0000024807458ad6: hlt    
  0x0000024807458ad7: hlt    
  0x0000024807458ad8: hlt    
  0x0000024807458ad9: hlt    
  0x0000024807458ada: hlt    
  0x0000024807458adb: hlt    
  0x0000024807458adc: hlt    
  0x0000024807458add: hlt    
  0x0000024807458ade: hlt    
  0x0000024807458adf: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807458ae0: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807458ae5: mov    %rsp,-0x28(%rsp)
  0x0000024807458aea: sub    $0x80,%rsp
  0x0000024807458af1: mov    %rax,0x78(%rsp)
  0x0000024807458af6: mov    %rcx,0x70(%rsp)
  0x0000024807458afb: mov    %rdx,0x68(%rsp)
  0x0000024807458b00: mov    %rbx,0x60(%rsp)
  0x0000024807458b05: mov    %rbp,0x50(%rsp)
  0x0000024807458b0a: mov    %rsi,0x48(%rsp)
  0x0000024807458b0f: mov    %rdi,0x40(%rsp)
  0x0000024807458b14: mov    %r8,0x38(%rsp)
  0x0000024807458b19: mov    %r9,0x30(%rsp)
  0x0000024807458b1e: mov    %r10,0x28(%rsp)
  0x0000024807458b23: mov    %r11,0x20(%rsp)
  0x0000024807458b28: mov    %r12,0x18(%rsp)
  0x0000024807458b2d: mov    %r13,0x10(%rsp)
  0x0000024807458b32: mov    %r14,0x8(%rsp)
  0x0000024807458b37: mov    %r15,(%rsp)
  0x0000024807458b3b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807458b45: movabs $0x24807458ae5,%rdx  ;   {internal_word}
  0x0000024807458b4f: mov    %rsp,%r8
  0x0000024807458b52: and    $0xfffffffffffffff0,%rsp
  0x0000024807458b56: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807458b60: call   *%r10
  0x0000024807458b63: hlt    
[Deopt Handler Code]
  0x0000024807458b64: movabs $0x24807458b64,%r10  ;   {section_word}
  0x0000024807458b6e: push   %r10
  0x0000024807458b70: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807458b75: hlt    
  0x0000024807458b76: hlt    
  0x0000024807458b77: hlt    
<nmethod compile_id='63' compiler='C1' level='1' entry='0x0000024807458a60' size='712' address='0x0000024807458910' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='152' iicount='152' stamp='1.130'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807458c10:
Code:
[Entry Point]
  # {method} {0x000002481fb0c680} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000024807458d80: mov    0x8(%rdx),%r10d
  0x0000024807458d84: shl    $0x3,%r10
  0x0000024807458d88: cmp    %r10,%rax
  0x0000024807458d8b: je     0x0000024807458d98
  0x0000024807458d91: jmp    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807458d96: xchg   %ax,%ax
[Verified Entry Point]
  0x0000024807458d98: mov    %eax,-0x6000(%rsp)
  0x0000024807458d9f: push   %rbp
  0x0000024807458da0: mov    %rsp,%rbp
  0x0000024807458da3: sub    $0x60,%rsp
  0x0000024807458da7: mov    %rdx,0x20(%rsp)
  0x0000024807458dac: cmp    $0x0,%rdx
  0x0000024807458db0: lea    0x20(%rsp),%rdx
  0x0000024807458db5: cmove  0x20(%rsp),%rdx    ; OopMap{[32]=Oop off=59}
  0x0000024807458dbb: movabs $0x24807458dbb,%r10  ;   {section_word}
  0x0000024807458dc5: mov    %r10,0x240(%r15)
  0x0000024807458dcc: mov    %rsp,0x238(%r15)
  0x0000024807458dd3: movabs $0x667e60d1,%r10   ;   {external_word}
  0x0000024807458ddd: cmpb   $0x0,(%r10)
  0x0000024807458de1: je     0x0000024807458e31
  0x0000024807458de7: push   %rdx
  0x0000024807458de8: movabs $0x2481fb0c678,%rdx  ;   {metadata({method} {0x000002481fb0c680} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807458df2: mov    %r15,%rcx
  0x0000024807458df5: sub    $0x20,%rsp
  0x0000024807458df9: test   $0xf,%esp
  0x0000024807458dff: je     0x0000024807458e1f
  0x0000024807458e05: sub    $0x8,%rsp
  0x0000024807458e09: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807458e13: call   *%r10
  0x0000024807458e16: add    $0x8,%rsp
  0x0000024807458e1a: jmp    0x0000024807458e2c
  0x0000024807458e1f: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807458e29: call   *%r10
  0x0000024807458e2c: add    $0x20,%rsp
  0x0000024807458e30: pop    %rdx
  0x0000024807458e31: lea    0x258(%r15),%rcx
  0x0000024807458e38: movl   $0x4,0x2d0(%r15)
  0x0000024807458e43: movabs $0x7ffe39990408,%r10  ;   {runtime_call}
  0x0000024807458e4d: call   *%r10
  0x0000024807458e50: vzeroupper 
  0x0000024807458e53: and    $0xff,%eax
  0x0000024807458e59: setne  %al
  0x0000024807458e5c: movl   $0x5,0x2d0(%r15)
  0x0000024807458e67: mov    %r15d,%ecx
  0x0000024807458e6a: shr    $0x4,%ecx
  0x0000024807458e6d: and    $0xffc,%ecx
  0x0000024807458e73: movabs $0x248055c0000,%r10  ;   {external_word}
  0x0000024807458e7d: mov    %ecx,(%r10,%rcx,1)
  0x0000024807458e81: movabs $0x667e6b0c,%r10   ;   {external_word}
  0x0000024807458e8b: cmpl   $0x0,(%r10)
  0x0000024807458e92: jne    0x0000024807458ea6
  0x0000024807458e98: cmpl   $0x0,0x30(%r15)
  0x0000024807458ea0: je     0x0000024807458ecf
  0x0000024807458ea6: mov    %rax,-0x8(%rbp)
  0x0000024807458eaa: mov    %r15,%rcx
  0x0000024807458ead: mov    %rsp,%r12
  0x0000024807458eb0: sub    $0x20,%rsp
  0x0000024807458eb4: and    $0xfffffffffffffff0,%rsp
  0x0000024807458eb8: movabs $0x662139d0,%r10   ;   {runtime_call}
  0x0000024807458ec2: call   *%r10
  0x0000024807458ec5: mov    %r12,%rsp
  0x0000024807458ec8: xor    %r12,%r12
  0x0000024807458ecb: mov    -0x8(%rbp),%rax
  0x0000024807458ecf: movl   $0x8,0x2d0(%r15)
  0x0000024807458eda: cmpl   $0x1,0x2fc(%r15)
  0x0000024807458ee5: je     0x0000024807458f94
  0x0000024807458eeb: movabs $0x667e60d1,%r10   ;   {external_word}
  0x0000024807458ef5: cmpb   $0x0,(%r10)
  0x0000024807458ef9: je     0x0000024807458f4f
  0x0000024807458eff: mov    %rax,-0x8(%rbp)
  0x0000024807458f03: movabs $0x2481fb0c678,%rdx  ;   {metadata({method} {0x000002481fb0c680} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807458f0d: mov    %r15,%rcx
  0x0000024807458f10: sub    $0x20,%rsp
  0x0000024807458f14: test   $0xf,%esp
  0x0000024807458f1a: je     0x0000024807458f3a
  0x0000024807458f20: sub    $0x8,%rsp
  0x0000024807458f24: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807458f2e: call   *%r10
  0x0000024807458f31: add    $0x8,%rsp
  0x0000024807458f35: jmp    0x0000024807458f47
  0x0000024807458f3a: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807458f44: call   *%r10
  0x0000024807458f47: add    $0x20,%rsp
  0x0000024807458f4b: mov    -0x8(%rbp),%rax
  0x0000024807458f4f: movabs $0x0,%r10
  0x0000024807458f59: mov    %r10,0x238(%r15)
  0x0000024807458f60: movabs $0x0,%r10
  0x0000024807458f6a: mov    %r10,0x240(%r15)
  0x0000024807458f71: mov    0x38(%r15),%rcx
  0x0000024807458f75: movl   $0x0,0x100(%rcx)
  0x0000024807458f7f: leave  
  0x0000024807458f80: cmpq   $0x0,0x8(%r15)
  0x0000024807458f88: jne    0x0000024807458f8f
  0x0000024807458f8e: ret    
  0x0000024807458f8f: jmp    Stub::forward exception  ;   {runtime_call}
  0x0000024807458f94: mov    %rax,-0x8(%rbp)
  0x0000024807458f98: mov    %rsp,%r12
  0x0000024807458f9b: sub    $0x20,%rsp
  0x0000024807458f9f: and    $0xfffffffffffffff0,%rsp
  0x0000024807458fa3: movabs $0x66203da0,%r10   ;   {runtime_call}
  0x0000024807458fad: call   *%r10
  0x0000024807458fb0: mov    %r12,%rsp
  0x0000024807458fb3: xor    %r12,%r12
  0x0000024807458fb6: mov    -0x8(%rbp),%rax
  0x0000024807458fba: jmp    0x0000024807458eeb
  0x0000024807458fbf: hlt    
<nmethod compile_id='72' compile_kind='c2n' level='0' entry='0x0000024807458d80' size='944' address='0x0000024807458c10' relocation_offset='288' consts_offset='944' insts_offset='368' method='java/lang/Class isPrimitive ()Z' bytes='0' count='384' iicount='384' stamp='1.136'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807458fd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fe5f168} &apos;access$000&apos; &apos;(Ljava/util/SubList;)I&apos; in &apos;java/util/SubList&apos;
  # parm0:    rdx:rdx   = &apos;java/util/SubList&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807459120: mov    %eax,-0x6000(%rsp)
  0x0000024807459127: push   %rbp
  0x0000024807459128: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.SubList::access$000@0 (line 613)

  0x000002480745912c: mov    0x10(%rdx),%eax    ;*getfield offset
                                                ; - java.util.SubList::access$000@1 (line 613)
                                                ; implicit exception: dispatches to 0x000002480745913b
  0x000002480745912f: add    $0x30,%rsp
  0x0000024807459133: pop    %rbp
  0x0000024807459134: test   %eax,-0x1ea903a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745913a: ret    
  0x000002480745913b: call   0x000002480742f100  ; OopMap{off=32}
                                                ;*getfield offset
                                                ; - java.util.SubList::access$000@1 (line 613)
                                                ;   {runtime_call}
  0x0000024807459140: nop
  0x0000024807459141: nop
  0x0000024807459142: mov    0x308(%r15),%rax
  0x0000024807459149: movabs $0x0,%r10
  0x0000024807459153: mov    %r10,0x308(%r15)
  0x000002480745915a: movabs $0x0,%r10
  0x0000024807459164: mov    %r10,0x310(%r15)
  0x000002480745916b: add    $0x30,%rsp
  0x000002480745916f: pop    %rbp
  0x0000024807459170: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807459175: hlt    
  0x0000024807459176: hlt    
  0x0000024807459177: hlt    
  0x0000024807459178: hlt    
  0x0000024807459179: hlt    
  0x000002480745917a: hlt    
  0x000002480745917b: hlt    
  0x000002480745917c: hlt    
  0x000002480745917d: hlt    
  0x000002480745917e: hlt    
  0x000002480745917f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807459180: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807459185: mov    %rsp,-0x28(%rsp)
  0x000002480745918a: sub    $0x80,%rsp
  0x0000024807459191: mov    %rax,0x78(%rsp)
  0x0000024807459196: mov    %rcx,0x70(%rsp)
  0x000002480745919b: mov    %rdx,0x68(%rsp)
  0x00000248074591a0: mov    %rbx,0x60(%rsp)
  0x00000248074591a5: mov    %rbp,0x50(%rsp)
  0x00000248074591aa: mov    %rsi,0x48(%rsp)
  0x00000248074591af: mov    %rdi,0x40(%rsp)
  0x00000248074591b4: mov    %r8,0x38(%rsp)
  0x00000248074591b9: mov    %r9,0x30(%rsp)
  0x00000248074591be: mov    %r10,0x28(%rsp)
  0x00000248074591c3: mov    %r11,0x20(%rsp)
  0x00000248074591c8: mov    %r12,0x18(%rsp)
  0x00000248074591cd: mov    %r13,0x10(%rsp)
  0x00000248074591d2: mov    %r14,0x8(%rsp)
  0x00000248074591d7: mov    %r15,(%rsp)
  0x00000248074591db: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074591e5: movabs $0x24807459185,%rdx  ;   {internal_word}
  0x00000248074591ef: mov    %rsp,%r8
  0x00000248074591f2: and    $0xfffffffffffffff0,%rsp
  0x00000248074591f6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807459200: call   *%r10
  0x0000024807459203: hlt    
[Deopt Handler Code]
  0x0000024807459204: movabs $0x24807459204,%r10  ;   {section_word}
  0x000002480745920e: push   %r10
  0x0000024807459210: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807459215: hlt    
  0x0000024807459216: hlt    
  0x0000024807459217: hlt    
<nmethod compile_id='69' compiler='C1' level='1' entry='0x0000024807459120' size='720' address='0x0000024807458fd0' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='616' dependencies_offset='696' nul_chk_table_offset='704' method='java/util/SubList access$000 (Ljava/util/SubList;)I' bytes='5' count='146' iicount='146' stamp='1.140'/>
<writer thread='27436'/>
<task_queued compile_id='73' method='java/util/ArrayList size ()I' bytes='5' count='768' iicount='768' level='1' stamp='1.140' comment='tiered' hot_count='768'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074592d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fbd1c00} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807459420: mov    0x8(%rdx),%r10d
  0x0000024807459424: shl    $0x3,%r10
  0x0000024807459428: cmp    %rax,%r10
  0x000002480745942b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807459431: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745943c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807459440: mov    %eax,-0x6000(%rsp)
  0x0000024807459447: push   %rbp
  0x0000024807459448: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 284)

  0x000002480745944c: mov    0x10(%rdx),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 284)

  0x000002480745944f: add    $0x30,%rsp
  0x0000024807459453: pop    %rbp
  0x0000024807459454: test   %eax,-0x1ea935a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745945a: ret    
  0x000002480745945b: nop
  0x000002480745945c: nop
  0x000002480745945d: mov    0x308(%r15),%rax
  0x0000024807459464: movabs $0x0,%r10
  0x000002480745946e: mov    %r10,0x308(%r15)
  0x0000024807459475: movabs $0x0,%r10
  0x000002480745947f: mov    %r10,0x310(%r15)
  0x0000024807459486: add    $0x30,%rsp
  0x000002480745948a: pop    %rbp
  0x000002480745948b: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807459490: hlt    
  0x0000024807459491: hlt    
  0x0000024807459492: hlt    
  0x0000024807459493: hlt    
  0x0000024807459494: hlt    
  0x0000024807459495: hlt    
  0x0000024807459496: hlt    
  0x0000024807459497: hlt    
  0x0000024807459498: hlt    
  0x0000024807459499: hlt    
  0x000002480745949a: hlt    
  0x000002480745949b: hlt    
  0x000002480745949c: hlt    
  0x000002480745949d: hlt    
  0x000002480745949e: hlt    
  0x000002480745949f: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074594a0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074594a5: mov    %rsp,-0x28(%rsp)
  0x00000248074594aa: sub    $0x80,%rsp
  0x00000248074594b1: mov    %rax,0x78(%rsp)
  0x00000248074594b6: mov    %rcx,0x70(%rsp)
  0x00000248074594bb: mov    %rdx,0x68(%rsp)
  0x00000248074594c0: mov    %rbx,0x60(%rsp)
  0x00000248074594c5: mov    %rbp,0x50(%rsp)
  0x00000248074594ca: mov    %rsi,0x48(%rsp)
  0x00000248074594cf: mov    %rdi,0x40(%rsp)
  0x00000248074594d4: mov    %r8,0x38(%rsp)
  0x00000248074594d9: mov    %r9,0x30(%rsp)
  0x00000248074594de: mov    %r10,0x28(%rsp)
  0x00000248074594e3: mov    %r11,0x20(%rsp)
  0x00000248074594e8: mov    %r12,0x18(%rsp)
  0x00000248074594ed: mov    %r13,0x10(%rsp)
  0x00000248074594f2: mov    %r14,0x8(%rsp)
  0x00000248074594f7: mov    %r15,(%rsp)
  0x00000248074594fb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807459505: movabs $0x248074594a5,%rdx  ;   {internal_word}
  0x000002480745950f: mov    %rsp,%r8
  0x0000024807459512: and    $0xfffffffffffffff0,%rsp
  0x0000024807459516: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807459520: call   *%r10
  0x0000024807459523: hlt    
[Deopt Handler Code]
  0x0000024807459524: movabs $0x24807459524,%r10  ;   {section_word}
  0x000002480745952e: push   %r10
  0x0000024807459530: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807459535: hlt    
  0x0000024807459536: hlt    
  0x0000024807459537: hlt    
<nmethod compile_id='73' compiler='C1' level='1' entry='0x0000024807459420' size='712' address='0x00000248074592d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/util/ArrayList size ()I' bytes='5' count='784' iicount='784' stamp='1.144'/>
<writer thread='27436'/>
<task_queued compile_id='74' method='java/lang/Math max (II)I' bytes='11' count='17536' iicount='17536' stamp='1.144' comment='tiered' hot_count='17536'/>
<task_queued compile_id='75' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;)V' bytes='7' count='256' iicount='256' level='3' stamp='1.145' comment='tiered' hot_count='256'/>
<task_queued compile_id='76' method='java/util/ArrayList access$000 (Ljava/util/ArrayList;)I' bytes='5' count='128' iicount='128' level='1' stamp='1.145' comment='tiered' hot_count='128'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074595d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe61838} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/AbstractList$ListItr&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807459720: mov    0x8(%rdx),%r10d
  0x0000024807459724: shl    $0x3,%r10
  0x0000024807459728: cmp    %rax,%r10
  0x000002480745972b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807459731: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745973c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807459740: mov    %eax,-0x6000(%rsp)
  0x0000024807459747: push   %rbp
  0x0000024807459748: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.AbstractList$ListItr::nextIndex@0 (line 413)

  0x000002480745974c: mov    0xc(%rdx),%eax     ;*getfield cursor
                                                ; - java.util.AbstractList$ListItr::nextIndex@1 (line 413)

  0x000002480745974f: add    $0x30,%rsp
  0x0000024807459753: pop    %rbp
  0x0000024807459754: test   %eax,-0x1ea965a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745975a: ret    
  0x000002480745975b: nop
  0x000002480745975c: nop
  0x000002480745975d: mov    0x308(%r15),%rax
  0x0000024807459764: movabs $0x0,%r10
  0x000002480745976e: mov    %r10,0x308(%r15)
  0x0000024807459775: movabs $0x0,%r10
  0x000002480745977f: mov    %r10,0x310(%r15)
  0x0000024807459786: add    $0x30,%rsp
  0x000002480745978a: pop    %rbp
  0x000002480745978b: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807459790: hlt    
  0x0000024807459791: hlt    
  0x0000024807459792: hlt    
  0x0000024807459793: hlt    
  0x0000024807459794: hlt    
  0x0000024807459795: hlt    
  0x0000024807459796: hlt    
  0x0000024807459797: hlt    
  0x0000024807459798: hlt    
  0x0000024807459799: hlt    
  0x000002480745979a: hlt    
  0x000002480745979b: hlt    
  0x000002480745979c: hlt    
  0x000002480745979d: hlt    
  0x000002480745979e: hlt    
  0x000002480745979f: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074597a0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074597a5: mov    %rsp,-0x28(%rsp)
  0x00000248074597aa: sub    $0x80,%rsp
  0x00000248074597b1: mov    %rax,0x78(%rsp)
  0x00000248074597b6: mov    %rcx,0x70(%rsp)
  0x00000248074597bb: mov    %rdx,0x68(%rsp)
  0x00000248074597c0: mov    %rbx,0x60(%rsp)
  0x00000248074597c5: mov    %rbp,0x50(%rsp)
  0x00000248074597ca: mov    %rsi,0x48(%rsp)
  0x00000248074597cf: mov    %rdi,0x40(%rsp)
  0x00000248074597d4: mov    %r8,0x38(%rsp)
  0x00000248074597d9: mov    %r9,0x30(%rsp)
  0x00000248074597de: mov    %r10,0x28(%rsp)
  0x00000248074597e3: mov    %r11,0x20(%rsp)
  0x00000248074597e8: mov    %r12,0x18(%rsp)
  0x00000248074597ed: mov    %r13,0x10(%rsp)
  0x00000248074597f2: mov    %r14,0x8(%rsp)
  0x00000248074597f7: mov    %r15,(%rsp)
  0x00000248074597fb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807459805: movabs $0x248074597a5,%rdx  ;   {internal_word}
  0x000002480745980f: mov    %rsp,%r8
  0x0000024807459812: and    $0xfffffffffffffff0,%rsp
  0x0000024807459816: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807459820: call   *%r10
  0x0000024807459823: hlt    
[Deopt Handler Code]
  0x0000024807459824: movabs $0x24807459824,%r10  ;   {section_word}
  0x000002480745982e: push   %r10
  0x0000024807459830: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807459835: hlt    
  0x0000024807459836: hlt    
  0x0000024807459837: hlt    
<nmethod compile_id='70' compiler='C1' level='1' entry='0x0000024807459720' size='712' address='0x00000248074595d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/util/AbstractList$ListItr nextIndex ()I' bytes='5' count='145' iicount='145' stamp='1.148'/>
<writer thread='27436'/>
<task_queued compile_id='77' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='384' iicount='384' level='3' stamp='1.148' comment='tiered' hot_count='384'/>
<writer thread='19792'/>
Decoding compiled method 0x000002480745c510:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x000002480745c640: sub    $0x18,%rsp
  0x000002480745c647: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)

  0x000002480745c64c: cmp    %r8d,%edx
  0x000002480745c64f: jl     0x000002480745c65f  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)

  0x000002480745c651: mov    %edx,%eax          ;*ireturn
                                                ; - java.lang.Math::max@10 (line 1252)

  0x000002480745c653: add    $0x10,%rsp
  0x000002480745c657: pop    %rbp
  0x000002480745c658: test   %eax,-0x1eac65e(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x000002480745c65e: ret    
  0x000002480745c65f: mov    %r8d,%eax
  0x000002480745c662: jmp    0x000002480745c653
  0x000002480745c664: hlt    
  0x000002480745c665: hlt    
  0x000002480745c666: hlt    
  0x000002480745c667: hlt    
  0x000002480745c668: hlt    
  0x000002480745c669: hlt    
  0x000002480745c66a: hlt    
  0x000002480745c66b: hlt    
  0x000002480745c66c: hlt    
  0x000002480745c66d: hlt    
  0x000002480745c66e: hlt    
  0x000002480745c66f: hlt    
  0x000002480745c670: hlt    
  0x000002480745c671: hlt    
  0x000002480745c672: hlt    
  0x000002480745c673: hlt    
  0x000002480745c674: hlt    
  0x000002480745c675: hlt    
  0x000002480745c676: hlt    
  0x000002480745c677: hlt    
  0x000002480745c678: hlt    
  0x000002480745c679: hlt    
  0x000002480745c67a: hlt    
  0x000002480745c67b: hlt    
  0x000002480745c67c: hlt    
  0x000002480745c67d: hlt    
  0x000002480745c67e: hlt    
  0x000002480745c67f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480745c680: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x000002480745c685: call   0x000002480745c68a
  0x000002480745c68a: subq   $0x5,(%rsp)
  0x000002480745c68f: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745c694: hlt    
  0x000002480745c695: hlt    
  0x000002480745c696: hlt    
  0x000002480745c697: hlt    
<nmethod compile_id='74' compiler='C2' level='4' entry='0x000002480745c640' size='512' address='0x000002480745c510' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='424' dependencies_offset='504' method='java/lang/Math max (II)I' bytes='11' count='17543' iicount='17543' stamp='1.151'/>
<writer thread='27436'/>
<task_queued compile_id='78' method='java/util/ArrayList ensureCapacityInternal (I)V' bytes='13' count='384' iicount='384' level='3' stamp='1.151' comment='tiered' hot_count='384'/>
<task_queued compile_id='79' method='java/util/ArrayList add (Ljava/lang/Object;)Z' bytes='29' count='384' iicount='384' level='3' stamp='1.151' comment='tiered' hot_count='384'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480745bdd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fbd3ab0} &apos;access$000&apos; &apos;(Ljava/util/ArrayList;)I&apos; in &apos;java/util/ArrayList&apos;
  # parm0:    rdx:rdx   = &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480745bf20: mov    %eax,-0x6000(%rsp)
  0x000002480745bf27: push   %rbp
  0x000002480745bf28: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::access$000@0 (line 107)

  0x000002480745bf2c: mov    0x10(%rdx),%eax    ;*getfield size
                                                ; - java.util.ArrayList::access$000@1 (line 107)
                                                ; implicit exception: dispatches to 0x000002480745bf3b
  0x000002480745bf2f: add    $0x30,%rsp
  0x000002480745bf33: pop    %rbp
  0x000002480745bf34: test   %eax,-0x1eabe3a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745bf3a: ret    
  0x000002480745bf3b: call   0x000002480742f100  ; OopMap{off=32}
                                                ;*getfield size
                                                ; - java.util.ArrayList::access$000@1 (line 107)
                                                ;   {runtime_call}
  0x000002480745bf40: nop
  0x000002480745bf41: nop
  0x000002480745bf42: mov    0x308(%r15),%rax
  0x000002480745bf49: movabs $0x0,%r10
  0x000002480745bf53: mov    %r10,0x308(%r15)
  0x000002480745bf5a: movabs $0x0,%r10
  0x000002480745bf64: mov    %r10,0x310(%r15)
  0x000002480745bf6b: add    $0x30,%rsp
  0x000002480745bf6f: pop    %rbp
  0x000002480745bf70: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480745bf75: hlt    
  0x000002480745bf76: hlt    
  0x000002480745bf77: hlt    
  0x000002480745bf78: hlt    
  0x000002480745bf79: hlt    
  0x000002480745bf7a: hlt    
  0x000002480745bf7b: hlt    
  0x000002480745bf7c: hlt    
  0x000002480745bf7d: hlt    
  0x000002480745bf7e: hlt    
  0x000002480745bf7f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480745bf80: call   0x0000024807431320  ;   {no_reloc}
  0x000002480745bf85: mov    %rsp,-0x28(%rsp)
  0x000002480745bf8a: sub    $0x80,%rsp
  0x000002480745bf91: mov    %rax,0x78(%rsp)
  0x000002480745bf96: mov    %rcx,0x70(%rsp)
  0x000002480745bf9b: mov    %rdx,0x68(%rsp)
  0x000002480745bfa0: mov    %rbx,0x60(%rsp)
  0x000002480745bfa5: mov    %rbp,0x50(%rsp)
  0x000002480745bfaa: mov    %rsi,0x48(%rsp)
  0x000002480745bfaf: mov    %rdi,0x40(%rsp)
  0x000002480745bfb4: mov    %r8,0x38(%rsp)
  0x000002480745bfb9: mov    %r9,0x30(%rsp)
  0x000002480745bfbe: mov    %r10,0x28(%rsp)
  0x000002480745bfc3: mov    %r11,0x20(%rsp)
  0x000002480745bfc8: mov    %r12,0x18(%rsp)
  0x000002480745bfcd: mov    %r13,0x10(%rsp)
  0x000002480745bfd2: mov    %r14,0x8(%rsp)
  0x000002480745bfd7: mov    %r15,(%rsp)
  0x000002480745bfdb: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480745bfe5: movabs $0x2480745bf85,%rdx  ;   {internal_word}
  0x000002480745bfef: mov    %rsp,%r8
  0x000002480745bff2: and    $0xfffffffffffffff0,%rsp
  0x000002480745bff6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480745c000: call   *%r10
  0x000002480745c003: hlt    
[Deopt Handler Code]
  0x000002480745c004: movabs $0x2480745c004,%r10  ;   {section_word}
  0x000002480745c00e: push   %r10
  0x000002480745c010: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745c015: hlt    
  0x000002480745c016: hlt    
  0x000002480745c017: hlt    
<nmethod compile_id='76' compiler='C1' level='1' entry='0x000002480745bf20' size='720' address='0x000002480745bdd0' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='616' dependencies_offset='696' nul_chk_table_offset='704' method='java/util/ArrayList access$000 (Ljava/util/ArrayList;)I' bytes='5' count='234' iicount='234' stamp='1.155'/>
<writer thread='27436'/>
<task_queued compile_id='80' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='768' iicount='768' level='3' stamp='1.155' comment='tiered' hot_count='768'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480745b890:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fce4858} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000002480745b9e0: mov    %eax,-0x6000(%rsp)
  0x000002480745b9e7: push   %rbp
  0x000002480745b9e8: sub    $0x30,%rsp
  0x000002480745b9ec: movabs $0x2481fe71e90,%rax  ;   {metadata(method data for {method} {0x000002481fce4858} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000002480745b9f6: mov    0xdc(%rax),%esi
  0x000002480745b9fc: add    $0x8,%esi
  0x000002480745b9ff: mov    %esi,0xdc(%rax)
  0x000002480745ba05: movabs $0x2481fce4850,%rax  ;   {metadata({method} {0x000002481fce4858} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000002480745ba0f: and    $0x1ff8,%esi
  0x000002480745ba15: cmp    $0x0,%esi
  0x000002480745ba18: je     0x000002480745ba39  ;*iload_0
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 685)

  0x000002480745ba1e: mov    %rdx,%rax
  0x000002480745ba21: shr    $0x10,%eax
  0x000002480745ba24: xor    %rdx,%rax
  0x000002480745ba27: and    $0x7fffffff,%eax
  0x000002480745ba2d: add    $0x30,%rsp
  0x000002480745ba31: pop    %rbp
  0x000002480745ba32: test   %eax,-0x1eab938(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745ba38: ret    
  0x000002480745ba39: mov    %rax,0x8(%rsp)
  0x000002480745ba3e: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745ba46: call   0x0000024807433da0  ; OopMap{off=107}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 685)
                                                ;   {runtime_call}
  0x000002480745ba4b: jmp    0x000002480745ba1e
  0x000002480745ba4d: nop
  0x000002480745ba4e: nop
  0x000002480745ba4f: mov    0x308(%r15),%rax
  0x000002480745ba56: movabs $0x0,%r10
  0x000002480745ba60: mov    %r10,0x308(%r15)
  0x000002480745ba67: movabs $0x0,%r10
  0x000002480745ba71: mov    %r10,0x310(%r15)
  0x000002480745ba78: add    $0x30,%rsp
  0x000002480745ba7c: pop    %rbp
  0x000002480745ba7d: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480745ba82: hlt    
  0x000002480745ba83: hlt    
  0x000002480745ba84: hlt    
  0x000002480745ba85: hlt    
  0x000002480745ba86: hlt    
  0x000002480745ba87: hlt    
  0x000002480745ba88: hlt    
  0x000002480745ba89: hlt    
  0x000002480745ba8a: hlt    
  0x000002480745ba8b: hlt    
  0x000002480745ba8c: hlt    
  0x000002480745ba8d: hlt    
  0x000002480745ba8e: hlt    
  0x000002480745ba8f: hlt    
  0x000002480745ba90: hlt    
  0x000002480745ba91: hlt    
  0x000002480745ba92: hlt    
  0x000002480745ba93: hlt    
  0x000002480745ba94: hlt    
  0x000002480745ba95: hlt    
  0x000002480745ba96: hlt    
  0x000002480745ba97: hlt    
  0x000002480745ba98: hlt    
  0x000002480745ba99: hlt    
  0x000002480745ba9a: hlt    
  0x000002480745ba9b: hlt    
  0x000002480745ba9c: hlt    
  0x000002480745ba9d: hlt    
  0x000002480745ba9e: hlt    
  0x000002480745ba9f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480745baa0: call   0x0000024807431320  ;   {no_reloc}
  0x000002480745baa5: mov    %rsp,-0x28(%rsp)
  0x000002480745baaa: sub    $0x80,%rsp
  0x000002480745bab1: mov    %rax,0x78(%rsp)
  0x000002480745bab6: mov    %rcx,0x70(%rsp)
  0x000002480745babb: mov    %rdx,0x68(%rsp)
  0x000002480745bac0: mov    %rbx,0x60(%rsp)
  0x000002480745bac5: mov    %rbp,0x50(%rsp)
  0x000002480745baca: mov    %rsi,0x48(%rsp)
  0x000002480745bacf: mov    %rdi,0x40(%rsp)
  0x000002480745bad4: mov    %r8,0x38(%rsp)
  0x000002480745bad9: mov    %r9,0x30(%rsp)
  0x000002480745bade: mov    %r10,0x28(%rsp)
  0x000002480745bae3: mov    %r11,0x20(%rsp)
  0x000002480745bae8: mov    %r12,0x18(%rsp)
  0x000002480745baed: mov    %r13,0x10(%rsp)
  0x000002480745baf2: mov    %r14,0x8(%rsp)
  0x000002480745baf7: mov    %r15,(%rsp)
  0x000002480745bafb: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480745bb05: movabs $0x2480745baa5,%rdx  ;   {internal_word}
  0x000002480745bb0f: mov    %rsp,%r8
  0x000002480745bb12: and    $0xfffffffffffffff0,%rsp
  0x000002480745bb16: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480745bb20: call   *%r10
  0x000002480745bb23: hlt    
[Deopt Handler Code]
  0x000002480745bb24: movabs $0x2480745bb24,%r10  ;   {section_word}
  0x000002480745bb2e: push   %r10
  0x000002480745bb30: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745bb35: hlt    
  0x000002480745bb36: hlt    
  0x000002480745bb37: hlt    
<nmethod compile_id='77' compiler='C1' level='3' entry='0x000002480745b9e0' size='776' address='0x000002480745b890' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='688' scopes_pcs_offset='704' dependencies_offset='768' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='480' iicount='480' stamp='1.159'/>
<writer thread='27436'/>
<task_queued compile_id='81' method='java/lang/invoke/MemberName isInvocable ()Z' bytes='7' count='384' iicount='384' level='3' stamp='1.159' comment='tiered' hot_count='384'/>
<writer thread='14928'/>
<task_queued compile_id='82' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='11136' iicount='11136' stamp='1.159' comment='tiered' hot_count='11136'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480745b710:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe75860} &apos;linkToStatic&apos; &apos;(Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480745b840: mov    0x18(%rdx),%rbx
  0x000002480745b844: test   %rbx,%rbx
  0x000002480745b847: je     0x000002480745b850
  0x000002480745b84d: jmp    *0x40(%rbx)
  0x000002480745b850: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480745b855: hlt    
  0x000002480745b856: hlt    
  0x000002480745b857: hlt    
<nmethod compile_id='83' compile_kind='c2n' level='0' entry='0x000002480745b840' size='328' address='0x000002480745b710' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='1.160'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480745b2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb04e98} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480745b440: mov    0x8(%rdx),%r10d
  0x000002480745b444: shl    $0x3,%r10
  0x000002480745b448: cmp    %rax,%r10
  0x000002480745b44b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480745b451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745b45c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480745b460: mov    %eax,-0x6000(%rsp)
  0x000002480745b467: push   %rbp
  0x000002480745b468: sub    $0x30,%rsp
  0x000002480745b46c: movabs $0x2481fd6b358,%r9  ;   {metadata(method data for {method} {0x000002481fb04e98} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000002480745b476: mov    0xdc(%r9),%esi
  0x000002480745b47d: add    $0x8,%esi
  0x000002480745b480: mov    %esi,0xdc(%r9)
  0x000002480745b487: movabs $0x2481fb04e90,%r9  ;   {metadata({method} {0x000002481fb04e98} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000002480745b491: and    $0x1ff8,%esi
  0x000002480745b497: cmp    $0x0,%esi
  0x000002480745b49a: je     0x000002480745b54b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x000002480745b4a0: mov    %rdx,%r9
  0x000002480745b4a3: movabs $0x2481fd6b358,%rsi  ;   {metadata(method data for {method} {0x000002481fb04e98} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000002480745b4ad: mov    0x8(%r9),%r9d
  0x000002480745b4b1: shl    $0x3,%r9
  0x000002480745b4b5: cmp    0x110(%rsi),%r9
  0x000002480745b4bc: jne    0x000002480745b4cb
  0x000002480745b4be: addq   $0x1,0x118(%rsi)
  0x000002480745b4c6: jmp    0x000002480745b531
  0x000002480745b4cb: cmp    0x120(%rsi),%r9
  0x000002480745b4d2: jne    0x000002480745b4e1
  0x000002480745b4d4: addq   $0x1,0x128(%rsi)
  0x000002480745b4dc: jmp    0x000002480745b531
  0x000002480745b4e1: cmpq   $0x0,0x110(%rsi)
  0x000002480745b4ec: jne    0x000002480745b505
  0x000002480745b4ee: mov    %r9,0x110(%rsi)
  0x000002480745b4f5: movq   $0x1,0x118(%rsi)
  0x000002480745b500: jmp    0x000002480745b531
  0x000002480745b505: cmpq   $0x0,0x120(%rsi)
  0x000002480745b510: jne    0x000002480745b529
  0x000002480745b512: mov    %r9,0x120(%rsi)
  0x000002480745b519: movq   $0x1,0x128(%rsi)
  0x000002480745b524: jmp    0x000002480745b531
  0x000002480745b529: addq   $0x1,0x108(%rsi)
  0x000002480745b531: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x000002480745b537: call   0x0000024807375ee0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x000002480745b53c: and    $0x1,%eax
  0x000002480745b53f: add    $0x30,%rsp
  0x000002480745b543: pop    %rbp
  0x000002480745b544: test   %eax,-0x1eab44a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745b54a: ret    
  0x000002480745b54b: mov    %r9,0x8(%rsp)
  0x000002480745b550: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745b558: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x000002480745b55d: jmp    0x000002480745b4a0
  0x000002480745b562: nop
  0x000002480745b563: nop
  0x000002480745b564: mov    0x308(%r15),%rax
  0x000002480745b56b: movabs $0x0,%r10
  0x000002480745b575: mov    %r10,0x308(%r15)
  0x000002480745b57c: movabs $0x0,%r10
  0x000002480745b586: mov    %r10,0x310(%r15)
  0x000002480745b58d: add    $0x30,%rsp
  0x000002480745b591: pop    %rbp
  0x000002480745b592: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480745b597: hlt    
  0x000002480745b598: hlt    
  0x000002480745b599: hlt    
  0x000002480745b59a: hlt    
  0x000002480745b59b: hlt    
  0x000002480745b59c: hlt    
  0x000002480745b59d: hlt    
  0x000002480745b59e: hlt    
  0x000002480745b59f: hlt    
[Stub Code]
  0x000002480745b5a0: nop                       ;   {no_reloc}
  0x000002480745b5a1: nop
  0x000002480745b5a2: nop
  0x000002480745b5a3: nop
  0x000002480745b5a4: nop
  0x000002480745b5a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745b5af: jmp    0x000002480745b5af  ;   {runtime_call}
[Exception Handler]
  0x000002480745b5b4: call   0x0000024807431320  ;   {runtime_call}
  0x000002480745b5b9: mov    %rsp,-0x28(%rsp)
  0x000002480745b5be: sub    $0x80,%rsp
  0x000002480745b5c5: mov    %rax,0x78(%rsp)
  0x000002480745b5ca: mov    %rcx,0x70(%rsp)
  0x000002480745b5cf: mov    %rdx,0x68(%rsp)
  0x000002480745b5d4: mov    %rbx,0x60(%rsp)
  0x000002480745b5d9: mov    %rbp,0x50(%rsp)
  0x000002480745b5de: mov    %rsi,0x48(%rsp)
  0x000002480745b5e3: mov    %rdi,0x40(%rsp)
  0x000002480745b5e8: mov    %r8,0x38(%rsp)
  0x000002480745b5ed: mov    %r9,0x30(%rsp)
  0x000002480745b5f2: mov    %r10,0x28(%rsp)
  0x000002480745b5f7: mov    %r11,0x20(%rsp)
  0x000002480745b5fc: mov    %r12,0x18(%rsp)
  0x000002480745b601: mov    %r13,0x10(%rsp)
  0x000002480745b606: mov    %r14,0x8(%rsp)
  0x000002480745b60b: mov    %r15,(%rsp)
  0x000002480745b60f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480745b619: movabs $0x2480745b5b9,%rdx  ;   {internal_word}
  0x000002480745b623: mov    %rsp,%r8
  0x000002480745b626: and    $0xfffffffffffffff0,%rsp
  0x000002480745b62a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480745b634: call   *%r10
  0x000002480745b637: hlt    
[Deopt Handler Code]
  0x000002480745b638: movabs $0x2480745b638,%r10  ;   {section_word}
  0x000002480745b642: push   %r10
  0x000002480745b644: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745b649: hlt    
  0x000002480745b64a: hlt    
  0x000002480745b64b: hlt    
  0x000002480745b64c: hlt    
  0x000002480745b64d: hlt    
  0x000002480745b64e: hlt    
  0x000002480745b64f: hlt    
<nmethod compile_id='80' compiler='C1' level='3' entry='0x000002480745b440' size='1048' address='0x000002480745b2d0' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='904' scopes_pcs_offset='944' dependencies_offset='1040' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='771' iicount='771' stamp='1.166'/>
<writer thread='19792'/>
Decoding compiled method 0x00000248074598d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fcaf158} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # parm0:    r8        = char
  #           [sp+0x30]  (sp of caller)
  0x0000024807459a20: mov    0x8(%rdx),%r10d
  0x0000024807459a24: shl    $0x3,%r10
  0x0000024807459a28: cmp    %r10,%rax
  0x0000024807459a2b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807459a31: data16 xchg %ax,%ax
  0x0000024807459a34: nopl   0x0(%rax,%rax,1)
  0x0000024807459a3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807459a40: mov    %eax,-0x6000(%rsp)
  0x0000024807459a47: push   %rbp
  0x0000024807459a48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@-1 (line 656)

  0x0000024807459a4c: mov    0x34(%rdx),%r10d   ;*getfield c2bIndex
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@5 (line 656)

  0x0000024807459a50: mov    %r8d,%r11d
  0x0000024807459a53: sar    $0x8,%r11d         ;*ishr
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@11 (line 656)

  0x0000024807459a57: mov    0xc(%r12,%r10,8),%r9d  ; implicit exception: dispatches to 0x0000024807459acd
  0x0000024807459a5c: mov    0x30(%rdx),%ecx    ;*getfield c2b
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@1 (line 656)

  0x0000024807459a5f: cmp    %r9d,%r11d
  0x0000024807459a62: jae    0x0000024807459aa1
  0x0000024807459a64: shl    $0x3,%r10
  0x0000024807459a68: movzwl 0x10(%r10,%r11,2),%r11d  ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)

  0x0000024807459a6e: movzbl %r8b,%r8d          ;*iand
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@17 (line 656)

  0x0000024807459a72: mov    %r8d,%ebp
  0x0000024807459a75: add    %r11d,%ebp         ;*iadd
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@18 (line 656)

  0x0000024807459a78: mov    0xc(%r12,%rcx,8),%r9d  ; implicit exception: dispatches to 0x0000024807459add
  0x0000024807459a7d: cmp    %r9d,%ebp
  0x0000024807459a80: jae    0x0000024807459abd
  0x0000024807459a82: movslq %r11d,%r10
  0x0000024807459a85: movslq %r8d,%r11
  0x0000024807459a88: add    %r10,%r11
  0x0000024807459a8b: lea    (%r12,%rcx,8),%r10
  0x0000024807459a8f: movzwl 0x10(%r10,%r11,2),%eax  ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)

  0x0000024807459a95: add    $0x20,%rsp
  0x0000024807459a99: pop    %rbp
  0x0000024807459a9a: test   %eax,-0x1ea9aa0(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x0000024807459aa0: ret    
  0x0000024807459aa1: mov    $0xffffffe4,%edx
  0x0000024807459aa6: mov    %r8d,%ebp
  0x0000024807459aa9: mov    %r10d,(%rsp)
  0x0000024807459aad: mov    %r11d,0x4(%rsp)
  0x0000024807459ab2: mov    %ecx,0x8(%rsp)
  0x0000024807459ab6: nop
  0x0000024807459ab7: call   0x00000248073754e0  ; OopMap{[0]=NarrowOop [8]=NarrowOop off=156}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000024807459abc: int3                      ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)

  0x0000024807459abd: mov    $0xffffffe4,%edx
  0x0000024807459ac2: mov    %ecx,(%rsp)
  0x0000024807459ac5: xchg   %ax,%ax
  0x0000024807459ac7: call   0x00000248073754e0  ; OopMap{[0]=NarrowOop off=172}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000024807459acc: int3                      ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)

  0x0000024807459acd: mov    $0xfffffff6,%edx
  0x0000024807459ad2: mov    %r11d,%ebp
  0x0000024807459ad5: xchg   %ax,%ax
  0x0000024807459ad7: call   0x00000248073754e0  ; OopMap{off=188}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000024807459adc: int3                      ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)

  0x0000024807459add: mov    $0xfffffff6,%edx
  0x0000024807459ae2: nop
  0x0000024807459ae3: call   0x00000248073754e0  ; OopMap{off=200}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000024807459ae8: int3                      ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)

  0x0000024807459ae9: hlt    
  0x0000024807459aea: hlt    
  0x0000024807459aeb: hlt    
  0x0000024807459aec: hlt    
  0x0000024807459aed: hlt    
  0x0000024807459aee: hlt    
  0x0000024807459aef: hlt    
  0x0000024807459af0: hlt    
  0x0000024807459af1: hlt    
  0x0000024807459af2: hlt    
  0x0000024807459af3: hlt    
  0x0000024807459af4: hlt    
  0x0000024807459af5: hlt    
  0x0000024807459af6: hlt    
  0x0000024807459af7: hlt    
  0x0000024807459af8: hlt    
  0x0000024807459af9: hlt    
  0x0000024807459afa: hlt    
  0x0000024807459afb: hlt    
  0x0000024807459afc: hlt    
  0x0000024807459afd: hlt    
  0x0000024807459afe: hlt    
  0x0000024807459aff: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807459b00: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807459b05: call   0x0000024807459b0a
  0x0000024807459b0a: subq   $0x5,(%rsp)
  0x0000024807459b0f: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807459b14: hlt    
  0x0000024807459b15: hlt    
  0x0000024807459b16: hlt    
  0x0000024807459b17: hlt    
<nmethod compile_id='82' compiler='C2' level='4' entry='0x0000024807459a20' size='1024' address='0x00000248074598d0' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='592' scopes_pcs_offset='704' dependencies_offset='992' nul_chk_table_offset='1000' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='11136' iicount='11136' stamp='1.172'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480745ad10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x70]  (sp of caller)
  0x000002480745ae80: mov    0x8(%rdx),%r10d
  0x000002480745ae84: shl    $0x3,%r10
  0x000002480745ae88: cmp    %rax,%r10
  0x000002480745ae8b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480745ae91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745ae9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480745aea0: mov    %eax,-0x6000(%rsp)
  0x000002480745aea7: push   %rbp
  0x000002480745aea8: sub    $0x60,%rsp
  0x000002480745aeac: movabs $0x2481fe78488,%rax  ;   {metadata(method data for {method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745aeb6: mov    0xdc(%rax),%esi
  0x000002480745aebc: add    $0x8,%esi
  0x000002480745aebf: mov    %esi,0xdc(%rax)
  0x000002480745aec5: movabs $0x2481fb5ab00,%rax  ;   {metadata({method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745aecf: and    $0x1ff8,%esi
  0x000002480745aed5: cmp    $0x0,%esi
  0x000002480745aed8: je     0x000002480745b03a  ;*aload_0
                                                ; - java.lang.invoke.MemberName::isInvocable@0 (line 443)

  0x000002480745aede: mov    %rdx,%rax
  0x000002480745aee1: movabs $0x2481fe78488,%rsi  ;   {metadata(method data for {method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745aeeb: addq   $0x1,0x108(%rsi)
  0x000002480745aef3: movabs $0x2481fe78e40,%rax  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745aefd: mov    0xdc(%rax),%esi
  0x000002480745af03: add    $0x8,%esi
  0x000002480745af06: mov    %esi,0xdc(%rax)
  0x000002480745af0c: movabs $0x2481fb5a190,%rax  ;   {metadata({method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745af16: and    $0x7ffff8,%esi
  0x000002480745af1c: cmp    $0x0,%esi
  0x000002480745af1f: je     0x000002480745b051
  0x000002480745af25: mov    %rdx,%rax
  0x000002480745af28: movabs $0x2481fe78e40,%rsi  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745af32: addq   $0x1,0x108(%rsi)
  0x000002480745af3a: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745af44: mov    0xdc(%rax),%esi
  0x000002480745af4a: add    $0x8,%esi
  0x000002480745af4d: mov    %esi,0xdc(%rax)
  0x000002480745af53: movabs $0x2481fb5a058,%rax  ;   {metadata({method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745af5d: and    $0x7ffff8,%esi
  0x000002480745af63: cmp    $0x0,%esi
  0x000002480745af66: je     0x000002480745b068
  0x000002480745af6c: mov    0xc(%rdx),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000002480745af6f: and    $0x30000,%eax
  0x000002480745af75: cmp    $0x0,%eax
  0x000002480745af78: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745af82: movabs $0x108,%rsi
  0x000002480745af8c: jne    0x000002480745af9c
  0x000002480745af92: movabs $0x118,%rsi
  0x000002480745af9c: mov    (%rax,%rsi,1),%rdi
  0x000002480745afa0: lea    0x1(%rdi),%rdi
  0x000002480745afa4: mov    %rdi,(%rax,%rsi,1)
  0x000002480745afa8: jne    0x000002480745afc8  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000002480745afae: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745afb8: incl   0x128(%rax)
  0x000002480745afbe: mov    $0x1,%eax
  0x000002480745afc3: jmp    0x000002480745afcd  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000002480745afc8: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000002480745afcd: and    $0x1,%eax
  0x000002480745afd0: cmp    $0x0,%eax
  0x000002480745afd3: movabs $0x2481fe78e40,%rax  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745afdd: movabs $0x118,%rsi
  0x000002480745afe7: jne    0x000002480745aff7
  0x000002480745afed: movabs $0x128,%rsi
  0x000002480745aff7: mov    (%rax,%rsi,1),%rdi
  0x000002480745affb: lea    0x1(%rdi),%rdi
  0x000002480745afff: mov    %rdi,(%rax,%rsi,1)
  0x000002480745b003: jne    0x000002480745b023  ;*ifne
                                                ; - java.lang.invoke.MemberName::testAnyFlags@6 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000002480745b009: movabs $0x2481fe78e40,%rax  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480745b013: incl   0x138(%rax)
  0x000002480745b019: mov    $0x1,%eax
  0x000002480745b01e: jmp    0x000002480745b028  ;*goto
                                                ; - java.lang.invoke.MemberName::testAnyFlags@10 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000002480745b023: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testAnyFlags@14 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000002480745b028: and    $0x1,%eax
  0x000002480745b02b: and    $0x1,%eax
  0x000002480745b02e: add    $0x60,%rsp
  0x000002480745b032: pop    %rbp
  0x000002480745b033: test   %eax,-0x1eaaf39(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745b039: ret    
  0x000002480745b03a: mov    %rax,0x8(%rsp)
  0x000002480745b03f: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745b047: call   0x0000024807433da0  ; OopMap{rdx=Oop off=460}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isInvocable@-1 (line 443)
                                                ;   {runtime_call}
  0x000002480745b04c: jmp    0x000002480745aede
  0x000002480745b051: mov    %rax,0x8(%rsp)
  0x000002480745b056: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745b05e: call   0x0000024807433da0  ; OopMap{rdx=Oop off=483}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAnyFlags@-1 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ;   {runtime_call}
  0x000002480745b063: jmp    0x000002480745af25
  0x000002480745b068: mov    %rax,0x8(%rsp)
  0x000002480745b06d: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745b075: call   0x0000024807433da0  ; OopMap{rdx=Oop off=506}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ;   {runtime_call}
  0x000002480745b07a: jmp    0x000002480745af6c
  0x000002480745b07f: nop
  0x000002480745b080: nop
  0x000002480745b081: mov    0x308(%r15),%rax
  0x000002480745b088: movabs $0x0,%r10
  0x000002480745b092: mov    %r10,0x308(%r15)
  0x000002480745b099: movabs $0x0,%r10
  0x000002480745b0a3: mov    %r10,0x310(%r15)
  0x000002480745b0aa: add    $0x60,%rsp
  0x000002480745b0ae: pop    %rbp
  0x000002480745b0af: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480745b0b4: hlt    
  0x000002480745b0b5: hlt    
  0x000002480745b0b6: hlt    
  0x000002480745b0b7: hlt    
  0x000002480745b0b8: hlt    
  0x000002480745b0b9: hlt    
  0x000002480745b0ba: hlt    
  0x000002480745b0bb: hlt    
  0x000002480745b0bc: hlt    
  0x000002480745b0bd: hlt    
  0x000002480745b0be: hlt    
  0x000002480745b0bf: hlt    
[Exception Handler]
[Stub Code]
  0x000002480745b0c0: call   0x0000024807431320  ;   {no_reloc}
  0x000002480745b0c5: mov    %rsp,-0x28(%rsp)
  0x000002480745b0ca: sub    $0x80,%rsp
  0x000002480745b0d1: mov    %rax,0x78(%rsp)
  0x000002480745b0d6: mov    %rcx,0x70(%rsp)
  0x000002480745b0db: mov    %rdx,0x68(%rsp)
  0x000002480745b0e0: mov    %rbx,0x60(%rsp)
  0x000002480745b0e5: mov    %rbp,0x50(%rsp)
  0x000002480745b0ea: mov    %rsi,0x48(%rsp)
  0x000002480745b0ef: mov    %rdi,0x40(%rsp)
  0x000002480745b0f4: mov    %r8,0x38(%rsp)
  0x000002480745b0f9: mov    %r9,0x30(%rsp)
  0x000002480745b0fe: mov    %r10,0x28(%rsp)
  0x000002480745b103: mov    %r11,0x20(%rsp)
  0x000002480745b108: mov    %r12,0x18(%rsp)
  0x000002480745b10d: mov    %r13,0x10(%rsp)
  0x000002480745b112: mov    %r14,0x8(%rsp)
  0x000002480745b117: mov    %r15,(%rsp)
  0x000002480745b11b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480745b125: movabs $0x2480745b0c5,%rdx  ;   {internal_word}
  0x000002480745b12f: mov    %rsp,%r8
  0x000002480745b132: and    $0xfffffffffffffff0,%rsp
  0x000002480745b136: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480745b140: call   *%r10
  0x000002480745b143: hlt    
[Deopt Handler Code]
  0x000002480745b144: movabs $0x2480745b144,%r10  ;   {section_word}
  0x000002480745b14e: push   %r10
  0x000002480745b150: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745b155: hlt    
  0x000002480745b156: hlt    
  0x000002480745b157: hlt    
<nmethod compile_id='81' compiler='C1' level='3' entry='0x000002480745ae80' size='1456' address='0x000002480745ad10' relocation_offset='288' insts_offset='368' stub_offset='944' scopes_data_offset='1120' scopes_pcs_offset='1240' dependencies_offset='1448' method='java/lang/invoke/MemberName isInvocable ()Z' bytes='7' count='424' iicount='424' stamp='1.180'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480745ab90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe7a6e8} &apos;linkToVirtual&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480745acc0: mov    0x8(%rdx),%r10d
  0x000002480745acc4: shl    $0x3,%r10
  0x000002480745acc8: mov    0x10(%r8),%r11
  0x000002480745accc: mov    0x1b8(%r10,%r11,8),%rbx
  0x000002480745acd4: test   %rbx,%rbx
  0x000002480745acd7: je     0x000002480745ace0
  0x000002480745acdd: jmp    *0x40(%rbx)
  0x000002480745ace0: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480745ace5: hlt    
  0x000002480745ace6: hlt    
  0x000002480745ace7: hlt    
<nmethod compile_id='84' compile_kind='c2n' level='0' entry='0x000002480745acc0' size='344' address='0x000002480745ab90' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle linkToVirtual (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.182'/>
<task_queued compile_id='85' method='jdk/internal/org/objectweb/asm/ByteVector putByte (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='39' count='384' iicount='384' level='3' stamp='1.182' comment='tiered' hot_count='384'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480745a210:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fbd1940} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;
  # this:     rdx:rdx   = &apos;java/util/ArrayList&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x000002480745a3a0: mov    0x8(%rdx),%r10d
  0x000002480745a3a4: shl    $0x3,%r10
  0x000002480745a3a8: cmp    %rax,%r10
  0x000002480745a3ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480745a3b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745a3bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480745a3c0: mov    %eax,-0x6000(%rsp)
  0x000002480745a3c7: push   %rbp
  0x000002480745a3c8: sub    $0x60,%rsp
  0x000002480745a3cc: movabs $0x2481fe7c7b8,%rsi  ;   {metadata(method data for {method} {0x000002481fbd1940} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a3d6: mov    0xdc(%rsi),%edi
  0x000002480745a3dc: add    $0x8,%edi
  0x000002480745a3df: mov    %edi,0xdc(%rsi)
  0x000002480745a3e5: movabs $0x2481fbd1938,%rsi  ;   {metadata({method} {0x000002481fbd1940} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a3ef: and    $0x1ff8,%edi
  0x000002480745a3f5: cmp    $0x0,%edi
  0x000002480745a3f8: je     0x000002480745a5d8  ;*aload_0
                                                ; - java.util.ArrayList::ensureCapacityInternal@0 (line 233)

  0x000002480745a3fe: mov    0x14(%rdx),%esi
  0x000002480745a401: shl    $0x3,%rsi          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@2 (line 233)

  0x000002480745a405: movabs $0x2481fe7c7b8,%rdi  ;   {metadata(method data for {method} {0x000002481fbd1940} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a40f: addq   $0x1,0x108(%rdi)
  0x000002480745a417: movabs $0x2481fe7d568,%rdi  ;   {metadata(method data for {method} {0x000002481fbd18a0} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a421: mov    0xdc(%rdi),%ebx
  0x000002480745a427: add    $0x8,%ebx
  0x000002480745a42a: mov    %ebx,0xdc(%rdi)
  0x000002480745a430: movabs $0x2481fbd1898,%rdi  ;   {metadata({method} {0x000002481fbd18a0} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a43a: and    $0x7ffff8,%ebx
  0x000002480745a440: cmp    $0x0,%ebx
  0x000002480745a443: je     0x000002480745a5ef
  0x000002480745a449: movabs $0x76b706e50,%r10  ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x000002480745a453: cmp    %r10,%rsi
  0x000002480745a456: movabs $0x2481fe7d568,%rdi  ;   {metadata(method data for {method} {0x000002481fbd18a0} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a460: movabs $0x108,%rbx
  0x000002480745a46a: jne    0x000002480745a47a
  0x000002480745a470: movabs $0x118,%rbx
  0x000002480745a47a: mov    (%rdi,%rbx,1),%rax
  0x000002480745a47e: lea    0x1(%rax),%rax
  0x000002480745a482: mov    %rax,(%rdi,%rbx,1)
  0x000002480745a486: jne    0x000002480745a521  ;*if_acmpne
                                                ; - java.util.ArrayList::calculateCapacity@4 (line 226)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 233)

  0x000002480745a48c: movabs $0x2481fe7d568,%rdi  ;   {metadata(method data for {method} {0x000002481fbd18a0} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a496: addq   $0x1,0x128(%rdi)
  0x000002480745a49e: movabs $0x2481fd57e68,%rdi  ;   {metadata(method data for {method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480745a4a8: mov    0xdc(%rdi),%ebx
  0x000002480745a4ae: add    $0x8,%ebx
  0x000002480745a4b1: mov    %ebx,0xdc(%rdi)
  0x000002480745a4b7: movabs $0x2481fbf72d8,%rdi  ;   {metadata({method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480745a4c1: and    $0x7ffff8,%ebx
  0x000002480745a4c7: cmp    $0x0,%ebx
  0x000002480745a4ca: je     0x000002480745a606
  0x000002480745a4d0: cmp    $0xa,%r8d
  0x000002480745a4d4: movabs $0x2481fd57e68,%rdi  ;   {metadata(method data for {method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480745a4de: movabs $0x108,%rbx
  0x000002480745a4e8: jg     0x000002480745a4f8
  0x000002480745a4ee: movabs $0x118,%rbx
  0x000002480745a4f8: mov    (%rdi,%rbx,1),%rax
  0x000002480745a4fc: lea    0x1(%rax),%rax
  0x000002480745a500: mov    %rax,(%rdi,%rbx,1)
  0x000002480745a504: jg     0x000002480745a521  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 227)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 233)

  0x000002480745a50a: movabs $0x2481fd57e68,%r8  ;   {metadata(method data for {method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480745a514: incl   0x128(%r8)
  0x000002480745a51b: mov    $0xa,%r8d          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 227)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 233)

  0x000002480745a521: mov    %rdx,%rdi
  0x000002480745a524: movabs $0x2481fe7c7b8,%rbx  ;   {metadata(method data for {method} {0x000002481fbd1940} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a52e: addq   $0x1,0x118(%rbx)
  0x000002480745a536: movabs $0x2481fe7d708,%rdi  ;   {metadata(method data for {method} {0x000002481fbd19f0} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a540: mov    0xdc(%rdi),%ebx
  0x000002480745a546: add    $0x8,%ebx
  0x000002480745a549: mov    %ebx,0xdc(%rdi)
  0x000002480745a54f: movabs $0x2481fbd19e8,%rdi  ;   {metadata({method} {0x000002481fbd19f0} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a559: and    $0x7ffff8,%ebx
  0x000002480745a55f: cmp    $0x0,%ebx
  0x000002480745a562: je     0x000002480745a61d
  0x000002480745a568: mov    0xc(%rdx),%edi     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 237)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 233)

  0x000002480745a56b: inc    %edi
  0x000002480745a56d: mov    %edi,0xc(%rdx)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 237)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 233)

  0x000002480745a570: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 240)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 233)
                                                ; implicit exception: dispatches to 0x000002480745a634
  0x000002480745a573: mov    %r8,%rdi
  0x000002480745a576: sub    %esi,%edi
  0x000002480745a578: cmp    $0x0,%edi
  0x000002480745a57b: movabs $0x2481fe7d708,%rsi  ;   {metadata(method data for {method} {0x000002481fbd19f0} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a585: movabs $0x108,%rdi
  0x000002480745a58f: jle    0x000002480745a59f
  0x000002480745a595: movabs $0x118,%rdi
  0x000002480745a59f: mov    (%rsi,%rdi,1),%rbx
  0x000002480745a5a3: lea    0x1(%rbx),%rbx
  0x000002480745a5a7: mov    %rbx,(%rsi,%rdi,1)
  0x000002480745a5ab: jle    0x000002480745a5cc  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 240)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 233)

  0x000002480745a5b1: mov    %rdx,%rsi
  0x000002480745a5b4: movabs $0x2481fe7d708,%rdi  ;   {metadata(method data for {method} {0x000002481fbd19f0} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000002480745a5be: addq   $0x1,0x128(%rdi)
  0x000002480745a5c6: nop
  0x000002480745a5c7: call   0x0000024807375ee0  ; OopMap{off=556}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 241)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 233)
                                                ;   {optimized virtual_call}
  0x000002480745a5cc: add    $0x60,%rsp
  0x000002480745a5d0: pop    %rbp
  0x000002480745a5d1: test   %eax,-0x1eaa4d7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745a5d7: ret    
  0x000002480745a5d8: mov    %rsi,0x8(%rsp)
  0x000002480745a5dd: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745a5e5: call   0x0000024807433da0  ; OopMap{rdx=Oop off=586}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 233)
                                                ;   {runtime_call}
  0x000002480745a5ea: jmp    0x000002480745a3fe
  0x000002480745a5ef: mov    %rdi,0x8(%rsp)
  0x000002480745a5f4: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745a5fc: call   0x0000024807433da0  ; OopMap{rdx=Oop rsi=Oop off=609}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::calculateCapacity@-1 (line 226)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 233)
                                                ;   {runtime_call}
  0x000002480745a601: jmp    0x000002480745a449
  0x000002480745a606: mov    %rdi,0x8(%rsp)
  0x000002480745a60b: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745a613: call   0x0000024807433da0  ; OopMap{rdx=Oop rsi=Oop off=632}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 227)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 233)
                                                ;   {runtime_call}
  0x000002480745a618: jmp    0x000002480745a4d0
  0x000002480745a61d: mov    %rdi,0x8(%rsp)
  0x000002480745a622: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745a62a: call   0x0000024807433da0  ; OopMap{rdx=Oop rsi=Oop off=655}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 237)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 233)
                                                ;   {runtime_call}
  0x000002480745a62f: jmp    0x000002480745a568
  0x000002480745a634: call   0x000002480742f100  ; OopMap{rdx=Oop off=665}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 240)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 233)
                                                ;   {runtime_call}
  0x000002480745a639: nop
  0x000002480745a63a: nop
  0x000002480745a63b: mov    0x308(%r15),%rax
  0x000002480745a642: movabs $0x0,%r10
  0x000002480745a64c: mov    %r10,0x308(%r15)
  0x000002480745a653: movabs $0x0,%r10
  0x000002480745a65d: mov    %r10,0x310(%r15)
  0x000002480745a664: add    $0x60,%rsp
  0x000002480745a668: pop    %rbp
  0x000002480745a669: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480745a66e: hlt    
  0x000002480745a66f: hlt    
  0x000002480745a670: hlt    
  0x000002480745a671: hlt    
  0x000002480745a672: hlt    
  0x000002480745a673: hlt    
  0x000002480745a674: hlt    
  0x000002480745a675: hlt    
  0x000002480745a676: hlt    
  0x000002480745a677: hlt    
  0x000002480745a678: hlt    
  0x000002480745a679: hlt    
  0x000002480745a67a: hlt    
  0x000002480745a67b: hlt    
  0x000002480745a67c: hlt    
  0x000002480745a67d: hlt    
  0x000002480745a67e: hlt    
  0x000002480745a67f: hlt    
[Stub Code]
  0x000002480745a680: nop                       ;   {no_reloc}
  0x000002480745a681: nop
  0x000002480745a682: nop
  0x000002480745a683: nop
  0x000002480745a684: nop
  0x000002480745a685: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745a68f: jmp    0x000002480745a68f  ;   {runtime_call}
[Exception Handler]
  0x000002480745a694: call   0x0000024807431320  ;   {runtime_call}
  0x000002480745a699: mov    %rsp,-0x28(%rsp)
  0x000002480745a69e: sub    $0x80,%rsp
  0x000002480745a6a5: mov    %rax,0x78(%rsp)
  0x000002480745a6aa: mov    %rcx,0x70(%rsp)
  0x000002480745a6af: mov    %rdx,0x68(%rsp)
  0x000002480745a6b4: mov    %rbx,0x60(%rsp)
  0x000002480745a6b9: mov    %rbp,0x50(%rsp)
  0x000002480745a6be: mov    %rsi,0x48(%rsp)
  0x000002480745a6c3: mov    %rdi,0x40(%rsp)
  0x000002480745a6c8: mov    %r8,0x38(%rsp)
  0x000002480745a6cd: mov    %r9,0x30(%rsp)
  0x000002480745a6d2: mov    %r10,0x28(%rsp)
  0x000002480745a6d7: mov    %r11,0x20(%rsp)
  0x000002480745a6dc: mov    %r12,0x18(%rsp)
  0x000002480745a6e1: mov    %r13,0x10(%rsp)
  0x000002480745a6e6: mov    %r14,0x8(%rsp)
  0x000002480745a6eb: mov    %r15,(%rsp)
  0x000002480745a6ef: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480745a6f9: movabs $0x2480745a699,%rdx  ;   {internal_word}
  0x000002480745a703: mov    %rsp,%r8
  0x000002480745a706: and    $0xfffffffffffffff0,%rsp
  0x000002480745a70a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480745a714: call   *%r10
  0x000002480745a717: hlt    
[Deopt Handler Code]
  0x000002480745a718: movabs $0x2480745a718,%r10  ;   {section_word}
  0x000002480745a722: push   %r10
  0x000002480745a724: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745a729: hlt    
  0x000002480745a72a: hlt    
  0x000002480745a72b: hlt    
  0x000002480745a72c: hlt    
  0x000002480745a72d: hlt    
  0x000002480745a72e: hlt    
  0x000002480745a72f: hlt    
<nmethod compile_id='78' compiler='C1' level='3' entry='0x000002480745a3a0' size='1808' address='0x000002480745a210' relocation_offset='288' insts_offset='400' stub_offset='1136' scopes_data_offset='1352' scopes_pcs_offset='1512' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/util/ArrayList ensureCapacityInternal (I)V' bytes='13' count='436' iicount='436' stamp='1.195'/>
<writer thread='14928'/>
<task_queued compile_id='86' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='384' iicount='384' level='3' stamp='1.195' comment='tiered' hot_count='384'/>
<writer thread='27436'/>
<task_queued compile_id='87' method='jdk/internal/org/objectweb/asm/ClassWriter newUTF8 (Ljava/lang/String;)I' bytes='70' count='384' iicount='384' level='3' stamp='1.195' comment='tiered' hot_count='384'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480745dc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480745ddc0: mov    0x8(%rdx),%r10d
  0x000002480745ddc4: shl    $0x3,%r10
  0x000002480745ddc8: cmp    %rax,%r10
  0x000002480745ddcb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480745ddd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745dddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480745dde0: mov    %eax,-0x6000(%rsp)
  0x000002480745dde7: push   %rbp
  0x000002480745dde8: sub    $0x30,%rsp
  0x000002480745ddec: movabs $0x2481fe809d8,%rax  ;   {metadata(method data for {method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000002480745ddf6: mov    0xdc(%rax),%esi
  0x000002480745ddfc: add    $0x8,%esi
  0x000002480745ddff: mov    %esi,0xdc(%rax)
  0x000002480745de05: movabs $0x2481fc55ff8,%rax  ;   {metadata({method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000002480745de0f: and    $0x1ff8,%esi
  0x000002480745de15: cmp    $0x0,%esi
  0x000002480745de18: je     0x000002480745deee  ;*aload_0
                                                ; - java.io.BufferedInputStream::getBufIfOpen@0 (line 168)

  0x000002480745de1e: mov    0x20(%rdx),%eax
  0x000002480745de21: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000002480745de25: cmp    $0x0,%rax
  0x000002480745de29: movabs $0x2481fe809d8,%rdx  ;   {metadata(method data for {method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000002480745de33: movabs $0x108,%rsi
  0x000002480745de3d: jne    0x000002480745de4d
  0x000002480745de43: movabs $0x118,%rsi
  0x000002480745de4d: mov    (%rdx,%rsi,1),%rdi
  0x000002480745de51: lea    0x1(%rdi),%rdi
  0x000002480745de55: mov    %rdi,(%rdx,%rsi,1)
  0x000002480745de59: je     0x000002480745de6b  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000002480745de5f: add    $0x30,%rsp
  0x000002480745de63: pop    %rbp
  0x000002480745de64: test   %eax,-0x1eadd6a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745de6a: ret                       ;*areturn
                                                ; - java.io.BufferedInputStream::getBufIfOpen@20 (line 171)

  0x000002480745de6b: nopl   0x0(%rax,%rax,1)
  0x000002480745de70: jmp    0x000002480745df14  ;   {no_reloc}
  0x000002480745de75: add    %al,(%rax)
  0x000002480745de77: add    %al,(%rax)
  0x000002480745de79: add    %cl,-0x75(%rcx)
  0x000002480745de7c: rex.RXB (bad) 
  0x000002480745de7e: lea    0x20(%rax),%rdi
  0x000002480745de82: cmp    0x70(%r15),%rdi
  0x000002480745de86: ja     0x000002480745df1e
  0x000002480745de8c: mov    %rdi,0x60(%r15)
  0x000002480745de90: mov    0xa8(%rdx),%rcx
  0x000002480745de97: mov    %rcx,(%rax)
  0x000002480745de9a: mov    %rdx,%rcx
  0x000002480745de9d: shr    $0x3,%rcx
  0x000002480745dea1: mov    %ecx,0x8(%rax)
  0x000002480745dea4: xor    %rcx,%rcx
  0x000002480745dea7: mov    %ecx,0xc(%rax)
  0x000002480745deaa: xor    %rcx,%rcx
  0x000002480745dead: mov    %rcx,0x10(%rax)
  0x000002480745deb1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)

  0x000002480745deb5: mov    %rax,%r8
  0x000002480745deb8: movabs $0x2481fe809d8,%rdx  ;   {metadata(method data for {method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000002480745dec2: addq   $0x1,0x128(%rdx)
  0x000002480745deca: movabs $0x76bd5bd08,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x000002480745ded4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)

  0x000002480745ded7: mov    %rax,0x20(%rsp)
  0x000002480745dedc: nop
  0x000002480745dedd: nop
  0x000002480745dede: nop
  0x000002480745dedf: call   0x0000024807375ee0  ; OopMap{[32]=Oop off=292}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ;   {optimized virtual_call}
  0x000002480745dee4: mov    0x20(%rsp),%rax
  0x000002480745dee9: jmp    0x000002480745df53
  0x000002480745deee: mov    %rax,0x8(%rsp)
  0x000002480745def3: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745defb: call   0x0000024807433da0  ; OopMap{rdx=Oop off=320}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ;   {runtime_call}
  0x000002480745df00: jmp    0x000002480745de1e
  0x000002480745df05: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480745df0f: mov    $0xa050f00,%eax
  0x000002480745df14: call   0x0000024807432b60  ; OopMap{off=345}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000002480745df19: jmp    0x000002480745de70
  0x000002480745df1e: mov    %rdx,%rdx
  0x000002480745df21: call   0x000002480742f900  ; OopMap{off=358}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000002480745df26: jmp    0x000002480745deb5
  0x000002480745df28: nop
  0x000002480745df29: nop
  0x000002480745df2a: mov    0x308(%r15),%rax
  0x000002480745df31: movabs $0x0,%r10
  0x000002480745df3b: mov    %r10,0x308(%r15)
  0x000002480745df42: movabs $0x0,%r10
  0x000002480745df4c: mov    %r10,0x310(%r15)
  0x000002480745df53: add    $0x30,%rsp
  0x000002480745df57: pop    %rbp
  0x000002480745df58: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480745df5d: hlt    
  0x000002480745df5e: hlt    
  0x000002480745df5f: hlt    
[Stub Code]
  0x000002480745df60: nop                       ;   {no_reloc}
  0x000002480745df61: nop
  0x000002480745df62: nop
  0x000002480745df63: nop
  0x000002480745df64: nop
  0x000002480745df65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745df6f: jmp    0x000002480745df6f  ;   {runtime_call}
[Exception Handler]
  0x000002480745df74: call   0x0000024807431320  ;   {runtime_call}
  0x000002480745df79: mov    %rsp,-0x28(%rsp)
  0x000002480745df7e: sub    $0x80,%rsp
  0x000002480745df85: mov    %rax,0x78(%rsp)
  0x000002480745df8a: mov    %rcx,0x70(%rsp)
  0x000002480745df8f: mov    %rdx,0x68(%rsp)
  0x000002480745df94: mov    %rbx,0x60(%rsp)
  0x000002480745df99: mov    %rbp,0x50(%rsp)
  0x000002480745df9e: mov    %rsi,0x48(%rsp)
  0x000002480745dfa3: mov    %rdi,0x40(%rsp)
  0x000002480745dfa8: mov    %r8,0x38(%rsp)
  0x000002480745dfad: mov    %r9,0x30(%rsp)
  0x000002480745dfb2: mov    %r10,0x28(%rsp)
  0x000002480745dfb7: mov    %r11,0x20(%rsp)
  0x000002480745dfbc: mov    %r12,0x18(%rsp)
  0x000002480745dfc1: mov    %r13,0x10(%rsp)
  0x000002480745dfc6: mov    %r14,0x8(%rsp)
  0x000002480745dfcb: mov    %r15,(%rsp)
  0x000002480745dfcf: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480745dfd9: movabs $0x2480745df79,%rdx  ;   {internal_word}
  0x000002480745dfe3: mov    %rsp,%r8
  0x000002480745dfe6: and    $0xfffffffffffffff0,%rsp
  0x000002480745dfea: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480745dff4: call   *%r10
  0x000002480745dff7: hlt    
[Deopt Handler Code]
  0x000002480745dff8: movabs $0x2480745dff8,%r10  ;   {section_word}
  0x000002480745e002: push   %r10
  0x000002480745e004: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745e009: hlt    
  0x000002480745e00a: hlt    
  0x000002480745e00b: hlt    
  0x000002480745e00c: hlt    
  0x000002480745e00d: hlt    
  0x000002480745e00e: hlt    
  0x000002480745e00f: hlt    
<nmethod compile_id='86' compiler='C1' level='3' entry='0x000002480745ddc0' size='1240' address='0x000002480745dc50' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='968' scopes_pcs_offset='1040' dependencies_offset='1232' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='988' iicount='988' stamp='1.203'/>
<writer thread='14928'/>
<task_queued compile_id='88' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='244' backedge_count='4096' iicount='244' level='3' stamp='1.203' comment='tiered' hot_count='244'/>
<task_queued compile_id='89' method='java/io/BufferedInputStream read ()I' bytes='49' count='512' iicount='512' level='3' stamp='1.203' comment='tiered' hot_count='512'/>
<task_queued compile_id='90' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='454' iicount='454' level='3' stamp='1.204' comment='tiered' hot_count='454'/>
<task_queued compile_id='91' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='512' iicount='512' level='3' stamp='1.204' comment='tiered' hot_count='512'/>
<task_queued compile_id='92' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='528' backedge_count='527' iicount='528' level='3' stamp='1.204' comment='tiered' hot_count='528'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807459dd0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe85d78} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807459f00: mov    0x18(%r9),%rbx
  0x0000024807459f04: test   %rbx,%rbx
  0x0000024807459f07: je     0x0000024807459f10
  0x0000024807459f0d: jmp    *0x40(%rbx)
  0x0000024807459f10: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807459f15: hlt    
  0x0000024807459f16: hlt    
  0x0000024807459f17: hlt    
<nmethod compile_id='93' compile_kind='c2n' level='0' entry='0x0000024807459f00' size='328' address='0x0000024807459dd0' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='1.205'/>
<writer thread='14928'/>
<task_queued compile_id='94' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='640' backedge_count='1' iicount='640' level='3' stamp='1.205' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480745e390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  # parm0:    rdx:rdx   = &apos;java/io/DataInput&apos;
  #           [sp+0x110]  (sp of caller)
  0x000002480745e760: mov    %eax,-0x6000(%rsp)
  0x000002480745e767: push   %rbp
  0x000002480745e768: sub    $0x100,%rsp
  0x000002480745e76f: movabs $0x2481fe80ce0,%rsi  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e779: mov    0xdc(%rsi),%edi
  0x000002480745e77f: add    $0x8,%edi
  0x000002480745e782: mov    %edi,0xdc(%rsi)
  0x000002480745e788: movabs $0x2481fe80420,%rsi  ;   {metadata({method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e792: and    $0x1ff8,%edi
  0x000002480745e798: cmp    $0x0,%edi
  0x000002480745e79b: je     0x0000024807460309  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 589)

  0x000002480745e7a1: cmp    $0x0,%rdx
  0x000002480745e7a5: je     0x000002480745e7cb
  0x000002480745e7ab: movabs $0x7c0067a98,%rax  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000002480745e7b5: mov    0x8(%rdx),%ebx
  0x000002480745e7b8: shl    $0x3,%rbx
  0x000002480745e7bc: cmp    0x40(%rbx),%rax
  0x000002480745e7c0: jne    0x0000024807460320
  0x000002480745e7c6: jmp    0x000002480745e7cb
  0x000002480745e7cb: mov    %rdx,%rsi
  0x000002480745e7ce: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000024807460325
  0x000002480745e7d1: mov    %rdx,%rsi
  0x000002480745e7d4: movabs $0x2481fe80ce0,%rdi  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e7de: addq   $0x1,0x118(%rdi)
  0x000002480745e7e6: mov    %rdx,%rsi
  0x000002480745e7e9: mov    %rsi,%rdx          ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)

  0x000002480745e7ec: mov    %rsi,0x68(%rsp)
  0x000002480745e7f1: nop
  0x000002480745e7f2: nop
  0x000002480745e7f3: nop
  0x000002480745e7f4: nop
  0x000002480745e7f5: nop
  0x000002480745e7f6: nop
  0x000002480745e7f7: call   0x0000024807375ee0  ; OopMap{[104]=Oop off=156}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {optimized virtual_call}
  0x000002480745e7fc: mov    0x68(%rsp),%r11
  0x000002480745e801: cmp    $0x0,%r11
  0x000002480745e805: jne    0x000002480745e820
  0x000002480745e807: movabs $0x2481fe80ce0,%rsi  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e811: orl    $0x100,0x130(%rsi)
  0x000002480745e81b: jmp    0x000002480745e8e2
  0x000002480745e820: movabs $0x7c0067a98,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000002480745e82a: mov    0x8(%r11),%edx
  0x000002480745e82e: shl    $0x3,%rdx
  0x000002480745e832: cmp    %rdx,%rdi
  0x000002480745e835: jne    0x000002480745e8c6
  0x000002480745e83b: movabs $0x2481fe80ce0,%rsi  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e845: mov    0x8(%r11),%edi
  0x000002480745e849: shl    $0x3,%rdi
  0x000002480745e84d: cmp    0x140(%rsi),%rdi
  0x000002480745e854: jne    0x000002480745e863
  0x000002480745e856: addq   $0x1,0x148(%rsi)
  0x000002480745e85e: jmp    0x000002480745e8e7
  0x000002480745e863: cmp    0x150(%rsi),%rdi
  0x000002480745e86a: jne    0x000002480745e879
  0x000002480745e86c: addq   $0x1,0x158(%rsi)
  0x000002480745e874: jmp    0x000002480745e8e7
  0x000002480745e879: cmpq   $0x0,0x140(%rsi)
  0x000002480745e884: jne    0x000002480745e89d
  0x000002480745e886: mov    %rdi,0x140(%rsi)
  0x000002480745e88d: movq   $0x1,0x148(%rsi)
  0x000002480745e898: jmp    0x000002480745e8e7
  0x000002480745e89d: cmpq   $0x0,0x150(%rsi)
  0x000002480745e8a8: jne    0x000002480745e8c1
  0x000002480745e8aa: mov    %rdi,0x150(%rsi)
  0x000002480745e8b1: movq   $0x1,0x158(%rsi)
  0x000002480745e8bc: jmp    0x000002480745e8e7
  0x000002480745e8c1: jmp    0x000002480745e8e7
  0x000002480745e8c6: movabs $0x2481fe80ce0,%rsi  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e8d0: subq   $0x1,0x138(%rsi)
  0x000002480745e8d8: jmp    0x000002480745e8e2
  0x000002480745e8dd: jmp    0x000002480745e8e7
  0x000002480745e8e2: xor    %rbx,%rbx
  0x000002480745e8e5: jmp    0x000002480745e8f1
  0x000002480745e8e7: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.io.DataInputStream::readUTF@12 (line 592)

  0x000002480745e8f1: cmp    $0x0,%ebx
  0x000002480745e8f4: movabs $0x2481fe80ce0,%rbx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e8fe: movabs $0x168,%rdx
  0x000002480745e908: je     0x000002480745e918
  0x000002480745e90e: movabs $0x178,%rdx
  0x000002480745e918: mov    (%rbx,%rdx,1),%rsi
  0x000002480745e91c: lea    0x1(%rsi),%rsi
  0x000002480745e920: mov    %rsi,(%rbx,%rdx,1)
  0x000002480745e924: je     0x000002480745ebb3  ;*ifeq
                                                ; - java.io.DataInputStream::readUTF@15 (line 592)

  0x000002480745e92a: cmp    $0x0,%r11
  0x000002480745e92e: jne    0x000002480745e949
  0x000002480745e930: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e93a: orl    $0x100,0x180(%rdx)
  0x000002480745e944: jmp    0x000002480745ea0b
  0x000002480745e949: movabs $0x7c0067a98,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000002480745e953: mov    0x8(%r11),%ebx
  0x000002480745e957: shl    $0x3,%rbx
  0x000002480745e95b: cmp    %rbx,%rsi
  0x000002480745e95e: jne    0x000002480745e9ef
  0x000002480745e964: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e96e: mov    0x8(%r11),%esi
  0x000002480745e972: shl    $0x3,%rsi
  0x000002480745e976: cmp    0x190(%rdx),%rsi
  0x000002480745e97d: jne    0x000002480745e98c
  0x000002480745e97f: addq   $0x1,0x198(%rdx)
  0x000002480745e987: jmp    0x000002480745ea0b
  0x000002480745e98c: cmp    0x1a0(%rdx),%rsi
  0x000002480745e993: jne    0x000002480745e9a2
  0x000002480745e995: addq   $0x1,0x1a8(%rdx)
  0x000002480745e99d: jmp    0x000002480745ea0b
  0x000002480745e9a2: cmpq   $0x0,0x190(%rdx)
  0x000002480745e9ad: jne    0x000002480745e9c6
  0x000002480745e9af: mov    %rsi,0x190(%rdx)
  0x000002480745e9b6: movq   $0x1,0x198(%rdx)
  0x000002480745e9c1: jmp    0x000002480745ea0b
  0x000002480745e9c6: cmpq   $0x0,0x1a0(%rdx)
  0x000002480745e9d1: jne    0x000002480745e9ea
  0x000002480745e9d3: mov    %rsi,0x1a0(%rdx)
  0x000002480745e9da: movq   $0x1,0x1a8(%rdx)
  0x000002480745e9e5: jmp    0x000002480745ea0b
  0x000002480745e9ea: jmp    0x000002480745ea0b
  0x000002480745e9ef: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745e9f9: subq   $0x1,0x188(%rdx)
  0x000002480745ea01: jmp    0x000002480746032a
  0x000002480745ea06: jmp    0x000002480745ea0b
  0x000002480745ea0b: mov    %r11,%r8           ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)

  0x000002480745ea0e: mov    0x10(%r8),%ebx     ; implicit exception: dispatches to 0x0000024807460333
  0x000002480745ea12: shl    $0x3,%rbx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)

  0x000002480745ea16: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ; implicit exception: dispatches to 0x0000024807460338
  0x000002480745ea19: cmp    %eax,%ebx
  0x000002480745ea1b: movabs $0x2481fe80ce0,%rbx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ea25: movabs $0x1b8,%rdx
  0x000002480745ea2f: jge    0x000002480745ea3f
  0x000002480745ea35: movabs $0x1c8,%rdx
  0x000002480745ea3f: mov    (%rbx,%rdx,1),%rsi
  0x000002480745ea43: lea    0x1(%rsi),%rsi
  0x000002480745ea47: mov    %rsi,(%rbx,%rdx,1)
  0x000002480745ea4b: jl     0x000002480745ea59  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@31 (line 594)

  0x000002480745ea51: mov    %rax,%r13
  0x000002480745ea54: jmp    0x000002480745eb8e  ;*aload
                                                ; - java.io.DataInputStream::readUTF@54 (line 598)

  0x000002480745ea59: mov    %rax,%r9
  0x000002480745ea5c: shl    %r9d
  0x000002480745ea5f: mov    %r9,%rbx
  0x000002480745ea62: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000002480745ea6c: mov    %rax,%r13
  0x000002480745ea6f: movslq %ebx,%rbx
  0x000002480745ea72: mov    %rbx,%rdi
  0x000002480745ea75: cmp    $0xffffff,%rbx
  0x000002480745ea7c: ja     0x000002480746033d
  0x000002480745ea82: movabs $0x17,%rsi
  0x000002480745ea8c: lea    (%rsi,%rbx,1),%rsi
  0x000002480745ea90: and    $0xfffffffffffffff8,%rsi
  0x000002480745ea94: mov    0x60(%r15),%rax
  0x000002480745ea98: lea    (%rax,%rsi,1),%rsi
  0x000002480745ea9c: cmp    0x70(%r15),%rsi
  0x000002480745eaa0: ja     0x000002480746033d
  0x000002480745eaa6: mov    %rsi,0x60(%r15)
  0x000002480745eaaa: sub    %rax,%rsi
  0x000002480745eaad: movq   $0x1,(%rax)
  0x000002480745eab4: mov    %rdx,%rcx
  0x000002480745eab7: shr    $0x3,%rcx
  0x000002480745eabb: mov    %ecx,0x8(%rax)
  0x000002480745eabe: mov    %ebx,0xc(%rax)
  0x000002480745eac1: sub    $0x10,%rsi
  0x000002480745eac5: je     0x000002480745eadc
  0x000002480745eacb: xor    %rbx,%rbx
  0x000002480745eace: shr    $0x3,%rsi
  0x000002480745ead2: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480745ead7: dec    %rsi
  0x000002480745eada: jne    0x000002480745ead2  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)

  0x000002480745eadc: mov    %rax,%r10
  0x000002480745eadf: shr    $0x3,%r10
  0x000002480745eae3: mov    %r10d,0x10(%r8)
  0x000002480745eae7: mov    %r8,%rbx
  0x000002480745eaea: shr    $0x9,%rbx
  0x000002480745eaee: movabs $0x248130de000,%r14
  0x000002480745eaf8: movb   $0x0,(%rbx,%r14,1)  ;*putfield bytearr
                                                ; - java.io.DataInputStream::readUTF@41 (line 595)

  0x000002480745eafd: mov    %r9,%rbx
  0x000002480745eb00: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480745eb0a: movslq %ebx,%rbx
  0x000002480745eb0d: mov    %rbx,%rdi
  0x000002480745eb10: cmp    $0xffffff,%rbx
  0x000002480745eb17: ja     0x0000024807460347
  0x000002480745eb1d: movabs $0x17,%rsi
  0x000002480745eb27: lea    (%rsi,%rbx,2),%rsi
  0x000002480745eb2b: and    $0xfffffffffffffff8,%rsi
  0x000002480745eb2f: mov    0x60(%r15),%rax
  0x000002480745eb33: lea    (%rax,%rsi,1),%rsi
  0x000002480745eb37: cmp    0x70(%r15),%rsi
  0x000002480745eb3b: ja     0x0000024807460347
  0x000002480745eb41: mov    %rsi,0x60(%r15)
  0x000002480745eb45: sub    %rax,%rsi
  0x000002480745eb48: movq   $0x1,(%rax)
  0x000002480745eb4f: mov    %rdx,%rcx
  0x000002480745eb52: shr    $0x3,%rcx
  0x000002480745eb56: mov    %ecx,0x8(%rax)
  0x000002480745eb59: mov    %ebx,0xc(%rax)
  0x000002480745eb5c: sub    $0x10,%rsi
  0x000002480745eb60: je     0x000002480745eb77
  0x000002480745eb66: xor    %rbx,%rbx
  0x000002480745eb69: shr    $0x3,%rsi
  0x000002480745eb6d: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480745eb72: dec    %rsi
  0x000002480745eb75: jne    0x000002480745eb6d  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)

  0x000002480745eb77: mov    %rax,%r10
  0x000002480745eb7a: shr    $0x3,%r10
  0x000002480745eb7e: mov    %r10d,0x14(%r8)
  0x000002480745eb82: mov    %r8,%rbx
  0x000002480745eb85: shr    $0x9,%rbx
  0x000002480745eb89: movb   $0x0,(%rbx,%r14,1)  ;*putfield chararr
                                                ; - java.io.DataInputStream::readUTF@51 (line 596)

  0x000002480745eb8e: mov    0x14(%r8),%ebx
  0x000002480745eb92: shl    $0x3,%rbx          ;*getfield chararr
                                                ; - java.io.DataInputStream::readUTF@56 (line 598)

  0x000002480745eb96: mov    0x10(%r8),%edx
  0x000002480745eb9a: shl    $0x3,%rdx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@62 (line 599)

  0x000002480745eb9e: movabs $0x2481fe80ce0,%rsi  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745eba8: incl   0x1d8(%rsi)
  0x000002480745ebae: jmp    0x000002480745ecb3  ;*goto
                                                ; - java.io.DataInputStream::readUTF@66 (line 600)

  0x000002480745ebb3: mov    %rax,%r13
  0x000002480745ebb6: mov    %r13,%rbx
  0x000002480745ebb9: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000002480745ebc3: movslq %ebx,%rbx
  0x000002480745ebc6: mov    %rbx,%rdi
  0x000002480745ebc9: cmp    $0xffffff,%rbx
  0x000002480745ebd0: ja     0x0000024807460351
  0x000002480745ebd6: movabs $0x17,%rsi
  0x000002480745ebe0: lea    (%rsi,%rbx,1),%rsi
  0x000002480745ebe4: and    $0xfffffffffffffff8,%rsi
  0x000002480745ebe8: mov    0x60(%r15),%rax
  0x000002480745ebec: lea    (%rax,%rsi,1),%rsi
  0x000002480745ebf0: cmp    0x70(%r15),%rsi
  0x000002480745ebf4: ja     0x0000024807460351
  0x000002480745ebfa: mov    %rsi,0x60(%r15)
  0x000002480745ebfe: sub    %rax,%rsi
  0x000002480745ec01: movq   $0x1,(%rax)
  0x000002480745ec08: mov    %rdx,%rcx
  0x000002480745ec0b: shr    $0x3,%rcx
  0x000002480745ec0f: mov    %ecx,0x8(%rax)
  0x000002480745ec12: mov    %ebx,0xc(%rax)
  0x000002480745ec15: sub    $0x10,%rsi
  0x000002480745ec19: je     0x000002480745ec30
  0x000002480745ec1f: xor    %rbx,%rbx
  0x000002480745ec22: shr    $0x3,%rsi
  0x000002480745ec26: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480745ec2b: dec    %rsi
  0x000002480745ec2e: jne    0x000002480745ec26
  0x000002480745ec30: mov    %rax,%r8           ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)

  0x000002480745ec33: mov    %r13,%rbx
  0x000002480745ec36: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480745ec40: movslq %ebx,%rbx
  0x000002480745ec43: mov    %rbx,%rdi
  0x000002480745ec46: cmp    $0xffffff,%rbx
  0x000002480745ec4d: ja     0x000002480746035b
  0x000002480745ec53: movabs $0x17,%rsi
  0x000002480745ec5d: lea    (%rsi,%rbx,2),%rsi
  0x000002480745ec61: and    $0xfffffffffffffff8,%rsi
  0x000002480745ec65: mov    0x60(%r15),%rax
  0x000002480745ec69: lea    (%rax,%rsi,1),%rsi
  0x000002480745ec6d: cmp    0x70(%r15),%rsi
  0x000002480745ec71: ja     0x000002480746035b
  0x000002480745ec77: mov    %rsi,0x60(%r15)
  0x000002480745ec7b: sub    %rax,%rsi
  0x000002480745ec7e: movq   $0x1,(%rax)
  0x000002480745ec85: mov    %rdx,%rcx
  0x000002480745ec88: shr    $0x3,%rcx
  0x000002480745ec8c: mov    %ecx,0x8(%rax)
  0x000002480745ec8f: mov    %ebx,0xc(%rax)
  0x000002480745ec92: sub    $0x10,%rsi
  0x000002480745ec96: je     0x000002480745ecad
  0x000002480745ec9c: xor    %rbx,%rbx
  0x000002480745ec9f: shr    $0x3,%rsi
  0x000002480745eca3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480745eca8: dec    %rsi
  0x000002480745ecab: jne    0x000002480745eca3  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)

  0x000002480745ecad: mov    %rax,%rbx
  0x000002480745ecb0: mov    %r8,%rdx           ;*iconst_0
                                                ; - java.io.DataInputStream::readUTF@77 (line 606)

  0x000002480745ecb3: mov    %rbx,0x80(%rsp)
  0x000002480745ecbb: cmp    $0x0,%r11
  0x000002480745ecbf: je     0x000002480745ece6
  0x000002480745ecc5: movabs $0x7c0067a98,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000002480745eccf: mov    0x8(%r11),%edi
  0x000002480745ecd3: shl    $0x3,%rdi
  0x000002480745ecd7: cmp    0x40(%rdi),%rsi
  0x000002480745ecdb: jne    0x0000024807460365
  0x000002480745ece1: jmp    0x000002480745ece6
  0x000002480745ece6: mov    %r11,%r8
  0x000002480745ece9: mov    %r11,%r8
  0x000002480745ecec: movabs $0x2481fe80ce0,%r9  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ecf6: addq   $0x1,0x200(%r9)
  0x000002480745ecfe: mov    %rdx,%r8
  0x000002480745ed01: mov    $0x0,%r9d
  0x000002480745ed07: mov    %r13,%rdi
  0x000002480745ed0a: mov    %rdx,0x78(%rsp)
  0x000002480745ed0f: mov    %r11,%rdx          ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)

  0x000002480745ed12: mov    %r13d,0x70(%rsp)
  0x000002480745ed17: call   0x0000024807375ee0  ; OopMap{[120]=Oop [128]=Oop off=1468}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {optimized virtual_call}
  0x000002480745ed1c: mov    $0x0,%edx
  0x000002480745ed21: mov    $0x0,%esi
  0x000002480745ed26: mov    0x80(%rsp),%rbx
  0x000002480745ed2e: mov    0x78(%rsp),%rdi
  0x000002480745ed33: mov    0x70(%rsp),%eax
  0x000002480745ed37: jmp    0x000002480745edf5  ;*iload
                                                ; - java.io.DataInputStream::readUTF@92 (line 611)

  0x000002480745ed3c: nopl   0x0(%rax)
  0x000002480745ed40: movslq %esi,%rcx
  0x000002480745ed43: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x000002480746036a
  0x000002480745ed46: jae    0x0000024807460374
  0x000002480745ed4c: movsbl 0x10(%rdi,%rcx,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)

  0x000002480745ed51: and    $0xff,%ecx
  0x000002480745ed57: cmp    $0x7f,%ecx
  0x000002480745ed5a: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ed64: movabs $0x240,%r9
  0x000002480745ed6e: jle    0x000002480745ed7e
  0x000002480745ed74: movabs $0x250,%r9
  0x000002480745ed7e: mov    (%r8,%r9,1),%r11
  0x000002480745ed82: lea    0x1(%r11),%r11
  0x000002480745ed86: mov    %r11,(%r8,%r9,1)
  0x000002480745ed8a: jg     0x000002480745ee35  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@112 (line 613)

  0x000002480745ed90: inc    %esi
  0x000002480745ed92: mov    %rdx,%r8
  0x000002480745ed95: inc    %r8d
  0x000002480745ed98: movslq %edx,%r9
  0x000002480745ed9b: cmp    0xc(%rbx),%edx     ; implicit exception: dispatches to 0x000002480746037d
  0x000002480745ed9e: jae    0x0000024807460387
  0x000002480745eda4: mov    %cx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)

  0x000002480745edaa: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745edb4: mov    0xe0(%rdx),%ecx
  0x000002480745edba: add    $0x8,%ecx
  0x000002480745edbd: mov    %ecx,0xe0(%rdx)
  0x000002480745edc3: movabs $0x2481fe80420,%rdx  ;   {metadata({method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745edcd: and    $0xfff8,%ecx
  0x000002480745edd3: cmp    $0x0,%ecx
  0x000002480745edd6: je     0x0000024807460390  ; OopMap{rbx=Oop rdi=Oop off=1660}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x000002480745eddc: test   %eax,-0x1eaece2(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480745ede2: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745edec: incl   0x278(%rdx)
  0x000002480745edf2: mov    %r8,%rdx           ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x000002480745edf5: cmp    %eax,%esi
  0x000002480745edf7: movabs $0x2481fe80ce0,%rcx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ee01: movabs $0x220,%r8
  0x000002480745ee0b: jge    0x000002480745ee1b
  0x000002480745ee11: movabs $0x230,%r8
  0x000002480745ee1b: mov    (%rcx,%r8,1),%r9
  0x000002480745ee1f: lea    0x1(%r9),%r9
  0x000002480745ee23: mov    %r9,(%rcx,%r8,1)
  0x000002480745ee27: jl     0x000002480745ed40  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@95 (line 611)

  0x000002480745ee2d: mov    %rdx,%r11
  0x000002480745ee30: jmp    0x000002480745ee48  ;*iload
                                                ; - java.io.DataInputStream::readUTF@134 (line 618)

  0x000002480745ee35: movabs $0x2481fe80ce0,%rcx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ee3f: incl   0x260(%rcx)
  0x000002480745ee45: mov    %rdx,%r11          ;*goto
                                                ; - java.io.DataInputStream::readUTF@115 (line 613)

  0x000002480745ee48: cmp    %eax,%esi
  0x000002480745ee4a: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ee54: movabs $0x290,%rcx
  0x000002480745ee5e: jge    0x000002480745ee6e
  0x000002480745ee64: movabs $0x2a0,%rcx
  0x000002480745ee6e: mov    (%rdx,%rcx,1),%r8
  0x000002480745ee72: lea    0x1(%r8),%r8
  0x000002480745ee76: mov    %r8,(%rdx,%rcx,1)
  0x000002480745ee7a: jge    0x000002480745f1db  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@137 (line 618)

  0x000002480745ee80: movslq %esi,%rdx
  0x000002480745ee83: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x00000248074603a7
  0x000002480745ee86: jae    0x00000248074603b1
  0x000002480745ee8c: movsbl 0x10(%rdi,%rdx,1),%edx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)

  0x000002480745ee91: and    $0xff,%edx
  0x000002480745ee97: mov    %rdx,%rcx
  0x000002480745ee9a: sar    $0x4,%ecx
  0x000002480745ee9d: cmp    $0x0,%ecx
  0x000002480745eea0: jl     0x000002480745eeaf
  0x000002480745eea6: cmp    $0x7,%ecx
  0x000002480745eea9: jle    0x000002480745f160
  0x000002480745eeaf: cmp    $0xc,%ecx
  0x000002480745eeb2: je     0x000002480745eecf
  0x000002480745eeb8: cmp    $0xd,%ecx
  0x000002480745eebb: je     0x000002480745eecf
  0x000002480745eec1: cmp    $0xe,%ecx
  0x000002480745eec4: je     0x000002480745ef6d
  0x000002480745eeca: jmp    0x000002480745f1cf  ;*tableswitch
                                                ; - java.io.DataInputStream::readUTF@154 (line 620)

  0x000002480745eecf: add    $0x2,%esi
  0x000002480745eed2: cmp    %eax,%esi
  0x000002480745eed4: movabs $0x2481fe80ce0,%rcx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745eede: movabs $0x3d8,%r8
  0x000002480745eee8: jle    0x000002480745eef8
  0x000002480745eeee: movabs $0x3e8,%r8
  0x000002480745eef8: mov    (%rcx,%r8,1),%r9
  0x000002480745eefc: lea    0x1(%r9),%r9
  0x000002480745ef00: mov    %r9,(%rcx,%r8,1)
  0x000002480745ef04: jg     0x00000248074602b1  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@250 (line 629)

  0x000002480745ef0a: mov    %rsi,%rcx
  0x000002480745ef0d: dec    %ecx
  0x000002480745ef0f: movslq %ecx,%r8
  0x000002480745ef12: cmp    0xc(%rdi),%ecx
  0x000002480745ef15: jae    0x00000248074603ba
  0x000002480745ef1b: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)

  0x000002480745ef21: mov    %rcx,%r8
  0x000002480745ef24: and    $0xc0,%r8d
  0x000002480745ef2b: cmp    $0x80,%r8d
  0x000002480745ef32: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ef3c: movabs $0x408,%r9
  0x000002480745ef46: je     0x000002480745ef56
  0x000002480745ef4c: movabs $0x418,%r9
  0x000002480745ef56: mov    (%r8,%r9,1),%r13
  0x000002480745ef5a: lea    0x1(%r13),%r13
  0x000002480745ef5e: mov    %r13,(%r8,%r9,1)
  0x000002480745ef62: je     0x000002480745f0ec
  0x000002480745ef68: jmp    0x000002480745fd61  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@280 (line 633)

  0x000002480745ef6d: add    $0x3,%esi
  0x000002480745ef70: cmp    %eax,%esi
  0x000002480745ef72: movabs $0x2481fe80ce0,%rcx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ef7c: movabs $0x4f0,%r8
  0x000002480745ef86: jle    0x000002480745ef96
  0x000002480745ef8c: movabs $0x500,%r8
  0x000002480745ef96: mov    (%rcx,%r8,1),%r9
  0x000002480745ef9a: lea    0x1(%r9),%r9
  0x000002480745ef9e: mov    %r9,(%rcx,%r8,1)
  0x000002480745efa2: jg     0x000002480745fd09  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@342 (line 642)

  0x000002480745efa8: mov    %rsi,%rcx
  0x000002480745efab: sub    $0x2,%ecx
  0x000002480745efae: movslq %ecx,%r8
  0x000002480745efb1: cmp    0xc(%rdi),%ecx
  0x000002480745efb4: jae    0x00000248074603c3
  0x000002480745efba: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)

  0x000002480745efc0: mov    %rsi,%r9
  0x000002480745efc3: dec    %r9d
  0x000002480745efc6: mov    %r9d,0x74(%rsp)
  0x000002480745efcb: movslq %r9d,%r8
  0x000002480745efce: cmp    0xc(%rdi),%r9d
  0x000002480745efd2: jae    0x00000248074603cc
  0x000002480745efd8: movsbl 0x10(%rdi,%r8,1),%r8d  ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)

  0x000002480745efde: mov    %rcx,%r13
  0x000002480745efe1: and    $0xc0,%r13d
  0x000002480745efe8: cmp    $0x80,%r13d
  0x000002480745efef: movabs $0x2481fe80ce0,%r13  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745eff9: movabs $0x520,%r14
  0x000002480745f003: jne    0x000002480745f013
  0x000002480745f009: movabs $0x530,%r14
  0x000002480745f013: mov    0x0(%r13,%r14,1),%r9
  0x000002480745f018: lea    0x1(%r9),%r9
  0x000002480745f01c: mov    %r9,0x0(%r13,%r14,1)
  0x000002480745f021: jne    0x000002480745f7b9  ;*if_icmpne
                                                ; - java.io.DataInputStream::readUTF@380 (line 647)

  0x000002480745f027: mov    %r8,%r9
  0x000002480745f02a: and    $0xc0,%r9d
  0x000002480745f031: cmp    $0x80,%r9d
  0x000002480745f038: movabs $0x2481fe80ce0,%r9  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f042: movabs $0x540,%r13
  0x000002480745f04c: je     0x000002480745f05c
  0x000002480745f052: movabs $0x550,%r13
  0x000002480745f05c: mov    (%r9,%r13,1),%r14
  0x000002480745f060: lea    0x1(%r14),%r14
  0x000002480745f064: mov    %r14,(%r9,%r13,1)
  0x000002480745f068: jne    0x000002480745f7b9  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@392 (line 647)

  0x000002480745f06e: mov    %r11,%r9
  0x000002480745f071: inc    %r9d
  0x000002480745f074: and    $0xf,%edx
  0x000002480745f077: shl    $0xc,%edx
  0x000002480745f07a: and    $0x3f,%ecx
  0x000002480745f07d: shl    $0x6,%ecx
  0x000002480745f080: or     %rcx,%rdx
  0x000002480745f083: and    $0x3f,%r8d
  0x000002480745f087: or     %r8,%rdx
  0x000002480745f08a: movslq %r11d,%rcx
  0x000002480745f08d: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x00000248074603d5
  0x000002480745f091: jae    0x00000248074603df
  0x000002480745f097: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)

  0x000002480745f09c: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f0a6: mov    0xe0(%rdx),%ecx
  0x000002480745f0ac: add    $0x8,%ecx
  0x000002480745f0af: mov    %ecx,0xe0(%rdx)
  0x000002480745f0b5: movabs $0x2481fe80420,%rdx  ;   {metadata({method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f0bf: and    $0xfff8,%ecx
  0x000002480745f0c5: cmp    $0x0,%ecx
  0x000002480745f0c8: je     0x00000248074603e8  ; OopMap{rbx=Oop rdi=Oop off=2414}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x000002480745f0ce: test   %eax,-0x1eaefd4(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480745f0d4: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f0de: incl   0x610(%rdx)
  0x000002480745f0e4: mov    %r9,%r11
  0x000002480745f0e7: jmp    0x000002480745ee48  ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x000002480745f0ec: mov    %r11,%r8
  0x000002480745f0ef: inc    %r8d
  0x000002480745f0f2: and    $0x1f,%edx
  0x000002480745f0f5: shl    $0x6,%edx
  0x000002480745f0f8: and    $0x3f,%ecx
  0x000002480745f0fb: or     %rcx,%rdx
  0x000002480745f0fe: movslq %r11d,%rcx
  0x000002480745f101: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x00000248074603ff
  0x000002480745f105: jae    0x0000024807460409
  0x000002480745f10b: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)

  0x000002480745f110: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f11a: mov    0xe0(%rdx),%ecx
  0x000002480745f120: add    $0x8,%ecx
  0x000002480745f123: mov    %ecx,0xe0(%rdx)
  0x000002480745f129: movabs $0x2481fe80420,%rdx  ;   {metadata({method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f133: and    $0xfff8,%ecx
  0x000002480745f139: cmp    $0x0,%ecx
  0x000002480745f13c: je     0x0000024807460412  ; OopMap{rbx=Oop rdi=Oop off=2530}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x000002480745f142: test   %eax,-0x1eaf048(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480745f148: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f152: incl   0x4d8(%rdx)
  0x000002480745f158: mov    %r8,%r11
  0x000002480745f15b: jmp    0x000002480745ee48  ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x000002480745f160: inc    %esi
  0x000002480745f162: mov    %r11,%rcx
  0x000002480745f165: inc    %ecx
  0x000002480745f167: movslq %r11d,%r8
  0x000002480745f16a: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x0000024807460429
  0x000002480745f16e: jae    0x0000024807460433
  0x000002480745f174: mov    %dx,0x10(%rbx,%r8,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)

  0x000002480745f17a: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f184: mov    0xe0(%rdx),%r8d
  0x000002480745f18b: add    $0x8,%r8d
  0x000002480745f18f: mov    %r8d,0xe0(%rdx)
  0x000002480745f196: movabs $0x2481fe80420,%rdx  ;   {metadata({method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f1a0: and    $0xfff8,%r8d
  0x000002480745f1a7: cmp    $0x0,%r8d
  0x000002480745f1ab: je     0x000002480746043c  ; OopMap{rbx=Oop rdi=Oop off=2641}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x000002480745f1b1: test   %eax,-0x1eaf0b7(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480745f1b7: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f1c1: incl   0x3c0(%rdx)
  0x000002480745f1c7: mov    %rcx,%r11
  0x000002480745f1ca: jmp    0x000002480745ee48  ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x000002480745f1cf: mov    %esi,0x98(%rsp)
  0x000002480745f1d6: jmp    0x000002480745f26b  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x000002480745f1db: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000002480745f1e5: mov    0x60(%r15),%rax
  0x000002480745f1e9: lea    0x18(%rax),%rdi
  0x000002480745f1ed: cmp    0x70(%r15),%rdi
  0x000002480745f1f1: ja     0x0000024807460453
  0x000002480745f1f7: mov    %rdi,0x60(%r15)
  0x000002480745f1fb: mov    0xa8(%rdx),%rcx
  0x000002480745f202: mov    %rcx,(%rax)
  0x000002480745f205: mov    %rdx,%rcx
  0x000002480745f208: shr    $0x3,%rcx
  0x000002480745f20c: mov    %ecx,0x8(%rax)
  0x000002480745f20f: xor    %rcx,%rcx
  0x000002480745f212: mov    %ecx,0xc(%rax)
  0x000002480745f215: xor    %rcx,%rcx
  0x000002480745f218: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)

  0x000002480745f21c: mov    %rax,%r8
  0x000002480745f21f: movabs $0x2481fe80ce0,%r9  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f229: addq   $0x1,0x6d8(%r9)
  0x000002480745f231: mov    %rbx,%r8
  0x000002480745f234: mov    $0x0,%r9d
  0x000002480745f23a: mov    %r11,%rdi
  0x000002480745f23d: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)

  0x000002480745f240: mov    %rax,0x88(%rsp)
  0x000002480745f248: nop
  0x000002480745f249: nop
  0x000002480745f24a: nop
  0x000002480745f24b: nop
  0x000002480745f24c: nop
  0x000002480745f24d: nop
  0x000002480745f24e: nop
  0x000002480745f24f: call   0x0000024807375ee0  ; OopMap{[136]=Oop off=2804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)
                                                ;   {optimized virtual_call}
  0x000002480745f254: mov    0x88(%rsp),%rax
  0x000002480745f25c: add    $0x100,%rsp
  0x000002480745f263: pop    %rbp
  0x000002480745f264: test   %eax,-0x1eaf16a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745f26a: ret                       ;*areturn
                                                ; - java.io.DataInputStream::readUTF@500 (line 661)

  0x000002480745f26b: nopl   0x0(%rax,%rax,1)
  0x000002480745f270: jmp    0x000002480746046f  ;   {no_reloc}
  0x000002480745f275: add    %al,(%rax)
  0x000002480745f277: add    %al,(%rax)
  0x000002480745f279: add    %ch,%cl
  0x000002480745f27b: cli    
  0x000002480745f27c: adc    %eax,(%rax)
  0x000002480745f27e: add    %dl,0x1210e9(%rax)  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {no_reloc}
  0x000002480745f284: add    %al,(%rax)
  0x000002480745f286: add    %al,(%rax)
  0x000002480745f288: add    %al,(%rax)
  0x000002480745f28a: mov    %rax,0xa0(%rsp)
  0x000002480745f292: mov    0x60(%r15),%rax
  0x000002480745f296: lea    0x18(%rax),%rdi
  0x000002480745f29a: cmp    0x70(%r15),%rdi
  0x000002480745f29e: ja     0x000002480746049f
  0x000002480745f2a4: mov    %rdi,0x60(%r15)
  0x000002480745f2a8: mov    0xa8(%rdx),%rcx
  0x000002480745f2af: mov    %rcx,(%rax)
  0x000002480745f2b2: mov    %rdx,%rcx
  0x000002480745f2b5: shr    $0x3,%rcx
  0x000002480745f2b9: mov    %ecx,0x8(%rax)
  0x000002480745f2bc: xor    %rcx,%rcx
  0x000002480745f2bf: mov    %ecx,0xc(%rax)
  0x000002480745f2c2: xor    %rcx,%rcx
  0x000002480745f2c5: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)

  0x000002480745f2c9: mov    %rax,%rbx
  0x000002480745f2cc: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f2d6: addq   $0x1,0x628(%rdx)
  0x000002480745f2de: movabs $0x2481fd6d330,%rbx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f2e8: mov    0xdc(%rbx),%edx
  0x000002480745f2ee: add    $0x8,%edx
  0x000002480745f2f1: mov    %edx,0xdc(%rbx)
  0x000002480745f2f7: movabs $0x2481fb79208,%rbx  ;   {metadata({method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f301: and    $0x7ffff8,%edx
  0x000002480745f307: cmp    $0x0,%edx
  0x000002480745f30a: je     0x00000248074604ac
  0x000002480745f310: mov    %rax,%rbx
  0x000002480745f313: movabs $0x2481fd6d330,%rdx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f31d: addq   $0x1,0x108(%rdx)
  0x000002480745f325: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745f32f: mov    0xdc(%rbx),%edx
  0x000002480745f335: add    $0x8,%edx
  0x000002480745f338: mov    %edx,0xdc(%rbx)
  0x000002480745f33e: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745f348: and    $0x7ffff8,%edx
  0x000002480745f34e: cmp    $0x0,%edx
  0x000002480745f351: je     0x00000248074604c3
  0x000002480745f357: mov    %rax,%rbx
  0x000002480745f35a: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745f364: addq   $0x1,0x108(%rdx)
  0x000002480745f36c: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480745f376: mov    0xdc(%rbx),%edx
  0x000002480745f37c: add    $0x8,%edx
  0x000002480745f37f: mov    %edx,0xdc(%rbx)
  0x000002480745f385: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480745f38f: and    $0x7ffff8,%edx
  0x000002480745f395: cmp    $0x0,%edx
  0x000002480745f398: je     0x00000248074604da
  0x000002480745f39e: mov    $0x10,%ebx
  0x000002480745f3a3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480745f3ad: mov    %rax,%r13
  0x000002480745f3b0: movslq %ebx,%rbx
  0x000002480745f3b3: mov    %rbx,%rdi
  0x000002480745f3b6: cmp    $0xffffff,%rbx
  0x000002480745f3bd: ja     0x00000248074604f1
  0x000002480745f3c3: movabs $0x17,%rsi
  0x000002480745f3cd: lea    (%rsi,%rbx,2),%rsi
  0x000002480745f3d1: and    $0xfffffffffffffff8,%rsi
  0x000002480745f3d5: mov    0x60(%r15),%rax
  0x000002480745f3d9: lea    (%rax,%rsi,1),%rsi
  0x000002480745f3dd: cmp    0x70(%r15),%rsi
  0x000002480745f3e1: ja     0x00000248074604f1
  0x000002480745f3e7: mov    %rsi,0x60(%r15)
  0x000002480745f3eb: sub    %rax,%rsi
  0x000002480745f3ee: movq   $0x1,(%rax)
  0x000002480745f3f5: mov    %rdx,%rcx
  0x000002480745f3f8: shr    $0x3,%rcx
  0x000002480745f3fc: mov    %ecx,0x8(%rax)
  0x000002480745f3ff: mov    %ebx,0xc(%rax)
  0x000002480745f402: sub    $0x10,%rsi
  0x000002480745f406: je     0x000002480745f41d
  0x000002480745f40c: xor    %rbx,%rbx
  0x000002480745f40f: shr    $0x3,%rsi
  0x000002480745f413: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480745f418: dec    %rsi
  0x000002480745f41b: jne    0x000002480745f413  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x000002480745f41d: mov    %rax,%r10
  0x000002480745f420: shr    $0x3,%r10
  0x000002480745f424: mov    %r10d,0x10(%r13)
  0x000002480745f428: mov    %r13,%rax
  0x000002480745f42b: shr    $0x9,%rax
  0x000002480745f42f: movabs $0x248130de000,%r8
  0x000002480745f439: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x000002480745f43e: mov    %r13,%rax
  0x000002480745f441: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f44b: mov    0x8(%rax),%eax
  0x000002480745f44e: shl    $0x3,%rax
  0x000002480745f452: cmp    0x640(%r8),%rax
  0x000002480745f459: jne    0x000002480745f468
  0x000002480745f45b: addq   $0x1,0x648(%r8)
  0x000002480745f463: jmp    0x000002480745f4ce
  0x000002480745f468: cmp    0x650(%r8),%rax
  0x000002480745f46f: jne    0x000002480745f47e
  0x000002480745f471: addq   $0x1,0x658(%r8)
  0x000002480745f479: jmp    0x000002480745f4ce
  0x000002480745f47e: cmpq   $0x0,0x640(%r8)
  0x000002480745f489: jne    0x000002480745f4a2
  0x000002480745f48b: mov    %rax,0x640(%r8)
  0x000002480745f492: movq   $0x1,0x648(%r8)
  0x000002480745f49d: jmp    0x000002480745f4ce
  0x000002480745f4a2: cmpq   $0x0,0x650(%r8)
  0x000002480745f4ad: jne    0x000002480745f4c6
  0x000002480745f4af: mov    %rax,0x650(%r8)
  0x000002480745f4b6: movq   $0x1,0x658(%r8)
  0x000002480745f4c1: jmp    0x000002480745f4ce
  0x000002480745f4c6: addq   $0x1,0x638(%r8)
  0x000002480745f4ce: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f4d8: mov    0xdc(%r8),%edx
  0x000002480745f4df: add    $0x8,%edx
  0x000002480745f4e2: mov    %edx,0xdc(%r8)
  0x000002480745f4e9: movabs $0x2481fb79520,%r8  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f4f3: and    $0x7ffff8,%edx
  0x000002480745f4f9: cmp    $0x0,%edx
  0x000002480745f4fc: je     0x00000248074604fb
  0x000002480745f502: mov    %r13,%rax
  0x000002480745f505: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f50f: addq   $0x1,0x108(%r8)
  0x000002480745f517: movabs $0x76bd5bdd0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x000002480745f521: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)

  0x000002480745f524: mov    %r13,0x90(%rsp)
  0x000002480745f52c: nop
  0x000002480745f52d: nop
  0x000002480745f52e: nop
  0x000002480745f52f: call   0x0000024807375ee0  ; OopMap{[144]=Oop [160]=Oop off=3540}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {optimized virtual_call}
  0x000002480745f534: mov    0x90(%rsp),%rax
  0x000002480745f53c: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f546: mov    0x8(%rax),%eax
  0x000002480745f549: shl    $0x3,%rax
  0x000002480745f54d: cmp    0x670(%r8),%rax
  0x000002480745f554: jne    0x000002480745f563
  0x000002480745f556: addq   $0x1,0x678(%r8)
  0x000002480745f55e: jmp    0x000002480745f5c9
  0x000002480745f563: cmp    0x680(%r8),%rax
  0x000002480745f56a: jne    0x000002480745f579
  0x000002480745f56c: addq   $0x1,0x688(%r8)
  0x000002480745f574: jmp    0x000002480745f5c9
  0x000002480745f579: cmpq   $0x0,0x670(%r8)
  0x000002480745f584: jne    0x000002480745f59d
  0x000002480745f586: mov    %rax,0x670(%r8)
  0x000002480745f58d: movq   $0x1,0x678(%r8)
  0x000002480745f598: jmp    0x000002480745f5c9
  0x000002480745f59d: cmpq   $0x0,0x680(%r8)
  0x000002480745f5a8: jne    0x000002480745f5c1
  0x000002480745f5aa: mov    %rax,0x680(%r8)
  0x000002480745f5b1: movq   $0x1,0x688(%r8)
  0x000002480745f5bc: jmp    0x000002480745f5c9
  0x000002480745f5c1: addq   $0x1,0x668(%r8)
  0x000002480745f5c9: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f5d3: mov    0xdc(%r8),%edx
  0x000002480745f5da: add    $0x8,%edx
  0x000002480745f5dd: mov    %edx,0xdc(%r8)
  0x000002480745f5e4: movabs $0x2481fb799e0,%r8  ;   {metadata({method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f5ee: and    $0x7ffff8,%edx
  0x000002480745f5f4: cmp    $0x0,%edx
  0x000002480745f5f7: je     0x0000024807460512
  0x000002480745f5fd: mov    0x90(%rsp),%rax
  0x000002480745f605: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f60f: addq   $0x1,0x108(%r8)
  0x000002480745f617: mov    0x98(%rsp),%r8d
  0x000002480745f61f: mov    0x90(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)

  0x000002480745f627: call   0x0000024807375ee0  ; OopMap{[144]=Oop [160]=Oop off=3788}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {optimized virtual_call}
  0x000002480745f62c: mov    0x90(%rsp),%rax
  0x000002480745f634: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f63e: mov    0x8(%rax),%eax
  0x000002480745f641: shl    $0x3,%rax
  0x000002480745f645: cmp    0x6a0(%rdx),%rax
  0x000002480745f64c: jne    0x000002480745f65b
  0x000002480745f64e: addq   $0x1,0x6a8(%rdx)
  0x000002480745f656: jmp    0x000002480745f6c1
  0x000002480745f65b: cmp    0x6b0(%rdx),%rax
  0x000002480745f662: jne    0x000002480745f671
  0x000002480745f664: addq   $0x1,0x6b8(%rdx)
  0x000002480745f66c: jmp    0x000002480745f6c1
  0x000002480745f671: cmpq   $0x0,0x6a0(%rdx)
  0x000002480745f67c: jne    0x000002480745f695
  0x000002480745f67e: mov    %rax,0x6a0(%rdx)
  0x000002480745f685: movq   $0x1,0x6a8(%rdx)
  0x000002480745f690: jmp    0x000002480745f6c1
  0x000002480745f695: cmpq   $0x0,0x6b0(%rdx)
  0x000002480745f6a0: jne    0x000002480745f6b9
  0x000002480745f6a2: mov    %rax,0x6b0(%rdx)
  0x000002480745f6a9: movq   $0x1,0x6b8(%rdx)
  0x000002480745f6b4: jmp    0x000002480745f6c1
  0x000002480745f6b9: addq   $0x1,0x698(%rdx)
  0x000002480745f6c1: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f6cb: mov    0xdc(%rdx),%esi
  0x000002480745f6d1: add    $0x8,%esi
  0x000002480745f6d4: mov    %esi,0xdc(%rdx)
  0x000002480745f6da: movabs $0x2481fb7a8d0,%rdx  ;   {metadata({method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f6e4: and    $0x7ffff8,%esi
  0x000002480745f6ea: cmp    $0x0,%esi
  0x000002480745f6ed: je     0x0000024807460529
  0x000002480745f6f3: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000002480745f6fd: mov    0x60(%r15),%rax
  0x000002480745f701: lea    0x18(%rax),%rdi
  0x000002480745f705: cmp    0x70(%r15),%rdi
  0x000002480745f709: ja     0x0000024807460540
  0x000002480745f70f: mov    %rdi,0x60(%r15)
  0x000002480745f713: mov    0xa8(%rdx),%rcx
  0x000002480745f71a: mov    %rcx,(%rax)
  0x000002480745f71d: mov    %rdx,%rcx
  0x000002480745f720: shr    $0x3,%rcx
  0x000002480745f724: mov    %ecx,0x8(%rax)
  0x000002480745f727: xor    %rcx,%rcx
  0x000002480745f72a: mov    %ecx,0xc(%rax)
  0x000002480745f72d: xor    %rcx,%rcx
  0x000002480745f730: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000002480745f734: mov    0x90(%rsp),%r8
  0x000002480745f73c: mov    0x10(%r8),%r9d
  0x000002480745f740: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000002480745f744: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000002480745f748: mov    %rax,%r8
  0x000002480745f74b: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f755: addq   $0x1,0x108(%rdx)
  0x000002480745f75d: mov    %r9,%r8
  0x000002480745f760: mov    $0x0,%r9d
  0x000002480745f766: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000002480745f769: mov    %rax,0xa8(%rsp)
  0x000002480745f771: nop
  0x000002480745f772: nop
  0x000002480745f773: nop
  0x000002480745f774: nop
  0x000002480745f775: nop
  0x000002480745f776: nop
  0x000002480745f777: call   0x0000024807375ee0  ; OopMap{[160]=Oop [168]=Oop off=4124}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {optimized virtual_call}
  0x000002480745f77c: mov    0xa0(%rsp),%rax
  0x000002480745f784: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f78e: addq   $0x1,0x6c8(%r8)
  0x000002480745f796: mov    0xa8(%rsp),%r8
  0x000002480745f79e: mov    0xa0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)

  0x000002480745f7a6: nop
  0x000002480745f7a7: call   0x0000024807375ee0  ; OopMap{[160]=Oop off=4172}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)
                                                ;   {optimized virtual_call}
  0x000002480745f7ac: mov    0xa0(%rsp),%rax
  0x000002480745f7b4: jmp    0x000002480746079e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@488 (line 656)

  0x000002480745f7b9: mov    %esi,0x9c(%rsp)
  0x000002480745f7c0: jmp    0x000002480746055c  ;   {no_reloc}
  0x000002480745f7c5: add    %al,(%rax)
  0x000002480745f7c7: add    %al,(%rax)
  0x000002480745f7c9: add    %ch,%cl
  0x000002480745f7cb: xchg   %eax,%edi
  0x000002480745f7cc: or     $0xe9900000,%eax   ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {no_reloc}
  0x000002480745f7d1: lods   %ds:(%rsi),%eax
  0x000002480745f7d2: or     $0x0,%eax
  0x000002480745f7d7: add    %al,(%rax)
  0x000002480745f7d9: add    %cl,-0x77(%rax)
  0x000002480745f7dc: test   %ah,(%rax,%rdi,4)
  0x000002480745f7df: add    %al,(%rax)
  0x000002480745f7e1: add    %cl,-0x75(%rcx)
  0x000002480745f7e4: rex.RXB (bad) 
  0x000002480745f7e6: lea    0x18(%rax),%rdi
  0x000002480745f7ea: cmp    0x70(%r15),%rdi
  0x000002480745f7ee: ja     0x000002480746058c
  0x000002480745f7f4: mov    %rdi,0x60(%r15)
  0x000002480745f7f8: mov    0xa8(%rdx),%rcx
  0x000002480745f7ff: mov    %rcx,(%rax)
  0x000002480745f802: mov    %rdx,%rcx
  0x000002480745f805: shr    $0x3,%rcx
  0x000002480745f809: mov    %ecx,0x8(%rax)
  0x000002480745f80c: xor    %rcx,%rcx
  0x000002480745f80f: mov    %ecx,0xc(%rax)
  0x000002480745f812: xor    %rcx,%rcx
  0x000002480745f815: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)

  0x000002480745f819: mov    %rax,%rbx
  0x000002480745f81c: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f826: addq   $0x1,0x560(%rdx)
  0x000002480745f82e: movabs $0x2481fd6d330,%rbx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f838: mov    0xdc(%rbx),%edx
  0x000002480745f83e: add    $0x8,%edx
  0x000002480745f841: mov    %edx,0xdc(%rbx)
  0x000002480745f847: movabs $0x2481fb79208,%rbx  ;   {metadata({method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f851: and    $0x7ffff8,%edx
  0x000002480745f857: cmp    $0x0,%edx
  0x000002480745f85a: je     0x0000024807460599
  0x000002480745f860: mov    %rax,%rbx
  0x000002480745f863: movabs $0x2481fd6d330,%rdx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745f86d: addq   $0x1,0x108(%rdx)
  0x000002480745f875: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745f87f: mov    0xdc(%rbx),%edx
  0x000002480745f885: add    $0x8,%edx
  0x000002480745f888: mov    %edx,0xdc(%rbx)
  0x000002480745f88e: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745f898: and    $0x7ffff8,%edx
  0x000002480745f89e: cmp    $0x0,%edx
  0x000002480745f8a1: je     0x00000248074605b0
  0x000002480745f8a7: mov    %rax,%rbx
  0x000002480745f8aa: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745f8b4: addq   $0x1,0x108(%rdx)
  0x000002480745f8bc: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480745f8c6: mov    0xdc(%rbx),%edx
  0x000002480745f8cc: add    $0x8,%edx
  0x000002480745f8cf: mov    %edx,0xdc(%rbx)
  0x000002480745f8d5: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480745f8df: and    $0x7ffff8,%edx
  0x000002480745f8e5: cmp    $0x0,%edx
  0x000002480745f8e8: je     0x00000248074605c7
  0x000002480745f8ee: mov    $0x10,%ebx
  0x000002480745f8f3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480745f8fd: mov    %rax,%r14
  0x000002480745f900: movslq %ebx,%rbx
  0x000002480745f903: mov    %rbx,%rdi
  0x000002480745f906: cmp    $0xffffff,%rbx
  0x000002480745f90d: ja     0x00000248074605de
  0x000002480745f913: movabs $0x17,%rsi
  0x000002480745f91d: lea    (%rsi,%rbx,2),%rsi
  0x000002480745f921: and    $0xfffffffffffffff8,%rsi
  0x000002480745f925: mov    0x60(%r15),%rax
  0x000002480745f929: lea    (%rax,%rsi,1),%rsi
  0x000002480745f92d: cmp    0x70(%r15),%rsi
  0x000002480745f931: ja     0x00000248074605de
  0x000002480745f937: mov    %rsi,0x60(%r15)
  0x000002480745f93b: sub    %rax,%rsi
  0x000002480745f93e: movq   $0x1,(%rax)
  0x000002480745f945: mov    %rdx,%rcx
  0x000002480745f948: shr    $0x3,%rcx
  0x000002480745f94c: mov    %ecx,0x8(%rax)
  0x000002480745f94f: mov    %ebx,0xc(%rax)
  0x000002480745f952: sub    $0x10,%rsi
  0x000002480745f956: je     0x000002480745f96d
  0x000002480745f95c: xor    %rbx,%rbx
  0x000002480745f95f: shr    $0x3,%rsi
  0x000002480745f963: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480745f968: dec    %rsi
  0x000002480745f96b: jne    0x000002480745f963  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x000002480745f96d: mov    %rax,%r10
  0x000002480745f970: shr    $0x3,%r10
  0x000002480745f974: mov    %r10d,0x10(%r14)
  0x000002480745f978: mov    %r14,%rax
  0x000002480745f97b: shr    $0x9,%rax
  0x000002480745f97f: movabs $0x248130de000,%r8
  0x000002480745f989: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x000002480745f98e: mov    %r14,%rax
  0x000002480745f991: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745f99b: mov    0x8(%rax),%eax
  0x000002480745f99e: shl    $0x3,%rax
  0x000002480745f9a2: cmp    0x578(%r8),%rax
  0x000002480745f9a9: jne    0x000002480745f9b8
  0x000002480745f9ab: addq   $0x1,0x580(%r8)
  0x000002480745f9b3: jmp    0x000002480745fa1e
  0x000002480745f9b8: cmp    0x588(%r8),%rax
  0x000002480745f9bf: jne    0x000002480745f9ce
  0x000002480745f9c1: addq   $0x1,0x590(%r8)
  0x000002480745f9c9: jmp    0x000002480745fa1e
  0x000002480745f9ce: cmpq   $0x0,0x578(%r8)
  0x000002480745f9d9: jne    0x000002480745f9f2
  0x000002480745f9db: mov    %rax,0x578(%r8)
  0x000002480745f9e2: movq   $0x1,0x580(%r8)
  0x000002480745f9ed: jmp    0x000002480745fa1e
  0x000002480745f9f2: cmpq   $0x0,0x588(%r8)
  0x000002480745f9fd: jne    0x000002480745fa16
  0x000002480745f9ff: mov    %rax,0x588(%r8)
  0x000002480745fa06: movq   $0x1,0x590(%r8)
  0x000002480745fa11: jmp    0x000002480745fa1e
  0x000002480745fa16: addq   $0x1,0x570(%r8)
  0x000002480745fa1e: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fa28: mov    0xdc(%r8),%edx
  0x000002480745fa2f: add    $0x8,%edx
  0x000002480745fa32: mov    %edx,0xdc(%r8)
  0x000002480745fa39: movabs $0x2481fb79520,%r8  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fa43: and    $0x7ffff8,%edx
  0x000002480745fa49: cmp    $0x0,%edx
  0x000002480745fa4c: je     0x00000248074605e8
  0x000002480745fa52: mov    %r14,%rax
  0x000002480745fa55: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fa5f: addq   $0x1,0x108(%r8)
  0x000002480745fa67: movabs $0x76bd5bdd0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x000002480745fa71: mov    %r14,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)

  0x000002480745fa74: mov    %r14,0xb0(%rsp)
  0x000002480745fa7c: nop
  0x000002480745fa7d: nop
  0x000002480745fa7e: nop
  0x000002480745fa7f: call   0x0000024807375ee0  ; OopMap{[176]=Oop [184]=Oop off=4900}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {optimized virtual_call}
  0x000002480745fa84: mov    0xb0(%rsp),%rax
  0x000002480745fa8c: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745fa96: mov    0x8(%rax),%eax
  0x000002480745fa99: shl    $0x3,%rax
  0x000002480745fa9d: cmp    0x5a8(%r8),%rax
  0x000002480745faa4: jne    0x000002480745fab3
  0x000002480745faa6: addq   $0x1,0x5b0(%r8)
  0x000002480745faae: jmp    0x000002480745fb19
  0x000002480745fab3: cmp    0x5b8(%r8),%rax
  0x000002480745faba: jne    0x000002480745fac9
  0x000002480745fabc: addq   $0x1,0x5c0(%r8)
  0x000002480745fac4: jmp    0x000002480745fb19
  0x000002480745fac9: cmpq   $0x0,0x5a8(%r8)
  0x000002480745fad4: jne    0x000002480745faed
  0x000002480745fad6: mov    %rax,0x5a8(%r8)
  0x000002480745fadd: movq   $0x1,0x5b0(%r8)
  0x000002480745fae8: jmp    0x000002480745fb19
  0x000002480745faed: cmpq   $0x0,0x5b8(%r8)
  0x000002480745faf8: jne    0x000002480745fb11
  0x000002480745fafa: mov    %rax,0x5b8(%r8)
  0x000002480745fb01: movq   $0x1,0x5c0(%r8)
  0x000002480745fb0c: jmp    0x000002480745fb19
  0x000002480745fb11: addq   $0x1,0x5a0(%r8)
  0x000002480745fb19: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fb23: mov    0xdc(%r8),%edx
  0x000002480745fb2a: add    $0x8,%edx
  0x000002480745fb2d: mov    %edx,0xdc(%r8)
  0x000002480745fb34: movabs $0x2481fb799e0,%r8  ;   {metadata({method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fb3e: and    $0x7ffff8,%edx
  0x000002480745fb44: cmp    $0x0,%edx
  0x000002480745fb47: je     0x00000248074605ff
  0x000002480745fb4d: mov    0xb0(%rsp),%rax
  0x000002480745fb55: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fb5f: addq   $0x1,0x108(%r8)
  0x000002480745fb67: mov    0x74(%rsp),%r8d
  0x000002480745fb6c: mov    0xb0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)

  0x000002480745fb74: nop
  0x000002480745fb75: nop
  0x000002480745fb76: nop
  0x000002480745fb77: call   0x0000024807375ee0  ; OopMap{[176]=Oop [184]=Oop off=5148}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {optimized virtual_call}
  0x000002480745fb7c: mov    0xb0(%rsp),%rax
  0x000002480745fb84: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745fb8e: mov    0x8(%rax),%eax
  0x000002480745fb91: shl    $0x3,%rax
  0x000002480745fb95: cmp    0x5d8(%rdx),%rax
  0x000002480745fb9c: jne    0x000002480745fbab
  0x000002480745fb9e: addq   $0x1,0x5e0(%rdx)
  0x000002480745fba6: jmp    0x000002480745fc11
  0x000002480745fbab: cmp    0x5e8(%rdx),%rax
  0x000002480745fbb2: jne    0x000002480745fbc1
  0x000002480745fbb4: addq   $0x1,0x5f0(%rdx)
  0x000002480745fbbc: jmp    0x000002480745fc11
  0x000002480745fbc1: cmpq   $0x0,0x5d8(%rdx)
  0x000002480745fbcc: jne    0x000002480745fbe5
  0x000002480745fbce: mov    %rax,0x5d8(%rdx)
  0x000002480745fbd5: movq   $0x1,0x5e0(%rdx)
  0x000002480745fbe0: jmp    0x000002480745fc11
  0x000002480745fbe5: cmpq   $0x0,0x5e8(%rdx)
  0x000002480745fbf0: jne    0x000002480745fc09
  0x000002480745fbf2: mov    %rax,0x5e8(%rdx)
  0x000002480745fbf9: movq   $0x1,0x5f0(%rdx)
  0x000002480745fc04: jmp    0x000002480745fc11
  0x000002480745fc09: addq   $0x1,0x5d0(%rdx)
  0x000002480745fc11: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fc1b: mov    0xdc(%rdx),%esi
  0x000002480745fc21: add    $0x8,%esi
  0x000002480745fc24: mov    %esi,0xdc(%rdx)
  0x000002480745fc2a: movabs $0x2481fb7a8d0,%rdx  ;   {metadata({method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fc34: and    $0x7ffff8,%esi
  0x000002480745fc3a: cmp    $0x0,%esi
  0x000002480745fc3d: je     0x0000024807460616
  0x000002480745fc43: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000002480745fc4d: mov    0x60(%r15),%rax
  0x000002480745fc51: lea    0x18(%rax),%rdi
  0x000002480745fc55: cmp    0x70(%r15),%rdi
  0x000002480745fc59: ja     0x000002480746062d
  0x000002480745fc5f: mov    %rdi,0x60(%r15)
  0x000002480745fc63: mov    0xa8(%rdx),%rcx
  0x000002480745fc6a: mov    %rcx,(%rax)
  0x000002480745fc6d: mov    %rdx,%rcx
  0x000002480745fc70: shr    $0x3,%rcx
  0x000002480745fc74: mov    %ecx,0x8(%rax)
  0x000002480745fc77: xor    %rcx,%rcx
  0x000002480745fc7a: mov    %ecx,0xc(%rax)
  0x000002480745fc7d: xor    %rcx,%rcx
  0x000002480745fc80: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000002480745fc84: mov    0xb0(%rsp),%r8
  0x000002480745fc8c: mov    0x10(%r8),%r9d
  0x000002480745fc90: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000002480745fc94: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000002480745fc98: mov    %rax,%r8
  0x000002480745fc9b: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fca5: addq   $0x1,0x108(%rdx)
  0x000002480745fcad: mov    %r9,%r8
  0x000002480745fcb0: mov    $0x0,%r9d
  0x000002480745fcb6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000002480745fcb9: mov    %rax,0xc0(%rsp)
  0x000002480745fcc1: nop
  0x000002480745fcc2: nop
  0x000002480745fcc3: nop
  0x000002480745fcc4: nop
  0x000002480745fcc5: nop
  0x000002480745fcc6: nop
  0x000002480745fcc7: call   0x0000024807375ee0  ; OopMap{[184]=Oop [192]=Oop off=5484}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {optimized virtual_call}
  0x000002480745fccc: mov    0xb8(%rsp),%rax
  0x000002480745fcd4: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745fcde: addq   $0x1,0x600(%r8)
  0x000002480745fce6: mov    0xc0(%rsp),%r8
  0x000002480745fcee: mov    0xb8(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)

  0x000002480745fcf6: nop
  0x000002480745fcf7: call   0x0000024807375ee0  ; OopMap{[184]=Oop off=5532}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)
                                                ;   {optimized virtual_call}
  0x000002480745fcfc: mov    0xb8(%rsp),%rax
  0x000002480745fd04: jmp    0x000002480746079e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@424 (line 648)

  0x000002480745fd09: nopl   0x0(%rax)
  0x000002480745fd10: jmp    0x0000024807460649  ;   {no_reloc}
  0x000002480745fd15: add    %al,(%rax)
  0x000002480745fd17: add    %al,(%rax)
  0x000002480745fd19: add    %ch,%cl
  0x000002480745fd1b: xor    $0x9,%al
  0x000002480745fd1d: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)

  0x000002480745fd1f: mov    %rax,%r8
  0x000002480745fd22: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745fd2c: addq   $0x1,0x510(%rdx)
  0x000002480745fd34: movabs $0x76bd5bd50,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x000002480745fd3e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)

  0x000002480745fd41: mov    %rax,0xc8(%rsp)
  0x000002480745fd49: nop
  0x000002480745fd4a: nop
  0x000002480745fd4b: nop
  0x000002480745fd4c: nop
  0x000002480745fd4d: nop
  0x000002480745fd4e: nop
  0x000002480745fd4f: call   0x0000024807375ee0  ; OopMap{[200]=Oop off=5620}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)
                                                ;   {optimized virtual_call}
  0x000002480745fd54: mov    0xc8(%rsp),%rax
  0x000002480745fd5c: jmp    0x000002480746079e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@354 (line 643)

  0x000002480745fd61: mov    %esi,0xd8(%rsp)
  0x000002480745fd68: jmp    0x000002480746066f  ;   {no_reloc}
  0x000002480745fd6d: add    %al,(%rax)
  0x000002480745fd6f: add    %al,(%rax)
  0x000002480745fd71: add    %ch,%cl
  0x000002480745fd73: add    (%rcx),%cl
  0x000002480745fd75: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)

  0x000002480745fd77: nop
  0x000002480745fd78: jmp    0x0000024807460695  ;   {no_reloc}
  0x000002480745fd7d: add    %al,(%rax)
  0x000002480745fd7f: add    %al,(%rax)
  0x000002480745fd81: add    %cl,-0x77(%rax)
  0x000002480745fd84: test   %ah,(%rax,%riz,8)
  0x000002480745fd87: add    %al,(%rax)
  0x000002480745fd89: add    %cl,-0x75(%rcx)
  0x000002480745fd8c: rex.RXB (bad) 
  0x000002480745fd8e: lea    0x18(%rax),%rdi
  0x000002480745fd92: cmp    0x70(%r15),%rdi
  0x000002480745fd96: ja     0x000002480746069f
  0x000002480745fd9c: mov    %rdi,0x60(%r15)
  0x000002480745fda0: mov    0xa8(%rdx),%rcx
  0x000002480745fda7: mov    %rcx,(%rax)
  0x000002480745fdaa: mov    %rdx,%rcx
  0x000002480745fdad: shr    $0x3,%rcx
  0x000002480745fdb1: mov    %ecx,0x8(%rax)
  0x000002480745fdb4: xor    %rcx,%rcx
  0x000002480745fdb7: mov    %ecx,0xc(%rax)
  0x000002480745fdba: xor    %rcx,%rcx
  0x000002480745fdbd: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)

  0x000002480745fdc1: mov    %rax,%rbx
  0x000002480745fdc4: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745fdce: addq   $0x1,0x428(%rdx)
  0x000002480745fdd6: movabs $0x2481fd6d330,%rbx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fde0: mov    0xdc(%rbx),%edx
  0x000002480745fde6: add    $0x8,%edx
  0x000002480745fde9: mov    %edx,0xdc(%rbx)
  0x000002480745fdef: movabs $0x2481fb79208,%rbx  ;   {metadata({method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fdf9: and    $0x7ffff8,%edx
  0x000002480745fdff: cmp    $0x0,%edx
  0x000002480745fe02: je     0x00000248074606ac
  0x000002480745fe08: mov    %rax,%rbx
  0x000002480745fe0b: movabs $0x2481fd6d330,%rdx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745fe15: addq   $0x1,0x108(%rdx)
  0x000002480745fe1d: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745fe27: mov    0xdc(%rbx),%edx
  0x000002480745fe2d: add    $0x8,%edx
  0x000002480745fe30: mov    %edx,0xdc(%rbx)
  0x000002480745fe36: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745fe40: and    $0x7ffff8,%edx
  0x000002480745fe46: cmp    $0x0,%edx
  0x000002480745fe49: je     0x00000248074606c3
  0x000002480745fe4f: mov    %rax,%rbx
  0x000002480745fe52: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480745fe5c: addq   $0x1,0x108(%rdx)
  0x000002480745fe64: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480745fe6e: mov    0xdc(%rbx),%edx
  0x000002480745fe74: add    $0x8,%edx
  0x000002480745fe77: mov    %edx,0xdc(%rbx)
  0x000002480745fe7d: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480745fe87: and    $0x7ffff8,%edx
  0x000002480745fe8d: cmp    $0x0,%edx
  0x000002480745fe90: je     0x00000248074606da
  0x000002480745fe96: mov    $0x10,%ebx
  0x000002480745fe9b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480745fea5: mov    %rax,%r13
  0x000002480745fea8: movslq %ebx,%rbx
  0x000002480745feab: mov    %rbx,%rdi
  0x000002480745feae: cmp    $0xffffff,%rbx
  0x000002480745feb5: ja     0x00000248074606f1
  0x000002480745febb: movabs $0x17,%rsi
  0x000002480745fec5: lea    (%rsi,%rbx,2),%rsi
  0x000002480745fec9: and    $0xfffffffffffffff8,%rsi
  0x000002480745fecd: mov    0x60(%r15),%rax
  0x000002480745fed1: lea    (%rax,%rsi,1),%rsi
  0x000002480745fed5: cmp    0x70(%r15),%rsi
  0x000002480745fed9: ja     0x00000248074606f1
  0x000002480745fedf: mov    %rsi,0x60(%r15)
  0x000002480745fee3: sub    %rax,%rsi
  0x000002480745fee6: movq   $0x1,(%rax)
  0x000002480745feed: mov    %rdx,%rcx
  0x000002480745fef0: shr    $0x3,%rcx
  0x000002480745fef4: mov    %ecx,0x8(%rax)
  0x000002480745fef7: mov    %ebx,0xc(%rax)
  0x000002480745fefa: sub    $0x10,%rsi
  0x000002480745fefe: je     0x000002480745ff15
  0x000002480745ff04: xor    %rbx,%rbx
  0x000002480745ff07: shr    $0x3,%rsi
  0x000002480745ff0b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480745ff10: dec    %rsi
  0x000002480745ff13: jne    0x000002480745ff0b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x000002480745ff15: mov    %rax,%r10
  0x000002480745ff18: shr    $0x3,%r10
  0x000002480745ff1c: mov    %r10d,0x10(%r13)
  0x000002480745ff20: mov    %r13,%rax
  0x000002480745ff23: shr    $0x9,%rax
  0x000002480745ff27: movabs $0x248130de000,%r8
  0x000002480745ff31: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x000002480745ff36: mov    %r13,%rax
  0x000002480745ff39: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745ff43: mov    0x8(%rax),%eax
  0x000002480745ff46: shl    $0x3,%rax
  0x000002480745ff4a: cmp    0x440(%r8),%rax
  0x000002480745ff51: jne    0x000002480745ff60
  0x000002480745ff53: addq   $0x1,0x448(%r8)
  0x000002480745ff5b: jmp    0x000002480745ffc6
  0x000002480745ff60: cmp    0x450(%r8),%rax
  0x000002480745ff67: jne    0x000002480745ff76
  0x000002480745ff69: addq   $0x1,0x458(%r8)
  0x000002480745ff71: jmp    0x000002480745ffc6
  0x000002480745ff76: cmpq   $0x0,0x440(%r8)
  0x000002480745ff81: jne    0x000002480745ff9a
  0x000002480745ff83: mov    %rax,0x440(%r8)
  0x000002480745ff8a: movq   $0x1,0x448(%r8)
  0x000002480745ff95: jmp    0x000002480745ffc6
  0x000002480745ff9a: cmpq   $0x0,0x450(%r8)
  0x000002480745ffa5: jne    0x000002480745ffbe
  0x000002480745ffa7: mov    %rax,0x450(%r8)
  0x000002480745ffae: movq   $0x1,0x458(%r8)
  0x000002480745ffb9: jmp    0x000002480745ffc6
  0x000002480745ffbe: addq   $0x1,0x438(%r8)
  0x000002480745ffc6: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745ffd0: mov    0xdc(%r8),%edx
  0x000002480745ffd7: add    $0x8,%edx
  0x000002480745ffda: mov    %edx,0xdc(%r8)
  0x000002480745ffe1: movabs $0x2481fb79520,%r8  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480745ffeb: and    $0x7ffff8,%edx
  0x000002480745fff1: cmp    $0x0,%edx
  0x000002480745fff4: je     0x00000248074606fb
  0x000002480745fffa: mov    %r13,%rax
  0x000002480745fffd: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807460007: addq   $0x1,0x108(%r8)
  0x000002480746000f: movabs $0x76bd5bdd0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x0000024807460019: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)

  0x000002480746001c: mov    %r13,0xd0(%rsp)
  0x0000024807460024: nop
  0x0000024807460025: nop
  0x0000024807460026: nop
  0x0000024807460027: call   0x0000024807375ee0  ; OopMap{[208]=Oop [224]=Oop off=6348}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {optimized virtual_call}
  0x000002480746002c: mov    0xd0(%rsp),%rax
  0x0000024807460034: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480746003e: mov    0x8(%rax),%eax
  0x0000024807460041: shl    $0x3,%rax
  0x0000024807460045: cmp    0x470(%r8),%rax
  0x000002480746004c: jne    0x000002480746005b
  0x000002480746004e: addq   $0x1,0x478(%r8)
  0x0000024807460056: jmp    0x00000248074600c1
  0x000002480746005b: cmp    0x480(%r8),%rax
  0x0000024807460062: jne    0x0000024807460071
  0x0000024807460064: addq   $0x1,0x488(%r8)
  0x000002480746006c: jmp    0x00000248074600c1
  0x0000024807460071: cmpq   $0x0,0x470(%r8)
  0x000002480746007c: jne    0x0000024807460095
  0x000002480746007e: mov    %rax,0x470(%r8)
  0x0000024807460085: movq   $0x1,0x478(%r8)
  0x0000024807460090: jmp    0x00000248074600c1
  0x0000024807460095: cmpq   $0x0,0x480(%r8)
  0x00000248074600a0: jne    0x00000248074600b9
  0x00000248074600a2: mov    %rax,0x480(%r8)
  0x00000248074600a9: movq   $0x1,0x488(%r8)
  0x00000248074600b4: jmp    0x00000248074600c1
  0x00000248074600b9: addq   $0x1,0x468(%r8)
  0x00000248074600c1: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000248074600cb: mov    0xdc(%r8),%edx
  0x00000248074600d2: add    $0x8,%edx
  0x00000248074600d5: mov    %edx,0xdc(%r8)
  0x00000248074600dc: movabs $0x2481fb799e0,%r8  ;   {metadata({method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000248074600e6: and    $0x7ffff8,%edx
  0x00000248074600ec: cmp    $0x0,%edx
  0x00000248074600ef: je     0x0000024807460712
  0x00000248074600f5: mov    0xd0(%rsp),%rax
  0x00000248074600fd: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807460107: addq   $0x1,0x108(%r8)
  0x000002480746010f: mov    0xd8(%rsp),%r8d
  0x0000024807460117: mov    0xd0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)

  0x000002480746011f: call   0x0000024807375ee0  ; OopMap{[208]=Oop [224]=Oop off=6596}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {optimized virtual_call}
  0x0000024807460124: mov    0xd0(%rsp),%rax
  0x000002480746012c: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000024807460136: mov    0x8(%rax),%eax
  0x0000024807460139: shl    $0x3,%rax
  0x000002480746013d: cmp    0x4a0(%rdx),%rax
  0x0000024807460144: jne    0x0000024807460153
  0x0000024807460146: addq   $0x1,0x4a8(%rdx)
  0x000002480746014e: jmp    0x00000248074601b9
  0x0000024807460153: cmp    0x4b0(%rdx),%rax
  0x000002480746015a: jne    0x0000024807460169
  0x000002480746015c: addq   $0x1,0x4b8(%rdx)
  0x0000024807460164: jmp    0x00000248074601b9
  0x0000024807460169: cmpq   $0x0,0x4a0(%rdx)
  0x0000024807460174: jne    0x000002480746018d
  0x0000024807460176: mov    %rax,0x4a0(%rdx)
  0x000002480746017d: movq   $0x1,0x4a8(%rdx)
  0x0000024807460188: jmp    0x00000248074601b9
  0x000002480746018d: cmpq   $0x0,0x4b0(%rdx)
  0x0000024807460198: jne    0x00000248074601b1
  0x000002480746019a: mov    %rax,0x4b0(%rdx)
  0x00000248074601a1: movq   $0x1,0x4b8(%rdx)
  0x00000248074601ac: jmp    0x00000248074601b9
  0x00000248074601b1: addq   $0x1,0x498(%rdx)
  0x00000248074601b9: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000248074601c3: mov    0xdc(%rdx),%esi
  0x00000248074601c9: add    $0x8,%esi
  0x00000248074601cc: mov    %esi,0xdc(%rdx)
  0x00000248074601d2: movabs $0x2481fb7a8d0,%rdx  ;   {metadata({method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000248074601dc: and    $0x7ffff8,%esi
  0x00000248074601e2: cmp    $0x0,%esi
  0x00000248074601e5: je     0x0000024807460729
  0x00000248074601eb: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000248074601f5: mov    0x60(%r15),%rax
  0x00000248074601f9: lea    0x18(%rax),%rdi
  0x00000248074601fd: cmp    0x70(%r15),%rdi
  0x0000024807460201: ja     0x0000024807460740
  0x0000024807460207: mov    %rdi,0x60(%r15)
  0x000002480746020b: mov    0xa8(%rdx),%rcx
  0x0000024807460212: mov    %rcx,(%rax)
  0x0000024807460215: mov    %rdx,%rcx
  0x0000024807460218: shr    $0x3,%rcx
  0x000002480746021c: mov    %ecx,0x8(%rax)
  0x000002480746021f: xor    %rcx,%rcx
  0x0000024807460222: mov    %ecx,0xc(%rax)
  0x0000024807460225: xor    %rcx,%rcx
  0x0000024807460228: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000002480746022c: mov    0xd0(%rsp),%r8
  0x0000024807460234: mov    0x10(%r8),%r9d
  0x0000024807460238: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000002480746023c: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000024807460240: mov    %rax,%r8
  0x0000024807460243: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480746024d: addq   $0x1,0x108(%rdx)
  0x0000024807460255: mov    %r9,%r8
  0x0000024807460258: mov    $0x0,%r9d
  0x000002480746025e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000024807460261: mov    %rax,0xe8(%rsp)
  0x0000024807460269: nop
  0x000002480746026a: nop
  0x000002480746026b: nop
  0x000002480746026c: nop
  0x000002480746026d: nop
  0x000002480746026e: nop
  0x000002480746026f: call   0x0000024807375ee0  ; OopMap{[224]=Oop [232]=Oop off=6932}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {optimized virtual_call}
  0x0000024807460274: mov    0xe0(%rsp),%rax
  0x000002480746027c: movabs $0x2481fe80ce0,%r8  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000024807460286: addq   $0x1,0x4c8(%r8)
  0x000002480746028e: mov    0xe8(%rsp),%r8
  0x0000024807460296: mov    0xe0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)

  0x000002480746029e: nop
  0x000002480746029f: call   0x0000024807375ee0  ; OopMap{[224]=Oop off=6980}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)
                                                ;   {optimized virtual_call}
  0x00000248074602a4: mov    0xe0(%rsp),%rax
  0x00000248074602ac: jmp    0x000002480746079e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@310 (line 634)

  0x00000248074602b1: nopl   0x0(%rax)
  0x00000248074602b8: jmp    0x000002480746075c  ;   {no_reloc}
  0x00000248074602bd: add    %al,(%rax)
  0x00000248074602bf: add    %al,(%rax)
  0x00000248074602c1: add    %ch,%cl
  0x00000248074602c3: lahf   
  0x00000248074602c4: add    $0x0,%al
  0x00000248074602c6: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.io.DataInputStream::readUTF@253 (line 630)

  0x00000248074602ca: movabs $0x2481fe80ce0,%rdx  ;   {metadata(method data for {method} {0x000002481fe80428} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000248074602d4: addq   $0x1,0x3f8(%rdx)
  0x00000248074602dc: movabs $0x76bd5bd50,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x00000248074602e6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)

  0x00000248074602e9: mov    %rax,0xf0(%rsp)
  0x00000248074602f1: nop
  0x00000248074602f2: nop
  0x00000248074602f3: nop
  0x00000248074602f4: nop
  0x00000248074602f5: nop
  0x00000248074602f6: nop
  0x00000248074602f7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=7068}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)
                                                ;   {optimized virtual_call}
  0x00000248074602fc: mov    0xf0(%rsp),%rax
  0x0000024807460304: jmp    0x000002480746079e
  0x0000024807460309: mov    %rsi,0x8(%rsp)
  0x000002480746030e: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807460316: call   0x0000024807433da0  ; OopMap{rdx=Oop off=7099}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 589)
                                                ;   {runtime_call}
  0x000002480746031b: jmp    0x000002480745e7a1
  0x0000024807460320: call   0x0000024807431900  ; OopMap{rdx=Oop off=7109}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x0000024807460325: call   0x000002480742f100  ; OopMap{rdx=Oop off=7114}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x000002480746032a: mov    %r11,(%rsp)
  0x000002480746032e: call   0x00000248074316c0  ; OopMap{r11=Oop off=7123}
                                                ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)
                                                ;   {runtime_call}
  0x0000024807460333: call   0x000002480742f100  ; OopMap{r11=Oop r8=Oop off=7128}
                                                ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)
                                                ;   {runtime_call}
  0x0000024807460338: call   0x000002480742f100  ; OopMap{r11=Oop r8=Oop off=7133}
                                                ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ;   {runtime_call}
  0x000002480746033d: call   0x0000024807430280  ; OopMap{r11=Oop r8=Oop off=7138}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)
                                                ;   {runtime_call}
  0x0000024807460342: jmp    0x000002480745eadc
  0x0000024807460347: call   0x0000024807430280  ; OopMap{r11=Oop r8=Oop off=7148}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)
                                                ;   {runtime_call}
  0x000002480746034c: jmp    0x000002480745eb77
  0x0000024807460351: call   0x0000024807430280  ; OopMap{r11=Oop off=7158}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)
                                                ;   {runtime_call}
  0x0000024807460356: jmp    0x000002480745ec30
  0x000002480746035b: call   0x0000024807430280  ; OopMap{r11=Oop r8=Oop off=7168}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)
                                                ;   {runtime_call}
  0x0000024807460360: jmp    0x000002480745ecad
  0x0000024807460365: call   0x0000024807431900  ; OopMap{r11=Oop rdx=Oop [128]=Oop off=7178}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {runtime_call}
  0x000002480746036a: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7183}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x000002480746036f: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7188}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x0000024807460374: mov    %rsi,(%rsp)
  0x0000024807460378: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7197}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x000002480746037d: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7202}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000024807460382: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7207}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000024807460387: mov    %rdx,(%rsp)
  0x000002480746038b: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7216}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000024807460390: mov    %rdx,0x8(%rsp)
  0x0000024807460395: movq   $0x83,(%rsp)
  0x000002480746039d: call   0x0000024807433da0  ; OopMap{rbx=Oop rdi=Oop off=7234}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)
                                                ;   {runtime_call}
  0x00000248074603a2: jmp    0x000002480745eddc
  0x00000248074603a7: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7244}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000248074603ac: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7249}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000248074603b1: mov    %rsi,(%rsp)
  0x00000248074603b5: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7258}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000248074603ba: mov    %rcx,(%rsp)
  0x00000248074603be: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7267}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)
                                                ;   {runtime_call}
  0x00000248074603c3: mov    %rcx,(%rsp)
  0x00000248074603c7: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7276}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)
                                                ;   {runtime_call}
  0x00000248074603cc: mov    %r9,(%rsp)
  0x00000248074603d0: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7285}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)
                                                ;   {runtime_call}
  0x00000248074603d5: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7290}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000248074603da: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7295}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000248074603df: mov    %r11,(%rsp)
  0x00000248074603e3: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7304}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000248074603e8: mov    %rdx,0x8(%rsp)
  0x00000248074603ed: movq   $0x1ca,(%rsp)
  0x00000248074603f5: call   0x0000024807433da0  ; OopMap{rbx=Oop rdi=Oop off=7322}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)
                                                ;   {runtime_call}
  0x00000248074603fa: jmp    0x000002480745f0ce
  0x00000248074603ff: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7332}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000024807460404: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7337}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000024807460409: mov    %r11,(%rsp)
  0x000002480746040d: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7346}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000024807460412: mov    %rdx,0x8(%rsp)
  0x0000024807460417: movq   $0x14d,(%rsp)
  0x000002480746041f: call   0x0000024807433da0  ; OopMap{rbx=Oop rdi=Oop off=7364}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)
                                                ;   {runtime_call}
  0x0000024807460424: jmp    0x000002480745f142
  0x0000024807460429: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7374}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x000002480746042e: call   0x000002480742f100  ; OopMap{rbx=Oop rdi=Oop off=7379}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x0000024807460433: mov    %r11,(%rsp)
  0x0000024807460437: call   0x000002480742e800  ; OopMap{rbx=Oop rdi=Oop off=7388}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x000002480746043c: mov    %rdx,0x8(%rsp)
  0x0000024807460441: movq   $0xf1,(%rsp)
  0x0000024807460449: call   0x0000024807433da0  ; OopMap{rbx=Oop rdi=Oop off=7406}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)
                                                ;   {runtime_call}
  0x000002480746044e: jmp    0x000002480745f1b1
  0x0000024807460453: mov    %rdx,%rdx
  0x0000024807460456: call   0x000002480742f900  ; OopMap{rbx=Oop off=7419}
                                                ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)
                                                ;   {runtime_call}
  0x000002480746045b: jmp    0x000002480745f21c
  0x0000024807460460: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480746046a: mov    $0xa050f00,%eax
  0x000002480746046f: call   0x0000024807432b60  ; OopMap{off=7444}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x0000024807460474: jmp    0x000002480745f270
  0x0000024807460479: mov    %rdx,%rdx
  0x000002480746047c: call   0x000002480742f5e0  ; OopMap{off=7457}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x0000024807460481: jmp    0x000002480745f27f
  0x0000024807460486: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807460490: mov    $0xa050f00,%eax
  0x0000024807460495: call   0x0000024807432b60  ; OopMap{rax=Oop off=7482}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x000002480746049a: jmp    0x000002480745f280
  0x000002480746049f: mov    %rdx,%rdx
  0x00000248074604a2: call   0x000002480742f900  ; OopMap{[160]=Oop off=7495}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x00000248074604a7: jmp    0x000002480745f2c9
  0x00000248074604ac: mov    %rbx,0x8(%rsp)
  0x00000248074604b1: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074604b9: call   0x0000024807433da0  ; OopMap{[160]=Oop rax=Oop off=7518}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000248074604be: jmp    0x000002480745f310
  0x00000248074604c3: mov    %rbx,0x8(%rsp)
  0x00000248074604c8: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074604d0: call   0x0000024807433da0  ; OopMap{[160]=Oop rax=Oop off=7541}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000248074604d5: jmp    0x000002480745f357
  0x00000248074604da: mov    %rbx,0x8(%rsp)
  0x00000248074604df: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074604e7: call   0x0000024807433da0  ; OopMap{[160]=Oop rax=Oop off=7564}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000248074604ec: jmp    0x000002480745f39e
  0x00000248074604f1: call   0x0000024807430280  ; OopMap{[160]=Oop r13=Oop off=7574}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000248074604f6: jmp    0x000002480745f41d
  0x00000248074604fb: mov    %r8,0x8(%rsp)
  0x0000024807460500: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807460508: call   0x0000024807433da0  ; OopMap{[160]=Oop r13=Oop off=7597}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {runtime_call}
  0x000002480746050d: jmp    0x000002480745f502
  0x0000024807460512: mov    %r8,0x8(%rsp)
  0x0000024807460517: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746051f: call   0x0000024807433da0  ; OopMap{[144]=Oop [160]=Oop off=7620}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {runtime_call}
  0x0000024807460524: jmp    0x000002480745f5fd
  0x0000024807460529: mov    %rdx,0x8(%rsp)
  0x000002480746052e: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807460536: call   0x0000024807433da0  ; OopMap{[144]=Oop [160]=Oop off=7643}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x000002480746053b: jmp    0x000002480745f6f3
  0x0000024807460540: mov    %rdx,%rdx
  0x0000024807460543: call   0x000002480742f900  ; OopMap{[144]=Oop [160]=Oop off=7656}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x0000024807460548: jmp    0x000002480745f734
  0x000002480746054d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807460557: mov    $0xa050f00,%eax
  0x000002480746055c: call   0x0000024807432b60  ; OopMap{off=7681}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x0000024807460561: jmp    0x000002480745f7c0
  0x0000024807460566: mov    %rdx,%rdx
  0x0000024807460569: call   0x000002480742f5e0  ; OopMap{off=7694}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x000002480746056e: jmp    0x000002480745f7cf
  0x0000024807460573: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480746057d: mov    $0xa050f00,%eax
  0x0000024807460582: call   0x0000024807432b60  ; OopMap{rax=Oop off=7719}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x0000024807460587: jmp    0x000002480745f7d0
  0x000002480746058c: mov    %rdx,%rdx
  0x000002480746058f: call   0x000002480742f900  ; OopMap{[184]=Oop off=7732}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x0000024807460594: jmp    0x000002480745f819
  0x0000024807460599: mov    %rbx,0x8(%rsp)
  0x000002480746059e: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074605a6: call   0x0000024807433da0  ; OopMap{[184]=Oop rax=Oop off=7755}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000248074605ab: jmp    0x000002480745f860
  0x00000248074605b0: mov    %rbx,0x8(%rsp)
  0x00000248074605b5: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074605bd: call   0x0000024807433da0  ; OopMap{[184]=Oop rax=Oop off=7778}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000248074605c2: jmp    0x000002480745f8a7
  0x00000248074605c7: mov    %rbx,0x8(%rsp)
  0x00000248074605cc: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074605d4: call   0x0000024807433da0  ; OopMap{[184]=Oop rax=Oop off=7801}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000248074605d9: jmp    0x000002480745f8ee
  0x00000248074605de: call   0x0000024807430280  ; OopMap{[184]=Oop r14=Oop off=7811}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000248074605e3: jmp    0x000002480745f96d
  0x00000248074605e8: mov    %r8,0x8(%rsp)
  0x00000248074605ed: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074605f5: call   0x0000024807433da0  ; OopMap{[184]=Oop r14=Oop off=7834}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {runtime_call}
  0x00000248074605fa: jmp    0x000002480745fa52
  0x00000248074605ff: mov    %r8,0x8(%rsp)
  0x0000024807460604: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746060c: call   0x0000024807433da0  ; OopMap{[176]=Oop [184]=Oop off=7857}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {runtime_call}
  0x0000024807460611: jmp    0x000002480745fb4d
  0x0000024807460616: mov    %rdx,0x8(%rsp)
  0x000002480746061b: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807460623: call   0x0000024807433da0  ; OopMap{[176]=Oop [184]=Oop off=7880}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x0000024807460628: jmp    0x000002480745fc43
  0x000002480746062d: mov    %rdx,%rdx
  0x0000024807460630: call   0x000002480742f900  ; OopMap{[176]=Oop [184]=Oop off=7893}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x0000024807460635: jmp    0x000002480745fc84
  0x000002480746063a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807460644: mov    $0xa050f00,%eax
  0x0000024807460649: call   0x0000024807432b60  ; OopMap{off=7918}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x000002480746064e: jmp    0x000002480745fd10
  0x0000024807460653: mov    %rdx,%rdx
  0x0000024807460656: call   0x000002480742f5e0  ; OopMap{off=7931}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x000002480746065b: jmp    0x000002480745fd1f
  0x0000024807460660: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480746066a: mov    $0xa050f00,%eax
  0x000002480746066f: call   0x0000024807432b60  ; OopMap{off=7956}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x0000024807460674: jmp    0x000002480745fd68
  0x0000024807460679: mov    %rdx,%rdx
  0x000002480746067c: call   0x000002480742f5e0  ; OopMap{off=7969}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x0000024807460681: jmp    0x000002480745fd77
  0x0000024807460686: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807460690: mov    $0xa050f00,%eax
  0x0000024807460695: call   0x0000024807432b60  ; OopMap{rax=Oop off=7994}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x000002480746069a: jmp    0x000002480745fd78
  0x000002480746069f: mov    %rdx,%rdx
  0x00000248074606a2: call   0x000002480742f900  ; OopMap{[224]=Oop off=8007}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x00000248074606a7: jmp    0x000002480745fdc1
  0x00000248074606ac: mov    %rbx,0x8(%rsp)
  0x00000248074606b1: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074606b9: call   0x0000024807433da0  ; OopMap{[224]=Oop rax=Oop off=8030}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000248074606be: jmp    0x000002480745fe08
  0x00000248074606c3: mov    %rbx,0x8(%rsp)
  0x00000248074606c8: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074606d0: call   0x0000024807433da0  ; OopMap{[224]=Oop rax=Oop off=8053}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000248074606d5: jmp    0x000002480745fe4f
  0x00000248074606da: mov    %rbx,0x8(%rsp)
  0x00000248074606df: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074606e7: call   0x0000024807433da0  ; OopMap{[224]=Oop rax=Oop off=8076}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000248074606ec: jmp    0x000002480745fe96
  0x00000248074606f1: call   0x0000024807430280  ; OopMap{[224]=Oop r13=Oop off=8086}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000248074606f6: jmp    0x000002480745ff15
  0x00000248074606fb: mov    %r8,0x8(%rsp)
  0x0000024807460700: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807460708: call   0x0000024807433da0  ; OopMap{[224]=Oop r13=Oop off=8109}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {runtime_call}
  0x000002480746070d: jmp    0x000002480745fffa
  0x0000024807460712: mov    %r8,0x8(%rsp)
  0x0000024807460717: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746071f: call   0x0000024807433da0  ; OopMap{[208]=Oop [224]=Oop off=8132}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {runtime_call}
  0x0000024807460724: jmp    0x00000248074600f5
  0x0000024807460729: mov    %rdx,0x8(%rsp)
  0x000002480746072e: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807460736: call   0x0000024807433da0  ; OopMap{[208]=Oop [224]=Oop off=8155}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x000002480746073b: jmp    0x00000248074601eb
  0x0000024807460740: mov    %rdx,%rdx
  0x0000024807460743: call   0x000002480742f900  ; OopMap{[208]=Oop [224]=Oop off=8168}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x0000024807460748: jmp    0x000002480746022c
  0x000002480746074d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807460757: mov    $0xa050f00,%eax
  0x000002480746075c: call   0x0000024807432b60  ; OopMap{off=8193}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x0000024807460761: jmp    0x00000248074602b8
  0x0000024807460766: mov    %rdx,%rdx
  0x0000024807460769: call   0x000002480742f5e0  ; OopMap{off=8206}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x000002480746076e: jmp    0x00000248074602c7
  0x0000024807460773: nop
  0x0000024807460774: nop
  0x0000024807460775: mov    0x308(%r15),%rax
  0x000002480746077c: movabs $0x0,%r10
  0x0000024807460786: mov    %r10,0x308(%r15)
  0x000002480746078d: movabs $0x0,%r10
  0x0000024807460797: mov    %r10,0x310(%r15)
  0x000002480746079e: add    $0x100,%rsp
  0x00000248074607a5: pop    %rbp
  0x00000248074607a6: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074607ab: hlt    
  0x00000248074607ac: hlt    
  0x00000248074607ad: hlt    
  0x00000248074607ae: hlt    
  0x00000248074607af: hlt    
  0x00000248074607b0: hlt    
  0x00000248074607b1: hlt    
  0x00000248074607b2: hlt    
  0x00000248074607b3: hlt    
  0x00000248074607b4: hlt    
  0x00000248074607b5: hlt    
  0x00000248074607b6: hlt    
  0x00000248074607b7: hlt    
  0x00000248074607b8: hlt    
  0x00000248074607b9: hlt    
  0x00000248074607ba: hlt    
  0x00000248074607bb: hlt    
  0x00000248074607bc: hlt    
  0x00000248074607bd: hlt    
  0x00000248074607be: hlt    
  0x00000248074607bf: hlt    
[Stub Code]
  0x00000248074607c0: nop                       ;   {no_reloc}
  0x00000248074607c1: nop
  0x00000248074607c2: nop
  0x00000248074607c3: nop
  0x00000248074607c4: nop
  0x00000248074607c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074607cf: jmp    0x00000248074607cf  ;   {runtime_call}
  0x00000248074607d4: nop
  0x00000248074607d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074607df: jmp    0x00000248074607df  ;   {runtime_call}
  0x00000248074607e4: nop
  0x00000248074607e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074607ef: jmp    0x00000248074607ef  ;   {runtime_call}
  0x00000248074607f4: nop
  0x00000248074607f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074607ff: jmp    0x00000248074607ff  ;   {runtime_call}
  0x0000024807460804: nop
  0x0000024807460805: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746080f: jmp    0x000002480746080f  ;   {runtime_call}
  0x0000024807460814: nop
  0x0000024807460815: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746081f: jmp    0x000002480746081f  ;   {runtime_call}
  0x0000024807460824: nop
  0x0000024807460825: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746082f: jmp    0x000002480746082f  ;   {runtime_call}
  0x0000024807460834: nop
  0x0000024807460835: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746083f: jmp    0x000002480746083f  ;   {runtime_call}
  0x0000024807460844: nop
  0x0000024807460845: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746084f: jmp    0x000002480746084f  ;   {runtime_call}
  0x0000024807460854: nop
  0x0000024807460855: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746085f: jmp    0x000002480746085f  ;   {runtime_call}
  0x0000024807460864: nop
  0x0000024807460865: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746086f: jmp    0x000002480746086f  ;   {runtime_call}
  0x0000024807460874: nop
  0x0000024807460875: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746087f: jmp    0x000002480746087f  ;   {runtime_call}
  0x0000024807460884: nop
  0x0000024807460885: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746088f: jmp    0x000002480746088f  ;   {runtime_call}
  0x0000024807460894: nop
  0x0000024807460895: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746089f: jmp    0x000002480746089f  ;   {runtime_call}
  0x00000248074608a4: nop
  0x00000248074608a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074608af: jmp    0x00000248074608af  ;   {runtime_call}
  0x00000248074608b4: nop
  0x00000248074608b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074608bf: jmp    0x00000248074608bf  ;   {runtime_call}
  0x00000248074608c4: nop
  0x00000248074608c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074608cf: jmp    0x00000248074608cf  ;   {runtime_call}
[Exception Handler]
  0x00000248074608d4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074608d9: mov    %rsp,-0x28(%rsp)
  0x00000248074608de: sub    $0x80,%rsp
  0x00000248074608e5: mov    %rax,0x78(%rsp)
  0x00000248074608ea: mov    %rcx,0x70(%rsp)
  0x00000248074608ef: mov    %rdx,0x68(%rsp)
  0x00000248074608f4: mov    %rbx,0x60(%rsp)
  0x00000248074608f9: mov    %rbp,0x50(%rsp)
  0x00000248074608fe: mov    %rsi,0x48(%rsp)
  0x0000024807460903: mov    %rdi,0x40(%rsp)
  0x0000024807460908: mov    %r8,0x38(%rsp)
  0x000002480746090d: mov    %r9,0x30(%rsp)
  0x0000024807460912: mov    %r10,0x28(%rsp)
  0x0000024807460917: mov    %r11,0x20(%rsp)
  0x000002480746091c: mov    %r12,0x18(%rsp)
  0x0000024807460921: mov    %r13,0x10(%rsp)
  0x0000024807460926: mov    %r14,0x8(%rsp)
  0x000002480746092b: mov    %r15,(%rsp)
  0x000002480746092f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807460939: movabs $0x248074608d9,%rdx  ;   {internal_word}
  0x0000024807460943: mov    %rsp,%r8
  0x0000024807460946: and    $0xfffffffffffffff0,%rsp
  0x000002480746094a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807460954: call   *%r10
  0x0000024807460957: hlt    
[Deopt Handler Code]
  0x0000024807460958: movabs $0x24807460958,%r10  ;   {section_word}
  0x0000024807460962: push   %r10
  0x0000024807460964: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807460969: hlt    
  0x000002480746096a: hlt    
  0x000002480746096b: hlt    
  0x000002480746096c: hlt    
  0x000002480746096d: hlt    
  0x000002480746096e: hlt    
  0x000002480746096f: hlt    
<nmethod compile_id='88' compiler='C1' level='3' entry='0x000002480745e760' size='15224' address='0x000002480745e390' relocation_offset='288' insts_offset='976' stub_offset='9264' scopes_data_offset='9792' scopes_pcs_offset='12040' dependencies_offset='15080' nul_chk_table_offset='15096' oops_offset='9696' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='603' backedge_count='8610' iicount='603' stamp='1.316'/>
<writer thread='14928'/>
<task_queued compile_id='95' method='java/io/DataInputStream readShort ()S' bytes='40' count='640' iicount='640' level='3' stamp='1.316' comment='tiered' hot_count='640'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480745dad0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe866b8} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480745dc00: mov    0x14(%rdx),%ebx
  0x000002480745dc03: shl    $0x3,%rbx
  0x000002480745dc07: mov    0x28(%rbx),%ebx
  0x000002480745dc0a: shl    $0x3,%rbx
  0x000002480745dc0e: mov    0x18(%rbx),%rbx
  0x000002480745dc12: test   %rbx,%rbx
  0x000002480745dc15: je     0x000002480745dc1e
  0x000002480745dc1b: jmp    *0x40(%rbx)
  0x000002480745dc1e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480745dc23: hlt    
  0x000002480745dc24: hlt    
  0x000002480745dc25: hlt    
  0x000002480745dc26: hlt    
  0x000002480745dc27: hlt    
<nmethod compile_id='96' compile_kind='c2n' level='0' entry='0x000002480745dc00' size='344' address='0x000002480745dad0' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.318'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480745d1d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;
  # this:     rdx:rdx   = &apos;java/io/DataInputStream&apos;
  # parm0:    r8:r8     = &apos;[B&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x80]  (sp of caller)
  0x000002480745d380: mov    0x8(%rdx),%r10d
  0x000002480745d384: shl    $0x3,%r10
  0x000002480745d388: cmp    %rax,%r10
  0x000002480745d38b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480745d391: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480745d39c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480745d3a0: mov    %eax,-0x6000(%rsp)
  0x000002480745d3a7: push   %rbp
  0x000002480745d3a8: sub    $0x70,%rsp
  0x000002480745d3ac: mov    %rdx,0x38(%rsp)
  0x000002480745d3b1: mov    %r8,0x48(%rsp)
  0x000002480745d3b6: mov    %r9d,0x40(%rsp)
  0x000002480745d3bb: mov    %edi,0x34(%rsp)
  0x000002480745d3bf: movabs $0x2481fe84308,%rsi  ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d3c9: mov    0xdc(%rsi),%ebx
  0x000002480745d3cf: add    $0x8,%ebx
  0x000002480745d3d2: mov    %ebx,0xdc(%rsi)
  0x000002480745d3d8: movabs $0x2481fe7f6f0,%rsi  ;   {metadata({method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d3e2: and    $0x1ff8,%ebx
  0x000002480745d3e8: cmp    $0x0,%ebx
  0x000002480745d3eb: je     0x000002480745d666  ;*iload_3
                                                ; - java.io.DataInputStream::readFully@0 (line 191)

  0x000002480745d3f1: cmp    $0x0,%edi
  0x000002480745d3f4: movabs $0x2481fe84308,%rsi  ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d3fe: movabs $0x108,%rbx
  0x000002480745d408: jge    0x000002480745d418
  0x000002480745d40e: movabs $0x118,%rbx
  0x000002480745d418: mov    (%rsi,%rbx,1),%rax
  0x000002480745d41c: lea    0x1(%rax),%rax
  0x000002480745d420: mov    %rax,(%rsi,%rbx,1)
  0x000002480745d424: jl     0x000002480745d626  ;*ifge
                                                ; - java.io.DataInputStream::readFully@1 (line 191)

  0x000002480745d42a: mov    $0x0,%esi
  0x000002480745d42f: jmp    0x000002480745d59f  ;*iload
                                                ; - java.io.DataInputStream::readFully@15 (line 194)

  0x000002480745d434: nopl   0x0(%rax)
  0x000002480745d438: mov    0xc(%rdx),%ebx
  0x000002480745d43b: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.DataInputStream::readFully@22 (line 195)

  0x000002480745d43f: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x000002480745d67d
  0x000002480745d442: mov    %rbx,%rax
  0x000002480745d445: movabs $0x2481fe84308,%rcx  ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d44f: mov    0x8(%rax),%eax
  0x000002480745d452: shl    $0x3,%rax
  0x000002480745d456: cmp    0x160(%rcx),%rax
  0x000002480745d45d: jne    0x000002480745d46c
  0x000002480745d45f: addq   $0x1,0x168(%rcx)
  0x000002480745d467: jmp    0x000002480745d4d2
  0x000002480745d46c: cmp    0x170(%rcx),%rax
  0x000002480745d473: jne    0x000002480745d482
  0x000002480745d475: addq   $0x1,0x178(%rcx)
  0x000002480745d47d: jmp    0x000002480745d4d2
  0x000002480745d482: cmpq   $0x0,0x160(%rcx)
  0x000002480745d48d: jne    0x000002480745d4a6
  0x000002480745d48f: mov    %rax,0x160(%rcx)
  0x000002480745d496: movq   $0x1,0x168(%rcx)
  0x000002480745d4a1: jmp    0x000002480745d4d2
  0x000002480745d4a6: cmpq   $0x0,0x170(%rcx)
  0x000002480745d4b1: jne    0x000002480745d4ca
  0x000002480745d4b3: mov    %rax,0x170(%rcx)
  0x000002480745d4ba: movq   $0x1,0x178(%rcx)
  0x000002480745d4c5: jmp    0x000002480745d4d2
  0x000002480745d4ca: addq   $0x1,0x158(%rcx)
  0x000002480745d4d2: mov    %rsi,%rax
  0x000002480745d4d5: add    %r9d,%eax
  0x000002480745d4d8: mov    %rdi,%rcx
  0x000002480745d4db: sub    %esi,%ecx
  0x000002480745d4dd: mov    %r8,%r11
  0x000002480745d4e0: mov    %r11,%r8
  0x000002480745d4e3: mov    %rax,%r9
  0x000002480745d4e6: mov    %rcx,%rdi
  0x000002480745d4e9: mov    %rbx,%rdx          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)

  0x000002480745d4ec: mov    %esi,0x30(%rsp)
  0x000002480745d4f0: nop
  0x000002480745d4f1: nop
  0x000002480745d4f2: nop
  0x000002480745d4f3: nop
  0x000002480745d4f4: nop
  0x000002480745d4f5: movabs $0xffffffffffffffff,%rax
  0x000002480745d4ff: call   0x0000024807376120  ; OopMap{[56]=Oop [72]=Oop off=388}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {virtual_call}
  0x000002480745d504: cmp    $0x0,%eax
  0x000002480745d507: movabs $0x2481fe84308,%rdx  ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d511: movabs $0x188,%rsi
  0x000002480745d51b: jge    0x000002480745d52b
  0x000002480745d521: movabs $0x198,%rsi
  0x000002480745d52b: mov    (%rdx,%rsi,1),%rdi
  0x000002480745d52f: lea    0x1(%rdi),%rdi
  0x000002480745d533: mov    %rdi,(%rdx,%rsi,1)
  0x000002480745d537: jl     0x000002480745d5e3  ;*ifge
                                                ; - java.io.DataInputStream::readFully@41 (line 196)

  0x000002480745d53d: add    0x30(%rsp),%eax
  0x000002480745d541: movabs $0x2481fe84308,%rdx  ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d54b: mov    0xe0(%rdx),%esi
  0x000002480745d551: add    $0x8,%esi
  0x000002480745d554: mov    %esi,0xe0(%rdx)
  0x000002480745d55a: movabs $0x2481fe7f6f0,%rdx  ;   {metadata({method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d564: and    $0xfff8,%esi
  0x000002480745d56a: cmp    $0x0,%esi
  0x000002480745d56d: je     0x000002480745d682  ; OopMap{[56]=Oop [72]=Oop off=499}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x000002480745d573: test   %eax,-0x1ead479(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480745d579: movabs $0x2481fe84308,%rdx  ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d583: incl   0x1b8(%rdx)
  0x000002480745d589: mov    %rax,%rsi          ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x000002480745d58c: mov    0x34(%rsp),%edi
  0x000002480745d590: mov    0x40(%rsp),%r9d
  0x000002480745d595: mov    0x48(%rsp),%r8
  0x000002480745d59a: mov    0x38(%rsp),%rdx
  0x000002480745d59f: cmp    %edi,%esi
  0x000002480745d5a1: movabs $0x2481fe84308,%rbx  ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d5ab: movabs $0x138,%rax
  0x000002480745d5b5: jge    0x000002480745d5c5
  0x000002480745d5bb: movabs $0x148,%rax
  0x000002480745d5c5: mov    (%rbx,%rax,1),%rcx
  0x000002480745d5c9: lea    0x1(%rcx),%rcx
  0x000002480745d5cd: mov    %rcx,(%rbx,%rax,1)
  0x000002480745d5d1: jl     0x000002480745d438  ;*if_icmpge
                                                ; - java.io.DataInputStream::readFully@18 (line 194)

  0x000002480745d5d7: add    $0x70,%rsp
  0x000002480745d5db: pop    %rbp
  0x000002480745d5dc: test   %eax,-0x1ead4e2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480745d5e2: ret                       ;*return
                                                ; - java.io.DataInputStream::readFully@62 (line 200)

  0x000002480745d5e3: nopl   0x0(%rax,%rax,1)
  0x000002480745d5e8: jmp    0x000002480745d6a8  ;   {no_reloc}
  0x000002480745d5ed: add    %al,(%rax)
  0x000002480745d5ef: add    %al,(%rax)
  0x000002480745d5f1: add    %ch,%cl
  0x000002480745d5f3: mov    $0x48000000,%ebx   ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)

  0x000002480745d5f8: mov    %eax,%edx
  0x000002480745d5fa: movabs $0x2481fe84308,%rsi  ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d604: addq   $0x1,0x1a8(%rsi)
  0x000002480745d60c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)

  0x000002480745d60f: mov    %rax,0x50(%rsp)
  0x000002480745d614: nop
  0x000002480745d615: nop
  0x000002480745d616: nop
  0x000002480745d617: call   0x0000024807375ee0  ; OopMap{[80]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)
                                                ;   {optimized virtual_call}
  0x000002480745d61c: mov    0x50(%rsp),%rax
  0x000002480745d621: jmp    0x000002480745d710  ;*athrow
                                                ; - java.io.DataInputStream::readFully@51 (line 197)

  0x000002480745d626: xchg   %ax,%ax
  0x000002480745d628: jmp    0x000002480745d6ce  ;   {no_reloc}
  0x000002480745d62d: add    %al,(%rax)
  0x000002480745d62f: add    %al,(%rax)
  0x000002480745d631: add    %ch,%cl
  0x000002480745d633: movabs 0xbe48d08b48000000,%eax  ;*new
                                                ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {metadata(method data for {method} {0x000002481fe7f6f8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480745d63c: or     %al,-0x18(%rbx)
  0x000002480745d63f: (bad)  
  0x000002480745d640: rex.W add (%rax),%al
  0x000002480745d643: add    %cl,-0x7d(%rax)
  0x000002480745d646: xchg   %ch,(%rax)
  0x000002480745d648: add    %eax,(%rax)
  0x000002480745d64a: add    %al,(%rcx)
  0x000002480745d64c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)

  0x000002480745d64f: mov    %rax,0x58(%rsp)
  0x000002480745d654: nop
  0x000002480745d655: nop
  0x000002480745d656: nop
  0x000002480745d657: call   0x0000024807375ee0  ; OopMap{[88]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)
                                                ;   {optimized virtual_call}
  0x000002480745d65c: mov    0x58(%rsp),%rax
  0x000002480745d661: jmp    0x000002480745d710
  0x000002480745d666: mov    %rsi,0x8(%rsp)
  0x000002480745d66b: movq   $0xffffffffffffffff,(%rsp)
  0x000002480745d673: call   0x0000024807433da0  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop off=760}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readFully@-1 (line 191)
                                                ;   {runtime_call}
  0x000002480745d678: jmp    0x000002480745d3f1
  0x000002480745d67d: call   0x000002480742f100  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop rbx=Oop off=770}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {runtime_call}
  0x000002480745d682: mov    %rdx,0x8(%rsp)
  0x000002480745d687: movq   $0x3b,(%rsp)
  0x000002480745d68f: call   0x0000024807433da0  ; OopMap{[56]=Oop [72]=Oop off=788}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)
                                                ;   {runtime_call}
  0x000002480745d694: jmp    0x000002480745d573
  0x000002480745d699: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480745d6a3: mov    $0xa050f00,%eax
  0x000002480745d6a8: call   0x0000024807432b60  ; OopMap{off=813}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x000002480745d6ad: jmp    0x000002480745d5e8
  0x000002480745d6b2: mov    %rdx,%rdx
  0x000002480745d6b5: call   0x000002480742f5e0  ; OopMap{off=826}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x000002480745d6ba: jmp    0x000002480745d5f7
  0x000002480745d6bf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480745d6c9: mov    $0xa050f00,%eax
  0x000002480745d6ce: call   0x0000024807432b60  ; OopMap{off=851}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x000002480745d6d3: jmp    0x000002480745d628
  0x000002480745d6d8: mov    %rdx,%rdx
  0x000002480745d6db: call   0x000002480742f5e0  ; OopMap{off=864}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x000002480745d6e0: jmp    0x000002480745d637
  0x000002480745d6e5: nop
  0x000002480745d6e6: nop
  0x000002480745d6e7: mov    0x308(%r15),%rax
  0x000002480745d6ee: movabs $0x0,%r10
  0x000002480745d6f8: mov    %r10,0x308(%r15)
  0x000002480745d6ff: movabs $0x0,%r10
  0x000002480745d709: mov    %r10,0x310(%r15)
  0x000002480745d710: add    $0x70,%rsp
  0x000002480745d714: pop    %rbp
  0x000002480745d715: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480745d71a: hlt    
  0x000002480745d71b: hlt    
  0x000002480745d71c: hlt    
  0x000002480745d71d: hlt    
  0x000002480745d71e: hlt    
  0x000002480745d71f: hlt    
[Stub Code]
  0x000002480745d720: nop                       ;   {no_reloc}
  0x000002480745d721: nop
  0x000002480745d722: nop
  0x000002480745d723: nop
  0x000002480745d724: nop
  0x000002480745d725: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745d72f: jmp    0x000002480745d72f  ;   {runtime_call}
  0x000002480745d734: nop
  0x000002480745d735: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745d73f: jmp    0x000002480745d73f  ;   {runtime_call}
  0x000002480745d744: nop
  0x000002480745d745: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480745d74f: jmp    0x000002480745d74f  ;   {runtime_call}
[Exception Handler]
  0x000002480745d754: call   0x0000024807431320  ;   {runtime_call}
  0x000002480745d759: mov    %rsp,-0x28(%rsp)
  0x000002480745d75e: sub    $0x80,%rsp
  0x000002480745d765: mov    %rax,0x78(%rsp)
  0x000002480745d76a: mov    %rcx,0x70(%rsp)
  0x000002480745d76f: mov    %rdx,0x68(%rsp)
  0x000002480745d774: mov    %rbx,0x60(%rsp)
  0x000002480745d779: mov    %rbp,0x50(%rsp)
  0x000002480745d77e: mov    %rsi,0x48(%rsp)
  0x000002480745d783: mov    %rdi,0x40(%rsp)
  0x000002480745d788: mov    %r8,0x38(%rsp)
  0x000002480745d78d: mov    %r9,0x30(%rsp)
  0x000002480745d792: mov    %r10,0x28(%rsp)
  0x000002480745d797: mov    %r11,0x20(%rsp)
  0x000002480745d79c: mov    %r12,0x18(%rsp)
  0x000002480745d7a1: mov    %r13,0x10(%rsp)
  0x000002480745d7a6: mov    %r14,0x8(%rsp)
  0x000002480745d7ab: mov    %r15,(%rsp)
  0x000002480745d7af: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480745d7b9: movabs $0x2480745d759,%rdx  ;   {internal_word}
  0x000002480745d7c3: mov    %rsp,%r8
  0x000002480745d7c6: and    $0xfffffffffffffff0,%rsp
  0x000002480745d7ca: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480745d7d4: call   *%r10
  0x000002480745d7d7: hlt    
[Deopt Handler Code]
  0x000002480745d7d8: movabs $0x2480745d7d8,%r10  ;   {section_word}
  0x000002480745d7e2: push   %r10
  0x000002480745d7e4: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745d7e9: hlt    
  0x000002480745d7ea: hlt    
  0x000002480745d7eb: hlt    
  0x000002480745d7ec: hlt    
  0x000002480745d7ed: hlt    
  0x000002480745d7ee: hlt    
  0x000002480745d7ef: hlt    
<nmethod compile_id='92' compiler='C1' level='3' entry='0x000002480745d380' size='2240' address='0x000002480745d1d0' relocation_offset='288' insts_offset='432' stub_offset='1360' scopes_data_offset='1576' scopes_pcs_offset='1784' dependencies_offset='2216' nul_chk_table_offset='2224' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='981' backedge_count='981' iicount='981' stamp='1.332'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480745d050:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe867d0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480745d180: cmp    (%rdx),%rax
  0x000002480745d183: mov    0x18(%r9),%rbx
  0x000002480745d187: test   %rbx,%rbx
  0x000002480745d18a: je     0x000002480745d193
  0x000002480745d190: jmp    *0x40(%rbx)
  0x000002480745d193: jmp    0x0000024807334fe0  ;   {runtime_call}
<nmethod compile_id='97' compile_kind='c2n' level='0' entry='0x000002480745d180' size='328' address='0x000002480745d050' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.334'/>
<writer thread='14928'/>
<task_queued compile_id='98' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='5631' iicount='5631' stamp='1.334' comment='tiered' hot_count='5631'/>
<task_queued compile_id='99' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='640' iicount='640' level='3' stamp='1.335' comment='tiered' hot_count='640'/>
<task_queued compile_id='100' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='640' backedge_count='51' iicount='640' level='3' stamp='1.335' comment='tiered' hot_count='640'/>
<task_queued compile_id='101' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='640' iicount='640' level='3' stamp='1.335' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807464bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc563b0} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000024807464d60: mov    0x8(%rdx),%r10d
  0x0000024807464d64: shl    $0x3,%r10
  0x0000024807464d68: cmp    %rax,%r10
  0x0000024807464d6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807464d71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807464d7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807464d80: mov    %eax,-0x6000(%rsp)
  0x0000024807464d87: push   %rbp
  0x0000024807464d88: sub    $0x80,%rsp
  0x0000024807464d8f: mov    %rdx,0x50(%rsp)
  0x0000024807464d94: lea    0x60(%rsp),%rsi
  0x0000024807464d99: mov    %rdx,0x8(%rsi)
  0x0000024807464d9d: mov    (%rdx),%rax
  0x0000024807464da0: mov    %rax,%rdi
  0x0000024807464da3: and    $0x7,%rdi
  0x0000024807464da7: cmp    $0x5,%rdi
  0x0000024807464dab: jne    0x0000024807464e32
  0x0000024807464db1: mov    0x8(%rdx),%edi
  0x0000024807464db4: shl    $0x3,%rdi
  0x0000024807464db8: mov    0xa8(%rdi),%rdi
  0x0000024807464dbf: or     %r15,%rdi
  0x0000024807464dc2: xor    %rax,%rdi
  0x0000024807464dc5: and    $0xffffffffffffff87,%rdi
  0x0000024807464dc9: je     0x0000024807464e5a
  0x0000024807464dcf: test   $0x7,%rdi
  0x0000024807464dd6: jne    0x0000024807464e1f
  0x0000024807464dd8: test   $0x300,%rdi
  0x0000024807464ddf: jne    0x0000024807464dfe
  0x0000024807464de1: and    $0x37f,%rax
  0x0000024807464de8: mov    %rax,%rdi
  0x0000024807464deb: or     %r15,%rdi
  0x0000024807464dee: lock cmpxchg %rdi,(%rdx)
  0x0000024807464df3: jne    0x00000248074650e6
  0x0000024807464df9: jmp    0x0000024807464e5a
  0x0000024807464dfe: mov    0x8(%rdx),%edi
  0x0000024807464e01: shl    $0x3,%rdi
  0x0000024807464e05: mov    0xa8(%rdi),%rdi
  0x0000024807464e0c: or     %r15,%rdi
  0x0000024807464e0f: lock cmpxchg %rdi,(%rdx)
  0x0000024807464e14: jne    0x00000248074650e6
  0x0000024807464e1a: jmp    0x0000024807464e5a
  0x0000024807464e1f: mov    0x8(%rdx),%edi
  0x0000024807464e22: shl    $0x3,%rdi
  0x0000024807464e26: mov    0xa8(%rdi),%rdi
  0x0000024807464e2d: lock cmpxchg %rdi,(%rdx)
  0x0000024807464e32: mov    (%rdx),%rax
  0x0000024807464e35: or     $0x1,%rax
  0x0000024807464e39: mov    %rax,(%rsi)
  0x0000024807464e3c: lock cmpxchg %rsi,(%rdx)
  0x0000024807464e41: je     0x0000024807464e5a
  0x0000024807464e47: sub    %rsp,%rax
  0x0000024807464e4a: and    $0xfffffffffffff007,%rax
  0x0000024807464e51: mov    %rax,(%rsi)
  0x0000024807464e54: jne    0x00000248074650e6
  0x0000024807464e5a: movabs $0x2481fe835c0,%rsi  ;   {metadata(method data for {method} {0x000002481fc563b0} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464e64: mov    0xdc(%rsi),%edi
  0x0000024807464e6a: add    $0x8,%edi
  0x0000024807464e6d: mov    %edi,0xdc(%rsi)
  0x0000024807464e73: movabs $0x2481fc563a8,%rsi  ;   {metadata({method} {0x000002481fc563b0} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464e7d: and    $0x1ff8,%edi
  0x0000024807464e83: cmp    $0x0,%edi
  0x0000024807464e86: je     0x00000248074650f9  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 264)

  0x0000024807464e8c: mov    0x14(%rdx),%esi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@1 (line 264)

  0x0000024807464e8f: mov    0x10(%rdx),%edi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@5 (line 264)

  0x0000024807464e92: cmp    %edi,%esi
  0x0000024807464e94: movabs $0x2481fe835c0,%rsi  ;   {metadata(method data for {method} {0x000002481fc563b0} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464e9e: movabs $0x108,%rdi
  0x0000024807464ea8: jl     0x0000024807464eb8
  0x0000024807464eae: movabs $0x118,%rdi
  0x0000024807464eb8: mov    (%rsi,%rdi,1),%rbx
  0x0000024807464ebc: lea    0x1(%rbx),%rbx
  0x0000024807464ec0: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807464ec4: jl     0x0000024807464f2f  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@8 (line 264)

  0x0000024807464eca: mov    %rdx,%rsi
  0x0000024807464ecd: movabs $0x2481fe835c0,%rdi  ;   {metadata(method data for {method} {0x000002481fc563b0} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464ed7: addq   $0x1,0x128(%rdi)
  0x0000024807464edf: mov    %rdx,%rsi
  0x0000024807464ee2: mov    %rsi,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)

  0x0000024807464ee5: nop
  0x0000024807464ee6: nop
  0x0000024807464ee7: call   0x0000024807375ee0  ; OopMap{[80]=Oop [104]=Oop off=396}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x0000024807464eec: mov    0x50(%rsp),%rdx
  0x0000024807464ef1: mov    0x14(%rdx),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@16 (line 266)

  0x0000024807464ef4: mov    0x10(%rdx),%esi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@20 (line 266)

  0x0000024807464ef7: cmp    %esi,%eax
  0x0000024807464ef9: movabs $0x2481fe835c0,%rax  ;   {metadata(method data for {method} {0x000002481fc563b0} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464f03: movabs $0x138,%rsi
  0x0000024807464f0d: jl     0x0000024807464f1d
  0x0000024807464f13: movabs $0x148,%rsi
  0x0000024807464f1d: mov    (%rax,%rsi,1),%rdi
  0x0000024807464f21: lea    0x1(%rdi),%rdi
  0x0000024807464f25: mov    %rdi,(%rax,%rsi,1)
  0x0000024807464f29: jge    0x000002480746501c  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x0000024807464f2f: mov    %rdx,%rax
  0x0000024807464f32: movabs $0x2481fe835c0,%rsi  ;   {metadata(method data for {method} {0x000002481fc563b0} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464f3c: addq   $0x1,0x158(%rsi)
  0x0000024807464f44: movabs $0x2481fe809d8,%rax  ;   {metadata(method data for {method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464f4e: mov    0xdc(%rax),%esi
  0x0000024807464f54: add    $0x8,%esi
  0x0000024807464f57: mov    %esi,0xdc(%rax)
  0x0000024807464f5d: movabs $0x2481fc55ff8,%rax  ;   {metadata({method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464f67: and    $0x7ffff8,%esi
  0x0000024807464f6d: cmp    $0x0,%esi
  0x0000024807464f70: je     0x0000024807465110
  0x0000024807464f76: mov    0x20(%rdx),%eax
  0x0000024807464f79: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000024807464f7d: cmp    $0x0,%rax
  0x0000024807464f81: movabs $0x2481fe809d8,%rsi  ;   {metadata(method data for {method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000024807464f8b: movabs $0x108,%rdi
  0x0000024807464f95: jne    0x0000024807464fa5
  0x0000024807464f9b: movabs $0x118,%rdi
  0x0000024807464fa5: mov    (%rsi,%rdi,1),%rcx
  0x0000024807464fa9: lea    0x1(%rcx),%rcx
  0x0000024807464fad: mov    %rcx,(%rsi,%rdi,1)
  0x0000024807464fb1: je     0x0000024807465061  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000024807464fb7: mov    0x14(%rdx),%esi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x0000024807464fba: mov    %rsi,%rdi
  0x0000024807464fbd: inc    %edi
  0x0000024807464fbf: mov    %edi,0x14(%rdx)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x0000024807464fc2: movslq %esi,%rdx
  0x0000024807464fc5: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000024807465127
  0x0000024807464fc8: jae    0x0000024807465131
  0x0000024807464fce: movsbl 0x10(%rax,%rdx,1),%edx  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)

  0x0000024807464fd3: lea    0x60(%rsp),%rax
  0x0000024807464fd8: mov    0x8(%rax),%rdi
  0x0000024807464fdc: mov    (%rdi),%rsi
  0x0000024807464fdf: and    $0x7,%rsi
  0x0000024807464fe3: cmp    $0x5,%rsi
  0x0000024807464fe7: je     0x0000024807465004
  0x0000024807464fed: mov    (%rax),%rsi
  0x0000024807464ff0: test   %rsi,%rsi
  0x0000024807464ff3: je     0x0000024807465004
  0x0000024807464ff9: lock cmpxchg %rsi,(%rdi)
  0x0000024807464ffe: jne    0x000002480746513a
  0x0000024807465004: and    $0xff,%edx
  0x000002480746500a: mov    %rdx,%rax
  0x000002480746500d: add    $0x80,%rsp
  0x0000024807465014: pop    %rbp
  0x0000024807465015: test   %eax,-0x1eb4f1b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746501b: ret                       ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x000002480746501c: lea    0x60(%rsp),%rax
  0x0000024807465021: mov    0x8(%rax),%rsi
  0x0000024807465025: mov    (%rsi),%rdx
  0x0000024807465028: and    $0x7,%rdx
  0x000002480746502c: cmp    $0x5,%rdx
  0x0000024807465030: je     0x000002480746504d
  0x0000024807465036: mov    (%rax),%rdx
  0x0000024807465039: test   %rdx,%rdx
  0x000002480746503c: je     0x000002480746504d
  0x0000024807465042: lock cmpxchg %rdx,(%rsi)
  0x0000024807465047: jne    0x000002480746514d
  0x000002480746504d: mov    $0xffffffff,%eax
  0x0000024807465052: add    $0x80,%rsp
  0x0000024807465059: pop    %rbp
  0x000002480746505a: test   %eax,-0x1eb4f60(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807465060: ret                       ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x0000024807465061: nopl   0x0(%rax)
  0x0000024807465068: jmp    0x000002480746516f  ;   {no_reloc}
  0x000002480746506d: add    %al,(%rax)
  0x000002480746506f: add    %al,(%rax)
  0x0000024807465071: add    %cl,-0x75(%rcx)
  0x0000024807465074: rex.RXB (bad) 
  0x0000024807465076: lea    0x20(%rax),%rdi
  0x000002480746507a: cmp    0x70(%r15),%rdi
  0x000002480746507e: ja     0x0000024807465179
  0x0000024807465084: mov    %rdi,0x60(%r15)
  0x0000024807465088: mov    0xa8(%rdx),%rcx
  0x000002480746508f: mov    %rcx,(%rax)
  0x0000024807465092: mov    %rdx,%rcx
  0x0000024807465095: shr    $0x3,%rcx
  0x0000024807465099: mov    %ecx,0x8(%rax)
  0x000002480746509c: xor    %rcx,%rcx
  0x000002480746509f: mov    %ecx,0xc(%rax)
  0x00000248074650a2: xor    %rcx,%rcx
  0x00000248074650a5: mov    %rcx,0x10(%rax)
  0x00000248074650a9: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x00000248074650ad: mov    %rax,%r8
  0x00000248074650b0: movabs $0x2481fe809d8,%rdx  ;   {metadata(method data for {method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000248074650ba: addq   $0x1,0x128(%rdx)
  0x00000248074650c2: movabs $0x76bd5bd08,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x00000248074650cc: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x00000248074650cf: mov    %rax,0x58(%rsp)
  0x00000248074650d4: nop
  0x00000248074650d5: nop
  0x00000248074650d6: nop
  0x00000248074650d7: call   0x0000024807375ee0  ; OopMap{[80]=Oop [88]=Oop [104]=Oop off=892}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {optimized virtual_call}
  0x00000248074650dc: mov    0x58(%rsp),%rax
  0x00000248074650e1: jmp    0x00000248074651b1
  0x00000248074650e6: mov    %rdx,0x8(%rsp)
  0x00000248074650eb: mov    %rsi,(%rsp)
  0x00000248074650ef: call   0x0000024807431ea0  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=916}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x00000248074650f4: jmp    0x0000024807464e5a
  0x00000248074650f9: mov    %rsi,0x8(%rsp)
  0x00000248074650fe: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807465106: call   0x0000024807433da0  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=939}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000002480746510b: jmp    0x0000024807464e8c
  0x0000024807465110: mov    %rax,0x8(%rsp)
  0x0000024807465115: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746511d: call   0x0000024807433da0  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000024807465122: jmp    0x0000024807464f76
  0x0000024807465127: call   0x000002480742f100  ; OopMap{rax=Oop [104]=Oop off=972}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000002480746512c: call   0x000002480742f100  ; OopMap{rax=Oop [104]=Oop off=977}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x0000024807465131: mov    %rsi,(%rsp)
  0x0000024807465135: call   0x000002480742e800  ; OopMap{rax=Oop [104]=Oop off=986}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000002480746513a: lea    0x60(%rsp),%rax
  0x000002480746513f: mov    %rax,(%rsp)
  0x0000024807465143: call   0x00000248074322e0  ;   {runtime_call}
  0x0000024807465148: jmp    0x0000024807465004
  0x000002480746514d: lea    0x60(%rsp),%rax
  0x0000024807465152: mov    %rax,(%rsp)
  0x0000024807465156: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480746515b: jmp    0x000002480746504d
  0x0000024807465160: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480746516a: mov    $0xa050f00,%eax
  0x000002480746516f: call   0x0000024807432b60  ; OopMap{[80]=Oop [104]=Oop off=1044}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000024807465174: jmp    0x0000024807465068
  0x0000024807465179: mov    %rdx,%rdx
  0x000002480746517c: call   0x000002480742f900  ; OopMap{[80]=Oop [104]=Oop off=1057}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000024807465181: jmp    0x00000248074650ad
  0x0000024807465186: nop
  0x0000024807465187: nop
  0x0000024807465188: mov    0x308(%r15),%rax
  0x000002480746518f: movabs $0x0,%r10
  0x0000024807465199: mov    %r10,0x308(%r15)
  0x00000248074651a0: movabs $0x0,%r10
  0x00000248074651aa: mov    %r10,0x310(%r15)
  0x00000248074651b1: mov    %rax,%rbx
  0x00000248074651b4: lea    0x60(%rsp),%rax
  0x00000248074651b9: mov    0x8(%rax),%rsi
  0x00000248074651bd: mov    (%rsi),%rdi
  0x00000248074651c0: and    $0x7,%rdi
  0x00000248074651c4: cmp    $0x5,%rdi
  0x00000248074651c8: je     0x00000248074651e5
  0x00000248074651ce: mov    (%rax),%rdi
  0x00000248074651d1: test   %rdi,%rdi
  0x00000248074651d4: je     0x00000248074651e5
  0x00000248074651da: lock cmpxchg %rdi,(%rsi)
  0x00000248074651df: jne    0x00000248074651f5
  0x00000248074651e5: mov    %rbx,%rax
  0x00000248074651e8: add    $0x80,%rsp
  0x00000248074651ef: pop    %rbp
  0x00000248074651f0: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074651f5: lea    0x60(%rsp),%rax
  0x00000248074651fa: mov    %rax,(%rsp)
  0x00000248074651fe: call   0x00000248074322e0  ;   {runtime_call}
  0x0000024807465203: jmp    0x00000248074651e5
  0x0000024807465205: hlt    
  0x0000024807465206: hlt    
  0x0000024807465207: hlt    
  0x0000024807465208: hlt    
  0x0000024807465209: hlt    
  0x000002480746520a: hlt    
  0x000002480746520b: hlt    
  0x000002480746520c: hlt    
  0x000002480746520d: hlt    
  0x000002480746520e: hlt    
  0x000002480746520f: hlt    
  0x0000024807465210: hlt    
  0x0000024807465211: hlt    
  0x0000024807465212: hlt    
  0x0000024807465213: hlt    
  0x0000024807465214: hlt    
  0x0000024807465215: hlt    
  0x0000024807465216: hlt    
  0x0000024807465217: hlt    
  0x0000024807465218: hlt    
  0x0000024807465219: hlt    
  0x000002480746521a: hlt    
  0x000002480746521b: hlt    
  0x000002480746521c: hlt    
  0x000002480746521d: hlt    
  0x000002480746521e: hlt    
  0x000002480746521f: hlt    
[Stub Code]
  0x0000024807465220: nop                       ;   {no_reloc}
  0x0000024807465221: nop
  0x0000024807465222: nop
  0x0000024807465223: nop
  0x0000024807465224: nop
  0x0000024807465225: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746522f: jmp    0x000002480746522f  ;   {runtime_call}
  0x0000024807465234: nop
  0x0000024807465235: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746523f: jmp    0x000002480746523f  ;   {runtime_call}
[Exception Handler]
  0x0000024807465244: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807465249: mov    %rsp,-0x28(%rsp)
  0x000002480746524e: sub    $0x80,%rsp
  0x0000024807465255: mov    %rax,0x78(%rsp)
  0x000002480746525a: mov    %rcx,0x70(%rsp)
  0x000002480746525f: mov    %rdx,0x68(%rsp)
  0x0000024807465264: mov    %rbx,0x60(%rsp)
  0x0000024807465269: mov    %rbp,0x50(%rsp)
  0x000002480746526e: mov    %rsi,0x48(%rsp)
  0x0000024807465273: mov    %rdi,0x40(%rsp)
  0x0000024807465278: mov    %r8,0x38(%rsp)
  0x000002480746527d: mov    %r9,0x30(%rsp)
  0x0000024807465282: mov    %r10,0x28(%rsp)
  0x0000024807465287: mov    %r11,0x20(%rsp)
  0x000002480746528c: mov    %r12,0x18(%rsp)
  0x0000024807465291: mov    %r13,0x10(%rsp)
  0x0000024807465296: mov    %r14,0x8(%rsp)
  0x000002480746529b: mov    %r15,(%rsp)
  0x000002480746529f: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074652a9: movabs $0x24807465249,%rdx  ;   {internal_word}
  0x00000248074652b3: mov    %rsp,%r8
  0x00000248074652b6: and    $0xfffffffffffffff0,%rsp
  0x00000248074652ba: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074652c4: call   *%r10
  0x00000248074652c7: hlt    
[Deopt Handler Code]
  0x00000248074652c8: movabs $0x248074652c8,%r10  ;   {section_word}
  0x00000248074652d2: push   %r10
  0x00000248074652d4: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074652d9: hlt    
  0x00000248074652da: hlt    
  0x00000248074652db: hlt    
  0x00000248074652dc: hlt    
  0x00000248074652dd: hlt    
  0x00000248074652de: hlt    
  0x00000248074652df: hlt    
<nmethod compile_id='89' compiler='C1' level='3' entry='0x0000024807464d60' size='2520' address='0x0000024807464bd0' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1832' scopes_pcs_offset='2024' dependencies_offset='2488' nul_chk_table_offset='2496' method='java/io/BufferedInputStream read ()I' bytes='49' count='4533' iicount='4533' stamp='1.352'/>
<writer thread='13612'/>
Decoding compiled method 0x000002480745cdd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc56000} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x30]  (sp of caller)
  0x000002480745cf00: mov    0x8(%rdx),%r10d
  0x000002480745cf04: shl    $0x3,%r10
  0x000002480745cf08: cmp    %r10,%rax
  0x000002480745cf0b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480745cf11: data16 xchg %ax,%ax
  0x000002480745cf14: nopl   0x0(%rax,%rax,1)
  0x000002480745cf1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480745cf20: mov    %eax,-0x6000(%rsp)
  0x000002480745cf27: push   %rbp
  0x000002480745cf28: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)

  0x000002480745cf2c: mov    0x20(%rdx),%r10d   ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000002480745cf30: test   %r10d,%r10d
  0x000002480745cf33: je     0x000002480745cf45  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000002480745cf35: lea    (%r12,%r10,8),%rax  ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000002480745cf39: add    $0x20,%rsp
  0x000002480745cf3d: pop    %rbp
  0x000002480745cf3e: test   %eax,-0x1eacf44(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x000002480745cf44: ret    
  0x000002480745cf45: mov    $0xffffff65,%edx
  0x000002480745cf4a: mov    %r10d,(%rsp)
  0x000002480745cf4e: nop
  0x000002480745cf4f: call   0x00000248073754e0  ; OopMap{[0]=NarrowOop off=84}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x000002480745cf54: int3                      ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000002480745cf55: hlt    
  0x000002480745cf56: hlt    
  0x000002480745cf57: hlt    
  0x000002480745cf58: hlt    
  0x000002480745cf59: hlt    
  0x000002480745cf5a: hlt    
  0x000002480745cf5b: hlt    
  0x000002480745cf5c: hlt    
  0x000002480745cf5d: hlt    
  0x000002480745cf5e: hlt    
  0x000002480745cf5f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480745cf60: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x000002480745cf65: call   0x000002480745cf6a
  0x000002480745cf6a: subq   $0x5,(%rsp)
  0x000002480745cf6f: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480745cf74: hlt    
  0x000002480745cf75: hlt    
  0x000002480745cf76: hlt    
  0x000002480745cf77: hlt    
<nmethod compile_id='98' compiler='C2' level='4' entry='0x000002480745cf00' size='608' address='0x000002480745cdd0' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='472' dependencies_offset='600' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='6538' iicount='6538' stamp='1.354'/>
<make_not_entrant thread='13612' compile_id='86' compiler='C1' level='3' stamp='1.354'/>
<writer thread='14928'/>
<task_queued compile_id='102' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='1920' iicount='1920' level='3' stamp='1.354' comment='tiered' hot_count='1920'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480745cc50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe88798} &apos;linkToStatic&apos; &apos;(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480745cd80: mov    0x18(%rdx),%rbx
  0x000002480745cd84: test   %rbx,%rbx
  0x000002480745cd87: je     0x000002480745cd90
  0x000002480745cd8d: jmp    *0x40(%rbx)
  0x000002480745cd90: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480745cd95: hlt    
  0x000002480745cd96: hlt    
  0x000002480745cd97: hlt    
<nmethod compile_id='103' compile_kind='c2n' level='0' entry='0x000002480745cd80' size='328' address='0x000002480745cc50' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.356'/>
Decoding compiled method 0x000002480745cad0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe8fdc8} &apos;invokeBasic&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480745cc00: mov    0x14(%rdx),%ebx
  0x000002480745cc03: shl    $0x3,%rbx
  0x000002480745cc07: mov    0x28(%rbx),%ebx
  0x000002480745cc0a: shl    $0x3,%rbx
  0x000002480745cc0e: mov    0x18(%rbx),%rbx
  0x000002480745cc12: test   %rbx,%rbx
  0x000002480745cc15: je     0x000002480745cc1e
  0x000002480745cc1b: jmp    *0x40(%rbx)
  0x000002480745cc1e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480745cc23: hlt    
  0x000002480745cc24: hlt    
  0x000002480745cc25: hlt    
  0x000002480745cc26: hlt    
  0x000002480745cc27: hlt    
<nmethod compile_id='104' compile_kind='c2n' level='0' entry='0x000002480745cc00' size='344' address='0x000002480745cad0' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic ()Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.357'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807462c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x0000024807462e80: mov    0x8(%rdx),%r10d
  0x0000024807462e84: shl    $0x3,%r10
  0x0000024807462e88: cmp    %rax,%r10
  0x0000024807462e8b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807462e91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807462e9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807462ea0: mov    %eax,-0x6000(%rsp)
  0x0000024807462ea7: push   %rbp
  0x0000024807462ea8: sub    $0xa0,%rsp
  0x0000024807462eaf: mov    %rdx,0x48(%rsp)
  0x0000024807462eb4: mov    %r8d,0x40(%rsp)
  0x0000024807462eb9: mov    %r9,0x50(%rsp)
  0x0000024807462ebe: movabs $0x2481fd5f1b8,%rbx  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807462ec8: mov    0xdc(%rbx),%eax
  0x0000024807462ece: add    $0x8,%eax
  0x0000024807462ed1: mov    %eax,0xdc(%rbx)
  0x0000024807462ed7: movabs $0x2481fbeb6b0,%rbx  ;   {metadata({method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807462ee1: and    $0x1ff8,%eax
  0x0000024807462ee7: cmp    $0x0,%eax
  0x0000024807462eea: je     0x0000024807463f4d  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 629)

  0x0000024807462ef0: mov    0x24(%rdx),%ebx
  0x0000024807462ef3: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 629)

  0x0000024807462ef7: cmp    $0x0,%rbx
  0x0000024807462efb: movabs $0x2481fd5f1b8,%rax  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807462f05: movabs $0x108,%r11
  0x0000024807462f0f: je     0x0000024807462f1f
  0x0000024807462f15: movabs $0x118,%r11
  0x0000024807462f1f: mov    (%rax,%r11,1),%r13
  0x0000024807462f23: lea    0x1(%r13),%r13
  0x0000024807462f27: mov    %r13,(%rax,%r11,1)
  0x0000024807462f2b: je     0x0000024807462f7f  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 629)

  0x0000024807462f31: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 629)
                                                ; implicit exception: dispatches to 0x0000024807463f64
  0x0000024807462f34: cmp    $0x0,%eax
  0x0000024807462f37: movabs $0x2481fd5f1b8,%r11  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807462f41: movabs $0x128,%r13
  0x0000024807462f4b: jne    0x0000024807462f5b
  0x0000024807462f51: movabs $0x138,%r13
  0x0000024807462f5b: mov    (%r11,%r13,1),%r14
  0x0000024807462f5f: lea    0x1(%r14),%r14
  0x0000024807462f63: mov    %r14,(%r11,%r13,1)
  0x0000024807462f67: je     0x0000024807462f7f  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 629)

  0x0000024807462f6d: mov    %ecx,0x60(%rsp)
  0x0000024807462f71: mov    %esi,0x44(%rsp)
  0x0000024807462f75: mov    %rdi,0x58(%rsp)
  0x0000024807462f7a: jmp    0x0000024807463039  ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 631)

  0x0000024807462f7f: mov    %ecx,0x60(%rsp)
  0x0000024807462f83: mov    %esi,0x44(%rsp)
  0x0000024807462f87: mov    %rdi,0x58(%rsp)
  0x0000024807462f8c: mov    %rdx,%rbx
  0x0000024807462f8f: movabs $0x2481fd5f1b8,%rax  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807462f99: mov    0x8(%rbx),%ebx
  0x0000024807462f9c: shl    $0x3,%rbx
  0x0000024807462fa0: cmp    0x150(%rax),%rbx
  0x0000024807462fa7: jne    0x0000024807462fb6
  0x0000024807462fa9: addq   $0x1,0x158(%rax)
  0x0000024807462fb1: jmp    0x000002480746301c
  0x0000024807462fb6: cmp    0x160(%rax),%rbx
  0x0000024807462fbd: jne    0x0000024807462fcc
  0x0000024807462fbf: addq   $0x1,0x168(%rax)
  0x0000024807462fc7: jmp    0x000002480746301c
  0x0000024807462fcc: cmpq   $0x0,0x150(%rax)
  0x0000024807462fd7: jne    0x0000024807462ff0
  0x0000024807462fd9: mov    %rbx,0x150(%rax)
  0x0000024807462fe0: movq   $0x1,0x158(%rax)
  0x0000024807462feb: jmp    0x000002480746301c
  0x0000024807462ff0: cmpq   $0x0,0x160(%rax)
  0x0000024807462ffb: jne    0x0000024807463014
  0x0000024807462ffd: mov    %rbx,0x160(%rax)
  0x0000024807463004: movq   $0x1,0x168(%rax)
  0x000002480746300f: jmp    0x000002480746301c
  0x0000024807463014: addq   $0x1,0x148(%rax)
  0x000002480746301c: mov    %rdx,%rbx
  0x000002480746301f: mov    %rbx,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 630)

  0x0000024807463022: nop
  0x0000024807463023: nop
  0x0000024807463024: nop
  0x0000024807463025: nop
  0x0000024807463026: nop
  0x0000024807463027: call   0x0000024807375ee0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop off=428}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 630)
                                                ;   {optimized virtual_call}
  0x000002480746302c: mov    %rax,%r8           ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 630)

  0x000002480746302f: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 630)
                                                ; implicit exception: dispatches to 0x0000024807463f69
  0x0000024807463033: mov    %r9,%rax
  0x0000024807463036: mov    %r8,%rbx           ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 631)

  0x0000024807463039: dec    %eax
  0x000002480746303b: and    0x40(%rsp),%eax
  0x000002480746303f: movslq %eax,%r8
  0x0000024807463042: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x0000024807463f6e
  0x0000024807463045: jae    0x0000024807463f78
  0x000002480746304b: mov    0x10(%rbx,%r8,4),%esi
  0x0000024807463050: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 631)

  0x0000024807463054: cmp    $0x0,%rsi
  0x0000024807463058: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463062: movabs $0x178,%r9
  0x000002480746306c: jne    0x000002480746307c
  0x0000024807463072: movabs $0x188,%r9
  0x000002480746307c: mov    (%r8,%r9,1),%rdi
  0x0000024807463080: lea    0x1(%rdi),%rdi
  0x0000024807463084: mov    %rdi,(%r8,%r9,1)
  0x0000024807463088: jne    0x00000248074632a4  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 631)

  0x000002480746308e: mov    %eax,0x64(%rsp)
  0x0000024807463092: mov    %rbx,0x68(%rsp)
  0x0000024807463097: mov    0x48(%rsp),%rdx
  0x000002480746309c: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074630a6: mov    0x8(%rdx),%edx
  0x00000248074630a9: shl    $0x3,%rdx
  0x00000248074630ad: cmp    0x1a0(%r8),%rdx
  0x00000248074630b4: jne    0x00000248074630c3
  0x00000248074630b6: addq   $0x1,0x1a8(%r8)
  0x00000248074630be: jmp    0x0000024807463129
  0x00000248074630c3: cmp    0x1b0(%r8),%rdx
  0x00000248074630ca: jne    0x00000248074630d9
  0x00000248074630cc: addq   $0x1,0x1b8(%r8)
  0x00000248074630d4: jmp    0x0000024807463129
  0x00000248074630d9: cmpq   $0x0,0x1a0(%r8)
  0x00000248074630e4: jne    0x00000248074630fd
  0x00000248074630e6: mov    %rdx,0x1a0(%r8)
  0x00000248074630ed: movq   $0x1,0x1a8(%r8)
  0x00000248074630f8: jmp    0x0000024807463129
  0x00000248074630fd: cmpq   $0x0,0x1b0(%r8)
  0x0000024807463108: jne    0x0000024807463121
  0x000002480746310a: mov    %rdx,0x1b0(%r8)
  0x0000024807463111: movq   $0x1,0x1b8(%r8)
  0x000002480746311c: jmp    0x0000024807463129
  0x0000024807463121: addq   $0x1,0x198(%r8)
  0x0000024807463129: mov    0x40(%rsp),%r8d
  0x000002480746312e: mov    0x50(%rsp),%r9
  0x0000024807463133: mov    0x58(%rsp),%rdi
  0x0000024807463138: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000024807463142: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 632)

  0x0000024807463147: nop
  0x0000024807463148: nop
  0x0000024807463149: nop
  0x000002480746314a: nop
  0x000002480746314b: nop
  0x000002480746314c: nop
  0x000002480746314d: movabs $0xffffffffffffffff,%rax
  0x0000024807463157: call   0x0000024807376120  ; OopMap{[72]=Oop [104]=Oop off=732}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 632)
                                                ;   {virtual_call}
  0x000002480746315c: mov    0x64(%rsp),%r8d
  0x0000024807463161: movslq %r8d,%r8
  0x0000024807463164: mov    0x68(%rsp),%rbx
  0x0000024807463169: lea    0x10(%rbx,%r8,4),%r8
  0x000002480746316e: cmp    $0x0,%rax
  0x0000024807463172: jne    0x000002480746318d
  0x0000024807463174: movabs $0x2481fd5f1b8,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000002480746317e: orl    $0x100,0x1c0(%rsi)
  0x0000024807463188: jmp    0x0000024807463271
  0x000002480746318d: mov    0x8(%rbx),%edx     ; implicit exception: dispatches to 0x0000024807463f81
  0x0000024807463190: shl    $0x3,%rdx
  0x0000024807463194: mov    0x8(%rax),%esi
  0x0000024807463197: shl    $0x3,%rsi
  0x000002480746319b: mov    0xf0(%rdx),%rdx
  0x00000248074631a2: cmp    %rdx,%rsi
  0x00000248074631a5: je     0x00000248074631d3
  0x00000248074631ab: mov    0xc(%rdx),%edi
  0x00000248074631ae: cmp    (%rsi,%rdi,1),%rdx
  0x00000248074631b2: je     0x00000248074631d3
  0x00000248074631b8: cmp    $0x18,%edi
  0x00000248074631bb: jne    0x000002480746325a
  0x00000248074631c1: push   %rsi
  0x00000248074631c2: push   %rdx
  0x00000248074631c3: call   0x0000024807431b20  ;   {runtime_call}
  0x00000248074631c8: pop    %rsi
  0x00000248074631c9: pop    %rdx
  0x00000248074631ca: cmp    $0x0,%edx
  0x00000248074631cd: je     0x000002480746325a
  0x00000248074631d3: movabs $0x2481fd5f1b8,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074631dd: mov    0x8(%rax),%edx
  0x00000248074631e0: shl    $0x3,%rdx
  0x00000248074631e4: cmp    0x1d0(%rsi),%rdx
  0x00000248074631eb: jne    0x00000248074631fa
  0x00000248074631ed: addq   $0x1,0x1d8(%rsi)
  0x00000248074631f5: jmp    0x0000024807463271
  0x00000248074631fa: cmp    0x1e0(%rsi),%rdx
  0x0000024807463201: jne    0x0000024807463210
  0x0000024807463203: addq   $0x1,0x1e8(%rsi)
  0x000002480746320b: jmp    0x0000024807463271
  0x0000024807463210: cmpq   $0x0,0x1d0(%rsi)
  0x000002480746321b: jne    0x0000024807463234
  0x000002480746321d: mov    %rdx,0x1d0(%rsi)
  0x0000024807463224: movq   $0x1,0x1d8(%rsi)
  0x000002480746322f: jmp    0x0000024807463271
  0x0000024807463234: cmpq   $0x0,0x1e0(%rsi)
  0x000002480746323f: jne    0x0000024807463258
  0x0000024807463241: mov    %rdx,0x1e0(%rsi)
  0x0000024807463248: movq   $0x1,0x1e8(%rsi)
  0x0000024807463253: jmp    0x0000024807463271
  0x0000024807463258: jmp    0x0000024807463271
  0x000002480746325a: movabs $0x2481fd5f1b8,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463264: subq   $0x1,0x1c8(%rsi)
  0x000002480746326c: jmp    0x0000024807463f86
  0x0000024807463271: mov    %rax,%r10
  0x0000024807463274: shr    $0x3,%r10
  0x0000024807463278: mov    %r10d,(%r8)
  0x000002480746327b: shr    $0x9,%r8
  0x000002480746327f: movabs $0x248130de000,%rdx
  0x0000024807463289: movb   $0x0,(%r8,%rdx,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 632)

  0x000002480746328e: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463298: incl   0x1f8(%r8)
  0x000002480746329f: jmp    0x0000024807463c18  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 632)

  0x00000248074632a4: mov    0xc(%rsi),%r8d     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 635)
                                                ; implicit exception: dispatches to 0x0000024807463f8f
  0x00000248074632a8: cmp    0x40(%rsp),%r8d
  0x00000248074632ad: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074632b7: movabs $0x210,%rdx
  0x00000248074632c1: jne    0x00000248074632d1
  0x00000248074632c7: movabs $0x220,%rdx
  0x00000248074632d1: mov    (%r8,%rdx,1),%rdi
  0x00000248074632d5: lea    0x1(%rdi),%rdi
  0x00000248074632d9: mov    %rdi,(%r8,%rdx,1)
  0x00000248074632dd: je     0x00000248074632ed  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 635)

  0x00000248074632e3: mov    %rbx,0x68(%rsp)
  0x00000248074632e8: jmp    0x000002480746346a  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 638)

  0x00000248074632ed: mov    0x50(%rsp),%r9
  0x00000248074632f2: mov    0x10(%rsi),%r8d
  0x00000248074632f6: shl    $0x3,%r8           ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 635)

  0x00000248074632fa: cmp    %r9,%r8
  0x00000248074632fd: movabs $0x2481fd5f1b8,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463307: movabs $0x230,%rdi
  0x0000024807463311: je     0x0000024807463321
  0x0000024807463317: movabs $0x240,%rdi
  0x0000024807463321: mov    (%rdx,%rdi,1),%rax
  0x0000024807463325: lea    0x1(%rax),%rax
  0x0000024807463329: mov    %rax,(%rdx,%rdi,1)
  0x000002480746332d: je     0x0000024807463bca  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 635)

  0x0000024807463333: cmp    $0x0,%r9
  0x0000024807463337: movabs $0x2481fd5f1b8,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463341: movabs $0x250,%rdi
  0x000002480746334b: je     0x000002480746335b
  0x0000024807463351: movabs $0x260,%rdi
  0x000002480746335b: mov    (%rdx,%rdi,1),%rax
  0x000002480746335f: lea    0x1(%rax),%rax
  0x0000024807463363: mov    %rax,(%rdx,%rdi,1)
  0x0000024807463367: jne    0x0000024807463377  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 635)

  0x000002480746336d: mov    %rbx,0x68(%rsp)
  0x0000024807463372: jmp    0x000002480746346a  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 638)

  0x0000024807463377: mov    %rsi,0x70(%rsp)
  0x000002480746337c: mov    %rbx,0x68(%rsp)
  0x0000024807463381: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000024807463f94
  0x0000024807463384: mov    %r9,%rdx
  0x0000024807463387: movabs $0x2481fd5f1b8,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463391: mov    0x8(%rdx),%edx
  0x0000024807463394: shl    $0x3,%rdx
  0x0000024807463398: cmp    0x278(%rdi),%rdx
  0x000002480746339f: jne    0x00000248074633ae
  0x00000248074633a1: addq   $0x1,0x280(%rdi)
  0x00000248074633a9: jmp    0x0000024807463414
  0x00000248074633ae: cmp    0x288(%rdi),%rdx
  0x00000248074633b5: jne    0x00000248074633c4
  0x00000248074633b7: addq   $0x1,0x290(%rdi)
  0x00000248074633bf: jmp    0x0000024807463414
  0x00000248074633c4: cmpq   $0x0,0x278(%rdi)
  0x00000248074633cf: jne    0x00000248074633e8
  0x00000248074633d1: mov    %rdx,0x278(%rdi)
  0x00000248074633d8: movq   $0x1,0x280(%rdi)
  0x00000248074633e3: jmp    0x0000024807463414
  0x00000248074633e8: cmpq   $0x0,0x288(%rdi)
  0x00000248074633f3: jne    0x000002480746340c
  0x00000248074633f5: mov    %rdx,0x288(%rdi)
  0x00000248074633fc: movq   $0x1,0x290(%rdi)
  0x0000024807463407: jmp    0x0000024807463414
  0x000002480746340c: addq   $0x1,0x270(%rdi)
  0x0000024807463414: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 636)

  0x0000024807463417: nop
  0x0000024807463418: nop
  0x0000024807463419: nop
  0x000002480746341a: nop
  0x000002480746341b: nop
  0x000002480746341c: nop
  0x000002480746341d: movabs $0xffffffffffffffff,%rax
  0x0000024807463427: call   0x0000024807376120  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop off=1452}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 636)
                                                ;   {virtual_call}
  0x000002480746342c: cmp    $0x0,%eax
  0x000002480746342f: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463439: movabs $0x2a0,%r9
  0x0000024807463443: je     0x0000024807463453
  0x0000024807463449: movabs $0x2b0,%r9
  0x0000024807463453: mov    (%r8,%r9,1),%rdi
  0x0000024807463457: lea    0x1(%rdi),%rdi
  0x000002480746345b: mov    %rdi,(%r8,%r9,1)
  0x000002480746345f: mov    0x70(%rsp),%rsi
  0x0000024807463464: jne    0x0000024807463bca  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 636)

  0x000002480746346a: cmp    $0x0,%rsi
  0x000002480746346e: jne    0x0000024807463489
  0x0000024807463470: movabs $0x2481fd5f1b8,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000002480746347a: orl    $0x100,0x2d0(%rdi)
  0x0000024807463484: jmp    0x000002480746354a
  0x0000024807463489: movabs $0x7c0038bc0,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000024807463493: mov    0x8(%rsi),%r9d
  0x0000024807463497: shl    $0x3,%r9
  0x000002480746349b: cmp    %r9,%rcx
  0x000002480746349e: jne    0x000002480746352e
  0x00000248074634a4: movabs $0x2481fd5f1b8,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074634ae: mov    0x8(%rsi),%ecx
  0x00000248074634b1: shl    $0x3,%rcx
  0x00000248074634b5: cmp    0x2e0(%rdi),%rcx
  0x00000248074634bc: jne    0x00000248074634cb
  0x00000248074634be: addq   $0x1,0x2e8(%rdi)
  0x00000248074634c6: jmp    0x000002480746354f
  0x00000248074634cb: cmp    0x2f0(%rdi),%rcx
  0x00000248074634d2: jne    0x00000248074634e1
  0x00000248074634d4: addq   $0x1,0x2f8(%rdi)
  0x00000248074634dc: jmp    0x000002480746354f
  0x00000248074634e1: cmpq   $0x0,0x2e0(%rdi)
  0x00000248074634ec: jne    0x0000024807463505
  0x00000248074634ee: mov    %rcx,0x2e0(%rdi)
  0x00000248074634f5: movq   $0x1,0x2e8(%rdi)
  0x0000024807463500: jmp    0x000002480746354f
  0x0000024807463505: cmpq   $0x0,0x2f0(%rdi)
  0x0000024807463510: jne    0x0000024807463529
  0x0000024807463512: mov    %rcx,0x2f0(%rdi)
  0x0000024807463519: movq   $0x1,0x2f8(%rdi)
  0x0000024807463524: jmp    0x000002480746354f
  0x0000024807463529: jmp    0x000002480746354f
  0x000002480746352e: movabs $0x2481fd5f1b8,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463538: subq   $0x1,0x2d8(%rdi)
  0x0000024807463540: jmp    0x000002480746354a
  0x0000024807463545: jmp    0x000002480746354f
  0x000002480746354a: xor    %r8,%r8
  0x000002480746354d: jmp    0x0000024807463559
  0x000002480746354f: movabs $0x1,%r8           ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 638)

  0x0000024807463559: cmp    $0x0,%r8d
  0x000002480746355d: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463567: movabs $0x308,%r9
  0x0000024807463571: je     0x0000024807463581
  0x0000024807463577: movabs $0x318,%r9
  0x0000024807463581: mov    (%r8,%r9,1),%rdi
  0x0000024807463585: lea    0x1(%rdi),%rdi
  0x0000024807463589: mov    %rdi,(%r8,%r9,1)
  0x000002480746358d: je     0x0000024807463742  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 638)

  0x0000024807463593: cmp    $0x0,%rsi
  0x0000024807463597: jne    0x00000248074635b3
  0x0000024807463599: movabs $0x2481fd5f1b8,%r9  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074635a3: orl    $0x100,0x320(%r9)
  0x00000248074635ae: jmp    0x0000024807463674
  0x00000248074635b3: movabs $0x7c0038bc0,%rdi  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000248074635bd: mov    0x8(%rsi),%r8d
  0x00000248074635c1: shl    $0x3,%r8
  0x00000248074635c5: cmp    %r8,%rdi
  0x00000248074635c8: jne    0x0000024807463658
  0x00000248074635ce: movabs $0x2481fd5f1b8,%r9  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074635d8: mov    0x8(%rsi),%edi
  0x00000248074635db: shl    $0x3,%rdi
  0x00000248074635df: cmp    0x330(%r9),%rdi
  0x00000248074635e6: jne    0x00000248074635f5
  0x00000248074635e8: addq   $0x1,0x338(%r9)
  0x00000248074635f0: jmp    0x0000024807463674
  0x00000248074635f5: cmp    0x340(%r9),%rdi
  0x00000248074635fc: jne    0x000002480746360b
  0x00000248074635fe: addq   $0x1,0x348(%r9)
  0x0000024807463606: jmp    0x0000024807463674
  0x000002480746360b: cmpq   $0x0,0x330(%r9)
  0x0000024807463616: jne    0x000002480746362f
  0x0000024807463618: mov    %rdi,0x330(%r9)
  0x000002480746361f: movq   $0x1,0x338(%r9)
  0x000002480746362a: jmp    0x0000024807463674
  0x000002480746362f: cmpq   $0x0,0x340(%r9)
  0x000002480746363a: jne    0x0000024807463653
  0x000002480746363c: mov    %rdi,0x340(%r9)
  0x0000024807463643: movq   $0x1,0x348(%r9)
  0x000002480746364e: jmp    0x0000024807463674
  0x0000024807463653: jmp    0x0000024807463674
  0x0000024807463658: movabs $0x2481fd5f1b8,%r9  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463662: subq   $0x1,0x328(%r9)
  0x000002480746366a: jmp    0x0000024807463f99
  0x000002480746366f: jmp    0x0000024807463674
  0x0000024807463674: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 639)

  0x0000024807463677: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000024807463fa2
  0x000002480746367a: mov    %rdx,%r8
  0x000002480746367d: movabs $0x2481fd5f1b8,%r9  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463687: mov    0x8(%r8),%r8d
  0x000002480746368b: shl    $0x3,%r8
  0x000002480746368f: cmp    0x360(%r9),%r8
  0x0000024807463696: jne    0x00000248074636a5
  0x0000024807463698: addq   $0x1,0x368(%r9)
  0x00000248074636a0: jmp    0x000002480746370b
  0x00000248074636a5: cmp    0x370(%r9),%r8
  0x00000248074636ac: jne    0x00000248074636bb
  0x00000248074636ae: addq   $0x1,0x378(%r9)
  0x00000248074636b6: jmp    0x000002480746370b
  0x00000248074636bb: cmpq   $0x0,0x360(%r9)
  0x00000248074636c6: jne    0x00000248074636df
  0x00000248074636c8: mov    %r8,0x360(%r9)
  0x00000248074636cf: movq   $0x1,0x368(%r9)
  0x00000248074636da: jmp    0x000002480746370b
  0x00000248074636df: cmpq   $0x0,0x370(%r9)
  0x00000248074636ea: jne    0x0000024807463703
  0x00000248074636ec: mov    %r8,0x370(%r9)
  0x00000248074636f3: movq   $0x1,0x378(%r9)
  0x00000248074636fe: jmp    0x000002480746370b
  0x0000024807463703: addq   $0x1,0x358(%r9)
  0x000002480746370b: mov    0x48(%rsp),%r8
  0x0000024807463710: mov    0x68(%rsp),%r9
  0x0000024807463715: mov    0x40(%rsp),%edi
  0x0000024807463719: mov    0x50(%rsp),%rsi
  0x000002480746371e: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 639)

  0x0000024807463723: nop
  0x0000024807463724: nop
  0x0000024807463725: nop
  0x0000024807463726: nop
  0x0000024807463727: call   0x0000024807375ee0  ; OopMap{[72]=Oop [88]=Oop off=2220}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 639)
                                                ;   {optimized virtual_call}
  0x000002480746372c: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463736: incl   0x388(%r8)
  0x000002480746373d: jmp    0x0000024807463bde  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 639)

  0x0000024807463742: mov    $0x0,%edi          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 642)

  0x0000024807463747: nop
  0x0000024807463748: mov    %edi,0x78(%rsp)
  0x000002480746374c: mov    0x50(%rsp),%r9
  0x0000024807463751: mov    0x40(%rsp),%r8d
  0x0000024807463756: mov    0x18(%rsi),%ebx    ; implicit exception: dispatches to 0x0000024807463fa7
  0x0000024807463759: shl    $0x3,%rbx          ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 642)

  0x000002480746375d: mov    %rbx,0x80(%rsp)
  0x0000024807463765: cmp    $0x0,%rbx
  0x0000024807463769: movabs $0x2481fd5f1b8,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463773: movabs $0x3a0,%rax
  0x000002480746377d: jne    0x000002480746378d
  0x0000024807463783: movabs $0x3b0,%rax
  0x000002480746378d: mov    (%rdx,%rax,1),%rcx
  0x0000024807463791: lea    0x1(%rcx),%rcx
  0x0000024807463795: mov    %rcx,(%rdx,%rax,1)
  0x0000024807463799: je     0x00000248074639c9  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 642)

  0x000002480746379f: mov    0xc(%rbx),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 648)
                                                ; implicit exception: dispatches to 0x0000024807463fac
  0x00000248074637a2: cmp    %r8d,%edx
  0x00000248074637a5: movabs $0x2481fd5f1b8,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074637af: movabs $0x458,%rsi
  0x00000248074637b9: jne    0x00000248074637c9
  0x00000248074637bf: movabs $0x468,%rsi
  0x00000248074637c9: mov    (%rdx,%rsi,1),%rax
  0x00000248074637cd: lea    0x1(%rax),%rax
  0x00000248074637d1: mov    %rax,(%rdx,%rsi,1)
  0x00000248074637d5: jne    0x000002480746393d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 648)

  0x00000248074637db: mov    0x10(%rbx),%edx
  0x00000248074637de: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 648)

  0x00000248074637e2: cmp    %r9,%rdx
  0x00000248074637e5: movabs $0x2481fd5f1b8,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074637ef: movabs $0x478,%rax
  0x00000248074637f9: je     0x0000024807463809
  0x00000248074637ff: movabs $0x488,%rax
  0x0000024807463809: mov    (%rsi,%rax,1),%rcx
  0x000002480746380d: lea    0x1(%rcx),%rcx
  0x0000024807463811: mov    %rcx,(%rsi,%rax,1)
  0x0000024807463815: je     0x000002480746399e  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 648)

  0x000002480746381b: cmp    $0x0,%r9
  0x000002480746381f: movabs $0x2481fd5f1b8,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463829: movabs $0x498,%rax
  0x0000024807463833: je     0x0000024807463843
  0x0000024807463839: movabs $0x4a8,%rax
  0x0000024807463843: mov    (%rsi,%rax,1),%rcx
  0x0000024807463847: lea    0x1(%rcx),%rcx
  0x000002480746384b: mov    %rcx,(%rsi,%rax,1)
  0x000002480746384f: je     0x000002480746393d  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 648)

  0x0000024807463855: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000024807463fb1
  0x0000024807463858: mov    %r9,%rsi
  0x000002480746385b: movabs $0x2481fd5f1b8,%rax  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463865: mov    0x8(%rsi),%esi
  0x0000024807463868: shl    $0x3,%rsi
  0x000002480746386c: cmp    0x4c0(%rax),%rsi
  0x0000024807463873: jne    0x0000024807463882
  0x0000024807463875: addq   $0x1,0x4c8(%rax)
  0x000002480746387d: jmp    0x00000248074638e8
  0x0000024807463882: cmp    0x4d0(%rax),%rsi
  0x0000024807463889: jne    0x0000024807463898
  0x000002480746388b: addq   $0x1,0x4d8(%rax)
  0x0000024807463893: jmp    0x00000248074638e8
  0x0000024807463898: cmpq   $0x0,0x4c0(%rax)
  0x00000248074638a3: jne    0x00000248074638bc
  0x00000248074638a5: mov    %rsi,0x4c0(%rax)
  0x00000248074638ac: movq   $0x1,0x4c8(%rax)
  0x00000248074638b7: jmp    0x00000248074638e8
  0x00000248074638bc: cmpq   $0x0,0x4d0(%rax)
  0x00000248074638c7: jne    0x00000248074638e0
  0x00000248074638c9: mov    %rsi,0x4d0(%rax)
  0x00000248074638d0: movq   $0x1,0x4d8(%rax)
  0x00000248074638db: jmp    0x00000248074638e8
  0x00000248074638e0: addq   $0x1,0x4b8(%rax)
  0x00000248074638e8: mov    %rdx,%r8
  0x00000248074638eb: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 649)

  0x00000248074638ee: nop
  0x00000248074638ef: nop
  0x00000248074638f0: nop
  0x00000248074638f1: nop
  0x00000248074638f2: nop
  0x00000248074638f3: nop
  0x00000248074638f4: nop
  0x00000248074638f5: movabs $0xffffffffffffffff,%rax
  0x00000248074638ff: call   0x0000024807376120  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2692}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 649)
                                                ;   {virtual_call}
  0x0000024807463904: cmp    $0x0,%eax
  0x0000024807463907: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463911: movabs $0x4e8,%r9
  0x000002480746391b: je     0x000002480746392b
  0x0000024807463921: movabs $0x4f8,%r9
  0x000002480746392b: mov    (%r8,%r9,1),%rdi
  0x000002480746392f: lea    0x1(%rdi),%rdi
  0x0000024807463933: mov    %rdi,(%r8,%r9,1)
  0x0000024807463937: jne    0x00000248074639ab  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 649)

  0x000002480746393d: mov    0x78(%rsp),%edi
  0x0000024807463941: inc    %edi
  0x0000024807463943: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000002480746394d: mov    0xe0(%r8),%r9d
  0x0000024807463954: add    $0x8,%r9d
  0x0000024807463958: mov    %r9d,0xe0(%r8)
  0x000002480746395f: movabs $0x2481fbeb6b0,%r8  ;   {metadata({method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463969: and    $0xfff8,%r9d
  0x0000024807463970: cmp    $0x0,%r9d
  0x0000024807463974: je     0x0000024807463fb6  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2810}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 641)

  0x000002480746397a: test   %eax,-0x1eb3880(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807463980: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000002480746398a: incl   0x520(%r8)
  0x0000024807463991: mov    0x80(%rsp),%rsi
  0x0000024807463999: jmp    0x0000024807463748  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 641)

  0x000002480746399e: mov    0x80(%rsp),%rax
  0x00000248074639a6: jmp    0x0000024807463bde  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 654)

  0x00000248074639ab: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074639b5: incl   0x508(%r8)
  0x00000248074639bc: mov    0x80(%rsp),%rax
  0x00000248074639c4: jmp    0x0000024807463bde  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 650)

  0x00000248074639c9: mov    %rsi,0x88(%rsp)
  0x00000248074639d1: mov    0x48(%rsp),%rdx
  0x00000248074639d6: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074639e0: mov    0x8(%rdx),%edx
  0x00000248074639e3: shl    $0x3,%rdx
  0x00000248074639e7: cmp    0x3c8(%r8),%rdx
  0x00000248074639ee: jne    0x00000248074639fd
  0x00000248074639f0: addq   $0x1,0x3d0(%r8)
  0x00000248074639f8: jmp    0x0000024807463a63
  0x00000248074639fd: cmp    0x3d8(%r8),%rdx
  0x0000024807463a04: jne    0x0000024807463a13
  0x0000024807463a06: addq   $0x1,0x3e0(%r8)
  0x0000024807463a0e: jmp    0x0000024807463a63
  0x0000024807463a13: cmpq   $0x0,0x3c8(%r8)
  0x0000024807463a1e: jne    0x0000024807463a37
  0x0000024807463a20: mov    %rdx,0x3c8(%r8)
  0x0000024807463a27: movq   $0x1,0x3d0(%r8)
  0x0000024807463a32: jmp    0x0000024807463a63
  0x0000024807463a37: cmpq   $0x0,0x3d8(%r8)
  0x0000024807463a42: jne    0x0000024807463a5b
  0x0000024807463a44: mov    %rdx,0x3d8(%r8)
  0x0000024807463a4b: movq   $0x1,0x3e0(%r8)
  0x0000024807463a56: jmp    0x0000024807463a63
  0x0000024807463a5b: addq   $0x1,0x3c0(%r8)
  0x0000024807463a63: mov    0x40(%rsp),%r8d
  0x0000024807463a68: mov    0x58(%rsp),%rdi
  0x0000024807463a6d: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000024807463a77: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 643)

  0x0000024807463a7c: nop
  0x0000024807463a7d: movabs $0xffffffffffffffff,%rax
  0x0000024807463a87: call   0x0000024807376120  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=3084}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 643)
                                                ;   {virtual_call}
  0x0000024807463a8c: mov    0x88(%rsp),%rsi
  0x0000024807463a94: mov    %rax,%r10
  0x0000024807463a97: shr    $0x3,%r10
  0x0000024807463a9b: mov    %r10d,0x18(%rsi)
  0x0000024807463a9f: shr    $0x9,%rsi
  0x0000024807463aa3: movabs $0x248130de000,%r8
  0x0000024807463aad: movb   $0x0,(%rsi,%r8,1)  ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 643)

  0x0000024807463ab2: mov    0x78(%rsp),%edi
  0x0000024807463ab6: cmp    $0x7,%edi
  0x0000024807463ab9: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463ac3: movabs $0x3f0,%r9
  0x0000024807463acd: jl     0x0000024807463add
  0x0000024807463ad3: movabs $0x400,%r9
  0x0000024807463add: mov    (%r8,%r9,1),%rdx
  0x0000024807463ae1: lea    0x1(%rdx),%rdx
  0x0000024807463ae5: mov    %rdx,(%r8,%r9,1)
  0x0000024807463ae9: jge    0x0000024807463afc  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 644)

  0x0000024807463aef: mov    0x80(%rsp),%rax
  0x0000024807463af7: jmp    0x0000024807463bde  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 654)

  0x0000024807463afc: mov    0x68(%rsp),%rbx
  0x0000024807463b01: mov    0x40(%rsp),%r9d
  0x0000024807463b06: mov    0x48(%rsp),%rdx
  0x0000024807463b0b: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463b15: mov    0x8(%rdx),%edx
  0x0000024807463b18: shl    $0x3,%rdx
  0x0000024807463b1c: cmp    0x418(%r8),%rdx
  0x0000024807463b23: jne    0x0000024807463b32
  0x0000024807463b25: addq   $0x1,0x420(%r8)
  0x0000024807463b2d: jmp    0x0000024807463b98
  0x0000024807463b32: cmp    0x428(%r8),%rdx
  0x0000024807463b39: jne    0x0000024807463b48
  0x0000024807463b3b: addq   $0x1,0x430(%r8)
  0x0000024807463b43: jmp    0x0000024807463b98
  0x0000024807463b48: cmpq   $0x0,0x418(%r8)
  0x0000024807463b53: jne    0x0000024807463b6c
  0x0000024807463b55: mov    %rdx,0x418(%r8)
  0x0000024807463b5c: movq   $0x1,0x420(%r8)
  0x0000024807463b67: jmp    0x0000024807463b98
  0x0000024807463b6c: cmpq   $0x0,0x428(%r8)
  0x0000024807463b77: jne    0x0000024807463b90
  0x0000024807463b79: mov    %rdx,0x428(%r8)
  0x0000024807463b80: movq   $0x1,0x430(%r8)
  0x0000024807463b8b: jmp    0x0000024807463b98
  0x0000024807463b90: addq   $0x1,0x410(%r8)
  0x0000024807463b98: mov    %rbx,%r8
  0x0000024807463b9b: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 645)

  0x0000024807463ba0: nop
  0x0000024807463ba1: nop
  0x0000024807463ba2: nop
  0x0000024807463ba3: nop
  0x0000024807463ba4: nop
  0x0000024807463ba5: nop
  0x0000024807463ba6: nop
  0x0000024807463ba7: call   0x0000024807375ee0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=3372}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 645)
                                                ;   {optimized virtual_call}
  0x0000024807463bac: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463bb6: incl   0x440(%r8)
  0x0000024807463bbd: mov    0x80(%rsp),%rax
  0x0000024807463bc5: jmp    0x0000024807463bde  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 645)

  0x0000024807463bca: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463bd4: incl   0x2c0(%r8)
  0x0000024807463bdb: mov    %rsi,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 637)

  0x0000024807463bde: cmp    $0x0,%rax
  0x0000024807463be2: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463bec: movabs $0x538,%rdx
  0x0000024807463bf6: je     0x0000024807463c06
  0x0000024807463bfc: movabs $0x548,%rdx
  0x0000024807463c06: mov    (%r8,%rdx,1),%rsi
  0x0000024807463c0a: lea    0x1(%rsi),%rsi
  0x0000024807463c0e: mov    %rsi,(%r8,%rdx,1)
  0x0000024807463c12: jne    0x0000024807463c78  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 654)

  0x0000024807463c18: mov    0x48(%rsp),%rdx
  0x0000024807463c1d: mov    0x18(%rdx),%r8d    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 662)

  0x0000024807463c21: inc    %r8d
  0x0000024807463c24: mov    %r8d,0x18(%rdx)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 662)

  0x0000024807463c28: mov    0x14(%rdx),%r8d    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 663)

  0x0000024807463c2c: inc    %r8d
  0x0000024807463c2f: mov    %r8d,0x14(%rdx)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 663)

  0x0000024807463c33: mov    0x1c(%rdx),%esi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 663)

  0x0000024807463c36: cmp    %esi,%r8d
  0x0000024807463c39: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463c43: movabs $0x5c8,%rsi
  0x0000024807463c4d: jle    0x0000024807463c5d
  0x0000024807463c53: movabs $0x5d8,%rsi
  0x0000024807463c5d: mov    (%r8,%rsi,1),%rdi
  0x0000024807463c61: lea    0x1(%rdi),%rdi
  0x0000024807463c65: mov    %rdi,(%r8,%rsi,1)
  0x0000024807463c69: jg     0x0000024807463de3  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 663)

  0x0000024807463c6f: mov    0x60(%rsp),%ecx
  0x0000024807463c73: jmp    0x0000024807463e8d  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 665)

  0x0000024807463c78: mov    0x44(%rsp),%esi
  0x0000024807463c7c: mov    0x48(%rsp),%rdx
  0x0000024807463c81: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x0000024807463fcd
  0x0000024807463c84: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 655)

  0x0000024807463c88: cmp    $0x0,%esi
  0x0000024807463c8b: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463c95: movabs $0x558,%rsi
  0x0000024807463c9f: je     0x0000024807463caf
  0x0000024807463ca5: movabs $0x568,%rsi
  0x0000024807463caf: mov    (%r8,%rsi,1),%rbx
  0x0000024807463cb3: lea    0x1(%rbx),%rbx
  0x0000024807463cb7: mov    %rbx,(%r8,%rsi,1)
  0x0000024807463cbb: je     0x0000024807463cfb  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 656)

  0x0000024807463cc1: cmp    $0x0,%rdi
  0x0000024807463cc5: movabs $0x2481fd5f1b8,%r8  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463ccf: movabs $0x578,%rsi
  0x0000024807463cd9: jne    0x0000024807463ce9
  0x0000024807463cdf: movabs $0x588,%rsi
  0x0000024807463ce9: mov    (%r8,%rsi,1),%rbx
  0x0000024807463ced: lea    0x1(%rbx),%rbx
  0x0000024807463cf1: mov    %rbx,(%r8,%rsi,1)
  0x0000024807463cf5: jne    0x0000024807463d21  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 656)

  0x0000024807463cfb: mov    0x58(%rsp),%r8
  0x0000024807463d00: mov    %r8,%r10
  0x0000024807463d03: shr    $0x3,%r10
  0x0000024807463d07: mov    %r10d,0x14(%rax)
  0x0000024807463d0b: mov    %rax,%r8
  0x0000024807463d0e: shr    $0x9,%r8
  0x0000024807463d12: movabs $0x248130de000,%rsi
  0x0000024807463d1c: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 657)

  0x0000024807463d21: mov    %rdi,0x90(%rsp)
  0x0000024807463d29: mov    %rdx,%r8
  0x0000024807463d2c: movabs $0x2481fd5f1b8,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463d36: mov    0x8(%r8),%r8d
  0x0000024807463d3a: shl    $0x3,%r8
  0x0000024807463d3e: cmp    0x5a0(%rsi),%r8
  0x0000024807463d45: jne    0x0000024807463d54
  0x0000024807463d47: addq   $0x1,0x5a8(%rsi)
  0x0000024807463d4f: jmp    0x0000024807463dba
  0x0000024807463d54: cmp    0x5b0(%rsi),%r8
  0x0000024807463d5b: jne    0x0000024807463d6a
  0x0000024807463d5d: addq   $0x1,0x5b8(%rsi)
  0x0000024807463d65: jmp    0x0000024807463dba
  0x0000024807463d6a: cmpq   $0x0,0x5a0(%rsi)
  0x0000024807463d75: jne    0x0000024807463d8e
  0x0000024807463d77: mov    %r8,0x5a0(%rsi)
  0x0000024807463d7e: movq   $0x1,0x5a8(%rsi)
  0x0000024807463d89: jmp    0x0000024807463dba
  0x0000024807463d8e: cmpq   $0x0,0x5b0(%rsi)
  0x0000024807463d99: jne    0x0000024807463db2
  0x0000024807463d9b: mov    %r8,0x5b0(%rsi)
  0x0000024807463da2: movq   $0x1,0x5b8(%rsi)
  0x0000024807463dad: jmp    0x0000024807463dba
  0x0000024807463db2: addq   $0x1,0x598(%rsi)
  0x0000024807463dba: mov    %rax,%r8           ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 658)

  0x0000024807463dbd: movabs $0xffffffffffffffff,%rax
  0x0000024807463dc7: call   0x0000024807376120  ; OopMap{[144]=Oop off=3916}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 658)
                                                ;   {virtual_call}
  0x0000024807463dcc: mov    0x90(%rsp),%rax
  0x0000024807463dd4: add    $0xa0,%rsp
  0x0000024807463ddb: pop    %rbp
  0x0000024807463ddc: test   %eax,-0x1eb3ce2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807463de2: ret                       ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 659)

  0x0000024807463de3: mov    %rdx,%rsi
  0x0000024807463de6: movabs $0x2481fd5f1b8,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463df0: mov    0x8(%rsi),%esi
  0x0000024807463df3: shl    $0x3,%rsi
  0x0000024807463df7: cmp    0x5f0(%rdi),%rsi
  0x0000024807463dfe: jne    0x0000024807463e0d
  0x0000024807463e00: addq   $0x1,0x5f8(%rdi)
  0x0000024807463e08: jmp    0x0000024807463e73
  0x0000024807463e0d: cmp    0x600(%rdi),%rsi
  0x0000024807463e14: jne    0x0000024807463e23
  0x0000024807463e16: addq   $0x1,0x608(%rdi)
  0x0000024807463e1e: jmp    0x0000024807463e73
  0x0000024807463e23: cmpq   $0x0,0x5f0(%rdi)
  0x0000024807463e2e: jne    0x0000024807463e47
  0x0000024807463e30: mov    %rsi,0x5f0(%rdi)
  0x0000024807463e37: movq   $0x1,0x5f8(%rdi)
  0x0000024807463e42: jmp    0x0000024807463e73
  0x0000024807463e47: cmpq   $0x0,0x600(%rdi)
  0x0000024807463e52: jne    0x0000024807463e6b
  0x0000024807463e54: mov    %rsi,0x600(%rdi)
  0x0000024807463e5b: movq   $0x1,0x608(%rdi)
  0x0000024807463e66: jmp    0x0000024807463e73
  0x0000024807463e6b: addq   $0x1,0x5e8(%rdi)
  0x0000024807463e73: mov    %rdx,%rsi
  0x0000024807463e76: mov    %rsi,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 664)

  0x0000024807463e79: nop
  0x0000024807463e7a: nop
  0x0000024807463e7b: nop
  0x0000024807463e7c: nop
  0x0000024807463e7d: nop
  0x0000024807463e7e: nop
  0x0000024807463e7f: call   0x0000024807375ee0  ; OopMap{[72]=Oop off=4100}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 664)
                                                ;   {optimized virtual_call}
  0x0000024807463e84: mov    0x60(%rsp),%ecx
  0x0000024807463e88: mov    0x48(%rsp),%rdx
  0x0000024807463e8d: mov    %rdx,%r8
  0x0000024807463e90: movabs $0x2481fd5f1b8,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb6b8} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807463e9a: mov    0x8(%r8),%r8d
  0x0000024807463e9e: shl    $0x3,%r8
  0x0000024807463ea2: cmp    0x620(%rsi),%r8
  0x0000024807463ea9: jne    0x0000024807463eb8
  0x0000024807463eab: addq   $0x1,0x628(%rsi)
  0x0000024807463eb3: jmp    0x0000024807463f1e
  0x0000024807463eb8: cmp    0x630(%rsi),%r8
  0x0000024807463ebf: jne    0x0000024807463ece
  0x0000024807463ec1: addq   $0x1,0x638(%rsi)
  0x0000024807463ec9: jmp    0x0000024807463f1e
  0x0000024807463ece: cmpq   $0x0,0x620(%rsi)
  0x0000024807463ed9: jne    0x0000024807463ef2
  0x0000024807463edb: mov    %r8,0x620(%rsi)
  0x0000024807463ee2: movq   $0x1,0x628(%rsi)
  0x0000024807463eed: jmp    0x0000024807463f1e
  0x0000024807463ef2: cmpq   $0x0,0x630(%rsi)
  0x0000024807463efd: jne    0x0000024807463f16
  0x0000024807463eff: mov    %r8,0x630(%rsi)
  0x0000024807463f06: movq   $0x1,0x638(%rsi)
  0x0000024807463f11: jmp    0x0000024807463f1e
  0x0000024807463f16: addq   $0x1,0x618(%rsi)
  0x0000024807463f1e: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 665)

  0x0000024807463f21: nop
  0x0000024807463f22: nop
  0x0000024807463f23: nop
  0x0000024807463f24: nop
  0x0000024807463f25: movabs $0xffffffffffffffff,%rax
  0x0000024807463f2f: call   0x0000024807376120  ; OopMap{off=4276}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 665)
                                                ;   {virtual_call}
  0x0000024807463f34: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000024807463f3e: add    $0xa0,%rsp
  0x0000024807463f45: pop    %rbp
  0x0000024807463f46: test   %eax,-0x1eb3e4c(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807463f4c: ret    
  0x0000024807463f4d: mov    %rbx,0x8(%rsp)
  0x0000024807463f52: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807463f5a: call   0x0000024807433da0  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop off=4319}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 629)
                                                ;   {runtime_call}
  0x0000024807463f5f: jmp    0x0000024807462ef0
  0x0000024807463f64: call   0x000002480742f100  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop off=4329}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 629)
                                                ;   {runtime_call}
  0x0000024807463f69: call   0x000002480742f100  ; OopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop off=4334}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 630)
                                                ;   {runtime_call}
  0x0000024807463f6e: call   0x000002480742f100  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4339}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 631)
                                                ;   {runtime_call}
  0x0000024807463f73: call   0x000002480742f100  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4344}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 631)
                                                ;   {runtime_call}
  0x0000024807463f78: mov    %rax,(%rsp)
  0x0000024807463f7c: call   0x000002480742e800  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4353}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 631)
                                                ;   {runtime_call}
  0x0000024807463f81: call   0x000002480742f100  ; OopMap{[72]=Oop rax=Oop off=4358}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 632)
                                                ;   {runtime_call}
  0x0000024807463f86: mov    %rax,(%rsp)
  0x0000024807463f8a: call   0x0000024807431480  ; OopMap{[72]=Oop rax=Oop off=4367}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 632)
                                                ;   {runtime_call}
  0x0000024807463f8f: call   0x000002480742f100  ; OopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop off=4372}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 635)
                                                ;   {runtime_call}
  0x0000024807463f94: call   0x000002480742f100  ; OopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop off=4377}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 636)
                                                ;   {runtime_call}
  0x0000024807463f99: mov    %rsi,(%rsp)
  0x0000024807463f9d: call   0x00000248074316c0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop off=4386}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 639)
                                                ;   {runtime_call}
  0x0000024807463fa2: call   0x000002480742f100  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop off=4391}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 639)
                                                ;   {runtime_call}
  0x0000024807463fa7: call   0x000002480742f100  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop off=4396}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 642)
                                                ;   {runtime_call}
  0x0000024807463fac: call   0x000002480742f100  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop off=4401}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 648)
                                                ;   {runtime_call}
  0x0000024807463fb1: call   0x000002480742f100  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop off=4406}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 649)
                                                ;   {runtime_call}
  0x0000024807463fb6: mov    %r8,0x8(%rsp)
  0x0000024807463fbb: movq   $0xdb,(%rsp)
  0x0000024807463fc3: call   0x0000024807433da0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=4424}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 641)
                                                ;   {runtime_call}
  0x0000024807463fc8: jmp    0x000002480746397a
  0x0000024807463fcd: call   0x000002480742f100  ; OopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop off=4434}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 655)
                                                ;   {runtime_call}
  0x0000024807463fd2: nop
  0x0000024807463fd3: nop
  0x0000024807463fd4: mov    0x308(%r15),%rax
  0x0000024807463fdb: movabs $0x0,%r10
  0x0000024807463fe5: mov    %r10,0x308(%r15)
  0x0000024807463fec: movabs $0x0,%r10
  0x0000024807463ff6: mov    %r10,0x310(%r15)
  0x0000024807463ffd: add    $0xa0,%rsp
  0x0000024807464004: pop    %rbp
  0x0000024807464005: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480746400a: hlt    
  0x000002480746400b: hlt    
  0x000002480746400c: hlt    
  0x000002480746400d: hlt    
  0x000002480746400e: hlt    
  0x000002480746400f: hlt    
  0x0000024807464010: hlt    
  0x0000024807464011: hlt    
  0x0000024807464012: hlt    
  0x0000024807464013: hlt    
  0x0000024807464014: hlt    
  0x0000024807464015: hlt    
  0x0000024807464016: hlt    
  0x0000024807464017: hlt    
  0x0000024807464018: hlt    
  0x0000024807464019: hlt    
  0x000002480746401a: hlt    
  0x000002480746401b: hlt    
  0x000002480746401c: hlt    
  0x000002480746401d: hlt    
  0x000002480746401e: hlt    
  0x000002480746401f: hlt    
[Stub Code]
  0x0000024807464020: nop                       ;   {no_reloc}
  0x0000024807464021: nop
  0x0000024807464022: nop
  0x0000024807464023: nop
  0x0000024807464024: nop
  0x0000024807464025: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746402f: jmp    0x000002480746402f  ;   {runtime_call}
  0x0000024807464034: nop
  0x0000024807464035: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746403f: jmp    0x000002480746403f  ;   {runtime_call}
  0x0000024807464044: nop
  0x0000024807464045: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746404f: jmp    0x000002480746404f  ;   {runtime_call}
  0x0000024807464054: nop
  0x0000024807464055: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746405f: jmp    0x000002480746405f  ;   {runtime_call}
  0x0000024807464064: nop
  0x0000024807464065: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746406f: jmp    0x000002480746406f  ;   {runtime_call}
  0x0000024807464074: nop
  0x0000024807464075: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746407f: jmp    0x000002480746407f  ;   {runtime_call}
  0x0000024807464084: nop
  0x0000024807464085: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746408f: jmp    0x000002480746408f  ;   {runtime_call}
  0x0000024807464094: nop
  0x0000024807464095: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746409f: jmp    0x000002480746409f  ;   {runtime_call}
  0x00000248074640a4: nop
  0x00000248074640a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074640af: jmp    0x00000248074640af  ;   {runtime_call}
  0x00000248074640b4: nop
  0x00000248074640b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074640bf: jmp    0x00000248074640bf  ;   {runtime_call}
[Exception Handler]
  0x00000248074640c4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074640c9: mov    %rsp,-0x28(%rsp)
  0x00000248074640ce: sub    $0x80,%rsp
  0x00000248074640d5: mov    %rax,0x78(%rsp)
  0x00000248074640da: mov    %rcx,0x70(%rsp)
  0x00000248074640df: mov    %rdx,0x68(%rsp)
  0x00000248074640e4: mov    %rbx,0x60(%rsp)
  0x00000248074640e9: mov    %rbp,0x50(%rsp)
  0x00000248074640ee: mov    %rsi,0x48(%rsp)
  0x00000248074640f3: mov    %rdi,0x40(%rsp)
  0x00000248074640f8: mov    %r8,0x38(%rsp)
  0x00000248074640fd: mov    %r9,0x30(%rsp)
  0x0000024807464102: mov    %r10,0x28(%rsp)
  0x0000024807464107: mov    %r11,0x20(%rsp)
  0x000002480746410c: mov    %r12,0x18(%rsp)
  0x0000024807464111: mov    %r13,0x10(%rsp)
  0x0000024807464116: mov    %r14,0x8(%rsp)
  0x000002480746411b: mov    %r15,(%rsp)
  0x000002480746411f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807464129: movabs $0x248074640c9,%rdx  ;   {internal_word}
  0x0000024807464133: mov    %rsp,%r8
  0x0000024807464136: and    $0xfffffffffffffff0,%rsp
  0x000002480746413a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807464144: call   *%r10
  0x0000024807464147: hlt    
[Deopt Handler Code]
  0x0000024807464148: movabs $0x24807464148,%r10  ;   {section_word}
  0x0000024807464152: push   %r10
  0x0000024807464154: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807464159: hlt    
  0x000002480746415a: hlt    
  0x000002480746415b: hlt    
  0x000002480746415c: hlt    
  0x000002480746415d: hlt    
  0x000002480746415e: hlt    
  0x000002480746415f: hlt    
<nmethod compile_id='100' compiler='C1' level='3' entry='0x0000024807462e80' size='8104' address='0x0000024807462c10' relocation_offset='288' insts_offset='624' stub_offset='5136' scopes_data_offset='5464' scopes_pcs_offset='6472' dependencies_offset='7992' nul_chk_table_offset='8000' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='869' backedge_count='83' iicount='869' stamp='1.409'/>
<writer thread='27436'/>
<task_queued compile_id='105' method='java/lang/invoke/MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='128' iicount='128' level='1' stamp='1.409' comment='tiered' hot_count='128'/>
Decoding compiled method 0x000002480745c950:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe922f0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480745ca80: cmp    (%rdx),%rax
  0x000002480745ca83: mov    0x18(%r8),%rbx
  0x000002480745ca87: test   %rbx,%rbx
  0x000002480745ca8a: je     0x000002480745ca93
  0x000002480745ca90: jmp    *0x40(%rbx)
  0x000002480745ca93: jmp    0x0000024807334fe0  ;   {runtime_call}
<nmethod compile_id='106' compile_kind='c2n' level='0' entry='0x000002480745ca80' size='328' address='0x000002480745c950' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.410'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807462490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe7fa88} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000024807462620: mov    0x8(%rdx),%r10d
  0x0000024807462624: shl    $0x3,%r10
  0x0000024807462628: cmp    %rax,%r10
  0x000002480746262b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807462631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480746263c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807462640: mov    %eax,-0x6000(%rsp)
  0x0000024807462647: push   %rbp
  0x0000024807462648: sub    $0x40,%rsp
  0x000002480746264c: movabs $0x2481fe86388,%rsi  ;   {metadata(method data for {method} {0x000002481fe7fa88} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000024807462656: mov    0xdc(%rsi),%edi
  0x000002480746265c: add    $0x8,%edi
  0x000002480746265f: mov    %edi,0xdc(%rsi)
  0x0000024807462665: movabs $0x2481fe7fa80,%rsi  ;   {metadata({method} {0x000002481fe7fa88} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000002480746266f: and    $0x1ff8,%edi
  0x0000024807462675: cmp    $0x0,%edi
  0x0000024807462678: je     0x000002480746288e  ;*aload_0
                                                ; - java.io.DataInputStream::readShort@0 (line 312)

  0x000002480746267e: mov    0xc(%rdx),%esi
  0x0000024807462681: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@1 (line 312)

  0x0000024807462685: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000248074628a5
  0x0000024807462688: mov    %rsi,%rdi
  0x000002480746268b: movabs $0x2481fe86388,%rbx  ;   {metadata(method data for {method} {0x000002481fe7fa88} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000024807462695: mov    0x8(%rdi),%edi
  0x0000024807462698: shl    $0x3,%rdi
  0x000002480746269c: cmp    0x110(%rbx),%rdi
  0x00000248074626a3: jne    0x00000248074626b2
  0x00000248074626a5: addq   $0x1,0x118(%rbx)
  0x00000248074626ad: jmp    0x0000024807462718
  0x00000248074626b2: cmp    0x120(%rbx),%rdi
  0x00000248074626b9: jne    0x00000248074626c8
  0x00000248074626bb: addq   $0x1,0x128(%rbx)
  0x00000248074626c3: jmp    0x0000024807462718
  0x00000248074626c8: cmpq   $0x0,0x110(%rbx)
  0x00000248074626d3: jne    0x00000248074626ec
  0x00000248074626d5: mov    %rdi,0x110(%rbx)
  0x00000248074626dc: movq   $0x1,0x118(%rbx)
  0x00000248074626e7: jmp    0x0000024807462718
  0x00000248074626ec: cmpq   $0x0,0x120(%rbx)
  0x00000248074626f7: jne    0x0000024807462710
  0x00000248074626f9: mov    %rdi,0x120(%rbx)
  0x0000024807462700: movq   $0x1,0x128(%rbx)
  0x000002480746270b: jmp    0x0000024807462718
  0x0000024807462710: addq   $0x1,0x108(%rbx)
  0x0000024807462718: mov    %rdx,0x20(%rsp)
  0x000002480746271d: mov    %rsi,%rdx          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)

  0x0000024807462720: nop
  0x0000024807462721: nop
  0x0000024807462722: nop
  0x0000024807462723: nop
  0x0000024807462724: nop
  0x0000024807462725: movabs $0xffffffffffffffff,%rax
  0x000002480746272f: call   0x0000024807376120  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {virtual_call}
  0x0000024807462734: mov    0x20(%rsp),%rdx
  0x0000024807462739: mov    0xc(%rdx),%edx
  0x000002480746273c: shl    $0x3,%rdx          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@9 (line 313)

  0x0000024807462740: cmp    (%rdx),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ; implicit exception: dispatches to 0x00000248074628aa
  0x0000024807462743: mov    %rdx,%rsi
  0x0000024807462746: movabs $0x2481fe86388,%rdi  ;   {metadata(method data for {method} {0x000002481fe7fa88} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000024807462750: mov    0x8(%rsi),%esi
  0x0000024807462753: shl    $0x3,%rsi
  0x0000024807462757: cmp    0x140(%rdi),%rsi
  0x000002480746275e: jne    0x000002480746276d
  0x0000024807462760: addq   $0x1,0x148(%rdi)
  0x0000024807462768: jmp    0x00000248074627d3
  0x000002480746276d: cmp    0x150(%rdi),%rsi
  0x0000024807462774: jne    0x0000024807462783
  0x0000024807462776: addq   $0x1,0x158(%rdi)
  0x000002480746277e: jmp    0x00000248074627d3
  0x0000024807462783: cmpq   $0x0,0x140(%rdi)
  0x000002480746278e: jne    0x00000248074627a7
  0x0000024807462790: mov    %rsi,0x140(%rdi)
  0x0000024807462797: movq   $0x1,0x148(%rdi)
  0x00000248074627a2: jmp    0x00000248074627d3
  0x00000248074627a7: cmpq   $0x0,0x150(%rdi)
  0x00000248074627b2: jne    0x00000248074627cb
  0x00000248074627b4: mov    %rsi,0x150(%rdi)
  0x00000248074627bb: movq   $0x1,0x158(%rdi)
  0x00000248074627c6: jmp    0x00000248074627d3
  0x00000248074627cb: addq   $0x1,0x138(%rdi)
  0x00000248074627d3: mov    %eax,0x28(%rsp)
  0x00000248074627d7: nop
  0x00000248074627d8: nop
  0x00000248074627d9: nop
  0x00000248074627da: nop
  0x00000248074627db: nop
  0x00000248074627dc: nop
  0x00000248074627dd: movabs $0xffffffffffffffff,%rax
  0x00000248074627e7: call   0x0000024807376120  ; OopMap{off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {virtual_call}
  0x00000248074627ec: mov    0x28(%rsp),%edx
  0x00000248074627f0: or     %rax,%rdx
  0x00000248074627f3: cmp    $0x0,%edx
  0x00000248074627f6: movabs $0x2481fe86388,%rdx  ;   {metadata(method data for {method} {0x000002481fe7fa88} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000024807462800: movabs $0x168,%rsi
  0x000002480746280a: jge    0x000002480746281a
  0x0000024807462810: movabs $0x178,%rsi
  0x000002480746281a: mov    (%rdx,%rsi,1),%rdi
  0x000002480746281e: lea    0x1(%rdi),%rdi
  0x0000024807462822: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807462826: jl     0x000002480746284d  ;*ifge
                                                ; - java.io.DataInputStream::readShort@19 (line 314)

  0x000002480746282c: mov    0x28(%rsp),%edx
  0x0000024807462830: shl    $0x8,%edx
  0x0000024807462833: add    %eax,%edx
  0x0000024807462835: movswl %dx,%edx
  0x0000024807462838: shl    $0x10,%edx
  0x000002480746283b: sar    $0x10,%edx
  0x000002480746283e: mov    %rdx,%rax
  0x0000024807462841: add    $0x40,%rsp
  0x0000024807462845: pop    %rbp
  0x0000024807462846: test   %eax,-0x1eb274c(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746284c: ret                       ;*ireturn
                                                ; - java.io.DataInputStream::readShort@39 (line 316)

  0x000002480746284d: data16 xchg %ax,%ax
  0x0000024807462850: jmp    0x00000248074628be  ;   {no_reloc}
  0x0000024807462855: add    %al,(%rax)
  0x0000024807462857: add    %al,(%rax)
  0x0000024807462859: add    %ch,%cl
  0x000002480746285b: imul   $0x8b480000,(%rax),%eax  ;*new
                                                ; - java.io.DataInputStream::readShort@22 (line 315)

  0x0000024807462861: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000002481fe7fa88} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000024807462864: mov    %ah,-0x18(%rbx)
  0x0000024807462867: (bad)  
  0x0000024807462868: rex.W add (%rax),%al
  0x000002480746286b: add    %cl,-0x7d(%rax)
  0x000002480746286e: xchg   %cl,0x1000001(%rax)
  0x0000024807462874: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readShort@26 (line 315)

  0x0000024807462877: mov    %rax,0x30(%rsp)
  0x000002480746287c: nop
  0x000002480746287d: nop
  0x000002480746287e: nop
  0x000002480746287f: call   0x0000024807375ee0  ; OopMap{[48]=Oop off=612}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readShort@26 (line 315)
                                                ;   {optimized virtual_call}
  0x0000024807462884: mov    0x30(%rsp),%rax
  0x0000024807462889: jmp    0x00000248074628fd
  0x000002480746288e: mov    %rsi,0x8(%rsp)
  0x0000024807462893: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746289b: call   0x0000024807433da0  ; OopMap{rdx=Oop off=640}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readShort@-1 (line 312)
                                                ;   {runtime_call}
  0x00000248074628a0: jmp    0x000002480746267e
  0x00000248074628a5: call   0x000002480742f100  ; OopMap{rdx=Oop rsi=Oop off=650}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {runtime_call}
  0x00000248074628aa: call   0x000002480742f100  ; OopMap{rdx=Oop off=655}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {runtime_call}
  0x00000248074628af: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000248074628b9: mov    $0xa050f00,%eax
  0x00000248074628be: call   0x0000024807432b60  ; OopMap{off=675}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x00000248074628c3: jmp    0x0000024807462850
  0x00000248074628c5: nop
  0x00000248074628c6: nop
  0x00000248074628c7: nop
  0x00000248074628c8: mov    %rdx,%rdx
  0x00000248074628cb: call   0x000002480742f5e0  ; OopMap{off=688}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x00000248074628d0: jmp    0x000002480746285f
  0x00000248074628d2: nop
  0x00000248074628d3: nop
  0x00000248074628d4: mov    0x308(%r15),%rax
  0x00000248074628db: movabs $0x0,%r10
  0x00000248074628e5: mov    %r10,0x308(%r15)
  0x00000248074628ec: movabs $0x0,%r10
  0x00000248074628f6: mov    %r10,0x310(%r15)
  0x00000248074628fd: add    $0x40,%rsp
  0x0000024807462901: pop    %rbp
  0x0000024807462902: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807462907: hlt    
  0x0000024807462908: hlt    
  0x0000024807462909: hlt    
  0x000002480746290a: hlt    
  0x000002480746290b: hlt    
  0x000002480746290c: hlt    
  0x000002480746290d: hlt    
  0x000002480746290e: hlt    
  0x000002480746290f: hlt    
  0x0000024807462910: hlt    
  0x0000024807462911: hlt    
  0x0000024807462912: hlt    
  0x0000024807462913: hlt    
  0x0000024807462914: hlt    
  0x0000024807462915: hlt    
  0x0000024807462916: hlt    
  0x0000024807462917: hlt    
  0x0000024807462918: hlt    
  0x0000024807462919: hlt    
  0x000002480746291a: hlt    
  0x000002480746291b: hlt    
  0x000002480746291c: hlt    
  0x000002480746291d: hlt    
  0x000002480746291e: hlt    
  0x000002480746291f: hlt    
[Stub Code]
  0x0000024807462920: nop                       ;   {no_reloc}
  0x0000024807462921: nop
  0x0000024807462922: nop
  0x0000024807462923: nop
  0x0000024807462924: nop
  0x0000024807462925: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746292f: jmp    0x000002480746292f  ;   {runtime_call}
  0x0000024807462934: nop
  0x0000024807462935: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746293f: jmp    0x000002480746293f  ;   {runtime_call}
  0x0000024807462944: nop
  0x0000024807462945: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746294f: jmp    0x000002480746294f  ;   {runtime_call}
[Exception Handler]
  0x0000024807462954: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807462959: mov    %rsp,-0x28(%rsp)
  0x000002480746295e: sub    $0x80,%rsp
  0x0000024807462965: mov    %rax,0x78(%rsp)
  0x000002480746296a: mov    %rcx,0x70(%rsp)
  0x000002480746296f: mov    %rdx,0x68(%rsp)
  0x0000024807462974: mov    %rbx,0x60(%rsp)
  0x0000024807462979: mov    %rbp,0x50(%rsp)
  0x000002480746297e: mov    %rsi,0x48(%rsp)
  0x0000024807462983: mov    %rdi,0x40(%rsp)
  0x0000024807462988: mov    %r8,0x38(%rsp)
  0x000002480746298d: mov    %r9,0x30(%rsp)
  0x0000024807462992: mov    %r10,0x28(%rsp)
  0x0000024807462997: mov    %r11,0x20(%rsp)
  0x000002480746299c: mov    %r12,0x18(%rsp)
  0x00000248074629a1: mov    %r13,0x10(%rsp)
  0x00000248074629a6: mov    %r14,0x8(%rsp)
  0x00000248074629ab: mov    %r15,(%rsp)
  0x00000248074629af: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074629b9: movabs $0x24807462959,%rdx  ;   {internal_word}
  0x00000248074629c3: mov    %rsp,%r8
  0x00000248074629c6: and    $0xfffffffffffffff0,%rsp
  0x00000248074629ca: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074629d4: call   *%r10
  0x00000248074629d7: hlt    
[Deopt Handler Code]
  0x00000248074629d8: movabs $0x248074629d8,%r10  ;   {section_word}
  0x00000248074629e2: push   %r10
  0x00000248074629e4: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074629e9: hlt    
  0x00000248074629ea: hlt    
  0x00000248074629eb: hlt    
  0x00000248074629ec: hlt    
  0x00000248074629ed: hlt    
  0x00000248074629ee: hlt    
  0x00000248074629ef: hlt    
<nmethod compile_id='95' compiler='C1' level='3' entry='0x0000024807462620' size='1856' address='0x0000024807462490' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1384' scopes_pcs_offset='1520' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/io/DataInputStream readShort ()S' bytes='40' count='2013' iicount='2013' stamp='1.422'/>
<writer thread='27436'/>
<task_queued compile_id='107' method='java/lang/invoke/MethodType ptypes ()[Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='1.422' comment='tiered' hot_count='128'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807461f50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000248074620c0: mov    %eax,-0x6000(%rsp)
  0x00000248074620c7: push   %rbp
  0x00000248074620c8: sub    $0x30,%rsp
  0x00000248074620cc: movabs $0x2481fd14928,%rsi  ;   {metadata(method data for {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074620d6: mov    0xdc(%rsi),%edi
  0x00000248074620dc: add    $0x8,%edi
  0x00000248074620df: mov    %edi,0xdc(%rsi)
  0x00000248074620e5: movabs $0x2481fbea9e0,%rsi  ;   {metadata({method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074620ef: and    $0x1ff8,%edi
  0x00000248074620f5: cmp    $0x0,%edi
  0x00000248074620f8: je     0x000002480746220c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 340)

  0x00000248074620fe: cmp    $0x0,%rdx
  0x0000024807462102: movabs $0x2481fd14928,%rsi  ;   {metadata(method data for {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000002480746210c: movabs $0x108,%rdi
  0x0000024807462116: jne    0x0000024807462126
  0x000002480746211c: movabs $0x118,%rdi
  0x0000024807462126: mov    (%rsi,%rdi,1),%rbx
  0x000002480746212a: lea    0x1(%rbx),%rbx
  0x000002480746212e: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807462132: jne    0x0000024807462152  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 340)

  0x0000024807462138: movabs $0x2481fd14928,%rdx  ;   {metadata(method data for {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807462142: incl   0x128(%rdx)
  0x0000024807462148: mov    $0x0,%esi
  0x000002480746214d: jmp    0x00000248074621fd  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 340)

  0x0000024807462152: cmp    (%rdx),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; implicit exception: dispatches to 0x0000024807462223
  0x0000024807462155: mov    %rdx,%rsi
  0x0000024807462158: movabs $0x2481fd14928,%rdi  ;   {metadata(method data for {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807462162: mov    0x8(%rsi),%esi
  0x0000024807462165: shl    $0x3,%rsi
  0x0000024807462169: cmp    0x148(%rdi),%rsi
  0x0000024807462170: jne    0x000002480746217f
  0x0000024807462172: addq   $0x1,0x150(%rdi)
  0x000002480746217a: jmp    0x00000248074621e5
  0x000002480746217f: cmp    0x158(%rdi),%rsi
  0x0000024807462186: jne    0x0000024807462195
  0x0000024807462188: addq   $0x1,0x160(%rdi)
  0x0000024807462190: jmp    0x00000248074621e5
  0x0000024807462195: cmpq   $0x0,0x148(%rdi)
  0x00000248074621a0: jne    0x00000248074621b9
  0x00000248074621a2: mov    %rsi,0x148(%rdi)
  0x00000248074621a9: movq   $0x1,0x150(%rdi)
  0x00000248074621b4: jmp    0x00000248074621e5
  0x00000248074621b9: cmpq   $0x0,0x158(%rdi)
  0x00000248074621c4: jne    0x00000248074621dd
  0x00000248074621c6: mov    %rsi,0x158(%rdi)
  0x00000248074621cd: movq   $0x1,0x160(%rdi)
  0x00000248074621d8: jmp    0x00000248074621e5
  0x00000248074621dd: addq   $0x1,0x140(%rdi)
  0x00000248074621e5: movabs $0xffffffffffffffff,%rax
  0x00000248074621ef: call   0x0000024807376120  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ;   {virtual_call}
  0x00000248074621f4: mov    %rax,%rsi
  0x00000248074621f7: shr    $0x10,%esi
  0x00000248074621fa: xor    %rax,%rsi
  0x00000248074621fd: mov    %rsi,%rax
  0x0000024807462200: add    $0x30,%rsp
  0x0000024807462204: pop    %rbp
  0x0000024807462205: test   %eax,-0x1eb210b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746220b: ret    
  0x000002480746220c: mov    %rsi,0x8(%rsp)
  0x0000024807462211: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807462219: call   0x0000024807433da0  ; OopMap{rdx=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 340)
                                                ;   {runtime_call}
  0x000002480746221e: jmp    0x00000248074620fe
  0x0000024807462223: call   0x000002480742f100  ; OopMap{rdx=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ;   {runtime_call}
  0x0000024807462228: nop
  0x0000024807462229: nop
  0x000002480746222a: mov    0x308(%r15),%rax
  0x0000024807462231: movabs $0x0,%r10
  0x000002480746223b: mov    %r10,0x308(%r15)
  0x0000024807462242: movabs $0x0,%r10
  0x000002480746224c: mov    %r10,0x310(%r15)
  0x0000024807462253: add    $0x30,%rsp
  0x0000024807462257: pop    %rbp
  0x0000024807462258: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480746225d: hlt    
  0x000002480746225e: hlt    
  0x000002480746225f: hlt    
[Stub Code]
  0x0000024807462260: nop                       ;   {no_reloc}
  0x0000024807462261: nop
  0x0000024807462262: nop
  0x0000024807462263: nop
  0x0000024807462264: nop
  0x0000024807462265: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746226f: jmp    0x000002480746226f  ;   {runtime_call}
[Exception Handler]
  0x0000024807462274: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807462279: mov    %rsp,-0x28(%rsp)
  0x000002480746227e: sub    $0x80,%rsp
  0x0000024807462285: mov    %rax,0x78(%rsp)
  0x000002480746228a: mov    %rcx,0x70(%rsp)
  0x000002480746228f: mov    %rdx,0x68(%rsp)
  0x0000024807462294: mov    %rbx,0x60(%rsp)
  0x0000024807462299: mov    %rbp,0x50(%rsp)
  0x000002480746229e: mov    %rsi,0x48(%rsp)
  0x00000248074622a3: mov    %rdi,0x40(%rsp)
  0x00000248074622a8: mov    %r8,0x38(%rsp)
  0x00000248074622ad: mov    %r9,0x30(%rsp)
  0x00000248074622b2: mov    %r10,0x28(%rsp)
  0x00000248074622b7: mov    %r11,0x20(%rsp)
  0x00000248074622bc: mov    %r12,0x18(%rsp)
  0x00000248074622c1: mov    %r13,0x10(%rsp)
  0x00000248074622c6: mov    %r14,0x8(%rsp)
  0x00000248074622cb: mov    %r15,(%rsp)
  0x00000248074622cf: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074622d9: movabs $0x24807462279,%rdx  ;   {internal_word}
  0x00000248074622e3: mov    %rsp,%r8
  0x00000248074622e6: and    $0xfffffffffffffff0,%rsp
  0x00000248074622ea: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074622f4: call   *%r10
  0x00000248074622f7: hlt    
[Deopt Handler Code]
  0x00000248074622f8: movabs $0x248074622f8,%r10  ;   {section_word}
  0x0000024807462302: push   %r10
  0x0000024807462304: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807462309: hlt    
  0x000002480746230a: hlt    
  0x000002480746230b: hlt    
  0x000002480746230c: hlt    
  0x000002480746230d: hlt    
  0x000002480746230e: hlt    
  0x000002480746230f: hlt    
<nmethod compile_id='102' compiler='C1' level='3' entry='0x00000248074620c0' size='1184' address='0x0000024807461f50' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='968' scopes_pcs_offset='1016' dependencies_offset='1160' nul_chk_table_offset='1168' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='2121' iicount='2121' stamp='1.430'/>
<writer thread='27436'/>
Decoding compiled method 0x00000248074655d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe96e68} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807465700: mov    0x14(%rdx),%ebx
  0x0000024807465703: shl    $0x3,%rbx
  0x0000024807465707: mov    0x28(%rbx),%ebx
  0x000002480746570a: shl    $0x3,%rbx
  0x000002480746570e: mov    0x18(%rbx),%rbx
  0x0000024807465712: test   %rbx,%rbx
  0x0000024807465715: je     0x000002480746571e
  0x000002480746571b: jmp    *0x40(%rbx)
  0x000002480746571e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807465723: hlt    
  0x0000024807465724: hlt    
  0x0000024807465725: hlt    
  0x0000024807465726: hlt    
  0x0000024807465727: hlt    
<nmethod compile_id='108' compile_kind='c2n' level='0' entry='0x0000024807465700' size='344' address='0x00000248074655d0' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.431'/>
Decoding compiled method 0x0000024807465750:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fe972a8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807465880: cmp    (%rdx),%rax
  0x0000024807465883: mov    0x18(%rdi),%rbx
  0x0000024807465887: test   %rbx,%rbx
  0x000002480746588a: je     0x0000024807465893
  0x0000024807465890: jmp    *0x40(%rbx)
  0x0000024807465893: jmp    0x0000024807334fe0  ;   {runtime_call}
<nmethod compile_id='109' compile_kind='c2n' level='0' entry='0x0000024807465880' size='328' address='0x0000024807465750' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.433'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074658d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap$Node&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807465a20: mov    0x8(%rdx),%r10d
  0x0000024807465a24: shl    $0x3,%r10
  0x0000024807465a28: cmp    %rax,%r10
  0x0000024807465a2b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807465a31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807465a3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807465a40: mov    %eax,-0x6000(%rsp)
  0x0000024807465a47: push   %rbp
  0x0000024807465a48: sub    $0x30,%rsp
  0x0000024807465a4c: movabs $0x2481fd5f868,%rbx  ;   {metadata(method data for {method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000024807465a56: mov    0xdc(%rbx),%eax
  0x0000024807465a5c: add    $0x8,%eax
  0x0000024807465a5f: mov    %eax,0xdc(%rbx)
  0x0000024807465a65: movabs $0x2481fbef950,%rbx  ;   {metadata({method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000024807465a6f: and    $0x1ff8,%eax
  0x0000024807465a75: cmp    $0x0,%eax
  0x0000024807465a78: je     0x0000024807465b1e  ;*aload_0
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 286)

  0x0000024807465a7e: mov    %rdx,%rbx
  0x0000024807465a81: movabs $0x2481fd5f868,%rax  ;   {metadata(method data for {method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000024807465a8b: addq   $0x1,0x108(%rax)
  0x0000024807465a93: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807465a9d: mov    0xdc(%rbx),%eax
  0x0000024807465aa3: add    $0x8,%eax
  0x0000024807465aa6: mov    %eax,0xdc(%rbx)
  0x0000024807465aac: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807465ab6: and    $0x7ffff8,%eax
  0x0000024807465abc: cmp    $0x0,%eax
  0x0000024807465abf: je     0x0000024807465b35
  0x0000024807465ac5: mov    %r8d,0xc(%rdx)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 287)

  0x0000024807465ac9: mov    %r9,%r10
  0x0000024807465acc: shr    $0x3,%r10
  0x0000024807465ad0: mov    %r10d,0x10(%rdx)
  0x0000024807465ad4: mov    %rdx,%rbx
  0x0000024807465ad7: shr    $0x9,%rbx
  0x0000024807465adb: movabs $0x248130de000,%rax
  0x0000024807465ae5: movb   $0x0,(%rbx,%rax,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 288)

  0x0000024807465ae9: mov    %rdi,%r10
  0x0000024807465aec: shr    $0x3,%r10
  0x0000024807465af0: mov    %r10d,0x14(%rdx)
  0x0000024807465af4: mov    %rdx,%rdi
  0x0000024807465af7: shr    $0x9,%rdi
  0x0000024807465afb: movb   $0x0,(%rdi,%rax,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 289)

  0x0000024807465aff: mov    %rsi,%r10
  0x0000024807465b02: shr    $0x3,%r10
  0x0000024807465b06: mov    %r10d,0x18(%rdx)
  0x0000024807465b0a: shr    $0x9,%rdx
  0x0000024807465b0e: movb   $0x0,(%rdx,%rax,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 290)

  0x0000024807465b12: add    $0x30,%rsp
  0x0000024807465b16: pop    %rbp
  0x0000024807465b17: test   %eax,-0x1eb5a1d(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807465b1d: ret    
  0x0000024807465b1e: mov    %rbx,0x8(%rsp)
  0x0000024807465b23: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807465b2b: call   0x0000024807433da0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=272}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 286)
                                                ;   {runtime_call}
  0x0000024807465b30: jmp    0x0000024807465a7e
  0x0000024807465b35: mov    %rbx,0x8(%rsp)
  0x0000024807465b3a: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807465b42: call   0x0000024807433da0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=295}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 286)
                                                ;   {runtime_call}
  0x0000024807465b47: jmp    0x0000024807465ac5
  0x0000024807465b4c: nop
  0x0000024807465b4d: nop
  0x0000024807465b4e: mov    0x308(%r15),%rax
  0x0000024807465b55: movabs $0x0,%r10
  0x0000024807465b5f: mov    %r10,0x308(%r15)
  0x0000024807465b66: movabs $0x0,%r10
  0x0000024807465b70: mov    %r10,0x310(%r15)
  0x0000024807465b77: add    $0x30,%rsp
  0x0000024807465b7b: pop    %rbp
  0x0000024807465b7c: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807465b81: hlt    
  0x0000024807465b82: hlt    
  0x0000024807465b83: hlt    
  0x0000024807465b84: hlt    
  0x0000024807465b85: hlt    
  0x0000024807465b86: hlt    
  0x0000024807465b87: hlt    
  0x0000024807465b88: hlt    
  0x0000024807465b89: hlt    
  0x0000024807465b8a: hlt    
  0x0000024807465b8b: hlt    
  0x0000024807465b8c: hlt    
  0x0000024807465b8d: hlt    
  0x0000024807465b8e: hlt    
  0x0000024807465b8f: hlt    
  0x0000024807465b90: hlt    
  0x0000024807465b91: hlt    
  0x0000024807465b92: hlt    
  0x0000024807465b93: hlt    
  0x0000024807465b94: hlt    
  0x0000024807465b95: hlt    
  0x0000024807465b96: hlt    
  0x0000024807465b97: hlt    
  0x0000024807465b98: hlt    
  0x0000024807465b99: hlt    
  0x0000024807465b9a: hlt    
  0x0000024807465b9b: hlt    
  0x0000024807465b9c: hlt    
  0x0000024807465b9d: hlt    
  0x0000024807465b9e: hlt    
  0x0000024807465b9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807465ba0: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807465ba5: mov    %rsp,-0x28(%rsp)
  0x0000024807465baa: sub    $0x80,%rsp
  0x0000024807465bb1: mov    %rax,0x78(%rsp)
  0x0000024807465bb6: mov    %rcx,0x70(%rsp)
  0x0000024807465bbb: mov    %rdx,0x68(%rsp)
  0x0000024807465bc0: mov    %rbx,0x60(%rsp)
  0x0000024807465bc5: mov    %rbp,0x50(%rsp)
  0x0000024807465bca: mov    %rsi,0x48(%rsp)
  0x0000024807465bcf: mov    %rdi,0x40(%rsp)
  0x0000024807465bd4: mov    %r8,0x38(%rsp)
  0x0000024807465bd9: mov    %r9,0x30(%rsp)
  0x0000024807465bde: mov    %r10,0x28(%rsp)
  0x0000024807465be3: mov    %r11,0x20(%rsp)
  0x0000024807465be8: mov    %r12,0x18(%rsp)
  0x0000024807465bed: mov    %r13,0x10(%rsp)
  0x0000024807465bf2: mov    %r14,0x8(%rsp)
  0x0000024807465bf7: mov    %r15,(%rsp)
  0x0000024807465bfb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807465c05: movabs $0x24807465ba5,%rdx  ;   {internal_word}
  0x0000024807465c0f: mov    %rsp,%r8
  0x0000024807465c12: and    $0xfffffffffffffff0,%rsp
  0x0000024807465c16: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807465c20: call   *%r10
  0x0000024807465c23: hlt    
[Deopt Handler Code]
  0x0000024807465c24: movabs $0x24807465c24,%r10  ;   {section_word}
  0x0000024807465c2e: push   %r10
  0x0000024807465c30: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807465c35: hlt    
  0x0000024807465c36: hlt    
  0x0000024807465c37: hlt    
<nmethod compile_id='101' compiler='C1' level='3' entry='0x0000024807465a20' size='1120' address='0x00000248074658d0' relocation_offset='288' insts_offset='336' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='968' dependencies_offset='1112' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='867' iicount='867' stamp='1.441'/>
<writer thread='27436'/>
<task_queued compile_id='110' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='512' iicount='512' level='3' stamp='1.441' comment='tiered' hot_count='512'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807465d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3f2c8} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000024807465ec0: mov    0x8(%rdx),%r10d
  0x0000024807465ec4: shl    $0x3,%r10
  0x0000024807465ec8: cmp    %rax,%r10
  0x0000024807465ecb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807465ed1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807465edc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807465ee0: mov    %eax,-0x6000(%rsp)
  0x0000024807465ee7: push   %rbp
  0x0000024807465ee8: sub    $0x40,%rsp
  0x0000024807465eec: movabs $0x2481fe93750,%rsi  ;   {metadata(method data for {method} {0x000002481fe3f2c8} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807465ef6: mov    0xdc(%rsi),%edi
  0x0000024807465efc: add    $0x8,%edi
  0x0000024807465eff: mov    %edi,0xdc(%rsi)
  0x0000024807465f05: movabs $0x2481fe3f2c0,%rsi  ;   {metadata({method} {0x000002481fe3f2c8} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807465f0f: and    $0x1ff8,%edi
  0x0000024807465f15: cmp    $0x0,%edi
  0x0000024807465f18: je     0x0000024807465fe0  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@0 (line 107)

  0x0000024807465f1e: mov    0xc(%rdx),%esi     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@1 (line 107)

  0x0000024807465f21: mov    %rsi,%rdi
  0x0000024807465f24: inc    %edi
  0x0000024807465f26: mov    0x10(%rdx),%ebx
  0x0000024807465f29: shl    $0x3,%rbx          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@9 (line 108)

  0x0000024807465f2d: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@12 (line 108)
                                                ; implicit exception: dispatches to 0x0000024807465ff7
  0x0000024807465f30: cmp    %ebx,%edi
  0x0000024807465f32: movabs $0x2481fe93750,%rbx  ;   {metadata(method data for {method} {0x000002481fe3f2c8} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807465f3c: movabs $0x108,%rax
  0x0000024807465f46: jle    0x0000024807465f56
  0x0000024807465f4c: movabs $0x118,%rax
  0x0000024807465f56: mov    (%rbx,%rax,1),%rcx
  0x0000024807465f5a: lea    0x1(%rcx),%rcx
  0x0000024807465f5e: mov    %rcx,(%rbx,%rax,1)
  0x0000024807465f62: jle    0x0000024807465fb6  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@13 (line 108)

  0x0000024807465f68: mov    %edi,0x30(%rsp)
  0x0000024807465f6c: mov    %esi,0x2c(%rsp)
  0x0000024807465f70: mov    %r8d,0x28(%rsp)
  0x0000024807465f75: mov    %rdx,%rbx
  0x0000024807465f78: movabs $0x2481fe93750,%rax  ;   {metadata(method data for {method} {0x000002481fe3f2c8} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807465f82: addq   $0x1,0x128(%rax)
  0x0000024807465f8a: mov    $0x1,%r8d
  0x0000024807465f90: mov    %rdx,%rax
  0x0000024807465f93: mov    %rax,%rdx          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@18 (line 109)

  0x0000024807465f96: mov    %rax,0x20(%rsp)
  0x0000024807465f9b: nop
  0x0000024807465f9c: nop
  0x0000024807465f9d: nop
  0x0000024807465f9e: nop
  0x0000024807465f9f: call   0x0000024807375ee0  ; OopMap{[32]=Oop off=228}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@18 (line 109)
                                                ;   {optimized virtual_call}
  0x0000024807465fa4: mov    0x30(%rsp),%edi
  0x0000024807465fa8: mov    0x2c(%rsp),%esi
  0x0000024807465fac: mov    0x28(%rsp),%r8d
  0x0000024807465fb1: mov    0x20(%rsp),%rdx
  0x0000024807465fb6: mov    0x10(%rdx),%eax
  0x0000024807465fb9: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@22 (line 111)

  0x0000024807465fbd: movslq %esi,%rbx
  0x0000024807465fc0: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000024807465ffc
  0x0000024807465fc3: jae    0x0000024807466006
  0x0000024807465fc9: mov    %r8b,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 111)

  0x0000024807465fce: mov    %edi,0xc(%rdx)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@34 (line 112)

  0x0000024807465fd1: mov    %rdx,%rax
  0x0000024807465fd4: add    $0x40,%rsp
  0x0000024807465fd8: pop    %rbp
  0x0000024807465fd9: test   %eax,-0x1eb5edf(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807465fdf: ret    
  0x0000024807465fe0: mov    %rsi,0x8(%rsp)
  0x0000024807465fe5: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807465fed: call   0x0000024807433da0  ; OopMap{rdx=Oop off=306}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@-1 (line 107)
                                                ;   {runtime_call}
  0x0000024807465ff2: jmp    0x0000024807465f1e
  0x0000024807465ff7: call   0x000002480742f100  ; OopMap{rdx=Oop off=316}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@12 (line 108)
                                                ;   {runtime_call}
  0x0000024807465ffc: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=321}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 111)
                                                ;   {runtime_call}
  0x0000024807466001: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=326}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 111)
                                                ;   {runtime_call}
  0x0000024807466006: mov    %rsi,(%rsp)
  0x000002480746600a: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=335}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 111)
                                                ;   {runtime_call}
  0x000002480746600f: nop
  0x0000024807466010: nop
  0x0000024807466011: mov    0x308(%r15),%rax
  0x0000024807466018: movabs $0x0,%r10
  0x0000024807466022: mov    %r10,0x308(%r15)
  0x0000024807466029: movabs $0x0,%r10
  0x0000024807466033: mov    %r10,0x310(%r15)
  0x000002480746603a: add    $0x40,%rsp
  0x000002480746603e: pop    %rbp
  0x000002480746603f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807466044: hlt    
  0x0000024807466045: hlt    
  0x0000024807466046: hlt    
  0x0000024807466047: hlt    
  0x0000024807466048: hlt    
  0x0000024807466049: hlt    
  0x000002480746604a: hlt    
  0x000002480746604b: hlt    
  0x000002480746604c: hlt    
  0x000002480746604d: hlt    
  0x000002480746604e: hlt    
  0x000002480746604f: hlt    
  0x0000024807466050: hlt    
  0x0000024807466051: hlt    
  0x0000024807466052: hlt    
  0x0000024807466053: hlt    
  0x0000024807466054: hlt    
  0x0000024807466055: hlt    
  0x0000024807466056: hlt    
  0x0000024807466057: hlt    
  0x0000024807466058: hlt    
  0x0000024807466059: hlt    
  0x000002480746605a: hlt    
  0x000002480746605b: hlt    
  0x000002480746605c: hlt    
  0x000002480746605d: hlt    
  0x000002480746605e: hlt    
  0x000002480746605f: hlt    
[Stub Code]
  0x0000024807466060: nop                       ;   {no_reloc}
  0x0000024807466061: nop
  0x0000024807466062: nop
  0x0000024807466063: nop
  0x0000024807466064: nop
  0x0000024807466065: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746606f: jmp    0x000002480746606f  ;   {runtime_call}
[Exception Handler]
  0x0000024807466074: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807466079: mov    %rsp,-0x28(%rsp)
  0x000002480746607e: sub    $0x80,%rsp
  0x0000024807466085: mov    %rax,0x78(%rsp)
  0x000002480746608a: mov    %rcx,0x70(%rsp)
  0x000002480746608f: mov    %rdx,0x68(%rsp)
  0x0000024807466094: mov    %rbx,0x60(%rsp)
  0x0000024807466099: mov    %rbp,0x50(%rsp)
  0x000002480746609e: mov    %rsi,0x48(%rsp)
  0x00000248074660a3: mov    %rdi,0x40(%rsp)
  0x00000248074660a8: mov    %r8,0x38(%rsp)
  0x00000248074660ad: mov    %r9,0x30(%rsp)
  0x00000248074660b2: mov    %r10,0x28(%rsp)
  0x00000248074660b7: mov    %r11,0x20(%rsp)
  0x00000248074660bc: mov    %r12,0x18(%rsp)
  0x00000248074660c1: mov    %r13,0x10(%rsp)
  0x00000248074660c6: mov    %r14,0x8(%rsp)
  0x00000248074660cb: mov    %r15,(%rsp)
  0x00000248074660cf: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074660d9: movabs $0x24807466079,%rdx  ;   {internal_word}
  0x00000248074660e3: mov    %rsp,%r8
  0x00000248074660e6: and    $0xfffffffffffffff0,%rsp
  0x00000248074660ea: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074660f4: call   *%r10
  0x00000248074660f7: hlt    
[Deopt Handler Code]
  0x00000248074660f8: movabs $0x248074660f8,%r10  ;   {section_word}
  0x0000024807466102: push   %r10
  0x0000024807466104: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807466109: hlt    
  0x000002480746610a: hlt    
  0x000002480746610b: hlt    
  0x000002480746610c: hlt    
  0x000002480746610d: hlt    
  0x000002480746610e: hlt    
  0x000002480746610f: hlt    
<nmethod compile_id='85' compiler='C1' level='3' entry='0x0000024807465ec0' size='1392' address='0x0000024807465d50' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='976' scopes_pcs_offset='1080' dependencies_offset='1352' nul_chk_table_offset='1360' method='jdk/internal/org/objectweb/asm/ByteVector putByte (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='39' count='589' iicount='589' stamp='1.451'/>
<writer thread='27436'/>
<task_queued compile_id='111' method='java/lang/invoke/LambdaForm$Name index ()I' bytes='5' count='128' iicount='128' level='1' stamp='1.452' comment='tiered' hot_count='128'/>
<task_queued compile_id='112' method='java/lang/Class getClassLoader ()Ljava/lang/ClassLoader;' bytes='28' count='640' iicount='640' level='3' stamp='1.452' comment='tiered' hot_count='640'/>
Decoding compiled method 0x00000248074662d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fea02a8} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807466400: mov    0x14(%rdx),%ebx
  0x0000024807466403: shl    $0x3,%rbx
  0x0000024807466407: mov    0x28(%rbx),%ebx
  0x000002480746640a: shl    $0x3,%rbx
  0x000002480746640e: mov    0x18(%rbx),%rbx
  0x0000024807466412: test   %rbx,%rbx
  0x0000024807466415: je     0x000002480746641e
  0x000002480746641b: jmp    *0x40(%rbx)
  0x000002480746641e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807466423: hlt    
  0x0000024807466424: hlt    
  0x0000024807466425: hlt    
  0x0000024807466426: hlt    
  0x0000024807466427: hlt    
<nmethod compile_id='113' compile_kind='c2n' level='0' entry='0x0000024807466400' size='344' address='0x00000248074662d0' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.454'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807466450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000024807466600: mov    0x8(%rdx),%r10d
  0x0000024807466604: shl    $0x3,%r10
  0x0000024807466608: cmp    %rax,%r10
  0x000002480746660b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807466611: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480746661c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807466620: mov    %eax,-0x6000(%rsp)
  0x0000024807466627: push   %rbp
  0x0000024807466628: sub    $0x60,%rsp
  0x000002480746662c: mov    %rdx,0x38(%rsp)
  0x0000024807466631: mov    %r8,0x40(%rsp)
  0x0000024807466636: movabs $0x2481fe95b98,%r9  ;   {metadata(method data for {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807466640: mov    0xdc(%r9),%edi
  0x0000024807466647: add    $0x8,%edi
  0x000002480746664a: mov    %edi,0xdc(%r9)
  0x0000024807466651: movabs $0x2481fe3b2c0,%r9  ;   {metadata({method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480746665b: and    $0x1ff8,%edi
  0x0000024807466661: cmp    $0x0,%edi
  0x0000024807466664: je     0x00000248074668c8  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@0 (line 1118)

  0x000002480746666a: mov    0x5c(%rdx),%ebx
  0x000002480746666d: shl    $0x3,%rbx          ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@1 (line 1118)

  0x0000024807466671: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x00000248074668df
  0x0000024807466674: mov    %rbx,%r9
  0x0000024807466677: movabs $0x2481fe95b98,%rdi  ;   {metadata(method data for {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807466681: mov    0x8(%r9),%r9d
  0x0000024807466685: shl    $0x3,%r9
  0x0000024807466689: cmp    0x110(%rdi),%r9
  0x0000024807466690: jne    0x000002480746669f
  0x0000024807466692: addq   $0x1,0x118(%rdi)
  0x000002480746669a: jmp    0x0000024807466705
  0x000002480746669f: cmp    0x120(%rdi),%r9
  0x00000248074666a6: jne    0x00000248074666b5
  0x00000248074666a8: addq   $0x1,0x128(%rdi)
  0x00000248074666b0: jmp    0x0000024807466705
  0x00000248074666b5: cmpq   $0x0,0x110(%rdi)
  0x00000248074666c0: jne    0x00000248074666d9
  0x00000248074666c2: mov    %r9,0x110(%rdi)
  0x00000248074666c9: movq   $0x1,0x118(%rdi)
  0x00000248074666d4: jmp    0x0000024807466705
  0x00000248074666d9: cmpq   $0x0,0x120(%rdi)
  0x00000248074666e4: jne    0x00000248074666fd
  0x00000248074666e6: mov    %r9,0x120(%rdi)
  0x00000248074666ed: movq   $0x1,0x128(%rdi)
  0x00000248074666f8: jmp    0x0000024807466705
  0x00000248074666fd: addq   $0x1,0x108(%rdi)
  0x0000024807466705: mov    %r8,%rax
  0x0000024807466708: mov    $0x1,%r8d
  0x000002480746670e: mov    %rax,%r9
  0x0000024807466711: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000002480746671b: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000024807466725: mov    %rbx,%rdx          ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@8 (line 1118)

  0x0000024807466728: nop
  0x0000024807466729: nop
  0x000002480746672a: nop
  0x000002480746672b: nop
  0x000002480746672c: nop
  0x000002480746672d: nop
  0x000002480746672e: nop
  0x000002480746672f: call   0x0000024807375ee0  ; OopMap{[56]=Oop [64]=Oop off=308}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@8 (line 1118)
                                                ;   {optimized virtual_call}
  0x0000024807466734: mov    0x38(%rsp),%rdx
  0x0000024807466739: mov    0x5c(%rdx),%r8d
  0x000002480746673d: shl    $0x3,%r8           ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@13 (line 1119)

  0x0000024807466741: mov    %rdx,%rsi
  0x0000024807466744: movabs $0x2481fe95b98,%rdi  ;   {metadata(method data for {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480746674e: addq   $0x1,0x138(%rdi)
  0x0000024807466756: mov    %rdx,%rsi
  0x0000024807466759: mov    %rsi,%rdx          ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@16 (line 1119)

  0x000002480746675c: nop
  0x000002480746675d: nop
  0x000002480746675e: nop
  0x000002480746675f: call   0x0000024807375ee0  ; OopMap{[64]=Oop [56]=Oop off=356}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@16 (line 1119)
                                                ;   {optimized virtual_call}
  0x0000024807466764: cmp    $0x0,%rax
  0x0000024807466768: movabs $0x2481fe95b98,%r8  ;   {metadata(method data for {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807466772: movabs $0x148,%rdx
  0x000002480746677c: jne    0x000002480746678c
  0x0000024807466782: movabs $0x158,%rdx
  0x000002480746678c: mov    (%r8,%rdx,1),%rsi
  0x0000024807466790: lea    0x1(%rsi),%rsi
  0x0000024807466794: mov    %rsi,(%r8,%rdx,1)
  0x0000024807466798: jne    0x00000248074668b9  ;*ifnonnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@21 (line 1120)

  0x000002480746679e: mov    0x38(%rsp),%rdx
  0x00000248074667a3: mov    0x54(%rdx),%esi
  0x00000248074667a6: shl    $0x3,%rsi          ;*getfield pool
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@25 (line 1121)

  0x00000248074667aa: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000248074668e4
  0x00000248074667ad: mov    %rsi,%rdi
  0x00000248074667b0: movabs $0x2481fe95b98,%rbx  ;   {metadata(method data for {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074667ba: addq   $0x1,0x178(%rbx)
  0x00000248074667c2: mov    $0x1,%r8d
  0x00000248074667c8: mov    %rsi,%rdx          ;*invokevirtual putByte
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@29 (line 1121)

  0x00000248074667cb: nop
  0x00000248074667cc: nop
  0x00000248074667cd: nop
  0x00000248074667ce: nop
  0x00000248074667cf: call   0x0000024807375ee0  ; OopMap{[64]=Oop [56]=Oop off=468}
                                                ;*invokevirtual putByte
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@29 (line 1121)
                                                ;   {optimized virtual_call}
  0x00000248074667d4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000248074668e9
  0x00000248074667d7: mov    %rax,%r8
  0x00000248074667da: movabs $0x2481fe95b98,%rdx  ;   {metadata(method data for {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074667e4: addq   $0x1,0x1a8(%rdx)
  0x00000248074667ec: mov    0x40(%rsp),%r8
  0x00000248074667f1: mov    %rax,%rdx          ;*invokevirtual putUTF8
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@33 (line 1121)

  0x00000248074667f4: nop
  0x00000248074667f5: nop
  0x00000248074667f6: nop
  0x00000248074667f7: call   0x0000024807375ee0  ; OopMap{[56]=Oop off=508}
                                                ;*invokevirtual putUTF8
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@33 (line 1121)
                                                ;   {optimized virtual_call}
  0x00000248074667fc: movabs $0x7c005fc08,%rdx  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807466806: mov    0x60(%r15),%rax
  0x000002480746680a: lea    0x38(%rax),%rdi
  0x000002480746680e: cmp    0x70(%r15),%rdi
  0x0000024807466812: ja     0x00000248074668ee
  0x0000024807466818: mov    %rdi,0x60(%r15)
  0x000002480746681c: mov    0xa8(%rdx),%rcx
  0x0000024807466823: mov    %rcx,(%rax)
  0x0000024807466826: mov    %rdx,%rcx
  0x0000024807466829: shr    $0x3,%rcx
  0x000002480746682d: mov    %ecx,0x8(%rax)
  0x0000024807466830: xor    %rcx,%rcx
  0x0000024807466833: mov    %ecx,0xc(%rax)
  0x0000024807466836: xor    %rcx,%rcx
  0x0000024807466839: movabs $0x5,%rdi
  0x0000024807466843: mov    %rcx,0x8(%rax,%rdi,8)
  0x0000024807466848: dec    %rdi
  0x000002480746684b: jne    0x0000024807466843  ;*new
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@37 (line 1122)

  0x000002480746684d: mov    0x38(%rsp),%rdx
  0x0000024807466852: mov    0x18(%rdx),%r8d    ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@43 (line 1122)

  0x0000024807466856: mov    %r8,%r9
  0x0000024807466859: inc    %r9d
  0x000002480746685c: mov    %r9d,0x18(%rdx)    ;*putfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@49 (line 1122)

  0x0000024807466860: mov    0x5c(%rdx),%r9d
  0x0000024807466864: shl    $0x3,%r9           ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@53 (line 1122)

  0x0000024807466868: mov    %rax,%rsi
  0x000002480746686b: movabs $0x2481fe95b98,%rdi  ;   {metadata(method data for {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807466875: addq   $0x1,0x1c8(%rdi)
  0x000002480746687d: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@56 (line 1122)

  0x0000024807466880: mov    %rax,0x48(%rsp)
  0x0000024807466885: nop
  0x0000024807466886: nop
  0x0000024807466887: call   0x0000024807375ee0  ; OopMap{[72]=Oop [56]=Oop off=652}
                                                ;*invokespecial &lt;init&gt;
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@56 (line 1122)
                                                ;   {optimized virtual_call}
  0x000002480746688c: mov    0x38(%rsp),%rdx
  0x0000024807466891: movabs $0x2481fe95b98,%r8  ;   {metadata(method data for {method} {0x000002481fe3b2c8} &apos;newUTF8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480746689b: addq   $0x1,0x1d8(%r8)
  0x00000248074668a3: mov    0x48(%rsp),%r8
  0x00000248074668a8: mov    0x38(%rsp),%rdx    ;*invokespecial put
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@62 (line 1123)

  0x00000248074668ad: nop
  0x00000248074668ae: nop
  0x00000248074668af: call   0x0000024807375ee0  ; OopMap{[72]=Oop off=692}
                                                ;*invokespecial put
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@62 (line 1123)
                                                ;   {optimized virtual_call}
  0x00000248074668b4: mov    0x48(%rsp),%rax    ;*aload_2
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@65 (line 1125)

  0x00000248074668b9: mov    0xc(%rax),%eax     ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@66 (line 1125)
                                                ; implicit exception: dispatches to 0x00000248074668fb
  0x00000248074668bc: add    $0x60,%rsp
  0x00000248074668c0: pop    %rbp
  0x00000248074668c1: test   %eax,-0x1eb67c7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074668c7: ret    
  0x00000248074668c8: mov    %r9,0x8(%rsp)
  0x00000248074668cd: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074668d5: call   0x0000024807433da0  ; OopMap{rdx=Oop [56]=Oop r8=Oop [64]=Oop off=730}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@-1 (line 1118)
                                                ;   {runtime_call}
  0x00000248074668da: jmp    0x000002480746666a
  0x00000248074668df: call   0x000002480742f100  ; OopMap{rdx=Oop [56]=Oop r8=Oop [64]=Oop rbx=Oop off=740}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@8 (line 1118)
                                                ;   {runtime_call}
  0x00000248074668e4: call   0x000002480742f100  ; OopMap{rdx=Oop [56]=Oop [64]=Oop rsi=Oop off=745}
                                                ;*invokevirtual putByte
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@29 (line 1121)
                                                ;   {runtime_call}
  0x00000248074668e9: call   0x000002480742f100  ; OopMap{[64]=Oop [56]=Oop rax=Oop off=750}
                                                ;*invokevirtual putUTF8
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@33 (line 1121)
                                                ;   {runtime_call}
  0x00000248074668ee: mov    %rdx,%rdx
  0x00000248074668f1: call   0x000002480742f900  ; OopMap{[56]=Oop off=758}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@37 (line 1122)
                                                ;   {runtime_call}
  0x00000248074668f6: jmp    0x000002480746684d
  0x00000248074668fb: call   0x000002480742f100  ; OopMap{off=768}
                                                ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@66 (line 1125)
                                                ;   {runtime_call}
  0x0000024807466900: nop
  0x0000024807466901: nop
  0x0000024807466902: mov    0x308(%r15),%rax
  0x0000024807466909: movabs $0x0,%r10
  0x0000024807466913: mov    %r10,0x308(%r15)
  0x000002480746691a: movabs $0x0,%r10
  0x0000024807466924: mov    %r10,0x310(%r15)
  0x000002480746692b: add    $0x60,%rsp
  0x000002480746692f: pop    %rbp
  0x0000024807466930: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807466935: hlt    
  0x0000024807466936: hlt    
  0x0000024807466937: hlt    
  0x0000024807466938: hlt    
  0x0000024807466939: hlt    
  0x000002480746693a: hlt    
  0x000002480746693b: hlt    
  0x000002480746693c: hlt    
  0x000002480746693d: hlt    
  0x000002480746693e: hlt    
  0x000002480746693f: hlt    
[Stub Code]
  0x0000024807466940: nop                       ;   {no_reloc}
  0x0000024807466941: nop
  0x0000024807466942: nop
  0x0000024807466943: nop
  0x0000024807466944: nop
  0x0000024807466945: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746694f: jmp    0x000002480746694f  ;   {runtime_call}
  0x0000024807466954: nop
  0x0000024807466955: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746695f: jmp    0x000002480746695f  ;   {runtime_call}
  0x0000024807466964: nop
  0x0000024807466965: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746696f: jmp    0x000002480746696f  ;   {runtime_call}
  0x0000024807466974: nop
  0x0000024807466975: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746697f: jmp    0x000002480746697f  ;   {runtime_call}
  0x0000024807466984: nop
  0x0000024807466985: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746698f: jmp    0x000002480746698f  ;   {runtime_call}
  0x0000024807466994: nop
  0x0000024807466995: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746699f: jmp    0x000002480746699f  ;   {runtime_call}
[Exception Handler]
  0x00000248074669a4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074669a9: mov    %rsp,-0x28(%rsp)
  0x00000248074669ae: sub    $0x80,%rsp
  0x00000248074669b5: mov    %rax,0x78(%rsp)
  0x00000248074669ba: mov    %rcx,0x70(%rsp)
  0x00000248074669bf: mov    %rdx,0x68(%rsp)
  0x00000248074669c4: mov    %rbx,0x60(%rsp)
  0x00000248074669c9: mov    %rbp,0x50(%rsp)
  0x00000248074669ce: mov    %rsi,0x48(%rsp)
  0x00000248074669d3: mov    %rdi,0x40(%rsp)
  0x00000248074669d8: mov    %r8,0x38(%rsp)
  0x00000248074669dd: mov    %r9,0x30(%rsp)
  0x00000248074669e2: mov    %r10,0x28(%rsp)
  0x00000248074669e7: mov    %r11,0x20(%rsp)
  0x00000248074669ec: mov    %r12,0x18(%rsp)
  0x00000248074669f1: mov    %r13,0x10(%rsp)
  0x00000248074669f6: mov    %r14,0x8(%rsp)
  0x00000248074669fb: mov    %r15,(%rsp)
  0x00000248074669ff: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807466a09: movabs $0x248074669a9,%rdx  ;   {internal_word}
  0x0000024807466a13: mov    %rsp,%r8
  0x0000024807466a16: and    $0xfffffffffffffff0,%rsp
  0x0000024807466a1a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807466a24: call   *%r10
  0x0000024807466a27: hlt    
[Deopt Handler Code]
  0x0000024807466a28: movabs $0x24807466a28,%r10  ;   {section_word}
  0x0000024807466a32: push   %r10
  0x0000024807466a34: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807466a39: hlt    
  0x0000024807466a3a: hlt    
  0x0000024807466a3b: hlt    
  0x0000024807466a3c: hlt    
  0x0000024807466a3d: hlt    
  0x0000024807466a3e: hlt    
  0x0000024807466a3f: hlt    
<nmethod compile_id='87' compiler='C1' level='3' entry='0x0000024807466600' size='2312' address='0x0000024807466450' relocation_offset='288' insts_offset='432' stub_offset='1264' scopes_data_offset='1544' scopes_pcs_offset='1768' dependencies_offset='2264' nul_chk_table_offset='2272' method='jdk/internal/org/objectweb/asm/ClassWriter newUTF8 (Ljava/lang/String;)I' bytes='70' count='571' iicount='571' stamp='1.470'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807466d90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fea12c0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807466ec0: cmp    (%rdx),%rax
  0x0000024807466ec3: mov    0x18(%rsi),%rbx
  0x0000024807466ec7: test   %rbx,%rbx
  0x0000024807466eca: je     0x0000024807466ed3
  0x0000024807466ed0: jmp    *0x40(%rbx)
  0x0000024807466ed3: jmp    0x0000024807334fe0  ;   {runtime_call}
<nmethod compile_id='114' compile_kind='c2n' level='0' entry='0x0000024807466ec0' size='328' address='0x0000024807466d90' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.472'/>
<task_queued compile_id='115' method='jdk/internal/org/objectweb/asm/Item &lt;init&gt; (ILjdk/internal/org/objectweb/asm/Item;)V' bytes='66' count='768' iicount='768' level='3' stamp='1.472' comment='tiered' hot_count='768'/>
<task_queued compile_id='116' method='jdk/internal/org/objectweb/asm/ClassWriter put (Ljdk/internal/org/objectweb/asm/Item;)V' bytes='152' count='768' iicount='768' level='3' stamp='1.472' comment='tiered' hot_count='768'/>
<task_queued compile_id='117' method='sun/invoke/util/Wrapper basicTypeChar ()C' bytes='5' count='128' iicount='128' level='1' stamp='1.473' comment='tiered' hot_count='128'/>
<writer thread='14928'/>
<task_queued compile_id='118' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='640' iicount='640' level='3' stamp='1.473' comment='tiered' hot_count='640'/>
<task_queued compile_id='119' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='640' iicount='640' level='3' stamp='1.473' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807466f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb79950} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x100]  (sp of caller)
  0x00000248074670c0: mov    0x8(%rdx),%r10d
  0x00000248074670c4: shl    $0x3,%r10
  0x00000248074670c8: cmp    %rax,%r10
  0x00000248074670cb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074670d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074670dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074670e0: mov    %eax,-0x6000(%rsp)
  0x00000248074670e7: push   %rbp
  0x00000248074670e8: sub    $0xf0,%rsp
  0x00000248074670ef: movabs $0x2481fe99400,%rsi  ;   {metadata(method data for {method} {0x000002481fb79950} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000248074670f9: mov    0xdc(%rsi),%edi
  0x00000248074670ff: add    $0x8,%edi
  0x0000024807467102: mov    %edi,0xdc(%rsi)
  0x0000024807467108: movabs $0x2481fb79948,%rsi  ;   {metadata({method} {0x000002481fb79950} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807467112: and    $0x1ff8,%edi
  0x0000024807467118: cmp    $0x0,%edi
  0x000002480746711b: je     0x00000248074674b9  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 207)

  0x0000024807467121: mov    %rdx,%rsi
  0x0000024807467124: movabs $0x2481fe99400,%rdi  ;   {metadata(method data for {method} {0x000002481fb79950} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480746712e: addq   $0x1,0x108(%rdi)
  0x0000024807467136: movabs $0x2481fd289f8,%rsi  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807467140: mov    0xdc(%rsi),%edi
  0x0000024807467146: add    $0x8,%edi
  0x0000024807467149: mov    %edi,0xdc(%rsi)
  0x000002480746714f: movabs $0x2481fb768b0,%rsi  ;   {metadata({method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807467159: and    $0x7ffff8,%edi
  0x000002480746715f: cmp    $0x0,%edi
  0x0000024807467162: je     0x00000248074674d0
  0x0000024807467168: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x000002480746716b: inc    %esi
  0x000002480746716d: mov    %rdx,%rdi
  0x0000024807467170: movabs $0x2481fd289f8,%rbx  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480746717a: addq   $0x1,0x108(%rbx)
  0x0000024807467182: movabs $0x2481fd28388,%rdi  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480746718c: mov    0xdc(%rdi),%ebx
  0x0000024807467192: add    $0x8,%ebx
  0x0000024807467195: mov    %ebx,0xdc(%rdi)
  0x000002480746719b: movabs $0x2481fb75778,%rdi  ;   {metadata({method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074671a5: and    $0x7ffff8,%ebx
  0x00000248074671ab: cmp    $0x0,%ebx
  0x00000248074671ae: je     0x00000248074674e7
  0x00000248074671b4: mov    0x10(%rdx),%edi
  0x00000248074671b7: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x00000248074671bb: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; implicit exception: dispatches to 0x00000248074674fe
  0x00000248074671be: mov    %rsi,%rax
  0x00000248074671c1: sub    %ebx,%eax
  0x00000248074671c3: cmp    $0x0,%eax
  0x00000248074671c6: movabs $0x2481fd28388,%rax  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074671d0: movabs $0x108,%rcx
  0x00000248074671da: jle    0x00000248074671ea
  0x00000248074671e0: movabs $0x118,%rcx
  0x00000248074671ea: mov    (%rax,%rcx,1),%r9
  0x00000248074671ee: lea    0x1(%r9),%r9
  0x00000248074671f2: mov    %r9,(%rax,%rcx,1)
  0x00000248074671f6: jg     0x0000024807467209  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x00000248074671fc: mov    %r8d,0xc4(%rsp)
  0x0000024807467204: jmp    0x000002480746747b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x0000024807467209: mov    %ebx,0xc0(%rsp)
  0x0000024807467210: mov    %rdi,0xc8(%rsp)
  0x0000024807467218: mov    %r8d,0xc4(%rsp)
  0x0000024807467220: mov    %rdx,%rax
  0x0000024807467223: movabs $0x2481fd28388,%rcx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480746722d: addq   $0x1,0x128(%rcx)
  0x0000024807467235: mov    %rsi,%r8
  0x0000024807467238: mov    %rdx,%rsi
  0x000002480746723b: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x000002480746723e: mov    %rsi,0xd0(%rsp)
  0x0000024807467246: nop
  0x0000024807467247: call   0x0000024807375ee0  ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {optimized virtual_call}
  0x000002480746724c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x000002480746724f: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807467259: addq   $0x1,0x138(%rbx)
  0x0000024807467261: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480746726b: mov    0xdc(%rbx),%edx
  0x0000024807467271: add    $0x8,%edx
  0x0000024807467274: mov    %edx,0xdc(%rbx)
  0x000002480746727a: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807467284: and    $0x7ffff8,%edx
  0x000002480746728a: cmp    $0x0,%edx
  0x000002480746728d: je     0x0000024807467503
  0x0000024807467293: mov    %r8,%rbx
  0x0000024807467296: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000248074672a0: movslq %ebx,%rbx
  0x00000248074672a3: mov    %rbx,%rdi
  0x00000248074672a6: cmp    $0xffffff,%rbx
  0x00000248074672ad: ja     0x000002480746751a
  0x00000248074672b3: movabs $0x17,%rsi
  0x00000248074672bd: lea    (%rsi,%rbx,2),%rsi
  0x00000248074672c1: and    $0xfffffffffffffff8,%rsi
  0x00000248074672c5: mov    0x60(%r15),%rax
  0x00000248074672c9: lea    (%rax,%rsi,1),%rsi
  0x00000248074672cd: cmp    0x70(%r15),%rsi
  0x00000248074672d1: ja     0x000002480746751a
  0x00000248074672d7: mov    %rsi,0x60(%r15)
  0x00000248074672db: sub    %rax,%rsi
  0x00000248074672de: movq   $0x1,(%rax)
  0x00000248074672e5: mov    %rdx,%rcx
  0x00000248074672e8: shr    $0x3,%rcx
  0x00000248074672ec: mov    %ecx,0x8(%rax)
  0x00000248074672ef: mov    %ebx,0xc(%rax)
  0x00000248074672f2: sub    $0x10,%rsi
  0x00000248074672f6: je     0x000002480746730d
  0x00000248074672fc: xor    %rbx,%rbx
  0x00000248074672ff: shr    $0x3,%rsi
  0x0000024807467303: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807467308: dec    %rsi
  0x000002480746730b: jne    0x0000024807467303  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x000002480746730d: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807467317: addq   $0x1,0x108(%rdx)
  0x000002480746731f: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807467329: mov    0xdc(%rdx),%r9d
  0x0000024807467330: add    $0x8,%r9d
  0x0000024807467334: mov    %r9d,0xdc(%rdx)
  0x000002480746733b: movabs $0x2481fbf7590,%rdx  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807467345: and    $0x7ffff8,%r9d
  0x000002480746734c: cmp    $0x0,%r9d
  0x0000024807467350: je     0x0000024807467524
  0x0000024807467356: mov    0xc0(%rsp),%ebx
  0x000002480746735d: cmp    %r8d,%ebx
  0x0000024807467360: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480746736a: movabs $0x108,%r9
  0x0000024807467374: jg     0x0000024807467384
  0x000002480746737a: movabs $0x118,%r9
  0x0000024807467384: mov    (%rdx,%r9,1),%rdi
  0x0000024807467388: lea    0x1(%rdi),%rdi
  0x000002480746738c: mov    %rdi,(%rdx,%r9,1)
  0x0000024807467390: jg     0x00000248074673ab  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x0000024807467396: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000248074673a0: incl   0x128(%rdx)
  0x00000248074673a6: jmp    0x00000248074673ae  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x00000248074673ab: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x00000248074673ae: mov    0xc8(%rsp),%rdi
  0x00000248074673b6: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000248074673c0: addq   $0x1,0x118(%rdx)
  0x00000248074673c8: mov    %rdi,%rdx
  0x00000248074673cb: mov    $0x0,%r8d
  0x00000248074673d1: mov    %rax,%r9
  0x00000248074673d4: mov    $0x0,%edi
  0x00000248074673d9: mov    %rbx,%rsi
  0x00000248074673dc: mov    %rax,0xd8(%rsp)
  0x00000248074673e4: lea    (%r8,%rsi,1),%rcx
  0x00000248074673e8: cmp    0xc(%rdx),%ecx
  0x00000248074673eb: ja     0x000002480746753b
  0x00000248074673f1: lea    (%rdi,%rsi,1),%rcx
  0x00000248074673f5: cmp    0xc(%r9),%ecx
  0x00000248074673f9: ja     0x000002480746753b
  0x00000248074673ff: test   %esi,%esi
  0x0000024807467401: jl     0x000002480746753b
  0x0000024807467407: je     0x000002480746744b
  0x000002480746740d: movslq %r8d,%r8
  0x0000024807467410: movslq %edi,%rdi
  0x0000024807467413: lea    0x10(%rdx,%r8,2),%rcx
  0x0000024807467418: lea    0x10(%r9,%rdi,2),%rdx
  0x000002480746741d: mov    %rsi,%r8
  0x0000024807467420: sub    $0x20,%rsp
  0x0000024807467424: test   $0xf,%esp
  0x000002480746742a: je     0x0000024807467442
  0x0000024807467430: sub    $0x8,%rsp
  0x0000024807467434: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807467439: add    $0x8,%rsp
  0x000002480746743d: jmp    0x0000024807467447
  0x0000024807467442: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807467447: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x000002480746744b: mov    0xd8(%rsp),%rax
  0x0000024807467453: mov    0xd0(%rsp),%rdx
  0x000002480746745b: mov    %rax,%r10
  0x000002480746745e: shr    $0x3,%r10
  0x0000024807467462: mov    %r10d,0x10(%rdx)
  0x0000024807467466: mov    %rdx,%rax
  0x0000024807467469: shr    $0x9,%rax
  0x000002480746746d: movabs $0x248130de000,%rsi
  0x0000024807467477: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x000002480746747b: mov    0xc4(%rsp),%r8d
  0x0000024807467483: mov    0x10(%rdx),%eax
  0x0000024807467486: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x000002480746748a: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x000002480746748d: mov    %rsi,%rdi
  0x0000024807467490: inc    %edi
  0x0000024807467492: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x0000024807467495: movslq %esi,%rdi
  0x0000024807467498: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000024807467549
  0x000002480746749b: jae    0x0000024807467553
  0x00000248074674a1: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)

  0x00000248074674a7: mov    %rdx,%rax
  0x00000248074674aa: add    $0xf0,%rsp
  0x00000248074674b1: pop    %rbp
  0x00000248074674b2: test   %eax,-0x1eb73b8(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074674b8: ret    
  0x00000248074674b9: mov    %rsi,0x8(%rsp)
  0x00000248074674be: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074674c6: call   0x0000024807433da0  ; OopMap{rdx=Oop off=1035}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 207)
                                                ;   {runtime_call}
  0x00000248074674cb: jmp    0x0000024807467121
  0x00000248074674d0: mov    %rsi,0x8(%rsp)
  0x00000248074674d5: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074674dd: call   0x0000024807433da0  ; OopMap{rdx=Oop off=1058}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x00000248074674e2: jmp    0x0000024807467168
  0x00000248074674e7: mov    %rdi,0x8(%rsp)
  0x00000248074674ec: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074674f4: call   0x0000024807433da0  ; OopMap{rdx=Oop off=1081}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x00000248074674f9: jmp    0x00000248074671b4
  0x00000248074674fe: call   0x000002480742f100  ; OopMap{rdx=Oop rdi=Oop off=1091}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x0000024807467503: mov    %rbx,0x8(%rsp)
  0x0000024807467508: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807467510: call   0x0000024807433da0  ; OopMap{[208]=Oop [200]=Oop off=1109}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x0000024807467515: jmp    0x0000024807467293
  0x000002480746751a: call   0x0000024807430280  ; OopMap{[208]=Oop [200]=Oop off=1119}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x000002480746751f: jmp    0x000002480746730d
  0x0000024807467524: mov    %rdx,0x8(%rsp)
  0x0000024807467529: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807467531: call   0x0000024807433da0  ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1142}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x0000024807467536: jmp    0x0000024807467356
  0x000002480746753b: nop
  0x000002480746753c: nop
  0x000002480746753d: nop
  0x000002480746753e: nop
  0x000002480746753f: call   0x0000024807376360  ; OopMap{[208]=Oop [216]=Oop off=1156}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {static_call}
  0x0000024807467544: jmp    0x000002480746744b
  0x0000024807467549: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=1166}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x000002480746754e: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=1171}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x0000024807467553: mov    %rsi,(%rsp)
  0x0000024807467557: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=1180}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ;   {runtime_call}
  0x000002480746755c: nop
  0x000002480746755d: nop
  0x000002480746755e: mov    0x308(%r15),%rax
  0x0000024807467565: movabs $0x0,%r10
  0x000002480746756f: mov    %r10,0x308(%r15)
  0x0000024807467576: movabs $0x0,%r10
  0x0000024807467580: mov    %r10,0x310(%r15)
  0x0000024807467587: add    $0xf0,%rsp
  0x000002480746758e: pop    %rbp
  0x000002480746758f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807467594: hlt    
  0x0000024807467595: hlt    
  0x0000024807467596: hlt    
  0x0000024807467597: hlt    
  0x0000024807467598: hlt    
  0x0000024807467599: hlt    
  0x000002480746759a: hlt    
  0x000002480746759b: hlt    
  0x000002480746759c: hlt    
  0x000002480746759d: hlt    
  0x000002480746759e: hlt    
  0x000002480746759f: hlt    
[Stub Code]
  0x00000248074675a0: nop                       ;   {no_reloc}
  0x00000248074675a1: nop
  0x00000248074675a2: nop
  0x00000248074675a3: nop
  0x00000248074675a4: nop
  0x00000248074675a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074675af: jmp    0x00000248074675af  ;   {runtime_call}
  0x00000248074675b4: nop
  0x00000248074675b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074675bf: jmp    0x00000248074675bf  ;   {runtime_call}
[Exception Handler]
  0x00000248074675c4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074675c9: mov    %rsp,-0x28(%rsp)
  0x00000248074675ce: sub    $0x80,%rsp
  0x00000248074675d5: mov    %rax,0x78(%rsp)
  0x00000248074675da: mov    %rcx,0x70(%rsp)
  0x00000248074675df: mov    %rdx,0x68(%rsp)
  0x00000248074675e4: mov    %rbx,0x60(%rsp)
  0x00000248074675e9: mov    %rbp,0x50(%rsp)
  0x00000248074675ee: mov    %rsi,0x48(%rsp)
  0x00000248074675f3: mov    %rdi,0x40(%rsp)
  0x00000248074675f8: mov    %r8,0x38(%rsp)
  0x00000248074675fd: mov    %r9,0x30(%rsp)
  0x0000024807467602: mov    %r10,0x28(%rsp)
  0x0000024807467607: mov    %r11,0x20(%rsp)
  0x000002480746760c: mov    %r12,0x18(%rsp)
  0x0000024807467611: mov    %r13,0x10(%rsp)
  0x0000024807467616: mov    %r14,0x8(%rsp)
  0x000002480746761b: mov    %r15,(%rsp)
  0x000002480746761f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807467629: movabs $0x248074675c9,%rdx  ;   {internal_word}
  0x0000024807467633: mov    %rsp,%r8
  0x0000024807467636: and    $0xfffffffffffffff0,%rsp
  0x000002480746763a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807467644: call   *%r10
  0x0000024807467647: hlt    
[Deopt Handler Code]
  0x0000024807467648: movabs $0x24807467648,%r10  ;   {section_word}
  0x0000024807467652: push   %r10
  0x0000024807467654: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807467659: hlt    
  0x000002480746765a: hlt    
  0x000002480746765b: hlt    
  0x000002480746765c: hlt    
  0x000002480746765d: hlt    
  0x000002480746765e: hlt    
  0x000002480746765f: hlt    
<nmethod compile_id='110' compiler='C1' level='3' entry='0x00000248074670c0' size='2792' address='0x0000024807466f10' relocation_offset='288' insts_offset='432' stub_offset='1680' scopes_data_offset='1912' scopes_pcs_offset='2240' dependencies_offset='2752' nul_chk_table_offset='2760' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='569' iicount='569' stamp='1.496'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807467a10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fea3790} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807467b40: mov    0x18(%rsi),%rbx
  0x0000024807467b44: test   %rbx,%rbx
  0x0000024807467b47: je     0x0000024807467b50
  0x0000024807467b4d: jmp    *0x40(%rbx)
  0x0000024807467b50: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807467b55: hlt    
  0x0000024807467b56: hlt    
  0x0000024807467b57: hlt    
<nmethod compile_id='120' compile_kind='c2n' level='0' entry='0x0000024807467b40' size='328' address='0x0000024807467a10' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.498'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807467b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe40358} &apos;&lt;init&gt;&apos; &apos;(ILjdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807467d00: mov    0x8(%rdx),%r10d
  0x0000024807467d04: shl    $0x3,%r10
  0x0000024807467d08: cmp    %rax,%r10
  0x0000024807467d0b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807467d11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807467d1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807467d20: mov    %eax,-0x6000(%rsp)
  0x0000024807467d27: push   %rbp
  0x0000024807467d28: sub    $0x30,%rsp
  0x0000024807467d2c: movabs $0x2481fe85e20,%rsi  ;   {metadata(method data for {method} {0x000002481fe40358} &apos;&lt;init&gt;&apos; &apos;(ILjdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807467d36: mov    0xdc(%rsi),%edi
  0x0000024807467d3c: add    $0x8,%edi
  0x0000024807467d3f: mov    %edi,0xdc(%rsi)
  0x0000024807467d45: movabs $0x2481fe40350,%rsi  ;   {metadata({method} {0x000002481fe40358} &apos;&lt;init&gt;&apos; &apos;(ILjdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807467d4f: and    $0x1ff8,%edi
  0x0000024807467d55: cmp    $0x0,%edi
  0x0000024807467d58: je     0x0000024807467e36  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@0 (line 162)

  0x0000024807467d5e: mov    %rdx,%rsi
  0x0000024807467d61: movabs $0x2481fe85e20,%rdi  ;   {metadata(method data for {method} {0x000002481fe40358} &apos;&lt;init&gt;&apos; &apos;(ILjdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807467d6b: addq   $0x1,0x108(%rdi)
  0x0000024807467d73: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807467d7d: mov    0xdc(%rsi),%edi
  0x0000024807467d83: add    $0x8,%edi
  0x0000024807467d86: mov    %edi,0xdc(%rsi)
  0x0000024807467d8c: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807467d96: and    $0x7ffff8,%edi
  0x0000024807467d9c: cmp    $0x0,%edi
  0x0000024807467d9f: je     0x0000024807467e4d
  0x0000024807467da5: mov    %r8d,0xc(%rdx)     ;*putfield index
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@6 (line 163)

  0x0000024807467da9: mov    0x18(%r9),%esi     ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@11 (line 164)
                                                ; implicit exception: dispatches to 0x0000024807467e64
  0x0000024807467dad: mov    %esi,0x18(%rdx)    ;*putfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@14 (line 164)

  0x0000024807467db0: mov    0x1c(%r9),%esi     ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@19 (line 165)

  0x0000024807467db4: mov    %esi,0x1c(%rdx)    ;*putfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@22 (line 165)

  0x0000024807467db7: mov    0x10(%r9),%rsi     ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@27 (line 166)

  0x0000024807467dbb: mov    %rsi,0x10(%rdx)    ;*putfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@30 (line 166)

  0x0000024807467dbf: mov    0x24(%r9),%esi
  0x0000024807467dc3: shl    $0x3,%rsi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@35 (line 167)

  0x0000024807467dc7: mov    %rsi,%r10
  0x0000024807467dca: shr    $0x3,%r10
  0x0000024807467dce: mov    %r10d,0x24(%rdx)
  0x0000024807467dd2: mov    %rdx,%rsi
  0x0000024807467dd5: shr    $0x9,%rsi
  0x0000024807467dd9: movabs $0x248130de000,%rdi
  0x0000024807467de3: movb   $0x0,(%rsi,%rdi,1)  ;*putfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@38 (line 167)

  0x0000024807467de7: mov    0x28(%r9),%esi
  0x0000024807467deb: shl    $0x3,%rsi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@43 (line 168)

  0x0000024807467def: mov    %rsi,%r10
  0x0000024807467df2: shr    $0x3,%r10
  0x0000024807467df6: mov    %r10d,0x28(%rdx)
  0x0000024807467dfa: mov    %rdx,%rsi
  0x0000024807467dfd: shr    $0x9,%rsi
  0x0000024807467e01: movb   $0x0,(%rsi,%rdi,1)  ;*putfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@46 (line 168)

  0x0000024807467e05: mov    0x2c(%r9),%esi
  0x0000024807467e09: shl    $0x3,%rsi          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@51 (line 169)

  0x0000024807467e0d: mov    %rsi,%r10
  0x0000024807467e10: shr    $0x3,%r10
  0x0000024807467e14: mov    %r10d,0x2c(%rdx)
  0x0000024807467e18: mov    %rdx,%rsi
  0x0000024807467e1b: shr    $0x9,%rsi
  0x0000024807467e1f: movb   $0x0,(%rsi,%rdi,1)  ;*putfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@54 (line 169)

  0x0000024807467e23: mov    0x20(%r9),%esi     ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@59 (line 170)

  0x0000024807467e27: mov    %esi,0x20(%rdx)    ;*putfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@62 (line 170)

  0x0000024807467e2a: add    $0x30,%rsp
  0x0000024807467e2e: pop    %rbp
  0x0000024807467e2f: test   %eax,-0x1eb7d35(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807467e35: ret    
  0x0000024807467e36: mov    %rsi,0x8(%rsp)
  0x0000024807467e3b: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807467e43: call   0x0000024807433da0  ; OopMap{rdx=Oop r9=Oop off=328}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@-1 (line 162)
                                                ;   {runtime_call}
  0x0000024807467e48: jmp    0x0000024807467d5e
  0x0000024807467e4d: mov    %rsi,0x8(%rsp)
  0x0000024807467e52: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807467e5a: call   0x0000024807433da0  ; OopMap{rdx=Oop r9=Oop off=351}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@1 (line 162)
                                                ;   {runtime_call}
  0x0000024807467e5f: jmp    0x0000024807467da5
  0x0000024807467e64: call   0x000002480742f100  ; OopMap{rdx=Oop r9=Oop off=361}
                                                ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::&lt;init&gt;@11 (line 164)
                                                ;   {runtime_call}
  0x0000024807467e69: nop
  0x0000024807467e6a: nop
  0x0000024807467e6b: mov    0x308(%r15),%rax
  0x0000024807467e72: movabs $0x0,%r10
  0x0000024807467e7c: mov    %r10,0x308(%r15)
  0x0000024807467e83: movabs $0x0,%r10
  0x0000024807467e8d: mov    %r10,0x310(%r15)
  0x0000024807467e94: add    $0x30,%rsp
  0x0000024807467e98: pop    %rbp
  0x0000024807467e99: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807467e9e: hlt    
  0x0000024807467e9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807467ea0: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807467ea5: mov    %rsp,-0x28(%rsp)
  0x0000024807467eaa: sub    $0x80,%rsp
  0x0000024807467eb1: mov    %rax,0x78(%rsp)
  0x0000024807467eb6: mov    %rcx,0x70(%rsp)
  0x0000024807467ebb: mov    %rdx,0x68(%rsp)
  0x0000024807467ec0: mov    %rbx,0x60(%rsp)
  0x0000024807467ec5: mov    %rbp,0x50(%rsp)
  0x0000024807467eca: mov    %rsi,0x48(%rsp)
  0x0000024807467ecf: mov    %rdi,0x40(%rsp)
  0x0000024807467ed4: mov    %r8,0x38(%rsp)
  0x0000024807467ed9: mov    %r9,0x30(%rsp)
  0x0000024807467ede: mov    %r10,0x28(%rsp)
  0x0000024807467ee3: mov    %r11,0x20(%rsp)
  0x0000024807467ee8: mov    %r12,0x18(%rsp)
  0x0000024807467eed: mov    %r13,0x10(%rsp)
  0x0000024807467ef2: mov    %r14,0x8(%rsp)
  0x0000024807467ef7: mov    %r15,(%rsp)
  0x0000024807467efb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807467f05: movabs $0x24807467ea5,%rdx  ;   {internal_word}
  0x0000024807467f0f: mov    %rsp,%r8
  0x0000024807467f12: and    $0xfffffffffffffff0,%rsp
  0x0000024807467f16: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807467f20: call   *%r10
  0x0000024807467f23: hlt    
[Deopt Handler Code]
  0x0000024807467f24: movabs $0x24807467f24,%r10  ;   {section_word}
  0x0000024807467f2e: push   %r10
  0x0000024807467f30: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807467f35: hlt    
  0x0000024807467f36: hlt    
  0x0000024807467f37: hlt    
<nmethod compile_id='115' compiler='C1' level='3' entry='0x0000024807467d00' size='1456' address='0x0000024807467b90' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='952' scopes_pcs_offset='1096' dependencies_offset='1432' nul_chk_table_offset='1440' method='jdk/internal/org/objectweb/asm/Item &lt;init&gt; (ILjdk/internal/org/objectweb/asm/Item;)V' bytes='66' count='811' iicount='811' stamp='1.506'/>
<writer thread='27436'/>
<task_queued compile_id='121' method='java/lang/invoke/LambdaForm$Name type ()Ljava/lang/invoke/LambdaForm$BasicType;' bytes='5' count='128' iicount='128' level='1' stamp='1.506' comment='tiered' hot_count='128'/>
Decoding compiled method 0x0000024807468150:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fea77c0} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807468280: mov    0x14(%rdx),%ebx
  0x0000024807468283: shl    $0x3,%rbx
  0x0000024807468287: mov    0x28(%rbx),%ebx
  0x000002480746828a: shl    $0x3,%rbx
  0x000002480746828e: mov    0x18(%rbx),%rbx
  0x0000024807468292: test   %rbx,%rbx
  0x0000024807468295: je     0x000002480746829e
  0x000002480746829b: jmp    *0x40(%rbx)
  0x000002480746829e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x00000248074682a3: hlt    
  0x00000248074682a4: hlt    
  0x00000248074682a5: hlt    
  0x00000248074682a6: hlt    
  0x00000248074682a7: hlt    
<nmethod compile_id='122' compile_kind='c2n' level='0' entry='0x0000024807468280' size='344' address='0x0000024807468150' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.508'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074682d0:
Code:
[Constants]
  0x0000024807468480 (offset:    0): 0x00000000   0x3fe8000000000000
  0x0000024807468484 (offset:    4): 0x3fe80000
  0x0000024807468488 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000002480746848c (offset:   12): 0xf4f4f4f4
  0x0000024807468490 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000024807468494 (offset:   20): 0xf4f4f4f4
  0x0000024807468498 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000002480746849c (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # parm0:    r8:r8     = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000248074684a0: mov    0x8(%rdx),%r10d    ;   {no_reloc}
  0x00000248074684a4: shl    $0x3,%r10
  0x00000248074684a8: cmp    %rax,%r10
  0x00000248074684ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074684b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074684bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074684c0: mov    %eax,-0x6000(%rsp)
  0x00000248074684c7: push   %rbp
  0x00000248074684c8: sub    $0x50,%rsp
  0x00000248074684cc: mov    %rdx,%r9
  0x00000248074684cf: mov    %r8,0x30(%rsp)
  0x00000248074684d4: movabs $0x2481fe85f60,%rbx  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074684de: mov    0xdc(%rbx),%edx
  0x00000248074684e4: add    $0x8,%edx
  0x00000248074684e7: mov    %edx,0xdc(%rbx)
  0x00000248074684ed: movabs $0x2481fe3c9e8,%rbx  ;   {metadata({method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074684f7: and    $0x1ff8,%edx
  0x00000248074684fd: cmp    $0x0,%edx
  0x0000024807468500: je     0x0000024807468a6b  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@0 (line 1756)

  0x0000024807468506: mov    0x18(%r9),%ebx     ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@1 (line 1756)

  0x000002480746850a: movswl 0x48(%r9),%edx     ;*getfield typeCount
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@5 (line 1756)

  0x000002480746850f: mov    0x1c(%r9),%esi     ;*getfield threshold
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@10 (line 1756)

  0x0000024807468513: add    %edx,%ebx
  0x0000024807468515: cmp    %esi,%ebx
  0x0000024807468517: movabs $0x2481fe85f60,%rbx  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807468521: movabs $0x108,%rdx
  0x000002480746852b: jle    0x000002480746853b
  0x0000024807468531: movabs $0x118,%rdx
  0x000002480746853b: mov    (%rbx,%rdx,1),%rsi
  0x000002480746853f: lea    0x1(%rsi),%rsi
  0x0000024807468543: mov    %rsi,(%rbx,%rdx,1)
  0x0000024807468547: jle    0x00000248074688e3  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@13 (line 1756)

  0x000002480746854d: mov    0x58(%r9),%r11d
  0x0000024807468551: shl    $0x3,%r11          ;*getfield items
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@17 (line 1757)

  0x0000024807468555: mov    0xc(%r11),%r13d    ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@20 (line 1757)
                                                ; implicit exception: dispatches to 0x0000024807468a82
  0x0000024807468559: mov    %r13,%rbx
  0x000002480746855c: shl    %ebx
  0x000002480746855e: mov    %rbx,%r14
  0x0000024807468561: inc    %r14d
  0x0000024807468564: mov    %r14d,0x38(%rsp)
  0x0000024807468569: mov    %r14,%rbx
  0x000002480746856c: movabs $0x7c005fe00,%rdx  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/Item&apos;[])}
  0x0000024807468576: movslq %ebx,%rbx
  0x0000024807468579: mov    %rbx,%rdi
  0x000002480746857c: cmp    $0xffffff,%rbx
  0x0000024807468583: ja     0x0000024807468a87
  0x0000024807468589: movabs $0x17,%rsi
  0x0000024807468593: lea    (%rsi,%rbx,4),%rsi
  0x0000024807468597: and    $0xfffffffffffffff8,%rsi
  0x000002480746859b: mov    0x60(%r15),%rax
  0x000002480746859f: lea    (%rax,%rsi,1),%rsi
  0x00000248074685a3: cmp    0x70(%r15),%rsi
  0x00000248074685a7: ja     0x0000024807468a87
  0x00000248074685ad: mov    %rsi,0x60(%r15)
  0x00000248074685b1: sub    %rax,%rsi
  0x00000248074685b4: movq   $0x1,(%rax)
  0x00000248074685bb: mov    %rdx,%rcx
  0x00000248074685be: shr    $0x3,%rcx
  0x00000248074685c2: mov    %ecx,0x8(%rax)
  0x00000248074685c5: mov    %ebx,0xc(%rax)
  0x00000248074685c8: sub    $0x10,%rsi
  0x00000248074685cc: je     0x00000248074685e3
  0x00000248074685d2: xor    %rbx,%rbx
  0x00000248074685d5: shr    $0x3,%rsi
  0x00000248074685d9: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000248074685de: dec    %rsi
  0x00000248074685e1: jne    0x00000248074685d9
  0x00000248074685e3: mov    %rax,%rsi          ;*anewarray
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@29 (line 1759)

  0x00000248074685e6: dec    %r13d
  0x00000248074685e9: jmp    0x000002480746885e  ;*iload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@39 (line 1760)

  0x00000248074685ee: xchg   %ax,%ax
  0x00000248074685f0: movslq %r13d,%rax
  0x00000248074685f3: cmp    0xc(%r11),%r13d
  0x00000248074685f7: jae    0x0000024807468a91
  0x00000248074685fd: mov    0x10(%r11,%rax,4),%eax
  0x0000024807468602: shl    $0x3,%rax          ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@50 (line 1761)

  0x0000024807468606: jmp    0x00000248074687d6  ;*aload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@53 (line 1762)

  0x000002480746860b: nopl   0x0(%rax,%rax,1)
  0x0000024807468610: mov    0x20(%rdi),%eax    ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@60 (line 1763)
                                                ; implicit exception: dispatches to 0x0000024807468a9a
  0x0000024807468613: mov    0xc(%rsi),%ebx     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@65 (line 1763)

  0x0000024807468616: cmp    $0x80000000,%eax
  0x000002480746861c: jne    0x000002480746862d
  0x0000024807468622: xor    %edx,%edx
  0x0000024807468624: cmp    $0xffffffff,%ebx
  0x0000024807468627: je     0x0000024807468630
  0x000002480746862d: cltd   
  0x000002480746862e: idiv   %ebx               ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@66 (line 1763)
                                                ; implicit exception: dispatches to 0x0000024807468a9f
  0x0000024807468630: mov    0x30(%rdi),%eax
  0x0000024807468633: shl    $0x3,%rax          ;*getfield next
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@71 (line 1764)

  0x0000024807468637: movslq %edx,%rbx
  0x000002480746863a: cmp    0xc(%rsi),%edx
  0x000002480746863d: jae    0x0000024807468aa4
  0x0000024807468643: mov    0x10(%rsi,%rbx,4),%ebx
  0x0000024807468647: shl    $0x3,%rbx          ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@82 (line 1765)

  0x000002480746864b: mov    %rbx,%r10
  0x000002480746864e: shr    $0x3,%r10
  0x0000024807468652: mov    %r10d,0x30(%rdi)
  0x0000024807468656: mov    %rdi,%rbx
  0x0000024807468659: shr    $0x9,%rbx
  0x000002480746865d: movabs $0x248130de000,%rcx
  0x0000024807468667: movb   $0x0,(%rbx,%rcx,1)  ;*putfield next
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@83 (line 1765)

  0x000002480746866b: movslq %edx,%rdx
  0x000002480746866e: lea    0x10(%rsi,%rdx,4),%rdx
  0x0000024807468673: cmp    $0x0,%rdi
  0x0000024807468677: jne    0x0000024807468693
  0x0000024807468679: movabs $0x2481fe85f60,%r8  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807468683: orl    $0x100,0x160(%r8)
  0x000002480746868e: jmp    0x000002480746877c
  0x0000024807468693: mov    0x8(%rsi),%ebx     ; implicit exception: dispatches to 0x0000024807468aad
  0x0000024807468696: shl    $0x3,%rbx
  0x000002480746869a: mov    0x8(%rdi),%r8d
  0x000002480746869e: shl    $0x3,%r8
  0x00000248074686a2: mov    0xf0(%rbx),%rbx
  0x00000248074686a9: cmp    %rbx,%r8
  0x00000248074686ac: je     0x00000248074686de
  0x00000248074686b2: mov    0xc(%rbx),%r14d
  0x00000248074686b6: cmp    (%r8,%r14,1),%rbx
  0x00000248074686ba: je     0x00000248074686de
  0x00000248074686c0: cmp    $0x18,%r14d
  0x00000248074686c4: jne    0x0000024807468765
  0x00000248074686ca: push   %r8
  0x00000248074686cc: push   %rbx
  0x00000248074686cd: call   0x0000024807431b20  ;   {runtime_call}
  0x00000248074686d2: pop    %r8
  0x00000248074686d4: pop    %rbx
  0x00000248074686d5: cmp    $0x0,%ebx
  0x00000248074686d8: je     0x0000024807468765
  0x00000248074686de: movabs $0x2481fe85f60,%r8  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074686e8: mov    0x8(%rdi),%ebx
  0x00000248074686eb: shl    $0x3,%rbx
  0x00000248074686ef: cmp    0x170(%r8),%rbx
  0x00000248074686f6: jne    0x0000024807468705
  0x00000248074686f8: addq   $0x1,0x178(%r8)
  0x0000024807468700: jmp    0x000002480746877c
  0x0000024807468705: cmp    0x180(%r8),%rbx
  0x000002480746870c: jne    0x000002480746871b
  0x000002480746870e: addq   $0x1,0x188(%r8)
  0x0000024807468716: jmp    0x000002480746877c
  0x000002480746871b: cmpq   $0x0,0x170(%r8)
  0x0000024807468726: jne    0x000002480746873f
  0x0000024807468728: mov    %rbx,0x170(%r8)
  0x000002480746872f: movq   $0x1,0x178(%r8)
  0x000002480746873a: jmp    0x000002480746877c
  0x000002480746873f: cmpq   $0x0,0x180(%r8)
  0x000002480746874a: jne    0x0000024807468763
  0x000002480746874c: mov    %rbx,0x180(%r8)
  0x0000024807468753: movq   $0x1,0x188(%r8)
  0x000002480746875e: jmp    0x000002480746877c
  0x0000024807468763: jmp    0x000002480746877c
  0x0000024807468765: movabs $0x2481fe85f60,%r8  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480746876f: subq   $0x1,0x168(%r8)
  0x0000024807468777: jmp    0x0000024807468ab2
  0x000002480746877c: mov    %rdi,%r10
  0x000002480746877f: shr    $0x3,%r10
  0x0000024807468783: mov    %r10d,(%rdx)
  0x0000024807468786: shr    $0x9,%rdx
  0x000002480746878a: movb   $0x0,(%rdx,%rcx,1)  ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@92 (line 1766)

  0x000002480746878e: movabs $0x2481fe85f60,%rdx  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807468798: mov    0xe0(%rdx),%edi
  0x000002480746879e: add    $0x8,%edi
  0x00000248074687a1: mov    %edi,0xe0(%rdx)
  0x00000248074687a7: movabs $0x2481fe3c9e8,%rdx  ;   {metadata({method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074687b1: and    $0xfff8,%edi
  0x00000248074687b7: cmp    $0x0,%edi
  0x00000248074687ba: je     0x0000024807468abb  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop rax=Oop off=800}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@97 (line 1768)

  0x00000248074687c0: test   %eax,-0x1eb86c6(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x00000248074687c6: movabs $0x2481fe85f60,%rdx  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074687d0: incl   0x198(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@97 (line 1768)

  0x00000248074687d6: mov    %rax,%rdi          ;*aload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@53 (line 1762)

  0x00000248074687d9: cmp    $0x0,%rdi
  0x00000248074687dd: movabs $0x2481fe85f60,%rax  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074687e7: movabs $0x148,%rdx
  0x00000248074687f1: je     0x0000024807468801
  0x00000248074687f7: movabs $0x158,%rdx
  0x0000024807468801: mov    (%rax,%rdx,1),%rbx
  0x0000024807468805: lea    0x1(%rbx),%rbx
  0x0000024807468809: mov    %rbx,(%rax,%rdx,1)
  0x000002480746880d: jne    0x0000024807468610  ;*ifnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@55 (line 1762)

  0x0000024807468813: dec    %r13d
  0x0000024807468816: movabs $0x2481fe85f60,%rax  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807468820: mov    0xe0(%rax),%edx
  0x0000024807468826: add    $0x8,%edx
  0x0000024807468829: mov    %edx,0xe0(%rax)
  0x000002480746882f: movabs $0x2481fe3c9e8,%rax  ;   {metadata({method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807468839: and    $0xfff8,%edx
  0x000002480746883f: cmp    $0x0,%edx
  0x0000024807468842: je     0x0000024807468ad2  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop off=936}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@103 (line 1760)

  0x0000024807468848: test   %eax,-0x1eb874e(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480746884e: movabs $0x2481fe85f60,%rax  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807468858: incl   0x1b0(%rax)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@103 (line 1760)

  0x000002480746885e: cmp    $0x0,%r13d
  0x0000024807468862: movabs $0x2481fe85f60,%rax  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480746886c: movabs $0x128,%rdx
  0x0000024807468876: jl     0x0000024807468886
  0x000002480746887c: movabs $0x138,%rdx
  0x0000024807468886: mov    (%rax,%rdx,1),%rdi
  0x000002480746888a: lea    0x1(%rdi),%rdi
  0x000002480746888e: mov    %rdi,(%rax,%rdx,1)
  0x0000024807468892: jge    0x00000248074685f0  ;*iflt
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@41 (line 1760)

  0x0000024807468898: mov    0x38(%rsp),%r14d
  0x000002480746889d: mov    %rsi,%r10
  0x00000248074688a0: shr    $0x3,%r10
  0x00000248074688a4: mov    %r10d,0x58(%r9)
  0x00000248074688a8: mov    %r9,%rax
  0x00000248074688ab: shr    $0x9,%rax
  0x00000248074688af: movabs $0x248130de000,%rdx
  0x00000248074688b9: movb   $0x0,(%rax,%rdx,1)  ;*putfield items
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@109 (line 1770)

  0x00000248074688bd: vcvtsi2sd %r14d,%xmm0,%xmm0
  0x00000248074688c2: vmulsd -0x44a(%rip),%xmm0,%xmm0        # 0x0000024807468480
                                                ;   {section_word}
  0x00000248074688ca: vcvttsd2si %xmm0,%eax
  0x00000248074688ce: cmp    $0x80000000,%eax
  0x00000248074688d4: je     0x0000024807468ae9
  0x00000248074688da: mov    %eax,0x1c(%r9)     ;*putfield threshold
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@120 (line 1771)

  0x00000248074688de: mov    0x30(%rsp),%r8
  0x00000248074688e3: mov    0x20(%r8),%eax     ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@124 (line 1773)
                                                ; implicit exception: dispatches to 0x0000024807468b09
  0x00000248074688e7: mov    0x58(%r9),%esi
  0x00000248074688eb: shl    $0x3,%rsi          ;*getfield items
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@128 (line 1773)

  0x00000248074688ef: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@131 (line 1773)
                                                ; implicit exception: dispatches to 0x0000024807468b0e
  0x00000248074688f2: cmp    $0x80000000,%eax
  0x00000248074688f8: jne    0x0000024807468909
  0x00000248074688fe: xor    %edx,%edx
  0x0000024807468900: cmp    $0xffffffff,%edi
  0x0000024807468903: je     0x000002480746890c
  0x0000024807468909: cltd   
  0x000002480746890a: idiv   %edi               ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@132 (line 1773)
                                                ; implicit exception: dispatches to 0x0000024807468b13
  0x000002480746890c: movslq %edx,%rdi
  0x000002480746890f: cmp    0xc(%rsi),%edx
  0x0000024807468912: jae    0x0000024807468b18
  0x0000024807468918: mov    0x10(%rsi,%rdi,4),%edi
  0x000002480746891c: shl    $0x3,%rdi          ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@140 (line 1774)

  0x0000024807468920: mov    %rdi,%r10
  0x0000024807468923: shr    $0x3,%r10
  0x0000024807468927: mov    %r10d,0x30(%r8)
  0x000002480746892b: mov    %r8,%rdi
  0x000002480746892e: shr    $0x9,%rdi
  0x0000024807468932: movabs $0x248130de000,%rbx
  0x000002480746893c: movb   $0x0,(%rdi,%rbx,1)  ;*putfield next
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@141 (line 1774)

  0x0000024807468940: movslq %edx,%rdx
  0x0000024807468943: lea    0x10(%rsi,%rdx,4),%rdi
  0x0000024807468948: cmp    $0x0,%r8
  0x000002480746894c: jne    0x0000024807468967
  0x000002480746894e: movabs $0x2481fe85f60,%rax  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807468958: orl    $0x100,0x1c0(%rax)
  0x0000024807468962: jmp    0x0000024807468a4d
  0x0000024807468967: mov    0x8(%rsi),%esi     ; implicit exception: dispatches to 0x0000024807468b21
  0x000002480746896a: shl    $0x3,%rsi
  0x000002480746896e: mov    0x8(%r8),%eax
  0x0000024807468972: shl    $0x3,%rax
  0x0000024807468976: mov    0xf0(%rsi),%rsi
  0x000002480746897d: cmp    %rsi,%rax
  0x0000024807468980: je     0x00000248074689ae
  0x0000024807468986: mov    0xc(%rsi),%edx
  0x0000024807468989: cmp    (%rax,%rdx,1),%rsi
  0x000002480746898d: je     0x00000248074689ae
  0x0000024807468993: cmp    $0x18,%edx
  0x0000024807468996: jne    0x0000024807468a36
  0x000002480746899c: push   %rax
  0x000002480746899d: push   %rsi
  0x000002480746899e: call   0x0000024807431b20  ;   {runtime_call}
  0x00000248074689a3: pop    %rax
  0x00000248074689a4: pop    %rsi
  0x00000248074689a5: cmp    $0x0,%esi
  0x00000248074689a8: je     0x0000024807468a36
  0x00000248074689ae: movabs $0x2481fe85f60,%rax  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074689b8: mov    0x8(%r8),%esi
  0x00000248074689bc: shl    $0x3,%rsi
  0x00000248074689c0: cmp    0x1d0(%rax),%rsi
  0x00000248074689c7: jne    0x00000248074689d6
  0x00000248074689c9: addq   $0x1,0x1d8(%rax)
  0x00000248074689d1: jmp    0x0000024807468a4d
  0x00000248074689d6: cmp    0x1e0(%rax),%rsi
  0x00000248074689dd: jne    0x00000248074689ec
  0x00000248074689df: addq   $0x1,0x1e8(%rax)
  0x00000248074689e7: jmp    0x0000024807468a4d
  0x00000248074689ec: cmpq   $0x0,0x1d0(%rax)
  0x00000248074689f7: jne    0x0000024807468a10
  0x00000248074689f9: mov    %rsi,0x1d0(%rax)
  0x0000024807468a00: movq   $0x1,0x1d8(%rax)
  0x0000024807468a0b: jmp    0x0000024807468a4d
  0x0000024807468a10: cmpq   $0x0,0x1e0(%rax)
  0x0000024807468a1b: jne    0x0000024807468a34
  0x0000024807468a1d: mov    %rsi,0x1e0(%rax)
  0x0000024807468a24: movq   $0x1,0x1e8(%rax)
  0x0000024807468a2f: jmp    0x0000024807468a4d
  0x0000024807468a34: jmp    0x0000024807468a4d
  0x0000024807468a36: movabs $0x2481fe85f60,%rax  ;   {metadata(method data for {method} {0x000002481fe3c9f0} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807468a40: subq   $0x1,0x1c8(%rax)
  0x0000024807468a48: jmp    0x0000024807468b26
  0x0000024807468a4d: mov    %r8,%r10
  0x0000024807468a50: shr    $0x3,%r10
  0x0000024807468a54: mov    %r10d,(%rdi)
  0x0000024807468a57: shr    $0x9,%rdi
  0x0000024807468a5b: movb   $0x0,(%rdi,%rbx,1)  ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@150 (line 1775)

  0x0000024807468a5f: add    $0x50,%rsp
  0x0000024807468a63: pop    %rbp
  0x0000024807468a64: test   %eax,-0x1eb896a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807468a6a: ret    
  0x0000024807468a6b: mov    %rbx,0x8(%rsp)
  0x0000024807468a70: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807468a78: call   0x0000024807433da0  ; OopMap{r9=Oop r8=Oop [48]=Oop off=1501}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@-1 (line 1756)
                                                ;   {runtime_call}
  0x0000024807468a7d: jmp    0x0000024807468506
  0x0000024807468a82: call   0x000002480742f100  ; OopMap{r9=Oop r8=Oop [48]=Oop r11=Oop off=1511}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@20 (line 1757)
                                                ;   {runtime_call}
  0x0000024807468a87: call   0x0000024807430780  ; OopMap{r9=Oop r8=Oop [48]=Oop r11=Oop off=1516}
                                                ;*anewarray
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@29 (line 1759)
                                                ;   {runtime_call}
  0x0000024807468a8c: jmp    0x00000248074685e3
  0x0000024807468a91: mov    %r13,(%rsp)
  0x0000024807468a95: call   0x000002480742e800  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop off=1530}
                                                ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@50 (line 1761)
                                                ;   {runtime_call}
  0x0000024807468a9a: call   0x000002480742f100  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop off=1535}
                                                ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@60 (line 1763)
                                                ;   {runtime_call}
  0x0000024807468a9f: call   0x000002480742e340  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop off=1540}
                                                ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@66 (line 1763)
                                                ;   {runtime_call}
  0x0000024807468aa4: mov    %rdx,(%rsp)
  0x0000024807468aa8: call   0x000002480742e800  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop rax=Oop off=1549}
                                                ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@82 (line 1765)
                                                ;   {runtime_call}
  0x0000024807468aad: call   0x000002480742f100  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop rax=Oop off=1554}
                                                ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@92 (line 1766)
                                                ;   {runtime_call}
  0x0000024807468ab2: mov    %rdi,(%rsp)
  0x0000024807468ab6: call   0x0000024807431480  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop rax=Oop off=1563}
                                                ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@92 (line 1766)
                                                ;   {runtime_call}
  0x0000024807468abb: mov    %rdx,0x8(%rsp)
  0x0000024807468ac0: movq   $0x61,(%rsp)
  0x0000024807468ac8: call   0x0000024807433da0  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop rax=Oop off=1581}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@97 (line 1768)
                                                ;   {runtime_call}
  0x0000024807468acd: jmp    0x00000248074687c0
  0x0000024807468ad2: mov    %rax,0x8(%rsp)
  0x0000024807468ad7: movq   $0x67,(%rsp)
  0x0000024807468adf: call   0x0000024807433da0  ; OopMap{r9=Oop r11=Oop rsi=Oop [48]=Oop off=1604}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@103 (line 1760)
                                                ;   {runtime_call}
  0x0000024807468ae4: jmp    0x0000024807468848
  0x0000024807468ae9: movabs $0x667ed2c0,%r10   ;   {external_word}
  0x0000024807468af3: vcomisd (%r10),%xmm0
  0x0000024807468af8: jp     0x0000024807468b01
  0x0000024807468afa: jb     0x0000024807468b04
  0x0000024807468afc: dec    %rax
  0x0000024807468aff: jmp    0x0000024807468b04
  0x0000024807468b01: xor    %rax,%rax
  0x0000024807468b04: jmp    0x00000248074688da
  0x0000024807468b09: call   0x000002480742f100  ; OopMap{r9=Oop r8=Oop [48]=Oop off=1646}
                                                ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@124 (line 1773)
                                                ;   {runtime_call}
  0x0000024807468b0e: call   0x000002480742f100  ; OopMap{r8=Oop [48]=Oop rsi=Oop off=1651}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@131 (line 1773)
                                                ;   {runtime_call}
  0x0000024807468b13: call   0x000002480742e340  ; OopMap{r8=Oop [48]=Oop rsi=Oop off=1656}
                                                ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@132 (line 1773)
                                                ;   {runtime_call}
  0x0000024807468b18: mov    %rdx,(%rsp)
  0x0000024807468b1c: call   0x000002480742e800  ; OopMap{r8=Oop [48]=Oop rsi=Oop off=1665}
                                                ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@140 (line 1774)
                                                ;   {runtime_call}
  0x0000024807468b21: call   0x000002480742f100  ; OopMap{r8=Oop [48]=Oop off=1670}
                                                ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@150 (line 1775)
                                                ;   {runtime_call}
  0x0000024807468b26: mov    %r8,(%rsp)
  0x0000024807468b2a: call   0x0000024807431480  ; OopMap{r8=Oop [48]=Oop off=1679}
                                                ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@150 (line 1775)
                                                ;   {runtime_call}
  0x0000024807468b2f: nop
  0x0000024807468b30: nop
  0x0000024807468b31: mov    0x308(%r15),%rax
  0x0000024807468b38: movabs $0x0,%r10
  0x0000024807468b42: mov    %r10,0x308(%r15)
  0x0000024807468b49: movabs $0x0,%r10
  0x0000024807468b53: mov    %r10,0x310(%r15)
  0x0000024807468b5a: add    $0x50,%rsp
  0x0000024807468b5e: pop    %rbp
  0x0000024807468b5f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807468b64: hlt    
  0x0000024807468b65: hlt    
  0x0000024807468b66: hlt    
  0x0000024807468b67: hlt    
  0x0000024807468b68: hlt    
  0x0000024807468b69: hlt    
  0x0000024807468b6a: hlt    
  0x0000024807468b6b: hlt    
  0x0000024807468b6c: hlt    
  0x0000024807468b6d: hlt    
  0x0000024807468b6e: hlt    
  0x0000024807468b6f: hlt    
  0x0000024807468b70: hlt    
  0x0000024807468b71: hlt    
  0x0000024807468b72: hlt    
  0x0000024807468b73: hlt    
  0x0000024807468b74: hlt    
  0x0000024807468b75: hlt    
  0x0000024807468b76: hlt    
  0x0000024807468b77: hlt    
  0x0000024807468b78: hlt    
  0x0000024807468b79: hlt    
  0x0000024807468b7a: hlt    
  0x0000024807468b7b: hlt    
  0x0000024807468b7c: hlt    
  0x0000024807468b7d: hlt    
  0x0000024807468b7e: hlt    
  0x0000024807468b7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807468b80: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807468b85: mov    %rsp,-0x28(%rsp)
  0x0000024807468b8a: sub    $0x80,%rsp
  0x0000024807468b91: mov    %rax,0x78(%rsp)
  0x0000024807468b96: mov    %rcx,0x70(%rsp)
  0x0000024807468b9b: mov    %rdx,0x68(%rsp)
  0x0000024807468ba0: mov    %rbx,0x60(%rsp)
  0x0000024807468ba5: mov    %rbp,0x50(%rsp)
  0x0000024807468baa: mov    %rsi,0x48(%rsp)
  0x0000024807468baf: mov    %rdi,0x40(%rsp)
  0x0000024807468bb4: mov    %r8,0x38(%rsp)
  0x0000024807468bb9: mov    %r9,0x30(%rsp)
  0x0000024807468bbe: mov    %r10,0x28(%rsp)
  0x0000024807468bc3: mov    %r11,0x20(%rsp)
  0x0000024807468bc8: mov    %r12,0x18(%rsp)
  0x0000024807468bcd: mov    %r13,0x10(%rsp)
  0x0000024807468bd2: mov    %r14,0x8(%rsp)
  0x0000024807468bd7: mov    %r15,(%rsp)
  0x0000024807468bdb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807468be5: movabs $0x24807468b85,%rdx  ;   {internal_word}
  0x0000024807468bef: mov    %rsp,%r8
  0x0000024807468bf2: and    $0xfffffffffffffff0,%rsp
  0x0000024807468bf6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807468c00: call   *%r10
  0x0000024807468c03: hlt    
[Deopt Handler Code]
  0x0000024807468c04: movabs $0x24807468c04,%r10  ;   {section_word}
  0x0000024807468c0e: push   %r10
  0x0000024807468c10: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807468c15: hlt    
  0x0000024807468c16: hlt    
  0x0000024807468c17: hlt    
<nmethod compile_id='116' compiler='C1' level='3' entry='0x00000248074684a0' size='3720' address='0x00000248074682d0' relocation_offset='288' consts_offset='432' insts_offset='464' stub_offset='2224' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3640' nul_chk_table_offset='3648' method='jdk/internal/org/objectweb/asm/ClassWriter put (Ljdk/internal/org/objectweb/asm/Item;)V' bytes='152' count='840' iicount='840' stamp='1.536'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807469190:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fea7d90} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00000248074692c0: cmp    (%rdx),%rax
  0x00000248074692c3: mov    0x18(%rcx),%rbx
  0x00000248074692c7: test   %rbx,%rbx
  0x00000248074692ca: je     0x00000248074692d3
  0x00000248074692d0: jmp    *0x40(%rbx)
  0x00000248074692d3: jmp    0x0000024807334fe0  ;   {runtime_call}
<nmethod compile_id='123' compile_kind='c2n' level='0' entry='0x00000248074692c0' size='328' address='0x0000024807469190' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.538'/>
<task_queued compile_id='124' method='java/lang/invoke/LambdaForm$Name access$000 (Ljava/lang/invoke/LambdaForm$Name;)S' bytes='5' count='128' iicount='128' level='1' stamp='1.538' comment='tiered' hot_count='128'/>
<task_queued compile_id='125' method='java/lang/invoke/LambdaForm$BasicType basicTypeChar ()C' bytes='5' count='128' iicount='128' level='1' stamp='1.538' comment='tiered' hot_count='128'/>
<task_queued compile_id='126' method='java/lang/invoke/LambdaForm$BasicType access$100 (Ljava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='1.538' comment='tiered' hot_count='128'/>
<writer thread='14928'/>
<task_queued compile_id='127' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='790' backedge_count='34816' iicount='790' level='3' stamp='1.538' comment='tiered' hot_count='790'/>
<writer thread='27436'/>
<task_queued compile_id='128' method='java/lang/invoke/LambdaForm$BasicType basicTypeClass ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='1.539' comment='tiered' hot_count='128'/>
<writer thread='14928'/>
<task_queued compile_id='129' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='1280' iicount='1280' level='1' stamp='1.539' comment='tiered' hot_count='1280'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807469a90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feaa0d8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807469bc0: mov    0x18(%rcx),%rbx
  0x0000024807469bc4: test   %rbx,%rbx
  0x0000024807469bc7: je     0x0000024807469bd0
  0x0000024807469bcd: jmp    *0x40(%rbx)
  0x0000024807469bd0: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807469bd5: hlt    
  0x0000024807469bd6: hlt    
  0x0000024807469bd7: hlt    
<nmethod compile_id='130' compile_kind='c2n' level='0' entry='0x0000024807469bc0' size='328' address='0x0000024807469a90' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.541'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807469c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x80]  (sp of caller)
  0x0000024807469e00: mov    0x8(%rdx),%r10d
  0x0000024807469e04: shl    $0x3,%r10
  0x0000024807469e08: cmp    %rax,%r10
  0x0000024807469e0b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807469e11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807469e1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807469e20: mov    %eax,-0x6000(%rsp)
  0x0000024807469e27: push   %rbp
  0x0000024807469e28: sub    $0x70,%rsp
  0x0000024807469e2c: movabs $0x2481fe861a0,%rsi  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807469e36: mov    0xdc(%rsi),%edi
  0x0000024807469e3c: add    $0x8,%edi
  0x0000024807469e3f: mov    %edi,0xdc(%rsi)
  0x0000024807469e45: movabs $0x2481fb0c9c0,%rsi  ;   {metadata({method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807469e4f: and    $0x1ff8,%edi
  0x0000024807469e55: cmp    $0x0,%edi
  0x0000024807469e58: je     0x000002480746a5d6  ;*aload_0
                                                ; - java.lang.Class::getClassLoader@0 (line 678)

  0x0000024807469e5e: mov    %rdx,%rsi
  0x0000024807469e61: movabs $0x2481fe861a0,%rdi  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807469e6b: mov    0x8(%rsi),%esi
  0x0000024807469e6e: shl    $0x3,%rsi
  0x0000024807469e72: cmp    0x110(%rdi),%rsi
  0x0000024807469e79: jne    0x0000024807469e88
  0x0000024807469e7b: addq   $0x1,0x118(%rdi)
  0x0000024807469e83: jmp    0x0000024807469eee
  0x0000024807469e88: cmp    0x120(%rdi),%rsi
  0x0000024807469e8f: jne    0x0000024807469e9e
  0x0000024807469e91: addq   $0x1,0x128(%rdi)
  0x0000024807469e99: jmp    0x0000024807469eee
  0x0000024807469e9e: cmpq   $0x0,0x110(%rdi)
  0x0000024807469ea9: jne    0x0000024807469ec2
  0x0000024807469eab: mov    %rsi,0x110(%rdi)
  0x0000024807469eb2: movq   $0x1,0x118(%rdi)
  0x0000024807469ebd: jmp    0x0000024807469eee
  0x0000024807469ec2: cmpq   $0x0,0x120(%rdi)
  0x0000024807469ecd: jne    0x0000024807469ee6
  0x0000024807469ecf: mov    %rsi,0x120(%rdi)
  0x0000024807469ed6: movq   $0x1,0x128(%rdi)
  0x0000024807469ee1: jmp    0x0000024807469eee
  0x0000024807469ee6: addq   $0x1,0x108(%rdi)
  0x0000024807469eee: mov    0x18(%rdx),%esi
  0x0000024807469ef1: shl    $0x3,%rsi          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.Class::getClassLoader@1 (line 678)

  0x0000024807469ef5: mov    %rsi,0x60(%rsp)
  0x0000024807469efa: cmp    $0x0,%rsi
  0x0000024807469efe: movabs $0x2481fe861a0,%rdi  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807469f08: movabs $0x138,%rbx
  0x0000024807469f12: jne    0x0000024807469f22
  0x0000024807469f18: movabs $0x148,%rbx
  0x0000024807469f22: mov    (%rdi,%rbx,1),%rax
  0x0000024807469f26: lea    0x1(%rax),%rax
  0x0000024807469f2a: mov    %rax,(%rdi,%rbx,1)
  0x0000024807469f2e: je     0x000002480746a5c0  ;*ifnonnull
                                                ; - java.lang.Class::getClassLoader@6 (line 679)

  0x0000024807469f34: movabs $0x2481fe861a0,%rdi  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807469f3e: addq   $0x1,0x158(%rdi)
  0x0000024807469f46: movabs $0x2481fd286d8,%rdi  ;   {metadata(method data for {method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000024807469f50: mov    0xdc(%rdi),%ebx
  0x0000024807469f56: add    $0x8,%ebx
  0x0000024807469f59: mov    %ebx,0xdc(%rdi)
  0x0000024807469f5f: movabs $0x2481fb196e0,%rdi  ;   {metadata({method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000024807469f69: and    $0x7ffff8,%ebx
  0x0000024807469f6f: cmp    $0x0,%ebx
  0x0000024807469f72: je     0x000002480746a5ed
  0x0000024807469f78: movabs $0x76b700c78,%rdi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000024807469f82: mov    0x74(%rdi),%edi
  0x0000024807469f85: shl    $0x3,%rdi          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 336)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)

  0x0000024807469f89: cmp    $0x0,%rdi
  0x0000024807469f8d: movabs $0x2481fe861a0,%rdi  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807469f97: movabs $0x168,%rbx
  0x0000024807469fa1: je     0x0000024807469fb1
  0x0000024807469fa7: movabs $0x178,%rbx
  0x0000024807469fb1: mov    (%rdi,%rbx,1),%rax
  0x0000024807469fb5: lea    0x1(%rax),%rax
  0x0000024807469fb9: mov    %rax,(%rdi,%rbx,1)
  0x0000024807469fbd: je     0x000002480746a5b1  ;*ifnull
                                                ; - java.lang.Class::getClassLoader@16 (line 682)

  0x0000024807469fc3: movabs $0x2481fe861a0,%rdi  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807469fcd: addq   $0x1,0x188(%rdi)
  0x0000024807469fd5: nop
  0x0000024807469fd6: nop
  0x0000024807469fd7: call   0x0000024807376360  ; OopMap{[96]=Oop off=476}
                                                ;*invokestatic getCallerClass
                                                ; - java.lang.Class::getClassLoader@20 (line 683)
                                                ;   {static_call}
  0x0000024807469fdc: movabs $0x2481fe861a0,%r8  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807469fe6: addq   $0x1,0x198(%r8)
  0x0000024807469fee: movabs $0x2481fea8ed8,%r8  ;   {metadata(method data for {method} {0x000002481fb16a70} &apos;checkClassLoaderPermission&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x0000024807469ff8: mov    0xdc(%r8),%edx
  0x0000024807469fff: add    $0x8,%edx
  0x000002480746a002: mov    %edx,0xdc(%r8)
  0x000002480746a009: movabs $0x2481fb16a68,%r8  ;   {metadata({method} {0x000002481fb16a70} &apos;checkClassLoaderPermission&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a013: and    $0x7ffff8,%edx
  0x000002480746a019: cmp    $0x0,%edx
  0x000002480746a01c: je     0x000002480746a604
  0x000002480746a022: movabs $0x2481fea8ed8,%r8  ;   {metadata(method data for {method} {0x000002481fb16a70} &apos;checkClassLoaderPermission&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a02c: addq   $0x1,0x108(%r8)
  0x000002480746a034: movabs $0x2481fd286d8,%r8  ;   {metadata(method data for {method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000002480746a03e: mov    0xdc(%r8),%edx
  0x000002480746a045: add    $0x8,%edx
  0x000002480746a048: mov    %edx,0xdc(%r8)
  0x000002480746a04f: movabs $0x2481fb196e0,%r8  ;   {metadata({method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000002480746a059: and    $0x7ffff8,%edx
  0x000002480746a05f: cmp    $0x0,%edx
  0x000002480746a062: je     0x000002480746a61b
  0x000002480746a068: movabs $0x76b700c78,%r8   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000002480746a072: mov    0x74(%r8),%edx
  0x000002480746a076: shl    $0x3,%rdx          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 336)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@0 (line 1516)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a07a: cmp    $0x0,%rdx
  0x000002480746a07e: movabs $0x2481fea8ed8,%r8  ;   {metadata(method data for {method} {0x000002481fb16a70} &apos;checkClassLoaderPermission&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a088: movabs $0x118,%rsi
  0x000002480746a092: je     0x000002480746a0a2
  0x000002480746a098: movabs $0x128,%rsi
  0x000002480746a0a2: mov    (%r8,%rsi,1),%rdi
  0x000002480746a0a6: lea    0x1(%rdi),%rdi
  0x000002480746a0aa: mov    %rdi,(%r8,%rsi,1)
  0x000002480746a0ae: je     0x000002480746a5ac  ;*ifnull
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@5 (line 1517)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a0b4: movabs $0x2481fea8ed8,%r8  ;   {metadata(method data for {method} {0x000002481fb16a70} &apos;checkClassLoaderPermission&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a0be: addq   $0x1,0x138(%r8)
  0x000002480746a0c6: movabs $0x2481fea9788,%r8  ;   {metadata(method data for {method} {0x000002481fb169b8} &apos;getClassLoader&apos; &apos;(Ljava/lang/Class;)Ljava/lang/ClassLoader;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a0d0: mov    0xdc(%r8),%esi
  0x000002480746a0d7: add    $0x8,%esi
  0x000002480746a0da: mov    %esi,0xdc(%r8)
  0x000002480746a0e1: movabs $0x2481fb169b0,%r8  ;   {metadata({method} {0x000002481fb169b8} &apos;getClassLoader&apos; &apos;(Ljava/lang/Class;)Ljava/lang/ClassLoader;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a0eb: and    $0x7ffff8,%esi
  0x000002480746a0f1: cmp    $0x0,%esi
  0x000002480746a0f4: je     0x000002480746a632
  0x000002480746a0fa: cmp    $0x0,%rax
  0x000002480746a0fe: movabs $0x2481fea9788,%r8  ;   {metadata(method data for {method} {0x000002481fb169b8} &apos;getClassLoader&apos; &apos;(Ljava/lang/Class;)Ljava/lang/ClassLoader;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a108: movabs $0x108,%rsi
  0x000002480746a112: jne    0x000002480746a122
  0x000002480746a118: movabs $0x118,%rsi
  0x000002480746a122: mov    (%r8,%rsi,1),%rdi
  0x000002480746a126: lea    0x1(%rdi),%rdi
  0x000002480746a12a: mov    %rdi,(%r8,%rsi,1)
  0x000002480746a12e: jne    0x000002480746a143  ;*ifnonnull
                                                ; - java.lang.ClassLoader::getClassLoader@1 (line 1503)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1519)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a134: movabs $0x0,%r8           ;   {oop(NULL)}
  0x000002480746a13e: jmp    0x000002480746a1df  ;*astore_3
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@12 (line 1519)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a143: cmp    (%rax),%rax        ;*invokevirtual getClassLoader0
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1507)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1519)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; implicit exception: dispatches to 0x000002480746a649
  0x000002480746a146: mov    %rax,%r8
  0x000002480746a149: movabs $0x2481fea9788,%rsi  ;   {metadata(method data for {method} {0x000002481fb169b8} &apos;getClassLoader&apos; &apos;(Ljava/lang/Class;)Ljava/lang/ClassLoader;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a153: mov    0x8(%r8),%r8d
  0x000002480746a157: shl    $0x3,%r8
  0x000002480746a15b: cmp    0x130(%rsi),%r8
  0x000002480746a162: jne    0x000002480746a171
  0x000002480746a164: addq   $0x1,0x138(%rsi)
  0x000002480746a16c: jmp    0x000002480746a1d7
  0x000002480746a171: cmp    0x140(%rsi),%r8
  0x000002480746a178: jne    0x000002480746a187
  0x000002480746a17a: addq   $0x1,0x148(%rsi)
  0x000002480746a182: jmp    0x000002480746a1d7
  0x000002480746a187: cmpq   $0x0,0x130(%rsi)
  0x000002480746a192: jne    0x000002480746a1ab
  0x000002480746a194: mov    %r8,0x130(%rsi)
  0x000002480746a19b: movq   $0x1,0x138(%rsi)
  0x000002480746a1a6: jmp    0x000002480746a1d7
  0x000002480746a1ab: cmpq   $0x0,0x140(%rsi)
  0x000002480746a1b6: jne    0x000002480746a1cf
  0x000002480746a1b8: mov    %r8,0x140(%rsi)
  0x000002480746a1bf: movq   $0x1,0x148(%rsi)
  0x000002480746a1ca: jmp    0x000002480746a1d7
  0x000002480746a1cf: addq   $0x1,0x128(%rsi)
  0x000002480746a1d7: mov    0x18(%rax),%r8d
  0x000002480746a1db: shl    $0x3,%r8           ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1507)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1519)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a1df: mov    0x60(%rsp),%rsi
  0x000002480746a1e4: movabs $0x2481fea8ed8,%rdi  ;   {metadata(method data for {method} {0x000002481fb16a70} &apos;checkClassLoaderPermission&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a1ee: addq   $0x1,0x148(%rdi)
  0x000002480746a1f6: movabs $0x2481fea9ad0,%rdi  ;   {metadata(method data for {method} {0x000002481fb16918} &apos;needsClassLoaderPermissionCheck&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a200: mov    0xdc(%rdi),%ebx
  0x000002480746a206: add    $0x8,%ebx
  0x000002480746a209: mov    %ebx,0xdc(%rdi)
  0x000002480746a20f: movabs $0x2481fb16910,%rdi  ;   {metadata({method} {0x000002481fb16918} &apos;needsClassLoaderPermissionCheck&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a219: and    $0x7ffff8,%ebx
  0x000002480746a21f: cmp    $0x0,%ebx
  0x000002480746a222: je     0x000002480746a64e
  0x000002480746a228: cmp    %rsi,%r8
  0x000002480746a22b: movabs $0x2481fea9ad0,%rdi  ;   {metadata(method data for {method} {0x000002481fb16918} &apos;needsClassLoaderPermissionCheck&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a235: movabs $0x108,%rbx
  0x000002480746a23f: jne    0x000002480746a24f
  0x000002480746a245: movabs $0x118,%rbx
  0x000002480746a24f: mov    (%rdi,%rbx,1),%rax
  0x000002480746a253: lea    0x1(%rax),%rax
  0x000002480746a257: mov    %rax,(%rdi,%rbx,1)
  0x000002480746a25b: jne    0x000002480746a26c  ;*if_acmpne
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@2 (line 1491)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a261: mov    $0x0,%r8d
  0x000002480746a267: jmp    0x000002480746a4a8  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a26c: cmp    $0x0,%r8
  0x000002480746a270: movabs $0x2481fea9ad0,%rdi  ;   {metadata(method data for {method} {0x000002481fb16918} &apos;needsClassLoaderPermissionCheck&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a27a: movabs $0x128,%rbx
  0x000002480746a284: jne    0x000002480746a294
  0x000002480746a28a: movabs $0x138,%rbx
  0x000002480746a294: mov    (%rdi,%rbx,1),%rax
  0x000002480746a298: lea    0x1(%rax),%rax
  0x000002480746a29c: mov    %rax,(%rdi,%rbx,1)
  0x000002480746a2a0: jne    0x000002480746a2b1  ;*ifnonnull
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@8 (line 1494)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a2a6: mov    $0x0,%r8d
  0x000002480746a2ac: jmp    0x000002480746a4a8  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a2b1: cmp    (%rsi),%rax        ;*invokevirtual isAncestor
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; implicit exception: dispatches to 0x000002480746a665
  0x000002480746a2b4: mov    %rsi,%rdi
  0x000002480746a2b7: movabs $0x2481fea9ad0,%rbx  ;   {metadata(method data for {method} {0x000002481fb16918} &apos;needsClassLoaderPermissionCheck&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a2c1: mov    0x8(%rdi),%edi
  0x000002480746a2c4: shl    $0x3,%rdi
  0x000002480746a2c8: cmp    0x150(%rbx),%rdi
  0x000002480746a2cf: jne    0x000002480746a2de
  0x000002480746a2d1: addq   $0x1,0x158(%rbx)
  0x000002480746a2d9: jmp    0x000002480746a344
  0x000002480746a2de: cmp    0x160(%rbx),%rdi
  0x000002480746a2e5: jne    0x000002480746a2f4
  0x000002480746a2e7: addq   $0x1,0x168(%rbx)
  0x000002480746a2ef: jmp    0x000002480746a344
  0x000002480746a2f4: cmpq   $0x0,0x150(%rbx)
  0x000002480746a2ff: jne    0x000002480746a318
  0x000002480746a301: mov    %rdi,0x150(%rbx)
  0x000002480746a308: movq   $0x1,0x158(%rbx)
  0x000002480746a313: jmp    0x000002480746a344
  0x000002480746a318: cmpq   $0x0,0x160(%rbx)
  0x000002480746a323: jne    0x000002480746a33c
  0x000002480746a325: mov    %rdi,0x160(%rbx)
  0x000002480746a32c: movq   $0x1,0x168(%rbx)
  0x000002480746a337: jmp    0x000002480746a344
  0x000002480746a33c: addq   $0x1,0x148(%rbx)
  0x000002480746a344: movabs $0x2481fea9cc8,%rdi  ;   {metadata(method data for {method} {0x000002481fb16868} &apos;isAncestor&apos; &apos;(Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a34e: mov    0xdc(%rdi),%ebx
  0x000002480746a354: add    $0x8,%ebx
  0x000002480746a357: mov    %ebx,0xdc(%rdi)
  0x000002480746a35d: movabs $0x2481fb16860,%rdi  ;   {metadata({method} {0x000002481fb16868} &apos;isAncestor&apos; &apos;(Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a367: and    $0x7ffff8,%ebx
  0x000002480746a36d: cmp    $0x0,%ebx
  0x000002480746a370: je     0x000002480746a66a
  0x000002480746a376: mov    %rsi,%rdi
  0x000002480746a379: jmp    0x000002480746a3f2  ;*aload_2
                                                ; - java.lang.ClassLoader::isAncestor@2 (line 1475)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a37e: xchg   %ax,%ax
  0x000002480746a380: movabs $0x2481fea9cc8,%rbx  ;   {metadata(method data for {method} {0x000002481fb16868} &apos;isAncestor&apos; &apos;(Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a38a: mov    0xe0(%rbx),%eax
  0x000002480746a390: add    $0x8,%eax
  0x000002480746a393: mov    %eax,0xe0(%rbx)
  0x000002480746a399: movabs $0x2481fb16860,%rbx  ;   {metadata({method} {0x000002481fb16868} &apos;isAncestor&apos; &apos;(Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a3a3: and    $0xfff8,%eax
  0x000002480746a3a9: cmp    $0x0,%eax
  0x000002480746a3ac: je     0x000002480746a681  ; OopMap{rdx=Oop rsi=Oop [96]=Oop r8=Oop rdi=Oop off=1458}
                                                ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1479)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a3b2: test   %eax,-0x1eba2b8(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480746a3b8: cmp    $0x0,%rdi
  0x000002480746a3bc: movabs $0x2481fea9cc8,%rbx  ;   {metadata(method data for {method} {0x000002481fb16868} &apos;isAncestor&apos; &apos;(Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a3c6: movabs $0x128,%rax
  0x000002480746a3d0: jne    0x000002480746a3e0
  0x000002480746a3d6: movabs $0x138,%rax
  0x000002480746a3e0: mov    (%rbx,%rax,1),%rcx
  0x000002480746a3e4: lea    0x1(%rcx),%rcx
  0x000002480746a3e8: mov    %rcx,(%rbx,%rax,1)
  0x000002480746a3ec: je     0x000002480746a437  ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1479)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a3f2: mov    0xc(%rdi),%edi     ; implicit exception: dispatches to 0x000002480746a698
  0x000002480746a3f5: shl    $0x3,%rdi          ;*getfield parent
                                                ; - java.lang.ClassLoader::isAncestor@3 (line 1475)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a3f9: cmp    %rdi,%r8
  0x000002480746a3fc: movabs $0x2481fea9cc8,%rbx  ;   {metadata(method data for {method} {0x000002481fb16868} &apos;isAncestor&apos; &apos;(Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a406: movabs $0x108,%rax
  0x000002480746a410: jne    0x000002480746a420
  0x000002480746a416: movabs $0x118,%rax
  0x000002480746a420: mov    (%rbx,%rax,1),%rcx
  0x000002480746a424: lea    0x1(%rcx),%rcx
  0x000002480746a428: mov    %rcx,(%rbx,%rax,1)
  0x000002480746a42c: jne    0x000002480746a380
  0x000002480746a432: jmp    0x000002480746a442  ;*if_acmpne
                                                ; - java.lang.ClassLoader::isAncestor@9 (line 1476)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a437: mov    $0x0,%r8d
  0x000002480746a43d: jmp    0x000002480746a448
  0x000002480746a442: mov    $0x1,%r8d
  0x000002480746a448: cmp    $0x0,%r8d
  0x000002480746a44c: movabs $0x2481fea9ad0,%r8  ;   {metadata(method data for {method} {0x000002481fb16918} &apos;needsClassLoaderPermissionCheck&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a456: movabs $0x178,%rdi
  0x000002480746a460: jne    0x000002480746a470
  0x000002480746a466: movabs $0x188,%rdi
  0x000002480746a470: mov    (%r8,%rdi,1),%rbx
  0x000002480746a474: lea    0x1(%rbx),%rbx
  0x000002480746a478: mov    %rbx,(%r8,%rdi,1)
  0x000002480746a47c: jne    0x000002480746a49e  ;*ifne
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@18 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a482: movabs $0x2481fea9ad0,%r8  ;   {metadata(method data for {method} {0x000002481fb16918} &apos;needsClassLoaderPermissionCheck&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a48c: incl   0x198(%r8)
  0x000002480746a493: mov    $0x1,%r8d
  0x000002480746a499: jmp    0x000002480746a4a4  ;*goto
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@22 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a49e: mov    $0x0,%r8d          ;*ireturn
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@26 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a4a4: and    $0x1,%r8d
  0x000002480746a4a8: cmp    $0x0,%r8d
  0x000002480746a4ac: movabs $0x2481fea8ed8,%r8  ;   {metadata(method data for {method} {0x000002481fb16a70} &apos;checkClassLoaderPermission&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a4b6: movabs $0x158,%rdi
  0x000002480746a4c0: je     0x000002480746a4d0
  0x000002480746a4c6: movabs $0x168,%rdi
  0x000002480746a4d0: mov    (%r8,%rdi,1),%rbx
  0x000002480746a4d4: lea    0x1(%rbx),%rbx
  0x000002480746a4d8: mov    %rbx,(%r8,%rdi,1)
  0x000002480746a4dc: je     0x000002480746a5ac  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a4e2: nopw   0x0(%rax,%rax,1)
  0x000002480746a4e8: jmp    0x000002480746a6fa  ;   {no_reloc}
  0x000002480746a4ed: add    %al,(%rax)
  0x000002480746a4ef: add    %al,(%rax)
  0x000002480746a4f1: add    %ah,0xf(%rsi)
  0x000002480746a4f4: (bad)  
  0x000002480746a4f5: add    %r8b,(%rax)
  0x000002480746a4f8: jmp    0x000002480746a715  ; implicit exception: dispatches to 0x000002480746a704
  0x000002480746a4fd: nop
  0x000002480746a4fe: nop
  0x000002480746a4ff: shl    $0x3,%r8           ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1521)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000002480746a503: cmp    (%rdx),%rax        ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1521)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; implicit exception: dispatches to 0x000002480746a71f
  0x000002480746a506: mov    %rdx,%rdi
  0x000002480746a509: movabs $0x2481fea8ed8,%rbx  ;   {metadata(method data for {method} {0x000002481fb16a70} &apos;checkClassLoaderPermission&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x000002480746a513: mov    0x8(%rdi),%edi
  0x000002480746a516: shl    $0x3,%rdi
  0x000002480746a51a: cmp    0x180(%rbx),%rdi
  0x000002480746a521: jne    0x000002480746a530
  0x000002480746a523: addq   $0x1,0x188(%rbx)
  0x000002480746a52b: jmp    0x000002480746a596
  0x000002480746a530: cmp    0x190(%rbx),%rdi
  0x000002480746a537: jne    0x000002480746a546
  0x000002480746a539: addq   $0x1,0x198(%rbx)
  0x000002480746a541: jmp    0x000002480746a596
  0x000002480746a546: cmpq   $0x0,0x180(%rbx)
  0x000002480746a551: jne    0x000002480746a56a
  0x000002480746a553: mov    %rdi,0x180(%rbx)
  0x000002480746a55a: movq   $0x1,0x188(%rbx)
  0x000002480746a565: jmp    0x000002480746a596
  0x000002480746a56a: cmpq   $0x0,0x190(%rbx)
  0x000002480746a575: jne    0x000002480746a58e
  0x000002480746a577: mov    %rdi,0x190(%rbx)
  0x000002480746a57e: movq   $0x1,0x198(%rbx)
  0x000002480746a589: jmp    0x000002480746a596
  0x000002480746a58e: addq   $0x1,0x178(%rbx)
  0x000002480746a596: nop
  0x000002480746a597: nop
  0x000002480746a598: nop
  0x000002480746a599: nop
  0x000002480746a59a: nop
  0x000002480746a59b: nop
  0x000002480746a59c: nop
  0x000002480746a59d: movabs $0xffffffffffffffff,%rax
  0x000002480746a5a7: call   0x0000024807376120  ; OopMap{[96]=Oop off=1964}
                                                ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1521)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {virtual_call}
  0x000002480746a5ac: mov    0x60(%rsp),%rsi
  0x000002480746a5b1: mov    %rsi,%rax
  0x000002480746a5b4: add    $0x70,%rsp
  0x000002480746a5b8: pop    %rbp
  0x000002480746a5b9: test   %eax,-0x1eba4bf(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746a5bf: ret                       ;*areturn
                                                ; - java.lang.Class::getClassLoader@27 (line 685)

  0x000002480746a5c0: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000002480746a5ca: add    $0x70,%rsp
  0x000002480746a5ce: pop    %rbp
  0x000002480746a5cf: test   %eax,-0x1eba4d5(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746a5d5: ret    
  0x000002480746a5d6: mov    %rsi,0x8(%rsp)
  0x000002480746a5db: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746a5e3: call   0x0000024807433da0  ; OopMap{rdx=Oop off=2024}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getClassLoader@-1 (line 678)
                                                ;   {runtime_call}
  0x000002480746a5e8: jmp    0x0000024807469e5e
  0x000002480746a5ed: mov    %rdi,0x8(%rsp)
  0x000002480746a5f2: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746a5fa: call   0x0000024807433da0  ; OopMap{rsi=Oop [96]=Oop off=2047}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 336)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ;   {runtime_call}
  0x000002480746a5ff: jmp    0x0000024807469f78
  0x000002480746a604: mov    %r8,0x8(%rsp)
  0x000002480746a609: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746a611: call   0x0000024807433da0  ; OopMap{[96]=Oop rax=Oop off=2070}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@-1 (line 1516)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a616: jmp    0x000002480746a022
  0x000002480746a61b: mov    %r8,0x8(%rsp)
  0x000002480746a620: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746a628: call   0x0000024807433da0  ; OopMap{[96]=Oop rax=Oop off=2093}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 336)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@0 (line 1516)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a62d: jmp    0x000002480746a068
  0x000002480746a632: mov    %r8,0x8(%rsp)
  0x000002480746a637: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746a63f: call   0x0000024807433da0  ; OopMap{[96]=Oop rdx=Oop rax=Oop off=2116}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::getClassLoader@-1 (line 1503)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1519)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a644: jmp    0x000002480746a0fa
  0x000002480746a649: call   0x000002480742f100  ; OopMap{[96]=Oop rdx=Oop rax=Oop off=2126}
                                                ;*invokevirtual getClassLoader0
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1507)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1519)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a64e: mov    %rdi,0x8(%rsp)
  0x000002480746a653: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746a65b: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop rsi=Oop [96]=Oop off=2144}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@-1 (line 1491)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a660: jmp    0x000002480746a228
  0x000002480746a665: call   0x000002480742f100  ; OopMap{rdx=Oop rsi=Oop [96]=Oop r8=Oop off=2154}
                                                ;*invokevirtual isAncestor
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a66a: mov    %rdi,0x8(%rsp)
  0x000002480746a66f: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746a677: call   0x0000024807433da0  ; OopMap{rdx=Oop rsi=Oop [96]=Oop r8=Oop off=2172}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::isAncestor@-1 (line 1473)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a67c: jmp    0x000002480746a376
  0x000002480746a681: mov    %rbx,0x8(%rsp)
  0x000002480746a686: movq   $0xf,(%rsp)
  0x000002480746a68e: call   0x0000024807433da0  ; OopMap{rdx=Oop rsi=Oop [96]=Oop r8=Oop rdi=Oop off=2195}
                                                ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1479)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a693: jmp    0x000002480746a3b2
  0x000002480746a698: call   0x000002480742f100  ; OopMap{rdx=Oop rsi=Oop [96]=Oop r8=Oop off=2205}
                                                ;*getfield parent
                                                ; - java.lang.ClassLoader::isAncestor@3 (line 1475)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1497)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1520)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a69d: movabs $0x0,%r8           ;   {oop(NULL)}
  0x000002480746a6a7: push   %rax
  0x000002480746a6a8: push   %rbx
  0x000002480746a6a9: mov    0x48(%r8),%rbx
  0x000002480746a6ad: push   %rdi
  0x000002480746a6ae: push   %rsi
  0x000002480746a6af: push   %rdx
  0x000002480746a6b0: push   %rcx
  0x000002480746a6b1: push   %r8
  0x000002480746a6b3: push   %r9
  0x000002480746a6b5: push   %r10
  0x000002480746a6b7: mov    %rsp,%r10
  0x000002480746a6ba: and    $0xfffffffffffffff0,%rsp
  0x000002480746a6be: push   %r10
  0x000002480746a6c0: push   %r11
  0x000002480746a6c2: mov    $0x6,%ecx
  0x000002480746a6c7: movabs $0x7ffe75315540,%r10  ;   {runtime_call}
  0x000002480746a6d1: call   *%r10
  0x000002480746a6d4: pop    %r11
  0x000002480746a6d6: pop    %rsp
  0x000002480746a6d7: pop    %r10
  0x000002480746a6d9: pop    %r9
  0x000002480746a6db: pop    %r8
  0x000002480746a6dd: pop    %rcx
  0x000002480746a6de: pop    %rdx
  0x000002480746a6df: pop    %rsi
  0x000002480746a6e0: pop    %rdi
  0x000002480746a6e1: cmp    0x118(%rbx),%rax
  0x000002480746a6e8: pop    %rbx
  0x000002480746a6e9: pop    %rax
  0x000002480746a6ea: jne    0x000002480746a6fa
  0x000002480746a6f0: jmp    0x000002480746a4f2
  0x000002480746a6f5: mov    $0xa535d00,%eax
  0x000002480746a6fa: call   0x0000024807432fa0  ; OopMap{[96]=Oop rdx=Oop off=2303}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1521)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a6ff: jmp    0x000002480746a4e8
  0x000002480746a704: call   0x000002480742f100  ; OopMap{[96]=Oop rdx=Oop r8=Oop off=2313}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1521)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a709: mov    0x0(%r8),%r8d
  0x000002480746a710: mov    $0x7050c00,%eax
  0x000002480746a715: call   0x0000024807432720  ; OopMap{[96]=Oop rdx=Oop r8=Oop off=2330}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1521)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a71a: jmp    0x000002480746a4f8
  0x000002480746a71f: call   0x000002480742f100  ; OopMap{[96]=Oop rdx=Oop r8=Oop off=2340}
                                                ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1521)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000002480746a724: nop
  0x000002480746a725: nop
  0x000002480746a726: mov    0x308(%r15),%rax
  0x000002480746a72d: movabs $0x0,%r10
  0x000002480746a737: mov    %r10,0x308(%r15)
  0x000002480746a73e: movabs $0x0,%r10
  0x000002480746a748: mov    %r10,0x310(%r15)
  0x000002480746a74f: add    $0x70,%rsp
  0x000002480746a753: pop    %rbp
  0x000002480746a754: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480746a759: hlt    
  0x000002480746a75a: hlt    
  0x000002480746a75b: hlt    
  0x000002480746a75c: hlt    
  0x000002480746a75d: hlt    
  0x000002480746a75e: hlt    
  0x000002480746a75f: hlt    
[Stub Code]
  0x000002480746a760: nop                       ;   {no_reloc}
  0x000002480746a761: nop
  0x000002480746a762: nop
  0x000002480746a763: nop
  0x000002480746a764: nop
  0x000002480746a765: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746a76f: jmp    0x000002480746a76f  ;   {runtime_call}
  0x000002480746a774: nop
  0x000002480746a775: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746a77f: jmp    0x000002480746a77f  ;   {runtime_call}
[Exception Handler]
  0x000002480746a784: call   0x0000024807431320  ;   {runtime_call}
  0x000002480746a789: mov    %rsp,-0x28(%rsp)
  0x000002480746a78e: sub    $0x80,%rsp
  0x000002480746a795: mov    %rax,0x78(%rsp)
  0x000002480746a79a: mov    %rcx,0x70(%rsp)
  0x000002480746a79f: mov    %rdx,0x68(%rsp)
  0x000002480746a7a4: mov    %rbx,0x60(%rsp)
  0x000002480746a7a9: mov    %rbp,0x50(%rsp)
  0x000002480746a7ae: mov    %rsi,0x48(%rsp)
  0x000002480746a7b3: mov    %rdi,0x40(%rsp)
  0x000002480746a7b8: mov    %r8,0x38(%rsp)
  0x000002480746a7bd: mov    %r9,0x30(%rsp)
  0x000002480746a7c2: mov    %r10,0x28(%rsp)
  0x000002480746a7c7: mov    %r11,0x20(%rsp)
  0x000002480746a7cc: mov    %r12,0x18(%rsp)
  0x000002480746a7d1: mov    %r13,0x10(%rsp)
  0x000002480746a7d6: mov    %r14,0x8(%rsp)
  0x000002480746a7db: mov    %r15,(%rsp)
  0x000002480746a7df: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480746a7e9: movabs $0x2480746a789,%rdx  ;   {internal_word}
  0x000002480746a7f3: mov    %rsp,%r8
  0x000002480746a7f6: and    $0xfffffffffffffff0,%rsp
  0x000002480746a7fa: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480746a804: call   *%r10
  0x000002480746a807: hlt    
[Deopt Handler Code]
  0x000002480746a808: movabs $0x2480746a808,%r10  ;   {section_word}
  0x000002480746a812: push   %r10
  0x000002480746a814: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480746a819: hlt    
  0x000002480746a81a: hlt    
  0x000002480746a81b: hlt    
  0x000002480746a81c: hlt    
  0x000002480746a81d: hlt    
  0x000002480746a81e: hlt    
  0x000002480746a81f: hlt    
<nmethod compile_id='112' compiler='C1' level='3' entry='0x0000024807469e00' size='4400' address='0x0000024807469c10' relocation_offset='288' insts_offset='496' stub_offset='2896' scopes_data_offset='3144' scopes_pcs_offset='3592' dependencies_offset='4344' nul_chk_table_offset='4352' method='java/lang/Class getClassLoader ()Ljava/lang/ClassLoader;' bytes='28' count='734' iicount='734' stamp='1.570'/>
<writer thread='14928'/>
<task_queued compile_id='131' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='896' iicount='896' level='3' stamp='1.570' comment='tiered' hot_count='896'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480746ad50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feaa1f0} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm4:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480746ae80: mov    0x14(%rdx),%ebx
  0x000002480746ae83: shl    $0x3,%rbx
  0x000002480746ae87: mov    0x28(%rbx),%ebx
  0x000002480746ae8a: shl    $0x3,%rbx
  0x000002480746ae8e: mov    0x18(%rbx),%rbx
  0x000002480746ae92: test   %rbx,%rbx
  0x000002480746ae95: je     0x000002480746ae9e
  0x000002480746ae9b: jmp    *0x40(%rbx)
  0x000002480746ae9e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480746aea3: hlt    
  0x000002480746aea4: hlt    
  0x000002480746aea5: hlt    
  0x000002480746aea6: hlt    
  0x000002480746aea7: hlt    
<nmethod compile_id='132' compile_kind='c2n' level='0' entry='0x000002480746ae80' size='344' address='0x000002480746ad50' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.572'/>
<writer thread='14928'/>
<task_queued compile_id='133' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='724' backedge_count='14336' iicount='724' level='3' stamp='1.572' comment='tiered' hot_count='724'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480746aed0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feaa970} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x000002480746b000: mov    0x8(%rsp),%rbx
  0x000002480746b005: cmp    (%rdx),%rax
  0x000002480746b008: mov    0x18(%rbx),%rbx
  0x000002480746b00c: test   %rbx,%rbx
  0x000002480746b00f: je     0x000002480746b018
  0x000002480746b015: jmp    *0x40(%rbx)
  0x000002480746b018: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480746b01d: hlt    
  0x000002480746b01e: hlt    
  0x000002480746b01f: hlt    
<nmethod compile_id='134' compile_kind='c2n' level='0' entry='0x000002480746b000' size='336' address='0x000002480746aed0' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.574'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480746b050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x000002480746b240: mov    0x8(%rdx),%r10d
  0x000002480746b244: shl    $0x3,%r10
  0x000002480746b248: cmp    %rax,%r10
  0x000002480746b24b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480746b251: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480746b25c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480746b260: mov    %eax,-0x6000(%rsp)
  0x000002480746b267: push   %rbp
  0x000002480746b268: sub    $0x90,%rsp
  0x000002480746b26f: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b279: mov    0xdc(%r9),%edi
  0x000002480746b280: add    $0x8,%edi
  0x000002480746b283: mov    %edi,0xdc(%r9)
  0x000002480746b28a: movabs $0x2481fc81220,%r9  ;   {metadata({method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b294: and    $0x1ff8,%edi
  0x000002480746b29a: cmp    $0x0,%edi
  0x000002480746b29d: je     0x000002480746b8a6  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@0 (line 109)

  0x000002480746b2a3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 109)
                                                ; implicit exception: dispatches to 0x000002480746b8bd
  0x000002480746b2a6: mov    %r8,%r9
  0x000002480746b2a9: movabs $0x2481fd14468,%rdi  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b2b3: mov    0x8(%r9),%r9d
  0x000002480746b2b7: shl    $0x3,%r9
  0x000002480746b2bb: cmp    0x110(%rdi),%r9
  0x000002480746b2c2: jne    0x000002480746b2d1
  0x000002480746b2c4: addq   $0x1,0x118(%rdi)
  0x000002480746b2cc: jmp    0x000002480746b337
  0x000002480746b2d1: cmp    0x120(%rdi),%r9
  0x000002480746b2d8: jne    0x000002480746b2e7
  0x000002480746b2da: addq   $0x1,0x128(%rdi)
  0x000002480746b2e2: jmp    0x000002480746b337
  0x000002480746b2e7: cmpq   $0x0,0x110(%rdi)
  0x000002480746b2f2: jne    0x000002480746b30b
  0x000002480746b2f4: mov    %r9,0x110(%rdi)
  0x000002480746b2fb: movq   $0x1,0x118(%rdi)
  0x000002480746b306: jmp    0x000002480746b337
  0x000002480746b30b: cmpq   $0x0,0x120(%rdi)
  0x000002480746b316: jne    0x000002480746b32f
  0x000002480746b318: mov    %r9,0x120(%rdi)
  0x000002480746b31f: movq   $0x1,0x128(%rdi)
  0x000002480746b32a: jmp    0x000002480746b337
  0x000002480746b32f: addq   $0x1,0x108(%rdi)
  0x000002480746b337: movabs $0x2481fc35dc0,%r9  ;   {metadata(method data for {method} {0x000002481fb03c68} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000002480746b341: mov    0xdc(%r9),%edi
  0x000002480746b348: add    $0x8,%edi
  0x000002480746b34b: mov    %edi,0xdc(%r9)
  0x000002480746b352: movabs $0x2481fb03c60,%r9  ;   {metadata({method} {0x000002481fb03c68} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000002480746b35c: and    $0x7ffff8,%edi
  0x000002480746b362: cmp    $0x0,%edi
  0x000002480746b365: je     0x000002480746b8c2
  0x000002480746b36b: mov    0xc(%r8),%r9d
  0x000002480746b36f: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 109)

  0x000002480746b373: mov    0xc(%r9),%esi      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 109)
                                                ; implicit exception: dispatches to 0x000002480746b8d9
  0x000002480746b377: movzwl 0xc(%rdx),%edi     ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalize@6 (line 110)

  0x000002480746b37b: movzwl 0xe(%rdx),%ebx     ;*getfield altSlash
                                                ; - java.io.WinNTFileSystem::normalize@11 (line 111)

  0x000002480746b37f: mov    $0x0,%ecx
  0x000002480746b384: mov    $0x0,%r9d          ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@22 (line 113)

  0x000002480746b38a: nopw   0x0(%rax,%rax,1)
  0x000002480746b390: cmp    %esi,%ecx
  0x000002480746b392: movabs $0x2481fd14468,%rax  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b39c: movabs $0x138,%r11
  0x000002480746b3a6: jge    0x000002480746b3b6
  0x000002480746b3ac: movabs $0x148,%r11
  0x000002480746b3b6: mov    (%rax,%r11,1),%r13
  0x000002480746b3ba: lea    0x1(%r13),%r13
  0x000002480746b3be: mov    %r13,(%rax,%r11,1)
  0x000002480746b3c2: jge    0x000002480746b70f  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 113)

  0x000002480746b3c8: mov    %r8,%rax
  0x000002480746b3cb: movabs $0x2481fd14468,%r11  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b3d5: mov    0x8(%rax),%eax
  0x000002480746b3d8: shl    $0x3,%rax
  0x000002480746b3dc: cmp    0x160(%r11),%rax
  0x000002480746b3e3: jne    0x000002480746b3f2
  0x000002480746b3e5: addq   $0x1,0x168(%r11)
  0x000002480746b3ed: jmp    0x000002480746b458
  0x000002480746b3f2: cmp    0x170(%r11),%rax
  0x000002480746b3f9: jne    0x000002480746b408
  0x000002480746b3fb: addq   $0x1,0x178(%r11)
  0x000002480746b403: jmp    0x000002480746b458
  0x000002480746b408: cmpq   $0x0,0x160(%r11)
  0x000002480746b413: jne    0x000002480746b42c
  0x000002480746b415: mov    %rax,0x160(%r11)
  0x000002480746b41c: movq   $0x1,0x168(%r11)
  0x000002480746b427: jmp    0x000002480746b458
  0x000002480746b42c: cmpq   $0x0,0x170(%r11)
  0x000002480746b437: jne    0x000002480746b450
  0x000002480746b439: mov    %rax,0x170(%r11)
  0x000002480746b440: movq   $0x1,0x178(%r11)
  0x000002480746b44b: jmp    0x000002480746b458
  0x000002480746b450: addq   $0x1,0x158(%r11)
  0x000002480746b458: movabs $0x2481fc35c48,%rax  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480746b462: mov    0xdc(%rax),%r11d
  0x000002480746b469: add    $0x8,%r11d
  0x000002480746b46d: mov    %r11d,0xdc(%rax)
  0x000002480746b474: movabs $0x2481fb03db0,%rax  ;   {metadata({method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480746b47e: and    $0x7ffff8,%r11d
  0x000002480746b485: cmp    $0x0,%r11d
  0x000002480746b489: je     0x000002480746b8de
  0x000002480746b48f: cmp    $0x0,%ecx
  0x000002480746b492: movabs $0x2481fc35c48,%rax  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480746b49c: movabs $0x108,%r11
  0x000002480746b4a6: jl     0x000002480746b4b6
  0x000002480746b4ac: movabs $0x118,%r11
  0x000002480746b4b6: mov    (%rax,%r11,1),%r13
  0x000002480746b4ba: lea    0x1(%r13),%r13
  0x000002480746b4be: mov    %r13,(%rax,%r11,1)
  0x000002480746b4c2: jl     0x000002480746b843  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)

  0x000002480746b4c8: mov    0xc(%r8),%eax
  0x000002480746b4cc: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)

  0x000002480746b4d0: mov    0xc(%rax),%r11d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)
                                                ; implicit exception: dispatches to 0x000002480746b8f5
  0x000002480746b4d4: cmp    %r11d,%ecx
  0x000002480746b4d7: movabs $0x2481fc35c48,%r11  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480746b4e1: movabs $0x128,%r13
  0x000002480746b4eb: jl     0x000002480746b4fb
  0x000002480746b4f1: movabs $0x138,%r13
  0x000002480746b4fb: mov    (%r11,%r13,1),%r14
  0x000002480746b4ff: lea    0x1(%r14),%r14
  0x000002480746b503: mov    %r14,(%r11,%r13,1)
  0x000002480746b507: jge    0x000002480746b843  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)

  0x000002480746b50d: movslq %ecx,%r11
  0x000002480746b510: cmp    0xc(%rax),%ecx
  0x000002480746b513: jae    0x000002480746b8fa
  0x000002480746b519: movzwl 0x10(%rax,%r11,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)

  0x000002480746b51f: and    $0xffff,%eax
  0x000002480746b525: cmp    %ebx,%eax
  0x000002480746b527: movabs $0x2481fd14468,%r11  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b531: movabs $0x188,%r13
  0x000002480746b53b: jne    0x000002480746b54b
  0x000002480746b541: movabs $0x198,%r13
  0x000002480746b54b: mov    (%r11,%r13,1),%r14
  0x000002480746b54f: lea    0x1(%r14),%r14
  0x000002480746b553: mov    %r14,(%r11,%r13,1)
  0x000002480746b557: je     0x000002480746b6d1  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@40 (line 115)

  0x000002480746b55d: cmp    %edi,%eax
  0x000002480746b55f: movabs $0x2481fd14468,%r11  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b569: movabs $0x1f0,%r13
  0x000002480746b573: jne    0x000002480746b583
  0x000002480746b579: movabs $0x200,%r13
  0x000002480746b583: mov    (%r11,%r13,1),%r14
  0x000002480746b587: lea    0x1(%r14),%r14
  0x000002480746b58b: mov    %r14,(%r11,%r13,1)
  0x000002480746b58f: jne    0x000002480746b607  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@68 (line 117)

  0x000002480746b595: cmp    %edi,%r9d
  0x000002480746b598: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b5a2: movabs $0x210,%r11
  0x000002480746b5ac: jne    0x000002480746b5bc
  0x000002480746b5b2: movabs $0x220,%r11
  0x000002480746b5bc: mov    (%r9,%r11,1),%r13
  0x000002480746b5c0: lea    0x1(%r13),%r13
  0x000002480746b5c4: mov    %r13,(%r9,%r11,1)
  0x000002480746b5c8: jne    0x000002480746b607  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 117)

  0x000002480746b5ce: cmp    $0x1,%ecx
  0x000002480746b5d1: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b5db: movabs $0x230,%r11
  0x000002480746b5e5: jle    0x000002480746b5f5
  0x000002480746b5eb: movabs $0x240,%r11
  0x000002480746b5f5: mov    (%r9,%r11,1),%r13
  0x000002480746b5f9: lea    0x1(%r13),%r13
  0x000002480746b5fd: mov    %r13,(%r9,%r11,1)
  0x000002480746b601: jg     0x000002480746b80b  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@80 (line 117)

  0x000002480746b607: cmp    $0x3a,%eax
  0x000002480746b60a: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b614: movabs $0x260,%r11
  0x000002480746b61e: jne    0x000002480746b62e
  0x000002480746b624: movabs $0x270,%r11
  0x000002480746b62e: mov    (%r9,%r11,1),%r13
  0x000002480746b632: lea    0x1(%r13),%r13
  0x000002480746b636: mov    %r13,(%r9,%r11,1)
  0x000002480746b63a: jne    0x000002480746b679  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98 (line 119)

  0x000002480746b640: cmp    $0x1,%ecx
  0x000002480746b643: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b64d: movabs $0x280,%r11
  0x000002480746b657: jle    0x000002480746b667
  0x000002480746b65d: movabs $0x290,%r11
  0x000002480746b667: mov    (%r9,%r11,1),%r13
  0x000002480746b66b: lea    0x1(%r13),%r13
  0x000002480746b66f: mov    %r13,(%r9,%r11,1)
  0x000002480746b673: jg     0x000002480746b7d3  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 119)

  0x000002480746b679: inc    %ecx
  0x000002480746b67b: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b685: mov    0xe0(%r9),%r11d
  0x000002480746b68c: add    $0x8,%r11d
  0x000002480746b690: mov    %r11d,0xe0(%r9)
  0x000002480746b697: movabs $0x2481fc81220,%r9  ;   {metadata({method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b6a1: and    $0xfff8,%r11d
  0x000002480746b6a8: cmp    $0x0,%r11d
  0x000002480746b6ac: je     0x000002480746b903  ; OopMap{rdx=Oop r8=Oop off=1138}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 113)

  0x000002480746b6b2: test   %eax,-0x1ebb5b8(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480746b6b8: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b6c2: incl   0x2b0(%r9)
  0x000002480746b6c9: mov    %rax,%r9
  0x000002480746b6cc: jmp    0x000002480746b390  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 113)

  0x000002480746b6d1: cmp    %edi,%r9d
  0x000002480746b6d4: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b6de: movabs $0x1a8,%rdi
  0x000002480746b6e8: jne    0x000002480746b6f8
  0x000002480746b6ee: movabs $0x1b8,%rdi
  0x000002480746b6f8: mov    (%r9,%rdi,1),%rbx
  0x000002480746b6fc: lea    0x1(%rbx),%rbx
  0x000002480746b700: mov    %rbx,(%r9,%rdi,1)
  0x000002480746b704: jne    0x000002480746b7a0
  0x000002480746b70a: jmp    0x000002480746b78d  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49 (line 116)

  0x000002480746b70f: cmp    %edi,%r9d
  0x000002480746b712: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b71c: movabs $0x2c8,%rdi
  0x000002480746b726: jne    0x000002480746b736
  0x000002480746b72c: movabs $0x2d8,%rdi
  0x000002480746b736: mov    (%r9,%rdi,1),%rbx
  0x000002480746b73a: lea    0x1(%rbx),%rbx
  0x000002480746b73e: mov    %rbx,(%r9,%rdi,1)
  0x000002480746b742: jne    0x000002480746b77b  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 123)

  0x000002480746b748: mov    %rdx,%r9
  0x000002480746b74b: movabs $0x2481fd14468,%rdi  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b755: addq   $0x1,0x2e8(%rdi)
  0x000002480746b75d: mov    %rsi,%rdi
  0x000002480746b760: dec    %edi
  0x000002480746b762: mov    %rsi,%r9           ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 123)

  0x000002480746b765: nop
  0x000002480746b766: nop
  0x000002480746b767: call   0x0000024807375ee0  ; OopMap{off=1324}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 123)
                                                ;   {optimized virtual_call}
  0x000002480746b76c: add    $0x90,%rsp
  0x000002480746b773: pop    %rbp
  0x000002480746b774: test   %eax,-0x1ebb67a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746b77a: ret                       ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@140 (line 123)

  0x000002480746b77b: mov    %r8,%rax
  0x000002480746b77e: add    $0x90,%rsp
  0x000002480746b785: pop    %rbp
  0x000002480746b786: test   %eax,-0x1ebb68c(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746b78c: ret                       ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@142 (line 124)

  0x000002480746b78d: dec    %ecx
  0x000002480746b78f: movabs $0x2481fd14468,%r9  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b799: incl   0x1c8(%r9)         ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@56 (line 116)

  0x000002480746b7a0: mov    %rdx,%r9
  0x000002480746b7a3: movabs $0x2481fd14468,%rdi  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b7ad: addq   $0x1,0x1e0(%rdi)
  0x000002480746b7b5: mov    %rsi,%r9
  0x000002480746b7b8: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 116)

  0x000002480746b7bb: nop
  0x000002480746b7bc: nop
  0x000002480746b7bd: nop
  0x000002480746b7be: nop
  0x000002480746b7bf: call   0x0000024807375ee0  ; OopMap{off=1412}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 116)
                                                ;   {optimized virtual_call}
  0x000002480746b7c4: add    $0x90,%rsp
  0x000002480746b7cb: pop    %rbp
  0x000002480746b7cc: test   %eax,-0x1ebb6d2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746b7d2: ret                       ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 116)

  0x000002480746b7d3: mov    %rdx,%r9
  0x000002480746b7d6: movabs $0x2481fd14468,%rdi  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b7e0: addq   $0x1,0x2a0(%rdi)
  0x000002480746b7e8: mov    %rsi,%r9
  0x000002480746b7eb: mov    $0x0,%edi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 120)

  0x000002480746b7f0: nop
  0x000002480746b7f1: nop
  0x000002480746b7f2: nop
  0x000002480746b7f3: nop
  0x000002480746b7f4: nop
  0x000002480746b7f5: nop
  0x000002480746b7f6: nop
  0x000002480746b7f7: call   0x0000024807375ee0  ; OopMap{off=1468}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 120)
                                                ;   {optimized virtual_call}
  0x000002480746b7fc: add    $0x90,%rsp
  0x000002480746b803: pop    %rbp
  0x000002480746b804: test   %eax,-0x1ebb70a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746b80a: ret                       ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@114 (line 120)

  0x000002480746b80b: mov    %rdx,%r9
  0x000002480746b80e: movabs $0x2481fd14468,%rdi  ;   {metadata(method data for {method} {0x000002481fc81228} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480746b818: addq   $0x1,0x250(%rdi)
  0x000002480746b820: dec    %ecx
  0x000002480746b822: mov    %rsi,%r9
  0x000002480746b825: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 118)

  0x000002480746b828: nop
  0x000002480746b829: nop
  0x000002480746b82a: nop
  0x000002480746b82b: nop
  0x000002480746b82c: nop
  0x000002480746b82d: nop
  0x000002480746b82e: nop
  0x000002480746b82f: call   0x0000024807375ee0  ; OopMap{off=1524}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 118)
                                                ;   {optimized virtual_call}
  0x000002480746b834: add    $0x90,%rsp
  0x000002480746b83b: pop    %rbp
  0x000002480746b83c: test   %eax,-0x1ebb742(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746b842: ret                       ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 118)

  0x000002480746b843: mov    %r9d,0x74(%rsp)
  0x000002480746b848: mov    %ebx,0x70(%rsp)
  0x000002480746b84c: mov    %edi,0x6c(%rsp)
  0x000002480746b850: mov    %esi,0x68(%rsp)
  0x000002480746b854: mov    %r8,0x58(%rsp)
  0x000002480746b859: mov    %rdx,0x60(%rsp)
  0x000002480746b85e: xchg   %ax,%ax
  0x000002480746b860: jmp    0x000002480746b929  ;   {no_reloc}
  0x000002480746b865: add    %al,(%rax)
  0x000002480746b867: add    %al,(%rax)
  0x000002480746b869: add    %ch,%cl
  0x000002480746b86b: (bad)  
  0x000002480746b86c: add    %al,(%rax)
  0x000002480746b86e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)

  0x000002480746b871: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480746b874: rex.W pop %rsp
  0x000002480746b876: ret    
  0x000002480746b877: (bad)  
  0x000002480746b878: rex.W add (%rax),%al
  0x000002480746b87b: add    %cl,-0x7d(%rcx)
  0x000002480746b87e: test   %ecx,0x1(%rax)
  0x000002480746b881: add    %al,(%rax)
  0x000002480746b883: add    %ecx,-0x3f(%rbx,%rcx,4)
  0x000002480746b887: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)

  0x000002480746b88a: mov    %ecx,0x78(%rsp)
  0x000002480746b88e: mov    %rax,0x50(%rsp)
  0x000002480746b893: nop
  0x000002480746b894: nop
  0x000002480746b895: nop
  0x000002480746b896: nop
  0x000002480746b897: call   0x0000024807375ee0  ; OopMap{[88]=Oop [80]=Oop [96]=Oop off=1628}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)
                                                ;   {optimized virtual_call}
  0x000002480746b89c: mov    0x50(%rsp),%rax
  0x000002480746b8a1: jmp    0x000002480746b96b
  0x000002480746b8a6: mov    %r9,0x8(%rsp)
  0x000002480746b8ab: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746b8b3: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=1656}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 109)
                                                ;   {runtime_call}
  0x000002480746b8b8: jmp    0x000002480746b2a3
  0x000002480746b8bd: call   0x000002480742f100  ; OopMap{rdx=Oop r8=Oop off=1666}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 109)
                                                ;   {runtime_call}
  0x000002480746b8c2: mov    %r9,0x8(%rsp)
  0x000002480746b8c7: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746b8cf: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=1684}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 109)
                                                ;   {runtime_call}
  0x000002480746b8d4: jmp    0x000002480746b36b
  0x000002480746b8d9: call   0x000002480742f100  ; OopMap{rdx=Oop r8=Oop off=1694}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 109)
                                                ;   {runtime_call}
  0x000002480746b8de: mov    %rax,0x8(%rsp)
  0x000002480746b8e3: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746b8eb: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=1712}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)
                                                ;   {runtime_call}
  0x000002480746b8f0: jmp    0x000002480746b48f
  0x000002480746b8f5: call   0x000002480742f100  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1722}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)
                                                ;   {runtime_call}
  0x000002480746b8fa: mov    %rcx,(%rsp)
  0x000002480746b8fe: call   0x000002480742e800  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1731}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)
                                                ;   {runtime_call}
  0x000002480746b903: mov    %r9,0x8(%rsp)
  0x000002480746b908: movq   $0x7a,(%rsp)
  0x000002480746b910: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=1749}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 113)
                                                ;   {runtime_call}
  0x000002480746b915: jmp    0x000002480746b6b2
  0x000002480746b91a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480746b924: mov    $0xa050f00,%eax
  0x000002480746b929: call   0x0000024807432b60  ; OopMap{[88]=Oop [96]=Oop off=1774}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)
                                                ;   {runtime_call}
  0x000002480746b92e: jmp    0x000002480746b860
  0x000002480746b933: mov    %rdx,%rdx
  0x000002480746b936: call   0x000002480742f5e0  ; OopMap{[88]=Oop [96]=Oop off=1787}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 114)
                                                ;   {runtime_call}
  0x000002480746b93b: jmp    0x000002480746b86f
  0x000002480746b940: nop
  0x000002480746b941: nop
  0x000002480746b942: mov    0x308(%r15),%rax
  0x000002480746b949: movabs $0x0,%r10
  0x000002480746b953: mov    %r10,0x308(%r15)
  0x000002480746b95a: movabs $0x0,%r10
  0x000002480746b964: mov    %r10,0x310(%r15)
  0x000002480746b96b: add    $0x90,%rsp
  0x000002480746b972: pop    %rbp
  0x000002480746b973: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480746b978: hlt    
  0x000002480746b979: hlt    
  0x000002480746b97a: hlt    
  0x000002480746b97b: hlt    
  0x000002480746b97c: hlt    
  0x000002480746b97d: hlt    
  0x000002480746b97e: hlt    
  0x000002480746b97f: hlt    
[Stub Code]
  0x000002480746b980: nop                       ;   {no_reloc}
  0x000002480746b981: nop
  0x000002480746b982: nop
  0x000002480746b983: nop
  0x000002480746b984: nop
  0x000002480746b985: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746b98f: jmp    0x000002480746b98f  ;   {runtime_call}
  0x000002480746b994: nop
  0x000002480746b995: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746b99f: jmp    0x000002480746b99f  ;   {runtime_call}
  0x000002480746b9a4: nop
  0x000002480746b9a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746b9af: jmp    0x000002480746b9af  ;   {runtime_call}
  0x000002480746b9b4: nop
  0x000002480746b9b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746b9bf: jmp    0x000002480746b9bf  ;   {runtime_call}
  0x000002480746b9c4: nop
  0x000002480746b9c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746b9cf: jmp    0x000002480746b9cf  ;   {runtime_call}
[Exception Handler]
  0x000002480746b9d4: call   0x0000024807431320  ;   {runtime_call}
  0x000002480746b9d9: mov    %rsp,-0x28(%rsp)
  0x000002480746b9de: sub    $0x80,%rsp
  0x000002480746b9e5: mov    %rax,0x78(%rsp)
  0x000002480746b9ea: mov    %rcx,0x70(%rsp)
  0x000002480746b9ef: mov    %rdx,0x68(%rsp)
  0x000002480746b9f4: mov    %rbx,0x60(%rsp)
  0x000002480746b9f9: mov    %rbp,0x50(%rsp)
  0x000002480746b9fe: mov    %rsi,0x48(%rsp)
  0x000002480746ba03: mov    %rdi,0x40(%rsp)
  0x000002480746ba08: mov    %r8,0x38(%rsp)
  0x000002480746ba0d: mov    %r9,0x30(%rsp)
  0x000002480746ba12: mov    %r10,0x28(%rsp)
  0x000002480746ba17: mov    %r11,0x20(%rsp)
  0x000002480746ba1c: mov    %r12,0x18(%rsp)
  0x000002480746ba21: mov    %r13,0x10(%rsp)
  0x000002480746ba26: mov    %r14,0x8(%rsp)
  0x000002480746ba2b: mov    %r15,(%rsp)
  0x000002480746ba2f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480746ba39: movabs $0x2480746b9d9,%rdx  ;   {internal_word}
  0x000002480746ba43: mov    %rsp,%r8
  0x000002480746ba46: and    $0xfffffffffffffff0,%rsp
  0x000002480746ba4a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480746ba54: call   *%r10
  0x000002480746ba57: hlt    
[Deopt Handler Code]
  0x000002480746ba58: movabs $0x2480746ba58,%r10  ;   {section_word}
  0x000002480746ba62: push   %r10
  0x000002480746ba64: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480746ba69: hlt    
  0x000002480746ba6a: hlt    
  0x000002480746ba6b: hlt    
  0x000002480746ba6c: hlt    
  0x000002480746ba6d: hlt    
  0x000002480746ba6e: hlt    
  0x000002480746ba6f: hlt    
<nmethod compile_id='127' compiler='C1' level='3' entry='0x000002480746b240' size='3992' address='0x000002480746b050' relocation_offset='288' insts_offset='496' stub_offset='2352' scopes_data_offset='2624' scopes_pcs_offset='3120' dependencies_offset='3952' nul_chk_table_offset='3960' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='806' backedge_count='35221' iicount='806' stamp='1.600'/>
<writer thread='14928'/>
<task_queued compile_id='135' method='java/lang/Character toLowerCase (C)C' bytes='6' count='2048' iicount='2048' level='3' stamp='1.600' comment='tiered' hot_count='2048'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480746c010:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feab3d8} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm4:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  0x000002480746c140: mov    0x14(%rdx),%ebx
  0x000002480746c143: shl    $0x3,%rbx
  0x000002480746c147: mov    0x28(%rbx),%ebx
  0x000002480746c14a: shl    $0x3,%rbx
  0x000002480746c14e: mov    0x18(%rbx),%rbx
  0x000002480746c152: test   %rbx,%rbx
  0x000002480746c155: je     0x000002480746c15e
  0x000002480746c15b: jmp    *0x40(%rbx)
  0x000002480746c15e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480746c163: hlt    
  0x000002480746c164: hlt    
  0x000002480746c165: hlt    
  0x000002480746c166: hlt    
  0x000002480746c167: hlt    
<nmethod compile_id='136' compile_kind='c2n' level='0' entry='0x000002480746c140' size='344' address='0x000002480746c010' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.603'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480746c190:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/util/Locale&apos;
  #           [sp+0xe0]  (sp of caller)
  0x000002480746c4c0: mov    0x8(%rdx),%r10d
  0x000002480746c4c4: shl    $0x3,%r10
  0x000002480746c4c8: cmp    %rax,%r10
  0x000002480746c4cb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480746c4d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480746c4dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480746c4e0: mov    %eax,-0x6000(%rsp)
  0x000002480746c4e7: push   %rbp
  0x000002480746c4e8: sub    $0xd0,%rsp
  0x000002480746c4ef: mov    %rdx,0x68(%rsp)
  0x000002480746c4f4: mov    %r8,0x78(%rsp)
  0x000002480746c4f9: movabs $0x2481fd57378,%rsi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c503: mov    0xdc(%rsi),%edi
  0x000002480746c509: add    $0x8,%edi
  0x000002480746c50c: mov    %edi,0xdc(%rsi)
  0x000002480746c512: movabs $0x2481fb06918,%rsi  ;   {metadata({method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c51c: and    $0x1ff8,%edi
  0x000002480746c522: cmp    $0x0,%edi
  0x000002480746c525: je     0x000002480746d9a1  ;*aload_1
                                                ; - java.lang.String::toLowerCase@0 (line 2562)

  0x000002480746c52b: cmp    $0x0,%r8
  0x000002480746c52f: movabs $0x2481fd57378,%rsi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c539: movabs $0x108,%rdi
  0x000002480746c543: jne    0x000002480746c553
  0x000002480746c549: movabs $0x118,%rdi
  0x000002480746c553: mov    (%rsi,%rdi,1),%rbx
  0x000002480746c557: lea    0x1(%rbx),%rbx
  0x000002480746c55b: mov    %rbx,(%rsi,%rdi,1)
  0x000002480746c55f: je     0x000002480746d925  ;*ifnonnull
                                                ; - java.lang.String::toLowerCase@1 (line 2562)

  0x000002480746c565: mov    0xc(%rdx),%esi
  0x000002480746c568: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::toLowerCase@13 (line 2567)

  0x000002480746c56c: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)
                                                ; implicit exception: dispatches to 0x000002480746d9b8
  0x000002480746c56f: mov    %esi,0x70(%rsp)
  0x000002480746c573: mov    $0x0,%edi          ;*iload_2
                                                ; - java.lang.String::toLowerCase@20 (line 2571)

  0x000002480746c578: cmp    %esi,%edi
  0x000002480746c57a: movabs $0x2481fd57378,%rbx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c584: movabs $0x138,%rax
  0x000002480746c58e: jge    0x000002480746c59e
  0x000002480746c594: movabs $0x148,%rax
  0x000002480746c59e: mov    (%rbx,%rax,1),%rcx
  0x000002480746c5a2: lea    0x1(%rcx),%rcx
  0x000002480746c5a6: mov    %rcx,(%rbx,%rax,1)
  0x000002480746c5aa: jge    0x000002480746d913  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@22 (line 2571)

  0x000002480746c5b0: mov    0xc(%rdx),%ebx
  0x000002480746c5b3: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.String::toLowerCase@26 (line 2572)

  0x000002480746c5b7: movslq %edi,%rax
  0x000002480746c5ba: cmp    0xc(%rbx),%edi     ; implicit exception: dispatches to 0x000002480746d9bd
  0x000002480746c5bd: jae    0x000002480746d9c7
  0x000002480746c5c3: movzwl 0x10(%rbx,%rax,2),%ebx  ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)

  0x000002480746c5c8: cmp    $0xd800,%ebx
  0x000002480746c5ce: movabs $0x2481fd57378,%rax  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c5d8: movabs $0x158,%rcx
  0x000002480746c5e2: jl     0x000002480746c5f2
  0x000002480746c5e8: movabs $0x168,%rcx
  0x000002480746c5f2: mov    (%rax,%rcx,1),%r9
  0x000002480746c5f6: lea    0x1(%r9),%r9
  0x000002480746c5fa: mov    %r9,(%rax,%rcx,1)
  0x000002480746c5fe: jl     0x000002480746c640  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@37 (line 2573)

  0x000002480746c604: cmp    $0xdbff,%ebx
  0x000002480746c60a: movabs $0x2481fd57378,%rax  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c614: movabs $0x178,%rcx
  0x000002480746c61e: jg     0x000002480746c62e
  0x000002480746c624: movabs $0x188,%rcx
  0x000002480746c62e: mov    (%rax,%rcx,1),%r9
  0x000002480746c632: lea    0x1(%r9),%r9
  0x000002480746c636: mov    %r9,(%rax,%rcx,1)
  0x000002480746c63a: jle    0x000002480746c7ef  ;*if_icmpgt
                                                ; - java.lang.String::toLowerCase@44 (line 2573)

  0x000002480746c640: mov    %edi,0x64(%rsp)
  0x000002480746c644: movabs $0x2481fd57378,%rax  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c64e: addq   $0x1,0x238(%rax)
  0x000002480746c656: movabs $0x2481fd14ad8,%rax  ;   {metadata(method data for {method} {0x000002481fb9cd80} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c660: mov    0xdc(%rax),%ecx
  0x000002480746c666: add    $0x8,%ecx
  0x000002480746c669: mov    %ecx,0xdc(%rax)
  0x000002480746c66f: movabs $0x2481fb9cd78,%rax  ;   {metadata({method} {0x000002481fb9cd80} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c679: and    $0x7ffff8,%ecx
  0x000002480746c67f: cmp    $0x0,%ecx
  0x000002480746c682: je     0x000002480746d9d0
  0x000002480746c688: movabs $0x2481fd14ad8,%rax  ;   {metadata(method data for {method} {0x000002481fb9cd80} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c692: addq   $0x1,0x108(%rax)
  0x000002480746c69a: movabs $0x2481fcf9648,%rax  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c6a4: mov    0xdc(%rax),%ecx
  0x000002480746c6aa: add    $0x8,%ecx
  0x000002480746c6ad: mov    %ecx,0xdc(%rax)
  0x000002480746c6b3: movabs $0x2481fb9ce10,%rax  ;   {metadata({method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c6bd: and    $0x7ffff8,%ecx
  0x000002480746c6c3: cmp    $0x0,%ecx
  0x000002480746c6c6: je     0x000002480746d9e7
  0x000002480746c6cc: movabs $0x2481fcf9648,%rax  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c6d6: addq   $0x1,0x108(%rax)
  0x000002480746c6de: mov    %rbx,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x000002480746c6e1: mov    %ebx,0x60(%rsp)
  0x000002480746c6e5: nop
  0x000002480746c6e6: nop
  0x000002480746c6e7: call   0x0000024807376360  ; OopMap{[104]=Oop [120]=Oop off=556}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {static_call}
  0x000002480746c6ec: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000002480746d9fe
  0x000002480746c6ef: mov    %rax,%r8
  0x000002480746c6f2: movabs $0x2481fcf9648,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c6fc: mov    0x8(%r8),%r8d
  0x000002480746c700: shl    $0x3,%r8
  0x000002480746c704: cmp    0x120(%rdx),%r8
  0x000002480746c70b: jne    0x000002480746c71a
  0x000002480746c70d: addq   $0x1,0x128(%rdx)
  0x000002480746c715: jmp    0x000002480746c780
  0x000002480746c71a: cmp    0x130(%rdx),%r8
  0x000002480746c721: jne    0x000002480746c730
  0x000002480746c723: addq   $0x1,0x138(%rdx)
  0x000002480746c72b: jmp    0x000002480746c780
  0x000002480746c730: cmpq   $0x0,0x120(%rdx)
  0x000002480746c73b: jne    0x000002480746c754
  0x000002480746c73d: mov    %r8,0x120(%rdx)
  0x000002480746c744: movq   $0x1,0x128(%rdx)
  0x000002480746c74f: jmp    0x000002480746c780
  0x000002480746c754: cmpq   $0x0,0x130(%rdx)
  0x000002480746c75f: jne    0x000002480746c778
  0x000002480746c761: mov    %r8,0x130(%rdx)
  0x000002480746c768: movq   $0x1,0x138(%rdx)
  0x000002480746c773: jmp    0x000002480746c780
  0x000002480746c778: addq   $0x1,0x118(%rdx)
  0x000002480746c780: mov    0x60(%rsp),%r8d
  0x000002480746c785: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x000002480746c788: nop
  0x000002480746c789: nop
  0x000002480746c78a: nop
  0x000002480746c78b: nop
  0x000002480746c78c: nop
  0x000002480746c78d: movabs $0xffffffffffffffff,%rax
  0x000002480746c797: call   0x0000024807376120  ; OopMap{[104]=Oop [120]=Oop off=732}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {virtual_call}
  0x000002480746c79c: and    $0xffff,%eax
  0x000002480746c7a2: and    $0xffff,%eax
  0x000002480746c7a8: mov    0x60(%rsp),%ebx
  0x000002480746c7ac: cmp    %eax,%ebx
  0x000002480746c7ae: movabs $0x2481fd57378,%r8  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c7b8: movabs $0x248,%rdx
  0x000002480746c7c2: je     0x000002480746c7d2
  0x000002480746c7c8: movabs $0x258,%rdx
  0x000002480746c7d2: mov    (%r8,%rdx,1),%rsi
  0x000002480746c7d6: lea    0x1(%rsi),%rsi
  0x000002480746c7da: mov    %rsi,(%r8,%rdx,1)
  0x000002480746c7de: mov    0x64(%rsp),%edi
  0x000002480746c7e2: jne    0x000002480746cb0d  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@85 (line 2581)

  0x000002480746c7e8: inc    %edi
  0x000002480746c7ea: jmp    0x000002480746ca9e  ;*goto
                                                ; - java.lang.String::toLowerCase@94 (line 2586)

  0x000002480746c7ef: mov    %edi,0x64(%rsp)
  0x000002480746c7f3: mov    0x68(%rsp),%rdx
  0x000002480746c7f8: movabs $0x2481fd57378,%r8  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c802: mov    0x8(%rdx),%edx
  0x000002480746c805: shl    $0x3,%rdx
  0x000002480746c809: cmp    0x1a0(%r8),%rdx
  0x000002480746c810: jne    0x000002480746c81f
  0x000002480746c812: addq   $0x1,0x1a8(%r8)
  0x000002480746c81a: jmp    0x000002480746c885
  0x000002480746c81f: cmp    0x1b0(%r8),%rdx
  0x000002480746c826: jne    0x000002480746c835
  0x000002480746c828: addq   $0x1,0x1b8(%r8)
  0x000002480746c830: jmp    0x000002480746c885
  0x000002480746c835: cmpq   $0x0,0x1a0(%r8)
  0x000002480746c840: jne    0x000002480746c859
  0x000002480746c842: mov    %rdx,0x1a0(%r8)
  0x000002480746c849: movq   $0x1,0x1a8(%r8)
  0x000002480746c854: jmp    0x000002480746c885
  0x000002480746c859: cmpq   $0x0,0x1b0(%r8)
  0x000002480746c864: jne    0x000002480746c87d
  0x000002480746c866: mov    %rdx,0x1b0(%r8)
  0x000002480746c86d: movq   $0x1,0x1b8(%r8)
  0x000002480746c878: jmp    0x000002480746c885
  0x000002480746c87d: addq   $0x1,0x198(%r8)
  0x000002480746c885: mov    0x64(%rsp),%r8d
  0x000002480746c88a: mov    0x68(%rsp),%rdx    ;*invokevirtual codePointAt
                                                ; - java.lang.String::toLowerCase@49 (line 2575)

  0x000002480746c88f: call   0x0000024807375ee0  ; OopMap{[104]=Oop [120]=Oop off=980}
                                                ;*invokevirtual codePointAt
                                                ; - java.lang.String::toLowerCase@49 (line 2575)
                                                ;   {optimized virtual_call}
  0x000002480746c894: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c89e: addq   $0x1,0x1c8(%rdx)
  0x000002480746c8a6: movabs $0x2481fcf9648,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c8b0: mov    0xdc(%rdx),%esi
  0x000002480746c8b6: add    $0x8,%esi
  0x000002480746c8b9: mov    %esi,0xdc(%rdx)
  0x000002480746c8bf: movabs $0x2481fb9ce10,%rdx  ;   {metadata({method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c8c9: and    $0x7ffff8,%esi
  0x000002480746c8cf: cmp    $0x0,%esi
  0x000002480746c8d2: je     0x000002480746da03
  0x000002480746c8d8: movabs $0x2481fcf9648,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c8e2: addq   $0x1,0x108(%rdx)
  0x000002480746c8ea: mov    %rax,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)

  0x000002480746c8ed: mov    %eax,0x74(%rsp)
  0x000002480746c8f1: nop
  0x000002480746c8f2: nop
  0x000002480746c8f3: nop
  0x000002480746c8f4: nop
  0x000002480746c8f5: nop
  0x000002480746c8f6: nop
  0x000002480746c8f7: call   0x0000024807376360  ; OopMap{[104]=Oop [120]=Oop off=1084}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)
                                                ;   {static_call}
  0x000002480746c8fc: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000002480746da1a
  0x000002480746c8ff: mov    %rax,%r8
  0x000002480746c902: movabs $0x2481fcf9648,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746c90c: mov    0x8(%r8),%r8d
  0x000002480746c910: shl    $0x3,%r8
  0x000002480746c914: cmp    0x120(%rdx),%r8
  0x000002480746c91b: jne    0x000002480746c92a
  0x000002480746c91d: addq   $0x1,0x128(%rdx)
  0x000002480746c925: jmp    0x000002480746c990
  0x000002480746c92a: cmp    0x130(%rdx),%r8
  0x000002480746c931: jne    0x000002480746c940
  0x000002480746c933: addq   $0x1,0x138(%rdx)
  0x000002480746c93b: jmp    0x000002480746c990
  0x000002480746c940: cmpq   $0x0,0x120(%rdx)
  0x000002480746c94b: jne    0x000002480746c964
  0x000002480746c94d: mov    %r8,0x120(%rdx)
  0x000002480746c954: movq   $0x1,0x128(%rdx)
  0x000002480746c95f: jmp    0x000002480746c990
  0x000002480746c964: cmpq   $0x0,0x130(%rdx)
  0x000002480746c96f: jne    0x000002480746c988
  0x000002480746c971: mov    %r8,0x130(%rdx)
  0x000002480746c978: movq   $0x1,0x138(%rdx)
  0x000002480746c983: jmp    0x000002480746c990
  0x000002480746c988: addq   $0x1,0x118(%rdx)
  0x000002480746c990: mov    0x74(%rsp),%r8d
  0x000002480746c995: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)

  0x000002480746c998: nop
  0x000002480746c999: nop
  0x000002480746c99a: nop
  0x000002480746c99b: nop
  0x000002480746c99c: nop
  0x000002480746c99d: movabs $0xffffffffffffffff,%rax
  0x000002480746c9a7: call   0x0000024807376120  ; OopMap{[104]=Oop [120]=Oop off=1260}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)
                                                ;   {virtual_call}
  0x000002480746c9ac: mov    0x74(%rsp),%ebx
  0x000002480746c9b0: cmp    %eax,%ebx
  0x000002480746c9b2: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c9bc: movabs $0x1d8,%rsi
  0x000002480746c9c6: je     0x000002480746c9d6
  0x000002480746c9cc: movabs $0x1e8,%rsi
  0x000002480746c9d6: mov    (%rdx,%rsi,1),%rdi
  0x000002480746c9da: lea    0x1(%rdi),%rdi
  0x000002480746c9de: mov    %rdi,(%rdx,%rsi,1)
  0x000002480746c9e2: jne    0x000002480746caf4  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@61 (line 2576)

  0x000002480746c9e8: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746c9f2: addq   $0x1,0x210(%rdx)
  0x000002480746c9fa: movabs $0x2481feaacb0,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ac28} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746ca04: mov    0xdc(%rdx),%esi
  0x000002480746ca0a: add    $0x8,%esi
  0x000002480746ca0d: mov    %esi,0xdc(%rdx)
  0x000002480746ca13: movabs $0x2481fb9ac20,%rdx  ;   {metadata({method} {0x000002481fb9ac28} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746ca1d: and    $0x7ffff8,%esi
  0x000002480746ca23: cmp    $0x0,%esi
  0x000002480746ca26: je     0x000002480746da1f
  0x000002480746ca2c: cmp    $0x10000,%ebx
  0x000002480746ca32: movabs $0x2481feaacb0,%rbx  ;   {metadata(method data for {method} {0x000002481fb9ac28} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746ca3c: movabs $0x108,%rdx
  0x000002480746ca46: jl     0x000002480746ca56
  0x000002480746ca4c: movabs $0x118,%rdx
  0x000002480746ca56: mov    (%rbx,%rdx,1),%rsi
  0x000002480746ca5a: lea    0x1(%rsi),%rsi
  0x000002480746ca5e: mov    %rsi,(%rbx,%rdx,1)
  0x000002480746ca62: jl     0x000002480746ca82  ;*if_icmplt
                                                ; - java.lang.Character::charCount@3 (line 4835)
                                                ; - java.lang.String::toLowerCase@70 (line 2579)

  0x000002480746ca68: movabs $0x2481feaacb0,%rbx  ;   {metadata(method data for {method} {0x000002481fb9ac28} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746ca72: incl   0x128(%rbx)
  0x000002480746ca78: mov    $0x2,%ebx
  0x000002480746ca7d: jmp    0x000002480746ca87  ;*goto
                                                ; - java.lang.Character::charCount@7 (line 4835)
                                                ; - java.lang.String::toLowerCase@70 (line 2579)

  0x000002480746ca82: mov    $0x1,%ebx          ;*ireturn
                                                ; - java.lang.Character::charCount@11 (line 4835)
                                                ; - java.lang.String::toLowerCase@70 (line 2579)

  0x000002480746ca87: add    0x64(%rsp),%ebx
  0x000002480746ca8b: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746ca95: incl   0x220(%rdx)
  0x000002480746ca9b: mov    %rbx,%rdi          ;*goto
                                                ; - java.lang.String::toLowerCase@75 (line 2580)

  0x000002480746ca9e: movabs $0x2481fd57378,%rbx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746caa8: mov    0xe0(%rbx),%edx
  0x000002480746caae: add    $0x8,%edx
  0x000002480746cab1: mov    %edx,0xe0(%rbx)
  0x000002480746cab7: movabs $0x2481fb06918,%rbx  ;   {metadata({method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cac1: and    $0xfff8,%edx
  0x000002480746cac7: cmp    $0x0,%edx
  0x000002480746caca: je     0x000002480746da36  ; OopMap{[104]=Oop [120]=Oop off=1552}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@94 (line 2586)

  0x000002480746cad0: test   %eax,-0x1ebc9d6(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480746cad6: movabs $0x2481fd57378,%rbx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cae0: incl   0x280(%rbx)
  0x000002480746cae6: mov    0x70(%rsp),%esi
  0x000002480746caea: mov    0x68(%rsp),%rdx
  0x000002480746caef: jmp    0x000002480746c578  ;*goto
                                                ; - java.lang.String::toLowerCase@94 (line 2586)

  0x000002480746caf4: mov    0x64(%rsp),%edi
  0x000002480746caf8: movabs $0x2481fd57378,%rbx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cb02: incl   0x1f8(%rbx)
  0x000002480746cb08: jmp    0x000002480746cb1d  ;*goto
                                                ; - java.lang.String::toLowerCase@64 (line 2577)

  0x000002480746cb0d: movabs $0x2481fd57378,%rbx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cb17: incl   0x268(%rbx)        ;*goto
                                                ; - java.lang.String::toLowerCase@88 (line 2582)

  0x000002480746cb1d: mov    0x68(%rsp),%rdx
  0x000002480746cb22: mov    0x70(%rsp),%ebx
  0x000002480746cb26: mov    %rdx,%r11
  0x000002480746cb29: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480746cb33: mov    %rdi,%r13
  0x000002480746cb36: movslq %ebx,%rbx
  0x000002480746cb39: mov    %rbx,%rdi
  0x000002480746cb3c: cmp    $0xffffff,%rbx
  0x000002480746cb43: ja     0x000002480746da4d
  0x000002480746cb49: movabs $0x17,%rsi
  0x000002480746cb53: lea    (%rsi,%rbx,2),%rsi
  0x000002480746cb57: and    $0xfffffffffffffff8,%rsi
  0x000002480746cb5b: mov    0x60(%r15),%rax
  0x000002480746cb5f: lea    (%rax,%rsi,1),%rsi
  0x000002480746cb63: cmp    0x70(%r15),%rsi
  0x000002480746cb67: ja     0x000002480746da4d
  0x000002480746cb6d: mov    %rsi,0x60(%r15)
  0x000002480746cb71: sub    %rax,%rsi
  0x000002480746cb74: movq   $0x1,(%rax)
  0x000002480746cb7b: mov    %rdx,%rcx
  0x000002480746cb7e: shr    $0x3,%rcx
  0x000002480746cb82: mov    %ecx,0x8(%rax)
  0x000002480746cb85: mov    %ebx,0xc(%rax)
  0x000002480746cb88: sub    $0x10,%rsi
  0x000002480746cb8c: je     0x000002480746cba3
  0x000002480746cb92: xor    %rbx,%rbx
  0x000002480746cb95: shr    $0x3,%rsi
  0x000002480746cb99: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480746cb9e: dec    %rsi
  0x000002480746cba1: jne    0x000002480746cb99  ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)

  0x000002480746cba3: mov    0xc(%r11),%edx
  0x000002480746cba7: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::toLowerCase@108 (line 2595)

  0x000002480746cbab: movabs $0x2481fd57378,%r9  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cbb5: addq   $0x1,0x298(%r9)
  0x000002480746cbbd: mov    $0x0,%r8d
  0x000002480746cbc3: mov    %rax,%r9
  0x000002480746cbc6: mov    $0x0,%edi
  0x000002480746cbcb: mov    %r13,%rsi
  0x000002480746cbce: mov    %rax,0x80(%rsp)
  0x000002480746cbd6: mov    %r13d,0x64(%rsp)
  0x000002480746cbdb: test   %rdx,%rdx
  0x000002480746cbde: je     0x000002480746da57
  0x000002480746cbe4: lea    (%r8,%rsi,1),%rcx
  0x000002480746cbe8: cmp    0xc(%rdx),%ecx
  0x000002480746cbeb: ja     0x000002480746da57
  0x000002480746cbf1: lea    (%rdi,%rsi,1),%rcx
  0x000002480746cbf5: cmp    0xc(%r9),%ecx
  0x000002480746cbf9: ja     0x000002480746da57
  0x000002480746cbff: test   %esi,%esi
  0x000002480746cc01: jl     0x000002480746da57
  0x000002480746cc07: je     0x000002480746cc4b
  0x000002480746cc0d: movslq %r8d,%r8
  0x000002480746cc10: movslq %edi,%rdi
  0x000002480746cc13: lea    0x10(%rdx,%r8,2),%rcx
  0x000002480746cc18: lea    0x10(%r9,%rdi,2),%rdx
  0x000002480746cc1d: mov    %rsi,%r8
  0x000002480746cc20: sub    $0x20,%rsp
  0x000002480746cc24: test   $0xf,%esp
  0x000002480746cc2a: je     0x000002480746cc42
  0x000002480746cc30: sub    $0x8,%rsp
  0x000002480746cc34: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480746cc39: add    $0x8,%rsp
  0x000002480746cc3d: jmp    0x000002480746cc47
  0x000002480746cc42: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480746cc47: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x000002480746cc4b: mov    0x78(%rsp),%r8
  0x000002480746cc50: cmp    (%r8),%rax         ;*invokevirtual getLanguage
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ; implicit exception: dispatches to 0x000002480746da61
  0x000002480746cc53: mov    %r8,%rdx
  0x000002480746cc56: movabs $0x2481fd57378,%rsi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cc60: mov    0x8(%rdx),%edx
  0x000002480746cc63: shl    $0x3,%rdx
  0x000002480746cc67: cmp    0x2b0(%rsi),%rdx
  0x000002480746cc6e: jne    0x000002480746cc7d
  0x000002480746cc70: addq   $0x1,0x2b8(%rsi)
  0x000002480746cc78: jmp    0x000002480746cce3
  0x000002480746cc7d: cmp    0x2c0(%rsi),%rdx
  0x000002480746cc84: jne    0x000002480746cc93
  0x000002480746cc86: addq   $0x1,0x2c8(%rsi)
  0x000002480746cc8e: jmp    0x000002480746cce3
  0x000002480746cc93: cmpq   $0x0,0x2b0(%rsi)
  0x000002480746cc9e: jne    0x000002480746ccb7
  0x000002480746cca0: mov    %rdx,0x2b0(%rsi)
  0x000002480746cca7: movq   $0x1,0x2b8(%rsi)
  0x000002480746ccb2: jmp    0x000002480746cce3
  0x000002480746ccb7: cmpq   $0x0,0x2c0(%rsi)
  0x000002480746ccc2: jne    0x000002480746ccdb
  0x000002480746ccc4: mov    %rdx,0x2c0(%rsi)
  0x000002480746cccb: movq   $0x1,0x2c8(%rsi)
  0x000002480746ccd6: jmp    0x000002480746cce3
  0x000002480746ccdb: addq   $0x1,0x2a8(%rsi)
  0x000002480746cce3: movabs $0x2481feaae08,%rdx  ;   {metadata(method data for {method} {0x000002481fcdac68} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x000002480746cced: mov    0xdc(%rdx),%esi
  0x000002480746ccf3: add    $0x8,%esi
  0x000002480746ccf6: mov    %esi,0xdc(%rdx)
  0x000002480746ccfc: movabs $0x2481fcdac60,%rdx  ;   {metadata({method} {0x000002481fcdac68} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x000002480746cd06: and    $0x7ffff8,%esi
  0x000002480746cd0c: cmp    $0x0,%esi
  0x000002480746cd0f: je     0x000002480746da66
  0x000002480746cd15: mov    0x10(%r8),%edx
  0x000002480746cd19: shl    $0x3,%rdx          ;*getfield baseLocale
                                                ; - java.util.Locale::getLanguage@1 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)

  0x000002480746cd1d: cmp    (%rdx),%rax        ;*invokevirtual getLanguage
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ; implicit exception: dispatches to 0x000002480746da7d
  0x000002480746cd20: mov    %rdx,%rsi
  0x000002480746cd23: movabs $0x2481feaae08,%rdi  ;   {metadata(method data for {method} {0x000002481fcdac68} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x000002480746cd2d: mov    0x8(%rsi),%esi
  0x000002480746cd30: shl    $0x3,%rsi
  0x000002480746cd34: cmp    0x110(%rdi),%rsi
  0x000002480746cd3b: jne    0x000002480746cd4a
  0x000002480746cd3d: addq   $0x1,0x118(%rdi)
  0x000002480746cd45: jmp    0x000002480746cdb0
  0x000002480746cd4a: cmp    0x120(%rdi),%rsi
  0x000002480746cd51: jne    0x000002480746cd60
  0x000002480746cd53: addq   $0x1,0x128(%rdi)
  0x000002480746cd5b: jmp    0x000002480746cdb0
  0x000002480746cd60: cmpq   $0x0,0x110(%rdi)
  0x000002480746cd6b: jne    0x000002480746cd84
  0x000002480746cd6d: mov    %rsi,0x110(%rdi)
  0x000002480746cd74: movq   $0x1,0x118(%rdi)
  0x000002480746cd7f: jmp    0x000002480746cdb0
  0x000002480746cd84: cmpq   $0x0,0x120(%rdi)
  0x000002480746cd8f: jne    0x000002480746cda8
  0x000002480746cd91: mov    %rsi,0x120(%rdi)
  0x000002480746cd98: movq   $0x1,0x128(%rdi)
  0x000002480746cda3: jmp    0x000002480746cdb0
  0x000002480746cda8: addq   $0x1,0x108(%rdi)
  0x000002480746cdb0: mov    0x10(%rdx),%edx
  0x000002480746cdb3: shl    $0x3,%rdx          ;*getfield language
                                                ; - sun.util.locale.BaseLocale::getLanguage@1 (line 92)
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)

  0x000002480746cdb7: movabs $0x76b7953f8,%r10  ;   {oop(&quot;tr&quot;)}
  0x000002480746cdc1: cmp    %r10,%rdx
  0x000002480746cdc4: movabs $0x2481fd57378,%rsi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cdce: movabs $0x2d8,%rdi
  0x000002480746cdd8: je     0x000002480746cde8
  0x000002480746cdde: movabs $0x2e8,%rdi
  0x000002480746cde8: mov    (%rsi,%rdi,1),%rbx
  0x000002480746cdec: lea    0x1(%rbx),%rbx
  0x000002480746cdf0: mov    %rbx,(%rsi,%rdi,1)
  0x000002480746cdf4: je     0x000002480746ce80  ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@129 (line 2598)

  0x000002480746cdfa: movabs $0x76b795428,%r10  ;   {oop(&quot;az&quot;)}
  0x000002480746ce04: cmp    %r10,%rdx
  0x000002480746ce07: movabs $0x2481fd57378,%rsi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746ce11: movabs $0x2f8,%rdi
  0x000002480746ce1b: je     0x000002480746ce2b
  0x000002480746ce21: movabs $0x308,%rdi
  0x000002480746ce2b: mov    (%rsi,%rdi,1),%rbx
  0x000002480746ce2f: lea    0x1(%rbx),%rbx
  0x000002480746ce33: mov    %rbx,(%rsi,%rdi,1)
  0x000002480746ce37: je     0x000002480746ce80  ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@136 (line 2598)

  0x000002480746ce3d: movabs $0x76b795458,%r10  ;   {oop(&quot;lt&quot;)}
  0x000002480746ce47: cmp    %r10,%rdx
  0x000002480746ce4a: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746ce54: movabs $0x318,%rsi
  0x000002480746ce5e: jne    0x000002480746ce6e
  0x000002480746ce64: movabs $0x328,%rsi
  0x000002480746ce6e: mov    (%rdx,%rsi,1),%rdi
  0x000002480746ce72: lea    0x1(%rdi),%rdi
  0x000002480746ce76: mov    %rdi,(%rdx,%rsi,1)
  0x000002480746ce7a: jne    0x000002480746ce9a  ;*if_acmpne
                                                ; - java.lang.String::toLowerCase@143 (line 2598)

  0x000002480746ce80: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746ce8a: incl   0x338(%rdx)
  0x000002480746ce90: mov    $0x1,%esi
  0x000002480746ce95: jmp    0x000002480746ce9f  ;*goto
                                                ; - java.lang.String::toLowerCase@147 (line 2598)

  0x000002480746ce9a: mov    $0x0,%esi          ;*istore
                                                ; - java.lang.String::toLowerCase@151 (line 2598)

  0x000002480746ce9f: mov    0x80(%rsp),%rax
  0x000002480746cea7: mov    0x64(%rsp),%edi
  0x000002480746ceab: mov    $0x0,%ebx          ;*iload
                                                ; - java.lang.String::toLowerCase@156 (line 2604)

  0x000002480746ceb0: mov    %ebx,0x90(%rsp)
  0x000002480746ceb7: mov    %rax,0x98(%rsp)
  0x000002480746cebf: mov    %esi,0x88(%rsp)
  0x000002480746cec6: xchg   %ax,%ax
  0x000002480746cec8: mov    0x68(%rsp),%rdx
  0x000002480746cecd: cmp    0x70(%rsp),%edi
  0x000002480746ced1: movabs $0x2481fd57378,%rcx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cedb: movabs $0x350,%r9
  0x000002480746cee5: jge    0x000002480746cef5
  0x000002480746ceeb: movabs $0x360,%r9
  0x000002480746cef5: mov    (%rcx,%r9,1),%r11
  0x000002480746cef9: lea    0x1(%r11),%r11
  0x000002480746cefd: mov    %r11,(%rcx,%r9,1)
  0x000002480746cf01: jge    0x000002480746d874  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@159 (line 2604)

  0x000002480746cf07: mov    0xc(%rdx),%ecx
  0x000002480746cf0a: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::toLowerCase@163 (line 2605)

  0x000002480746cf0e: movslq %edi,%r9
  0x000002480746cf11: cmp    0xc(%rcx),%edi     ; implicit exception: dispatches to 0x000002480746da82
  0x000002480746cf14: jae    0x000002480746da8c
  0x000002480746cf1a: movzwl 0x10(%rcx,%r9,2),%ecx  ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)

  0x000002480746cf20: cmp    $0xd800,%ecx
  0x000002480746cf26: movabs $0x2481fd57378,%r9  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cf30: movabs $0x370,%r11
  0x000002480746cf3a: jl     0x000002480746cf4a
  0x000002480746cf40: movabs $0x380,%r11
  0x000002480746cf4a: mov    (%r9,%r11,1),%r13
  0x000002480746cf4e: lea    0x1(%r13),%r13
  0x000002480746cf52: mov    %r13,(%r9,%r11,1)
  0x000002480746cf56: jl     0x000002480746cf98  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@176 (line 2606)

  0x000002480746cf5c: cmp    $0xdbff,%ecx
  0x000002480746cf62: movabs $0x2481fd57378,%r9  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cf6c: movabs $0x390,%r11
  0x000002480746cf76: jg     0x000002480746cf86
  0x000002480746cf7c: movabs $0x3a0,%r11
  0x000002480746cf86: mov    (%r9,%r11,1),%r13
  0x000002480746cf8a: lea    0x1(%r13),%r13
  0x000002480746cf8e: mov    %r13,(%r9,%r11,1)
  0x000002480746cf92: jle    0x000002480746cfaa  ;*if_icmpgt
                                                ; - java.lang.String::toLowerCase@184 (line 2606)

  0x000002480746cf98: mov    $0x1,%r11d
  0x000002480746cf9e: mov    %edi,0x8c(%rsp)
  0x000002480746cfa5: jmp    0x000002480746d10f  ;*iload
                                                ; - java.lang.String::toLowerCase@208 (line 2613)

  0x000002480746cfaa: mov    %rdx,%rcx
  0x000002480746cfad: movabs $0x2481fd57378,%r9  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746cfb7: mov    0x8(%rcx),%ecx
  0x000002480746cfba: shl    $0x3,%rcx
  0x000002480746cfbe: cmp    0x3b8(%r9),%rcx
  0x000002480746cfc5: jne    0x000002480746cfd4
  0x000002480746cfc7: addq   $0x1,0x3c0(%r9)
  0x000002480746cfcf: jmp    0x000002480746d03a
  0x000002480746cfd4: cmp    0x3c8(%r9),%rcx
  0x000002480746cfdb: jne    0x000002480746cfea
  0x000002480746cfdd: addq   $0x1,0x3d0(%r9)
  0x000002480746cfe5: jmp    0x000002480746d03a
  0x000002480746cfea: cmpq   $0x0,0x3b8(%r9)
  0x000002480746cff5: jne    0x000002480746d00e
  0x000002480746cff7: mov    %rcx,0x3b8(%r9)
  0x000002480746cffe: movq   $0x1,0x3c0(%r9)
  0x000002480746d009: jmp    0x000002480746d03a
  0x000002480746d00e: cmpq   $0x0,0x3c8(%r9)
  0x000002480746d019: jne    0x000002480746d032
  0x000002480746d01b: mov    %rcx,0x3c8(%r9)
  0x000002480746d022: movq   $0x1,0x3d0(%r9)
  0x000002480746d02d: jmp    0x000002480746d03a
  0x000002480746d032: addq   $0x1,0x3b0(%r9)
  0x000002480746d03a: mov    %rdi,%r8
  0x000002480746d03d: mov    %rdx,%r9
  0x000002480746d040: mov    %r9,%rdx           ;*invokevirtual codePointAt
                                                ; - java.lang.String::toLowerCase@190 (line 2608)

  0x000002480746d043: mov    %edi,0x8c(%rsp)
  0x000002480746d04a: nop
  0x000002480746d04b: nop
  0x000002480746d04c: nop
  0x000002480746d04d: nop
  0x000002480746d04e: nop
  0x000002480746d04f: call   0x0000024807375ee0  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=2964}
                                                ;*invokevirtual codePointAt
                                                ; - java.lang.String::toLowerCase@190 (line 2608)
                                                ;   {optimized virtual_call}
  0x000002480746d054: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d05e: addq   $0x1,0x3e0(%rdx)
  0x000002480746d066: movabs $0x2481feaacb0,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ac28} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746d070: mov    0xdc(%rdx),%r8d
  0x000002480746d077: add    $0x8,%r8d
  0x000002480746d07b: mov    %r8d,0xdc(%rdx)
  0x000002480746d082: movabs $0x2481fb9ac20,%rdx  ;   {metadata({method} {0x000002481fb9ac28} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746d08c: and    $0x7ffff8,%r8d
  0x000002480746d093: cmp    $0x0,%r8d
  0x000002480746d097: je     0x000002480746da95
  0x000002480746d09d: cmp    $0x10000,%eax
  0x000002480746d0a3: movabs $0x2481feaacb0,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ac28} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746d0ad: movabs $0x108,%r8
  0x000002480746d0b7: jl     0x000002480746d0c7
  0x000002480746d0bd: movabs $0x118,%r8
  0x000002480746d0c7: mov    (%rdx,%r8,1),%r9
  0x000002480746d0cb: lea    0x1(%r9),%r9
  0x000002480746d0cf: mov    %r9,(%rdx,%r8,1)
  0x000002480746d0d3: jl     0x000002480746d0f3  ;*if_icmplt
                                                ; - java.lang.Character::charCount@3 (line 4835)
                                                ; - java.lang.String::toLowerCase@197 (line 2609)

  0x000002480746d0d9: movabs $0x2481feaacb0,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ac28} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746d0e3: incl   0x128(%rdx)
  0x000002480746d0e9: mov    $0x2,%edx
  0x000002480746d0ee: jmp    0x000002480746d0f8  ;*goto
                                                ; - java.lang.Character::charCount@7 (line 4835)
                                                ; - java.lang.String::toLowerCase@197 (line 2609)

  0x000002480746d0f3: mov    $0x1,%edx          ;*ireturn
                                                ; - java.lang.Character::charCount@11 (line 4835)
                                                ; - java.lang.String::toLowerCase@197 (line 2609)

  0x000002480746d0f8: movabs $0x2481fd57378,%r8  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d102: incl   0x3f0(%r8)
  0x000002480746d109: mov    %rdx,%r11
  0x000002480746d10c: mov    %rax,%rcx          ;*goto
                                                ; - java.lang.String::toLowerCase@202 (line 2609)

  0x000002480746d10f: mov    0x88(%rsp),%esi
  0x000002480746d116: cmp    $0x0,%esi
  0x000002480746d119: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d123: movabs $0x408,%r8
  0x000002480746d12d: jne    0x000002480746d13d
  0x000002480746d133: movabs $0x418,%r8
  0x000002480746d13d: mov    (%rdx,%r8,1),%r9
  0x000002480746d141: lea    0x1(%r9),%r9
  0x000002480746d145: mov    %r9,(%rdx,%r8,1)
  0x000002480746d149: jne    0x000002480746d1c7  ;*ifne
                                                ; - java.lang.String::toLowerCase@210 (line 2613)

  0x000002480746d14f: cmp    $0x3a3,%ecx
  0x000002480746d155: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d15f: movabs $0x428,%r8
  0x000002480746d169: je     0x000002480746d179
  0x000002480746d16f: movabs $0x438,%r8
  0x000002480746d179: mov    (%rdx,%r8,1),%r9
  0x000002480746d17d: lea    0x1(%r9),%r9
  0x000002480746d181: mov    %r9,(%rdx,%r8,1)
  0x000002480746d185: je     0x000002480746d1c7  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@218 (line 2613)

  0x000002480746d18b: cmp    $0x130,%ecx
  0x000002480746d191: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d19b: movabs $0x448,%r8
  0x000002480746d1a5: jne    0x000002480746d1b5
  0x000002480746d1ab: movabs $0x458,%r8
  0x000002480746d1b5: mov    (%rdx,%r8,1),%r9
  0x000002480746d1b9: lea    0x1(%r9),%r9
  0x000002480746d1bd: mov    %r9,(%rdx,%r8,1)
  0x000002480746d1c1: jne    0x000002480746d219  ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@226 (line 2613)

  0x000002480746d1c7: mov    %r11d,0x94(%rsp)
  0x000002480746d1cf: mov    %esi,0x88(%rsp)
  0x000002480746d1d6: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d1e0: addq   $0x1,0x468(%rdx)
  0x000002480746d1e8: mov    0x68(%rsp),%rdx
  0x000002480746d1ed: mov    0x8c(%rsp),%r8d
  0x000002480746d1f5: mov    0x78(%rsp),%r9     ;*invokestatic toLowerCaseEx
                                                ; - java.lang.String::toLowerCase@233 (line 2616)

  0x000002480746d1fa: nop
  0x000002480746d1fb: nop
  0x000002480746d1fc: nop
  0x000002480746d1fd: nop
  0x000002480746d1fe: nop
  0x000002480746d1ff: call   0x0000024807376360  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=3396}
                                                ;*invokestatic toLowerCaseEx
                                                ; - java.lang.String::toLowerCase@233 (line 2616)
                                                ;   {static_call}
  0x000002480746d204: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d20e: incl   0x478(%rdx)
  0x000002480746d214: jmp    0x000002480746d344  ;*goto
                                                ; - java.lang.String::toLowerCase@238 (line 2616)

  0x000002480746d219: mov    %r11d,0x94(%rsp)
  0x000002480746d221: mov    %esi,0x88(%rsp)
  0x000002480746d228: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d232: addq   $0x1,0x490(%rdx)
  0x000002480746d23a: movabs $0x2481fcf9648,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746d244: mov    0xdc(%rdx),%esi
  0x000002480746d24a: add    $0x8,%esi
  0x000002480746d24d: mov    %esi,0xdc(%rdx)
  0x000002480746d253: movabs $0x2481fb9ce10,%rdx  ;   {metadata({method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746d25d: and    $0x7ffff8,%esi
  0x000002480746d263: cmp    $0x0,%esi
  0x000002480746d266: je     0x000002480746daac
  0x000002480746d26c: movabs $0x2481fcf9648,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746d276: addq   $0x1,0x108(%rdx)
  0x000002480746d27e: mov    %rcx,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x000002480746d281: mov    %ecx,0xa0(%rsp)
  0x000002480746d288: nop
  0x000002480746d289: nop
  0x000002480746d28a: nop
  0x000002480746d28b: nop
  0x000002480746d28c: nop
  0x000002480746d28d: nop
  0x000002480746d28e: nop
  0x000002480746d28f: call   0x0000024807376360  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=3540}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {static_call}
  0x000002480746d294: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000002480746dac3
  0x000002480746d297: mov    %rax,%r8
  0x000002480746d29a: movabs $0x2481fcf9648,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746d2a4: mov    0x8(%r8),%r8d
  0x000002480746d2a8: shl    $0x3,%r8
  0x000002480746d2ac: cmp    0x120(%rdx),%r8
  0x000002480746d2b3: jne    0x000002480746d2c2
  0x000002480746d2b5: addq   $0x1,0x128(%rdx)
  0x000002480746d2bd: jmp    0x000002480746d328
  0x000002480746d2c2: cmp    0x130(%rdx),%r8
  0x000002480746d2c9: jne    0x000002480746d2d8
  0x000002480746d2cb: addq   $0x1,0x138(%rdx)
  0x000002480746d2d3: jmp    0x000002480746d328
  0x000002480746d2d8: cmpq   $0x0,0x120(%rdx)
  0x000002480746d2e3: jne    0x000002480746d2fc
  0x000002480746d2e5: mov    %r8,0x120(%rdx)
  0x000002480746d2ec: movq   $0x1,0x128(%rdx)
  0x000002480746d2f7: jmp    0x000002480746d328
  0x000002480746d2fc: cmpq   $0x0,0x130(%rdx)
  0x000002480746d307: jne    0x000002480746d320
  0x000002480746d309: mov    %r8,0x130(%rdx)
  0x000002480746d310: movq   $0x1,0x138(%rdx)
  0x000002480746d31b: jmp    0x000002480746d328
  0x000002480746d320: addq   $0x1,0x118(%rdx)
  0x000002480746d328: mov    0xa0(%rsp),%r8d
  0x000002480746d330: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x000002480746d333: nop
  0x000002480746d334: nop
  0x000002480746d335: movabs $0xffffffffffffffff,%rax
  0x000002480746d33f: call   0x0000024807376120  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=3716}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {virtual_call}
  0x000002480746d344: cmp    $0xffffffff,%eax
  0x000002480746d347: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d351: movabs $0x4a0,%r8
  0x000002480746d35b: je     0x000002480746d36b
  0x000002480746d361: movabs $0x4b0,%r8
  0x000002480746d36b: mov    (%rdx,%r8,1),%r9
  0x000002480746d36f: lea    0x1(%r9),%r9
  0x000002480746d373: mov    %r9,(%rdx,%r8,1)
  0x000002480746d377: je     0x000002480746d3b9  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@251 (line 2620)

  0x000002480746d37d: cmp    $0x10000,%eax
  0x000002480746d383: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d38d: movabs $0x4c0,%r8
  0x000002480746d397: jl     0x000002480746d3a7
  0x000002480746d39d: movabs $0x4d0,%r8
  0x000002480746d3a7: mov    (%rdx,%r8,1),%r9
  0x000002480746d3ab: lea    0x1(%r9),%r9
  0x000002480746d3af: mov    %r9,(%rdx,%r8,1)
  0x000002480746d3b3: jl     0x000002480746d7cc  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@258 (line 2620)

  0x000002480746d3b9: cmp    $0xffffffff,%eax
  0x000002480746d3bc: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d3c6: movabs $0x4e0,%r8
  0x000002480746d3d0: jne    0x000002480746d3e0
  0x000002480746d3d6: movabs $0x4f0,%r8
  0x000002480746d3e0: mov    (%rdx,%r8,1),%r9
  0x000002480746d3e4: lea    0x1(%r9),%r9
  0x000002480746d3e8: mov    %r9,(%rdx,%r8,1)
  0x000002480746d3ec: jne    0x000002480746d431  ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@264 (line 2622)

  0x000002480746d3f2: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d3fc: addq   $0x1,0x500(%rdx)
  0x000002480746d404: mov    0x68(%rsp),%rdx
  0x000002480746d409: mov    0x8c(%rsp),%r8d
  0x000002480746d411: mov    0x78(%rsp),%r9     ;*invokestatic toLowerCaseCharArray
                                                ; - java.lang.String::toLowerCase@271 (line 2624)

  0x000002480746d416: nop
  0x000002480746d417: call   0x0000024807376360  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=3932}
                                                ;*invokestatic toLowerCaseCharArray
                                                ; - java.lang.String::toLowerCase@271 (line 2624)
                                                ;   {static_call}
  0x000002480746d41c: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d426: incl   0x510(%rdx)
  0x000002480746d42c: jmp    0x000002480746d4fc  ;*goto
                                                ; - java.lang.String::toLowerCase@276 (line 2624)

  0x000002480746d431: mov    0x94(%rsp),%r11d
  0x000002480746d439: cmp    $0x2,%r11d
  0x000002480746d43d: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d447: movabs $0x528,%r8
  0x000002480746d451: jne    0x000002480746d461
  0x000002480746d457: movabs $0x538,%r8
  0x000002480746d461: mov    (%rdx,%r8,1),%r9
  0x000002480746d465: lea    0x1(%r9),%r9
  0x000002480746d469: mov    %r9,(%rdx,%r8,1)
  0x000002480746d46d: mov    %r11d,0x94(%rsp)
  0x000002480746d475: jne    0x000002480746d4df  ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@282 (line 2625)

  0x000002480746d47b: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d485: addq   $0x1,0x548(%rdx)
  0x000002480746d48d: mov    0x90(%rsp),%ebx
  0x000002480746d494: add    0x8c(%rsp),%ebx
  0x000002480746d49b: mov    %rax,%rdx
  0x000002480746d49e: mov    0x98(%rsp),%r8
  0x000002480746d4a6: mov    %rbx,%r9           ;*invokestatic toChars
                                                ; - java.lang.String::toLowerCase@296 (line 2626)

  0x000002480746d4a9: nop
  0x000002480746d4aa: nop
  0x000002480746d4ab: nop
  0x000002480746d4ac: nop
  0x000002480746d4ad: nop
  0x000002480746d4ae: nop
  0x000002480746d4af: call   0x0000024807376360  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=4084}
                                                ;*invokestatic toChars
                                                ; - java.lang.String::toLowerCase@296 (line 2626)
                                                ;   {static_call}
  0x000002480746d4b4: sub    0x94(%rsp),%eax
  0x000002480746d4bb: add    0x90(%rsp),%eax
  0x000002480746d4c2: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d4cc: incl   0x558(%rdx)
  0x000002480746d4d2: mov    0x98(%rsp),%rsi
  0x000002480746d4da: jmp    0x000002480746d7ff  ;*goto
                                                ; - java.lang.String::toLowerCase@305 (line 2627)

  0x000002480746d4df: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d4e9: addq   $0x1,0x570(%rdx)
  0x000002480746d4f1: mov    %rax,%rdx          ;*invokestatic toChars
                                                ; - java.lang.String::toLowerCase@310 (line 2629)

  0x000002480746d4f4: nop
  0x000002480746d4f5: nop
  0x000002480746d4f6: nop
  0x000002480746d4f7: call   0x0000024807376360  ; OopMap{[104]=Oop [120]=Oop [152]=Oop off=4156}
                                                ;*invokestatic toChars
                                                ; - java.lang.String::toLowerCase@310 (line 2629)
                                                ;   {static_call}
  0x000002480746d4fc: mov    0xc(%rax),%r11d    ;*arraylength
                                                ; - java.lang.String::toLowerCase@317 (line 2633)
                                                ; implicit exception: dispatches to 0x000002480746dac8
  0x000002480746d500: cmp    0x94(%rsp),%r11d
  0x000002480746d508: movabs $0x2481fd57378,%rbx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d512: movabs $0x580,%rdx
  0x000002480746d51c: jle    0x000002480746d52c
  0x000002480746d522: movabs $0x590,%rdx
  0x000002480746d52c: mov    (%rbx,%rdx,1),%rsi
  0x000002480746d530: lea    0x1(%rsi),%rsi
  0x000002480746d534: mov    %rsi,(%rbx,%rdx,1)
  0x000002480746d538: jg     0x000002480746d55b  ;*if_icmple
                                                ; - java.lang.String::toLowerCase@324 (line 2634)

  0x000002480746d53e: mov    0x98(%rsp),%rsi
  0x000002480746d546: mov    %r11d,0xa4(%rsp)
  0x000002480746d54e: mov    %rax,0xb0(%rsp)
  0x000002480746d556: jmp    0x000002480746d6d9  ;*iconst_0
                                                ; - java.lang.String::toLowerCase@358 (line 2639)

  0x000002480746d55b: mov    %rax,0xb0(%rsp)
  0x000002480746d563: mov    0x98(%rsp),%r8
  0x000002480746d56b: mov    0xc(%r8),%ebx      ;*arraylength
                                                ; - java.lang.String::toLowerCase@329 (line 2635)
                                                ; implicit exception: dispatches to 0x000002480746dacd
  0x000002480746d56f: add    %r11d,%ebx
  0x000002480746d572: sub    0x94(%rsp),%ebx
  0x000002480746d579: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480746d583: movslq %ebx,%rbx
  0x000002480746d586: mov    %rbx,%rdi
  0x000002480746d589: cmp    $0xffffff,%rbx
  0x000002480746d590: ja     0x000002480746dad2
  0x000002480746d596: movabs $0x17,%rsi
  0x000002480746d5a0: lea    (%rsi,%rbx,2),%rsi
  0x000002480746d5a4: and    $0xfffffffffffffff8,%rsi
  0x000002480746d5a8: mov    0x60(%r15),%rax
  0x000002480746d5ac: lea    (%rax,%rsi,1),%rsi
  0x000002480746d5b0: cmp    0x70(%r15),%rsi
  0x000002480746d5b4: ja     0x000002480746dad2
  0x000002480746d5ba: mov    %rsi,0x60(%r15)
  0x000002480746d5be: sub    %rax,%rsi
  0x000002480746d5c1: movq   $0x1,(%rax)
  0x000002480746d5c8: mov    %rdx,%rcx
  0x000002480746d5cb: shr    $0x3,%rcx
  0x000002480746d5cf: mov    %ecx,0x8(%rax)
  0x000002480746d5d2: mov    %ebx,0xc(%rax)
  0x000002480746d5d5: sub    $0x10,%rsi
  0x000002480746d5d9: je     0x000002480746d5f0
  0x000002480746d5df: xor    %rbx,%rbx
  0x000002480746d5e2: shr    $0x3,%rsi
  0x000002480746d5e6: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480746d5eb: dec    %rsi
  0x000002480746d5ee: jne    0x000002480746d5e6  ;*newarray
                                                ; - java.lang.String::toLowerCase@336 (line 2635)

  0x000002480746d5f0: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d5fa: addq   $0x1,0x5a0(%rdx)
  0x000002480746d602: mov    0x90(%rsp),%ebx
  0x000002480746d609: add    0x8c(%rsp),%ebx
  0x000002480746d610: mov    %r8,%rdx
  0x000002480746d613: mov    $0x0,%r8d
  0x000002480746d619: mov    %rax,%r9
  0x000002480746d61c: mov    $0x0,%edi
  0x000002480746d621: mov    %rbx,%rsi
  0x000002480746d624: mov    %r11d,0xa4(%rsp)
  0x000002480746d62c: mov    %rax,0xa8(%rsp)
  0x000002480746d634: mov    0x8(%r9),%ecx
  0x000002480746d638: shl    $0x3,%rcx
  0x000002480746d63c: cmpl   $0x0,0x8(%rcx)
  0x000002480746d643: jge    0x000002480746dadc
  0x000002480746d649: mov    0x8(%rdx),%ecx
  0x000002480746d64c: shl    $0x3,%rcx
  0x000002480746d650: cmpl   $0x0,0x8(%rcx)
  0x000002480746d657: jge    0x000002480746dadc
  0x000002480746d65d: lea    (%r8,%rsi,1),%rcx
  0x000002480746d661: cmp    0xc(%rdx),%ecx
  0x000002480746d664: ja     0x000002480746dadc
  0x000002480746d66a: lea    (%rdi,%rsi,1),%rcx
  0x000002480746d66e: cmp    0xc(%r9),%ecx
  0x000002480746d672: ja     0x000002480746dadc
  0x000002480746d678: test   %esi,%esi
  0x000002480746d67a: jl     0x000002480746dadc
  0x000002480746d680: je     0x000002480746d6d1
  0x000002480746d686: movslq %r8d,%r8
  0x000002480746d689: movslq %edi,%rdi
  0x000002480746d68c: mov    0x8(%rdx),%ecx
  0x000002480746d68f: cmp    0x8(%r9),%ecx
  0x000002480746d693: jne    0x000002480746dadc
  0x000002480746d699: lea    0x10(%rdx,%r8,2),%rcx
  0x000002480746d69e: lea    0x10(%r9,%rdi,2),%rdx
  0x000002480746d6a3: mov    %rsi,%r8
  0x000002480746d6a6: sub    $0x20,%rsp
  0x000002480746d6aa: test   $0xf,%esp
  0x000002480746d6b0: je     0x000002480746d6c8
  0x000002480746d6b6: sub    $0x8,%rsp
  0x000002480746d6ba: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480746d6bf: add    $0x8,%rsp
  0x000002480746d6c3: jmp    0x000002480746d6cd
  0x000002480746d6c8: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480746d6cd: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@351 (line 2636)

  0x000002480746d6d1: mov    0xa8(%rsp),%rsi    ;*iconst_0
                                                ; - java.lang.String::toLowerCase@358 (line 2639)

  0x000002480746d6d9: mov    $0x0,%edx
  0x000002480746d6de: mov    0xa4(%rsp),%r11d
  0x000002480746d6e6: mov    0xb0(%rsp),%rax
  0x000002480746d6ee: jmp    0x000002480746d76b  ;*iload
                                                ; - java.lang.String::toLowerCase@361 (line 2639)

  0x000002480746d6f3: nopl   0x0(%rax,%rax,1)
  0x000002480746d6f8: movslq %edx,%rdi
  0x000002480746d6fb: movzwl 0x10(%rax,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::toLowerCase@382 (line 2640)

  0x000002480746d700: mov    0x90(%rsp),%ebx
  0x000002480746d707: add    0x8c(%rsp),%ebx
  0x000002480746d70e: add    %edx,%ebx
  0x000002480746d710: movslq %ebx,%rcx
  0x000002480746d713: cmp    0xc(%rsi),%ebx     ; implicit exception: dispatches to 0x000002480746dae9
  0x000002480746d716: jae    0x000002480746daf3
  0x000002480746d71c: mov    %di,0x10(%rsi,%rcx,2)  ;*castore
                                                ; - java.lang.String::toLowerCase@383 (line 2640)

  0x000002480746d721: inc    %edx
  0x000002480746d723: movabs $0x2481fd57378,%rdi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d72d: mov    0xe0(%rdi),%ecx
  0x000002480746d733: add    $0x8,%ecx
  0x000002480746d736: mov    %ecx,0xe0(%rdi)
  0x000002480746d73c: movabs $0x2481fb06918,%rdi  ;   {metadata({method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d746: and    $0xfff8,%ecx
  0x000002480746d74c: cmp    $0x0,%ecx
  0x000002480746d74f: je     0x000002480746dafc  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=4757}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@387 (line 2639)

  0x000002480746d755: test   %eax,-0x1ebd65b(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480746d75b: movabs $0x2481fd57378,%rdi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d765: incl   0x5d0(%rdi)        ;*goto
                                                ; - java.lang.String::toLowerCase@387 (line 2639)

  0x000002480746d76b: cmp    %r11d,%edx
  0x000002480746d76e: movabs $0x2481fd57378,%rdi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d778: movabs $0x5b0,%rcx
  0x000002480746d782: jge    0x000002480746d792
  0x000002480746d788: movabs $0x5c0,%rcx
  0x000002480746d792: mov    (%rdi,%rcx,1),%r8
  0x000002480746d796: lea    0x1(%r8),%r8
  0x000002480746d79a: mov    %r8,(%rdi,%rcx,1)
  0x000002480746d79e: jl     0x000002480746d6f8  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@365 (line 2639)

  0x000002480746d7a4: sub    0x94(%rsp),%r11d
  0x000002480746d7ac: add    0x90(%rsp),%r11d
  0x000002480746d7b4: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d7be: incl   0x5e8(%rdx)
  0x000002480746d7c4: mov    %r11,%rax
  0x000002480746d7c7: jmp    0x000002480746d7ff  ;*goto
                                                ; - java.lang.String::toLowerCase@400 (line 2643)

  0x000002480746d7cc: mov    0x98(%rsp),%r8
  0x000002480746d7d4: mov    0x90(%rsp),%ebx
  0x000002480746d7db: add    0x8c(%rsp),%ebx
  0x000002480746d7e2: movslq %ebx,%rdx
  0x000002480746d7e5: cmp    0xc(%r8),%ebx      ; implicit exception: dispatches to 0x000002480746db13
  0x000002480746d7e9: jae    0x000002480746db1d
  0x000002480746d7ef: mov    %ax,0x10(%r8,%rdx,2)  ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)

  0x000002480746d7f5: mov    0x90(%rsp),%eax
  0x000002480746d7fc: mov    %r8,%rsi           ;*iload
                                                ; - java.lang.String::toLowerCase@414 (line 2604)

  0x000002480746d7ff: mov    0x94(%rsp),%r11d
  0x000002480746d807: add    0x8c(%rsp),%r11d
  0x000002480746d80f: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d819: mov    0xe0(%rdx),%edi
  0x000002480746d81f: add    $0x8,%edi
  0x000002480746d822: mov    %edi,0xe0(%rdx)
  0x000002480746d828: movabs $0x2481fb06918,%rdx  ;   {metadata({method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d832: and    $0xfff8,%edi
  0x000002480746d838: cmp    $0x0,%edi
  0x000002480746d83b: je     0x000002480746db26  ; OopMap{[104]=Oop [120]=Oop rsi=Oop off=4993}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@421 (line 2604)

  0x000002480746d841: test   %eax,-0x1ebd747(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480746d847: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d851: incl   0x600(%rdx)
  0x000002480746d857: mov    %r11,%rdi
  0x000002480746d85a: mov    %rax,%rbx
  0x000002480746d85d: mov    %rsi,%r8
  0x000002480746d860: mov    %ebx,0x90(%rsp)
  0x000002480746d867: mov    %r8,0x98(%rsp)
  0x000002480746d86f: jmp    0x000002480746cec8  ;*goto
                                                ; - java.lang.String::toLowerCase@421 (line 2604)

  0x000002480746d874: mov    0x90(%rsp),%ebx
  0x000002480746d87b: mov    0x98(%rsp),%r8
  0x000002480746d883: mov    0x70(%rsp),%r9d
  0x000002480746d888: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000002480746d892: mov    0x60(%r15),%rax
  0x000002480746d896: lea    0x18(%rax),%rdi
  0x000002480746d89a: cmp    0x70(%r15),%rdi
  0x000002480746d89e: ja     0x000002480746db3d
  0x000002480746d8a4: mov    %rdi,0x60(%r15)
  0x000002480746d8a8: mov    0xa8(%rdx),%rcx
  0x000002480746d8af: mov    %rcx,(%rax)
  0x000002480746d8b2: mov    %rdx,%rcx
  0x000002480746d8b5: shr    $0x3,%rcx
  0x000002480746d8b9: mov    %ecx,0x8(%rax)
  0x000002480746d8bc: xor    %rcx,%rcx
  0x000002480746d8bf: mov    %ecx,0xc(%rax)
  0x000002480746d8c2: xor    %rcx,%rcx
  0x000002480746d8c5: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::toLowerCase@424 (line 2647)

  0x000002480746d8c9: mov    %rax,%rdi
  0x000002480746d8cc: movabs $0x2481fd57378,%rdx  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d8d6: addq   $0x1,0x618(%rdx)
  0x000002480746d8de: add    %r9d,%ebx
  0x000002480746d8e1: mov    $0x0,%r9d
  0x000002480746d8e7: mov    %rbx,%rdi
  0x000002480746d8ea: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::toLowerCase@435 (line 2647)

  0x000002480746d8ed: mov    %rax,0xb8(%rsp)
  0x000002480746d8f5: nop
  0x000002480746d8f6: nop
  0x000002480746d8f7: call   0x0000024807375ee0  ; OopMap{[184]=Oop off=5180}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::toLowerCase@435 (line 2647)
                                                ;   {optimized virtual_call}
  0x000002480746d8fc: mov    0xb8(%rsp),%rax
  0x000002480746d904: add    $0xd0,%rsp
  0x000002480746d90b: pop    %rbp
  0x000002480746d90c: test   %eax,-0x1ebd812(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746d912: ret                       ;*areturn
                                                ; - java.lang.String::toLowerCase@438 (line 2647)

  0x000002480746d913: mov    %rdx,%rax
  0x000002480746d916: add    $0xd0,%rsp
  0x000002480746d91d: pop    %rbp
  0x000002480746d91e: test   %eax,-0x1ebd824(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746d924: ret                       ;*areturn
                                                ; - java.lang.String::toLowerCase@98 (line 2587)

  0x000002480746d925: data16 xchg %ax,%ax
  0x000002480746d928: jmp    0x000002480746db59  ;   {no_reloc}
  0x000002480746d92d: add    %al,(%rax)
  0x000002480746d92f: add    %al,(%rax)
  0x000002480746d931: add    %cl,-0x75(%rcx)
  0x000002480746d934: rex.RXB (bad) 
  0x000002480746d936: lea    0x20(%rax),%rdi
  0x000002480746d93a: cmp    0x70(%r15),%rdi
  0x000002480746d93e: ja     0x000002480746db63
  0x000002480746d944: mov    %rdi,0x60(%r15)
  0x000002480746d948: mov    0xa8(%rdx),%rcx
  0x000002480746d94f: mov    %rcx,(%rax)
  0x000002480746d952: mov    %rdx,%rcx
  0x000002480746d955: shr    $0x3,%rcx
  0x000002480746d959: mov    %ecx,0x8(%rax)
  0x000002480746d95c: xor    %rcx,%rcx
  0x000002480746d95f: mov    %ecx,0xc(%rax)
  0x000002480746d962: xor    %rcx,%rcx
  0x000002480746d965: mov    %rcx,0x10(%rax)
  0x000002480746d969: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.String::toLowerCase@4 (line 2563)

  0x000002480746d96d: mov    %rax,%rdx
  0x000002480746d970: movabs $0x2481fd57378,%rsi  ;   {metadata(method data for {method} {0x000002481fb06920} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480746d97a: addq   $0x1,0x128(%rsi)
  0x000002480746d982: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::toLowerCase@8 (line 2563)

  0x000002480746d985: mov    %rax,0xc0(%rsp)
  0x000002480746d98d: nop
  0x000002480746d98e: nop
  0x000002480746d98f: call   0x0000024807375ee0  ; OopMap{[192]=Oop off=5332}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::toLowerCase@8 (line 2563)
                                                ;   {optimized virtual_call}
  0x000002480746d994: mov    0xc0(%rsp),%rax
  0x000002480746d99c: jmp    0x000002480746db9b
  0x000002480746d9a1: mov    %rsi,0x8(%rsp)
  0x000002480746d9a6: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746d9ae: call   0x0000024807433da0  ; OopMap{rdx=Oop [104]=Oop r8=Oop [120]=Oop off=5363}
                                                ;*synchronization entry
                                                ; - java.lang.String::toLowerCase@-1 (line 2562)
                                                ;   {runtime_call}
  0x000002480746d9b3: jmp    0x000002480746c52b
  0x000002480746d9b8: call   0x000002480742f100  ; OopMap{rdx=Oop [104]=Oop r8=Oop [120]=Oop off=5373}
                                                ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)
                                                ;   {runtime_call}
  0x000002480746d9bd: call   0x000002480742f100  ; OopMap{rdx=Oop [104]=Oop [120]=Oop rbx=Oop off=5378}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)
                                                ;   {runtime_call}
  0x000002480746d9c2: call   0x000002480742f100  ; OopMap{rdx=Oop [104]=Oop [120]=Oop rbx=Oop off=5383}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)
                                                ;   {runtime_call}
  0x000002480746d9c7: mov    %rdi,(%rsp)
  0x000002480746d9cb: call   0x000002480742e800  ; OopMap{rdx=Oop [104]=Oop [120]=Oop rbx=Oop off=5392}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)
                                                ;   {runtime_call}
  0x000002480746d9d0: mov    %rax,0x8(%rsp)
  0x000002480746d9d5: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746d9dd: call   0x0000024807433da0  ; OopMap{[104]=Oop [120]=Oop off=5410}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6344)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x000002480746d9e2: jmp    0x000002480746c688
  0x000002480746d9e7: mov    %rax,0x8(%rsp)
  0x000002480746d9ec: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746d9f4: call   0x0000024807433da0  ; OopMap{[104]=Oop [120]=Oop off=5433}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x000002480746d9f9: jmp    0x000002480746c6cc
  0x000002480746d9fe: call   0x000002480742f100  ; OopMap{[104]=Oop [120]=Oop rax=Oop off=5443}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x000002480746da03: mov    %rdx,0x8(%rsp)
  0x000002480746da08: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746da10: call   0x0000024807433da0  ; OopMap{[104]=Oop [120]=Oop off=5461}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6373)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)
                                                ;   {runtime_call}
  0x000002480746da15: jmp    0x000002480746c8d8
  0x000002480746da1a: call   0x000002480742f100  ; OopMap{[104]=Oop [120]=Oop rax=Oop off=5471}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)
                                                ;   {runtime_call}
  0x000002480746da1f: mov    %rdx,0x8(%rsp)
  0x000002480746da24: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746da2c: call   0x0000024807433da0  ; OopMap{[104]=Oop [120]=Oop off=5489}
                                                ;*synchronization entry
                                                ; - java.lang.Character::charCount@-1 (line 4835)
                                                ; - java.lang.String::toLowerCase@70 (line 2579)
                                                ;   {runtime_call}
  0x000002480746da31: jmp    0x000002480746ca2c
  0x000002480746da36: mov    %rbx,0x8(%rsp)
  0x000002480746da3b: movq   $0x5e,(%rsp)
  0x000002480746da43: call   0x0000024807433da0  ; OopMap{[104]=Oop [120]=Oop off=5512}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@94 (line 2586)
                                                ;   {runtime_call}
  0x000002480746da48: jmp    0x000002480746cad0
  0x000002480746da4d: call   0x0000024807430280  ; OopMap{[120]=Oop r11=Oop [104]=Oop off=5522}
                                                ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)
                                                ;   {runtime_call}
  0x000002480746da52: jmp    0x000002480746cba3
  0x000002480746da57: call   0x0000024807376360  ; OopMap{[104]=Oop [128]=Oop [120]=Oop off=5532}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)
                                                ;   {static_call}
  0x000002480746da5c: jmp    0x000002480746cc4b
  0x000002480746da61: call   0x000002480742f100  ; OopMap{[104]=Oop [128]=Oop r8=Oop [120]=Oop off=5542}
                                                ;*invokevirtual getLanguage
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ;   {runtime_call}
  0x000002480746da66: mov    %rdx,0x8(%rsp)
  0x000002480746da6b: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746da73: call   0x0000024807433da0  ; OopMap{[104]=Oop [128]=Oop r8=Oop [120]=Oop off=5560}
                                                ;*synchronization entry
                                                ; - java.util.Locale::getLanguage@-1 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ;   {runtime_call}
  0x000002480746da78: jmp    0x000002480746cd15
  0x000002480746da7d: call   0x000002480742f100  ; OopMap{[104]=Oop [128]=Oop r8=Oop [120]=Oop rdx=Oop off=5570}
                                                ;*invokevirtual getLanguage
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ;   {runtime_call}
  0x000002480746da82: call   0x000002480742f100  ; OopMap{[152]=Oop [120]=Oop rdx=Oop [104]=Oop rcx=Oop off=5575}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ;   {runtime_call}
  0x000002480746da87: call   0x000002480742f100  ; OopMap{[152]=Oop [120]=Oop rdx=Oop [104]=Oop rcx=Oop off=5580}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ;   {runtime_call}
  0x000002480746da8c: mov    %rdi,(%rsp)
  0x000002480746da90: call   0x000002480742e800  ; OopMap{[152]=Oop [120]=Oop rdx=Oop [104]=Oop rcx=Oop off=5589}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ;   {runtime_call}
  0x000002480746da95: mov    %rdx,0x8(%rsp)
  0x000002480746da9a: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746daa2: call   0x0000024807433da0  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=5607}
                                                ;*synchronization entry
                                                ; - java.lang.Character::charCount@-1 (line 4835)
                                                ; - java.lang.String::toLowerCase@197 (line 2609)
                                                ;   {runtime_call}
  0x000002480746daa7: jmp    0x000002480746d09d
  0x000002480746daac: mov    %rdx,0x8(%rsp)
  0x000002480746dab1: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746dab9: call   0x0000024807433da0  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=5630}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6373)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x000002480746dabe: jmp    0x000002480746d26c
  0x000002480746dac3: call   0x000002480742f100  ; OopMap{[104]=Oop [152]=Oop [120]=Oop rax=Oop off=5640}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x000002480746dac8: call   0x000002480742f100  ; OopMap{[104]=Oop [120]=Oop [152]=Oop rax=Oop off=5645}
                                                ;*arraylength
                                                ; - java.lang.String::toLowerCase@317 (line 2633)
                                                ;   {runtime_call}
  0x000002480746dacd: call   0x000002480742f100  ; OopMap{[104]=Oop [120]=Oop r8=Oop [176]=Oop off=5650}
                                                ;*arraylength
                                                ; - java.lang.String::toLowerCase@329 (line 2635)
                                                ;   {runtime_call}
  0x000002480746dad2: call   0x0000024807430280  ; OopMap{[104]=Oop [120]=Oop r8=Oop [176]=Oop off=5655}
                                                ;*newarray
                                                ; - java.lang.String::toLowerCase@336 (line 2635)
                                                ;   {runtime_call}
  0x000002480746dad7: jmp    0x000002480746d5f0
  0x000002480746dadc: nop
  0x000002480746dadd: nop
  0x000002480746dade: nop
  0x000002480746dadf: call   0x0000024807376360  ; OopMap{[104]=Oop [120]=Oop [168]=Oop [176]=Oop off=5668}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@351 (line 2636)
                                                ;   {static_call}
  0x000002480746dae4: jmp    0x000002480746d6d1
  0x000002480746dae9: call   0x000002480742f100  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=5678}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@383 (line 2640)
                                                ;   {runtime_call}
  0x000002480746daee: call   0x000002480742f100  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=5683}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@383 (line 2640)
                                                ;   {runtime_call}
  0x000002480746daf3: mov    %rbx,(%rsp)
  0x000002480746daf7: call   0x000002480742e800  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=5692}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@383 (line 2640)
                                                ;   {runtime_call}
  0x000002480746dafc: mov    %rdi,0x8(%rsp)
  0x000002480746db01: movq   $0x183,(%rsp)
  0x000002480746db09: call   0x0000024807433da0  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=5710}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@387 (line 2639)
                                                ;   {runtime_call}
  0x000002480746db0e: jmp    0x000002480746d755
  0x000002480746db13: call   0x000002480742f100  ; OopMap{[104]=Oop [120]=Oop r8=Oop off=5720}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)
                                                ;   {runtime_call}
  0x000002480746db18: call   0x000002480742f100  ; OopMap{[104]=Oop [120]=Oop r8=Oop off=5725}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)
                                                ;   {runtime_call}
  0x000002480746db1d: mov    %rbx,(%rsp)
  0x000002480746db21: call   0x000002480742e800  ; OopMap{[104]=Oop [120]=Oop r8=Oop off=5734}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)
                                                ;   {runtime_call}
  0x000002480746db26: mov    %rdx,0x8(%rsp)
  0x000002480746db2b: movq   $0x1a5,(%rsp)
  0x000002480746db33: call   0x0000024807433da0  ; OopMap{[104]=Oop [120]=Oop rsi=Oop off=5752}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@421 (line 2604)
                                                ;   {runtime_call}
  0x000002480746db38: jmp    0x000002480746d841
  0x000002480746db3d: mov    %rdx,%rdx
  0x000002480746db40: call   0x000002480742f900  ; OopMap{r8=Oop off=5765}
                                                ;*new  ; - java.lang.String::toLowerCase@424 (line 2647)
                                                ;   {runtime_call}
  0x000002480746db45: jmp    0x000002480746d8c9
  0x000002480746db4a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480746db54: mov    $0xa050f00,%eax
  0x000002480746db59: call   0x0000024807432b60  ; OopMap{off=5790}
                                                ;*new  ; - java.lang.String::toLowerCase@4 (line 2563)
                                                ;   {runtime_call}
  0x000002480746db5e: jmp    0x000002480746d928
  0x000002480746db63: mov    %rdx,%rdx
  0x000002480746db66: call   0x000002480742f900  ; OopMap{off=5803}
                                                ;*new  ; - java.lang.String::toLowerCase@4 (line 2563)
                                                ;   {runtime_call}
  0x000002480746db6b: jmp    0x000002480746d96d
  0x000002480746db70: nop
  0x000002480746db71: nop
  0x000002480746db72: mov    0x308(%r15),%rax
  0x000002480746db79: movabs $0x0,%r10
  0x000002480746db83: mov    %r10,0x308(%r15)
  0x000002480746db8a: movabs $0x0,%r10
  0x000002480746db94: mov    %r10,0x310(%r15)
  0x000002480746db9b: add    $0xd0,%rsp
  0x000002480746dba2: pop    %rbp
  0x000002480746dba3: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480746dba8: hlt    
  0x000002480746dba9: hlt    
  0x000002480746dbaa: hlt    
  0x000002480746dbab: hlt    
  0x000002480746dbac: hlt    
  0x000002480746dbad: hlt    
  0x000002480746dbae: hlt    
  0x000002480746dbaf: hlt    
  0x000002480746dbb0: hlt    
  0x000002480746dbb1: hlt    
  0x000002480746dbb2: hlt    
  0x000002480746dbb3: hlt    
  0x000002480746dbb4: hlt    
  0x000002480746dbb5: hlt    
  0x000002480746dbb6: hlt    
  0x000002480746dbb7: hlt    
  0x000002480746dbb8: hlt    
  0x000002480746dbb9: hlt    
  0x000002480746dbba: hlt    
  0x000002480746dbbb: hlt    
  0x000002480746dbbc: hlt    
  0x000002480746dbbd: hlt    
  0x000002480746dbbe: hlt    
  0x000002480746dbbf: hlt    
[Stub Code]
  0x000002480746dbc0: nop                       ;   {no_reloc}
  0x000002480746dbc1: nop
  0x000002480746dbc2: nop
  0x000002480746dbc3: nop
  0x000002480746dbc4: nop
  0x000002480746dbc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dbcf: jmp    0x000002480746dbcf  ;   {runtime_call}
  0x000002480746dbd4: nop
  0x000002480746dbd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dbdf: jmp    0x000002480746dbdf  ;   {runtime_call}
  0x000002480746dbe4: nop
  0x000002480746dbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dbef: jmp    0x000002480746dbef  ;   {runtime_call}
  0x000002480746dbf4: nop
  0x000002480746dbf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dbff: jmp    0x000002480746dbff  ;   {runtime_call}
  0x000002480746dc04: nop
  0x000002480746dc05: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc0f: jmp    0x000002480746dc0f  ;   {runtime_call}
  0x000002480746dc14: nop
  0x000002480746dc15: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc1f: jmp    0x000002480746dc1f  ;   {runtime_call}
  0x000002480746dc24: nop
  0x000002480746dc25: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc2f: jmp    0x000002480746dc2f  ;   {runtime_call}
  0x000002480746dc34: nop
  0x000002480746dc35: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc3f: jmp    0x000002480746dc3f  ;   {runtime_call}
  0x000002480746dc44: nop
  0x000002480746dc45: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc4f: jmp    0x000002480746dc4f  ;   {runtime_call}
  0x000002480746dc54: nop
  0x000002480746dc55: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc5f: jmp    0x000002480746dc5f  ;   {runtime_call}
  0x000002480746dc64: nop
  0x000002480746dc65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc6f: jmp    0x000002480746dc6f  ;   {runtime_call}
  0x000002480746dc74: nop
  0x000002480746dc75: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc7f: jmp    0x000002480746dc7f  ;   {runtime_call}
  0x000002480746dc84: nop
  0x000002480746dc85: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc8f: jmp    0x000002480746dc8f  ;   {runtime_call}
  0x000002480746dc94: nop
  0x000002480746dc95: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dc9f: jmp    0x000002480746dc9f  ;   {runtime_call}
  0x000002480746dca4: nop
  0x000002480746dca5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dcaf: jmp    0x000002480746dcaf  ;   {runtime_call}
  0x000002480746dcb4: nop
  0x000002480746dcb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746dcbf: jmp    0x000002480746dcbf  ;   {runtime_call}
[Exception Handler]
  0x000002480746dcc4: call   0x0000024807431320  ;   {runtime_call}
  0x000002480746dcc9: mov    %rsp,-0x28(%rsp)
  0x000002480746dcce: sub    $0x80,%rsp
  0x000002480746dcd5: mov    %rax,0x78(%rsp)
  0x000002480746dcda: mov    %rcx,0x70(%rsp)
  0x000002480746dcdf: mov    %rdx,0x68(%rsp)
  0x000002480746dce4: mov    %rbx,0x60(%rsp)
  0x000002480746dce9: mov    %rbp,0x50(%rsp)
  0x000002480746dcee: mov    %rsi,0x48(%rsp)
  0x000002480746dcf3: mov    %rdi,0x40(%rsp)
  0x000002480746dcf8: mov    %r8,0x38(%rsp)
  0x000002480746dcfd: mov    %r9,0x30(%rsp)
  0x000002480746dd02: mov    %r10,0x28(%rsp)
  0x000002480746dd07: mov    %r11,0x20(%rsp)
  0x000002480746dd0c: mov    %r12,0x18(%rsp)
  0x000002480746dd11: mov    %r13,0x10(%rsp)
  0x000002480746dd16: mov    %r14,0x8(%rsp)
  0x000002480746dd1b: mov    %r15,(%rsp)
  0x000002480746dd1f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480746dd29: movabs $0x2480746dcc9,%rdx  ;   {internal_word}
  0x000002480746dd33: mov    %rsp,%r8
  0x000002480746dd36: and    $0xfffffffffffffff0,%rsp
  0x000002480746dd3a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480746dd44: call   *%r10
  0x000002480746dd47: hlt    
[Deopt Handler Code]
  0x000002480746dd48: movabs $0x2480746dd48,%r10  ;   {section_word}
  0x000002480746dd52: push   %r10
  0x000002480746dd54: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480746dd59: hlt    
  0x000002480746dd5a: hlt    
  0x000002480746dd5b: hlt    
  0x000002480746dd5c: hlt    
  0x000002480746dd5d: hlt    
  0x000002480746dd5e: hlt    
  0x000002480746dd5f: hlt    
<nmethod compile_id='133' compiler='C1' level='3' entry='0x000002480746c4c0' size='11480' address='0x000002480746c190' relocation_offset='288' insts_offset='816' stub_offset='6704' scopes_data_offset='7168' scopes_pcs_offset='9032' dependencies_offset='11336' nul_chk_table_offset='11344' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='740' backedge_count='14657' iicount='740' stamp='1.678'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480746ee90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feabe70} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x000002480746efc0: mov    0x10(%rsp),%rbx
  0x000002480746efc5: cmp    (%rdx),%rax
  0x000002480746efc8: mov    0x18(%rbx),%rbx
  0x000002480746efcc: test   %rbx,%rbx
  0x000002480746efcf: je     0x000002480746efd8
  0x000002480746efd5: jmp    *0x40(%rbx)
  0x000002480746efd8: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480746efdd: hlt    
  0x000002480746efde: hlt    
  0x000002480746efdf: hlt    
<nmethod compile_id='137' compile_kind='c2n' level='0' entry='0x000002480746efc0' size='336' address='0x000002480746ee90' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.681'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480746f010:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb9cd80} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x000002480746f180: mov    %eax,-0x6000(%rsp)
  0x000002480746f187: push   %rbp
  0x000002480746f188: sub    $0x40,%rsp
  0x000002480746f18c: movabs $0x2481fd14ad8,%rsi  ;   {metadata(method data for {method} {0x000002481fb9cd80} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746f196: mov    0xdc(%rsi),%edi
  0x000002480746f19c: add    $0x8,%edi
  0x000002480746f19f: mov    %edi,0xdc(%rsi)
  0x000002480746f1a5: movabs $0x2481fb9cd78,%rsi  ;   {metadata({method} {0x000002481fb9cd80} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746f1af: and    $0x1ff8,%edi
  0x000002480746f1b5: cmp    $0x0,%edi
  0x000002480746f1b8: je     0x000002480746f2ec  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6344)

  0x000002480746f1be: movabs $0x2481fd14ad8,%rsi  ;   {metadata(method data for {method} {0x000002481fb9cd80} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746f1c8: addq   $0x1,0x108(%rsi)
  0x000002480746f1d0: movabs $0x2481fcf9648,%rsi  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746f1da: mov    0xdc(%rsi),%edi
  0x000002480746f1e0: add    $0x8,%edi
  0x000002480746f1e3: mov    %edi,0xdc(%rsi)
  0x000002480746f1e9: movabs $0x2481fb9ce10,%rsi  ;   {metadata({method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746f1f3: and    $0x7ffff8,%edi
  0x000002480746f1f9: cmp    $0x0,%edi
  0x000002480746f1fc: je     0x000002480746f303
  0x000002480746f202: movabs $0x2481fcf9648,%rsi  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746f20c: addq   $0x1,0x108(%rsi)
  0x000002480746f214: mov    %rdx,%rsi
  0x000002480746f217: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)

  0x000002480746f21a: mov    %esi,0x28(%rsp)
  0x000002480746f21e: nop
  0x000002480746f21f: call   0x0000024807376360  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ;   {static_call}
  0x000002480746f224: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000002480746f31a
  0x000002480746f227: mov    %rax,%r8
  0x000002480746f22a: movabs $0x2481fcf9648,%rdx  ;   {metadata(method data for {method} {0x000002481fb9ce18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000002480746f234: mov    0x8(%r8),%r8d
  0x000002480746f238: shl    $0x3,%r8
  0x000002480746f23c: cmp    0x120(%rdx),%r8
  0x000002480746f243: jne    0x000002480746f252
  0x000002480746f245: addq   $0x1,0x128(%rdx)
  0x000002480746f24d: jmp    0x000002480746f2b8
  0x000002480746f252: cmp    0x130(%rdx),%r8
  0x000002480746f259: jne    0x000002480746f268
  0x000002480746f25b: addq   $0x1,0x138(%rdx)
  0x000002480746f263: jmp    0x000002480746f2b8
  0x000002480746f268: cmpq   $0x0,0x120(%rdx)
  0x000002480746f273: jne    0x000002480746f28c
  0x000002480746f275: mov    %r8,0x120(%rdx)
  0x000002480746f27c: movq   $0x1,0x128(%rdx)
  0x000002480746f287: jmp    0x000002480746f2b8
  0x000002480746f28c: cmpq   $0x0,0x130(%rdx)
  0x000002480746f297: jne    0x000002480746f2b0
  0x000002480746f299: mov    %r8,0x130(%rdx)
  0x000002480746f2a0: movq   $0x1,0x138(%rdx)
  0x000002480746f2ab: jmp    0x000002480746f2b8
  0x000002480746f2b0: addq   $0x1,0x118(%rdx)
  0x000002480746f2b8: mov    0x28(%rsp),%r8d
  0x000002480746f2bd: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)

  0x000002480746f2c0: nop
  0x000002480746f2c1: nop
  0x000002480746f2c2: nop
  0x000002480746f2c3: nop
  0x000002480746f2c4: nop
  0x000002480746f2c5: movabs $0xffffffffffffffff,%rax
  0x000002480746f2cf: call   0x0000024807376120  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ;   {virtual_call}
  0x000002480746f2d4: and    $0xffff,%eax
  0x000002480746f2da: and    $0xffff,%eax
  0x000002480746f2e0: add    $0x40,%rsp
  0x000002480746f2e4: pop    %rbp
  0x000002480746f2e5: test   %eax,-0x1ebf1eb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746f2eb: ret    
  0x000002480746f2ec: mov    %rsi,0x8(%rsp)
  0x000002480746f2f1: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746f2f9: call   0x0000024807433da0  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6344)
                                                ;   {runtime_call}
  0x000002480746f2fe: jmp    0x000002480746f1be
  0x000002480746f303: mov    %rsi,0x8(%rsp)
  0x000002480746f308: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746f310: call   0x0000024807433da0  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ;   {runtime_call}
  0x000002480746f315: jmp    0x000002480746f202
  0x000002480746f31a: call   0x000002480742f100  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6373)
                                                ; - java.lang.Character::toLowerCase@1 (line 6344)
                                                ;   {runtime_call}
  0x000002480746f31f: nop
  0x000002480746f320: nop
  0x000002480746f321: mov    0x308(%r15),%rax
  0x000002480746f328: movabs $0x0,%r10
  0x000002480746f332: mov    %r10,0x308(%r15)
  0x000002480746f339: movabs $0x0,%r10
  0x000002480746f343: mov    %r10,0x310(%r15)
  0x000002480746f34a: add    $0x40,%rsp
  0x000002480746f34e: pop    %rbp
  0x000002480746f34f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480746f354: hlt    
  0x000002480746f355: hlt    
  0x000002480746f356: hlt    
  0x000002480746f357: hlt    
  0x000002480746f358: hlt    
  0x000002480746f359: hlt    
  0x000002480746f35a: hlt    
  0x000002480746f35b: hlt    
  0x000002480746f35c: hlt    
  0x000002480746f35d: hlt    
  0x000002480746f35e: hlt    
  0x000002480746f35f: hlt    
[Stub Code]
  0x000002480746f360: nop                       ;   {no_reloc}
  0x000002480746f361: nop
  0x000002480746f362: nop
  0x000002480746f363: nop
  0x000002480746f364: nop
  0x000002480746f365: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746f36f: jmp    0x000002480746f36f  ;   {runtime_call}
  0x000002480746f374: nop
  0x000002480746f375: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480746f37f: jmp    0x000002480746f37f  ;   {runtime_call}
[Exception Handler]
  0x000002480746f384: call   0x0000024807431320  ;   {runtime_call}
  0x000002480746f389: mov    %rsp,-0x28(%rsp)
  0x000002480746f38e: sub    $0x80,%rsp
  0x000002480746f395: mov    %rax,0x78(%rsp)
  0x000002480746f39a: mov    %rcx,0x70(%rsp)
  0x000002480746f39f: mov    %rdx,0x68(%rsp)
  0x000002480746f3a4: mov    %rbx,0x60(%rsp)
  0x000002480746f3a9: mov    %rbp,0x50(%rsp)
  0x000002480746f3ae: mov    %rsi,0x48(%rsp)
  0x000002480746f3b3: mov    %rdi,0x40(%rsp)
  0x000002480746f3b8: mov    %r8,0x38(%rsp)
  0x000002480746f3bd: mov    %r9,0x30(%rsp)
  0x000002480746f3c2: mov    %r10,0x28(%rsp)
  0x000002480746f3c7: mov    %r11,0x20(%rsp)
  0x000002480746f3cc: mov    %r12,0x18(%rsp)
  0x000002480746f3d1: mov    %r13,0x10(%rsp)
  0x000002480746f3d6: mov    %r14,0x8(%rsp)
  0x000002480746f3db: mov    %r15,(%rsp)
  0x000002480746f3df: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480746f3e9: movabs $0x2480746f389,%rdx  ;   {internal_word}
  0x000002480746f3f3: mov    %rsp,%r8
  0x000002480746f3f6: and    $0xfffffffffffffff0,%rsp
  0x000002480746f3fa: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480746f404: call   *%r10
  0x000002480746f407: hlt    
[Deopt Handler Code]
  0x000002480746f408: movabs $0x2480746f408,%r10  ;   {section_word}
  0x000002480746f412: push   %r10
  0x000002480746f414: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480746f419: hlt    
  0x000002480746f41a: hlt    
  0x000002480746f41b: hlt    
  0x000002480746f41c: hlt    
  0x000002480746f41d: hlt    
  0x000002480746f41e: hlt    
  0x000002480746f41f: hlt    
<nmethod compile_id='135' compiler='C1' level='3' entry='0x000002480746f180' size='1312' address='0x000002480746f010' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1056' scopes_pcs_offset='1128' dependencies_offset='1288' nul_chk_table_offset='1296' method='java/lang/Character toLowerCase (C)C' bytes='6' count='2070' iicount='2070' stamp='1.690'/>
Decoding compiled method 0x000002480746f550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb85de0} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/File&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480746f6a0: mov    0x8(%rdx),%r10d
  0x000002480746f6a4: shl    $0x3,%r10
  0x000002480746f6a8: cmp    %rax,%r10
  0x000002480746f6ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480746f6b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480746f6bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480746f6c0: mov    %eax,-0x6000(%rsp)
  0x000002480746f6c7: push   %rbp
  0x000002480746f6c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 517)

  0x000002480746f6cc: mov    0x10(%rdx),%eax
  0x000002480746f6cf: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 517)

  0x000002480746f6d3: add    $0x30,%rsp
  0x000002480746f6d7: pop    %rbp
  0x000002480746f6d8: test   %eax,-0x1ebf5de(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746f6de: ret    
  0x000002480746f6df: nop
  0x000002480746f6e0: nop
  0x000002480746f6e1: mov    0x308(%r15),%rax
  0x000002480746f6e8: movabs $0x0,%r10
  0x000002480746f6f2: mov    %r10,0x308(%r15)
  0x000002480746f6f9: movabs $0x0,%r10
  0x000002480746f703: mov    %r10,0x310(%r15)
  0x000002480746f70a: add    $0x30,%rsp
  0x000002480746f70e: pop    %rbp
  0x000002480746f70f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480746f714: hlt    
  0x000002480746f715: hlt    
  0x000002480746f716: hlt    
  0x000002480746f717: hlt    
  0x000002480746f718: hlt    
  0x000002480746f719: hlt    
  0x000002480746f71a: hlt    
  0x000002480746f71b: hlt    
  0x000002480746f71c: hlt    
  0x000002480746f71d: hlt    
  0x000002480746f71e: hlt    
  0x000002480746f71f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480746f720: call   0x0000024807431320  ;   {no_reloc}
  0x000002480746f725: mov    %rsp,-0x28(%rsp)
  0x000002480746f72a: sub    $0x80,%rsp
  0x000002480746f731: mov    %rax,0x78(%rsp)
  0x000002480746f736: mov    %rcx,0x70(%rsp)
  0x000002480746f73b: mov    %rdx,0x68(%rsp)
  0x000002480746f740: mov    %rbx,0x60(%rsp)
  0x000002480746f745: mov    %rbp,0x50(%rsp)
  0x000002480746f74a: mov    %rsi,0x48(%rsp)
  0x000002480746f74f: mov    %rdi,0x40(%rsp)
  0x000002480746f754: mov    %r8,0x38(%rsp)
  0x000002480746f759: mov    %r9,0x30(%rsp)
  0x000002480746f75e: mov    %r10,0x28(%rsp)
  0x000002480746f763: mov    %r11,0x20(%rsp)
  0x000002480746f768: mov    %r12,0x18(%rsp)
  0x000002480746f76d: mov    %r13,0x10(%rsp)
  0x000002480746f772: mov    %r14,0x8(%rsp)
  0x000002480746f777: mov    %r15,(%rsp)
  0x000002480746f77b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480746f785: movabs $0x2480746f725,%rdx  ;   {internal_word}
  0x000002480746f78f: mov    %rsp,%r8
  0x000002480746f792: and    $0xfffffffffffffff0,%rsp
  0x000002480746f796: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480746f7a0: call   *%r10
  0x000002480746f7a3: hlt    
[Deopt Handler Code]
  0x000002480746f7a4: movabs $0x2480746f7a4,%r10  ;   {section_word}
  0x000002480746f7ae: push   %r10
  0x000002480746f7b0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480746f7b5: hlt    
  0x000002480746f7b6: hlt    
  0x000002480746f7b7: hlt    
<nmethod compile_id='129' compiler='C1' level='1' entry='0x000002480746f6a0' size='712' address='0x000002480746f550' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='1347' iicount='1347' stamp='1.694'/>
<writer thread='27436'/>
<task_queued compile_id='138' method='java/lang/String toCharArray ()[C' bytes='25' count='1152' iicount='1152' level='3' stamp='1.694' comment='tiered' hot_count='1152'/>
<writer thread='14928'/>
<task_queued compile_id='139' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='15360' iicount='15360' stamp='1.694' comment='tiered' hot_count='15360'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480746f850:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feae2b8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x000002480746f980: mov    0x10(%rsp),%rbx
  0x000002480746f985: mov    0x18(%rbx),%rbx
  0x000002480746f989: test   %rbx,%rbx
  0x000002480746f98c: je     0x000002480746f995
  0x000002480746f992: jmp    *0x40(%rbx)
  0x000002480746f995: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480746f99a: hlt    
  0x000002480746f99b: hlt    
  0x000002480746f99c: hlt    
  0x000002480746f99d: hlt    
  0x000002480746f99e: hlt    
  0x000002480746f99f: hlt    
<nmethod compile_id='140' compile_kind='c2n' level='0' entry='0x000002480746f980' size='336' address='0x000002480746f850' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.698'/>
<writer thread='14928'/>
<task_queued compile_id='141' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;II)Ljava/lang/String;' bytes='231' count='386' backedge_count='33792' iicount='386' level='3' stamp='1.698' comment='tiered' hot_count='386'/>
<writer thread='12268'/>
Decoding compiled method 0x0000024807472650:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fc996b0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000024807472780: mov    %eax,-0x6000(%rsp)
  0x0000024807472787: push   %rbp
  0x0000024807472788: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)

  0x000002480747278c: mov    %edx,%r11d
  0x000002480747278f: shr    $0x8,%r11d         ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)

  0x0000024807472793: test   %r11d,%r11d
  0x0000024807472796: jne    0x00000248074727ae  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000024807472798: movabs $0x76b773c68,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000248074727a2: add    $0x20,%rsp
  0x00000248074727a6: pop    %rbp
  0x00000248074727a7: test   %eax,-0x1ec27ad(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x00000248074727ad: ret    
  0x00000248074727ae: mov    %edx,%ebp
  0x00000248074727b0: mov    %r11d,(%rsp)
  0x00000248074727b4: mov    $0xffffff65,%edx
  0x00000248074727b9: xchg   %ax,%ax
  0x00000248074727bb: call   0x00000248073754e0  ; OopMap{off=64}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ;   {runtime_call}
  0x00000248074727c0: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00000248074727c1: hlt    
  0x00000248074727c2: hlt    
  0x00000248074727c3: hlt    
  0x00000248074727c4: hlt    
  0x00000248074727c5: hlt    
  0x00000248074727c6: hlt    
  0x00000248074727c7: hlt    
  0x00000248074727c8: hlt    
  0x00000248074727c9: hlt    
  0x00000248074727ca: hlt    
  0x00000248074727cb: hlt    
  0x00000248074727cc: hlt    
  0x00000248074727cd: hlt    
  0x00000248074727ce: hlt    
  0x00000248074727cf: hlt    
  0x00000248074727d0: hlt    
  0x00000248074727d1: hlt    
  0x00000248074727d2: hlt    
  0x00000248074727d3: hlt    
  0x00000248074727d4: hlt    
  0x00000248074727d5: hlt    
  0x00000248074727d6: hlt    
  0x00000248074727d7: hlt    
  0x00000248074727d8: hlt    
  0x00000248074727d9: hlt    
  0x00000248074727da: hlt    
  0x00000248074727db: hlt    
  0x00000248074727dc: hlt    
  0x00000248074727dd: hlt    
  0x00000248074727de: hlt    
  0x00000248074727df: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074727e0: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000248074727e5: call   0x00000248074727ea
  0x00000248074727ea: subq   $0x5,(%rsp)
  0x00000248074727ef: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074727f4: hlt    
  0x00000248074727f5: hlt    
  0x00000248074727f6: hlt    
  0x00000248074727f7: hlt    
<nmethod compile_id='139' compiler='C2' level='4' entry='0x0000024807472780' size='600' address='0x0000024807472650' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='448' scopes_pcs_offset='480' dependencies_offset='592' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='15602' iicount='15602' stamp='1.701'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807472110:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb28820} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rdx:rdx   = &apos;java/lang/ref/Reference&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000024807472280: mov    0x8(%rdx),%r10d
  0x0000024807472284: shl    $0x3,%r10
  0x0000024807472288: cmp    %rax,%r10
  0x000002480747228b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807472291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747229c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074722a0: mov    %eax,-0x6000(%rsp)
  0x00000248074722a7: push   %rbp
  0x00000248074722a8: sub    $0x50,%rsp
  0x00000248074722ac: movabs $0x2481feadee8,%rsi  ;   {metadata(method data for {method} {0x000002481fb28820} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000248074722b6: mov    0xdc(%rsi),%edi
  0x00000248074722bc: add    $0x8,%edi
  0x00000248074722bf: mov    %edi,0xdc(%rsi)
  0x00000248074722c5: movabs $0x2481fb28818,%rsi  ;   {metadata({method} {0x000002481fb28820} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000248074722cf: and    $0x1ff8,%edi
  0x00000248074722d5: cmp    $0x0,%edi
  0x00000248074722d8: je     0x00000248074723eb  ;*aload_0
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 303)

  0x00000248074722de: mov    %rdx,%rsi
  0x00000248074722e1: movabs $0x2481feadee8,%rdi  ;   {metadata(method data for {method} {0x000002481fb28820} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000248074722eb: addq   $0x1,0x108(%rdi)
  0x00000248074722f3: movabs $0x2481fd5fb28,%rsi  ;   {metadata(method data for {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000248074722fd: mov    0xdc(%rsi),%edi
  0x0000024807472303: add    $0x8,%edi
  0x0000024807472306: mov    %edi,0xdc(%rsi)
  0x000002480747230c: movabs $0x2481fb288c8,%rsi  ;   {metadata({method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000024807472316: and    $0x7ffff8,%edi
  0x000002480747231c: cmp    $0x0,%edi
  0x000002480747231f: je     0x0000024807472402
  0x0000024807472325: mov    %rdx,%rsi
  0x0000024807472328: movabs $0x2481fd5fb28,%rdi  ;   {metadata(method data for {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000024807472332: addq   $0x1,0x108(%rdi)
  0x000002480747233a: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807472344: mov    0xdc(%rsi),%edi
  0x000002480747234a: add    $0x8,%edi
  0x000002480747234d: mov    %edi,0xdc(%rsi)
  0x0000024807472353: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480747235d: and    $0x7ffff8,%edi
  0x0000024807472363: cmp    $0x0,%edi
  0x0000024807472366: je     0x0000024807472419
  0x000002480747236c: mov    %r8,%r10
  0x000002480747236f: shr    $0x3,%r10
  0x0000024807472373: mov    %r10d,0xc(%rdx)
  0x0000024807472377: mov    %rdx,%rsi
  0x000002480747237a: shr    $0x9,%rsi
  0x000002480747237e: movabs $0x248130de000,%rdi
  0x0000024807472388: movb   $0x0,(%rsi,%rdi,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 307)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)

  0x000002480747238c: movabs $0x2481fd5fb28,%rsi  ;   {metadata(method data for {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000024807472396: incl   0x128(%rsi)        ;*ifnonnull
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 308)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)

  0x000002480747239c: movabs $0x76b701b90,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00000248074723a6: mov    0x68(%rsi),%esi
  0x00000248074723a9: shl    $0x3,%rsi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::&lt;init&gt;@14 (line 308)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)

  0x00000248074723ad: movabs $0x2481fd5fb28,%rdi  ;   {metadata(method data for {method} {0x000002481fb288d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000248074723b7: incl   0x138(%rdi)
  0x00000248074723bd: mov    %rsi,%r10
  0x00000248074723c0: shr    $0x3,%r10
  0x00000248074723c4: mov    %r10d,0x10(%rdx)
  0x00000248074723c8: shr    $0x9,%rdx
  0x00000248074723cc: movabs $0x248130de000,%rsi
  0x00000248074723d6: movb   $0x0,(%rdx,%rsi,1)
  0x00000248074723da: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 308)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)

  0x00000248074723df: add    $0x50,%rsp
  0x00000248074723e3: pop    %rbp
  0x00000248074723e4: test   %eax,-0x1ec22ea(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074723ea: ret    
  0x00000248074723eb: mov    %rsi,0x8(%rsp)
  0x00000248074723f0: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074723f8: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=381}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 303)
                                                ;   {runtime_call}
  0x00000248074723fd: jmp    0x00000248074722de
  0x0000024807472402: mov    %rsi,0x8(%rsp)
  0x0000024807472407: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747240f: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=404}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 306)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)
                                                ;   {runtime_call}
  0x0000024807472414: jmp    0x0000024807472325
  0x0000024807472419: mov    %rsi,0x8(%rsp)
  0x000002480747241e: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807472426: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=427}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 306)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)
                                                ;   {runtime_call}
  0x000002480747242b: jmp    0x000002480747236c
  0x0000024807472430: nop
  0x0000024807472431: nop
  0x0000024807472432: mov    0x308(%r15),%rax
  0x0000024807472439: movabs $0x0,%r10
  0x0000024807472443: mov    %r10,0x308(%r15)
  0x000002480747244a: movabs $0x0,%r10
  0x0000024807472454: mov    %r10,0x310(%r15)
  0x000002480747245b: add    $0x50,%rsp
  0x000002480747245f: pop    %rbp
  0x0000024807472460: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807472465: hlt    
  0x0000024807472466: hlt    
  0x0000024807472467: hlt    
  0x0000024807472468: hlt    
  0x0000024807472469: hlt    
  0x000002480747246a: hlt    
  0x000002480747246b: hlt    
  0x000002480747246c: hlt    
  0x000002480747246d: hlt    
  0x000002480747246e: hlt    
  0x000002480747246f: hlt    
  0x0000024807472470: hlt    
  0x0000024807472471: hlt    
  0x0000024807472472: hlt    
  0x0000024807472473: hlt    
  0x0000024807472474: hlt    
  0x0000024807472475: hlt    
  0x0000024807472476: hlt    
  0x0000024807472477: hlt    
  0x0000024807472478: hlt    
  0x0000024807472479: hlt    
  0x000002480747247a: hlt    
  0x000002480747247b: hlt    
  0x000002480747247c: hlt    
  0x000002480747247d: hlt    
  0x000002480747247e: hlt    
  0x000002480747247f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807472480: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807472485: mov    %rsp,-0x28(%rsp)
  0x000002480747248a: sub    $0x80,%rsp
  0x0000024807472491: mov    %rax,0x78(%rsp)
  0x0000024807472496: mov    %rcx,0x70(%rsp)
  0x000002480747249b: mov    %rdx,0x68(%rsp)
  0x00000248074724a0: mov    %rbx,0x60(%rsp)
  0x00000248074724a5: mov    %rbp,0x50(%rsp)
  0x00000248074724aa: mov    %rsi,0x48(%rsp)
  0x00000248074724af: mov    %rdi,0x40(%rsp)
  0x00000248074724b4: mov    %r8,0x38(%rsp)
  0x00000248074724b9: mov    %r9,0x30(%rsp)
  0x00000248074724be: mov    %r10,0x28(%rsp)
  0x00000248074724c3: mov    %r11,0x20(%rsp)
  0x00000248074724c8: mov    %r12,0x18(%rsp)
  0x00000248074724cd: mov    %r13,0x10(%rsp)
  0x00000248074724d2: mov    %r14,0x8(%rsp)
  0x00000248074724d7: mov    %r15,(%rsp)
  0x00000248074724db: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074724e5: movabs $0x24807472485,%rdx  ;   {internal_word}
  0x00000248074724ef: mov    %rsp,%r8
  0x00000248074724f2: and    $0xfffffffffffffff0,%rsp
  0x00000248074724f6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807472500: call   *%r10
  0x0000024807472503: hlt    
[Deopt Handler Code]
  0x0000024807472504: movabs $0x24807472504,%r10  ;   {section_word}
  0x000002480747250e: push   %r10
  0x0000024807472510: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807472515: hlt    
  0x0000024807472516: hlt    
  0x0000024807472517: hlt    
<nmethod compile_id='75' compiler='C1' level='3' entry='0x0000024807472280' size='1328' address='0x0000024807472110' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1064' scopes_pcs_offset='1160' dependencies_offset='1320' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;)V' bytes='7' count='490' iicount='490' stamp='1.711'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807471f90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feae690} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm4:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  0x00000248074720c0: mov    0x14(%rdx),%ebx
  0x00000248074720c3: shl    $0x3,%rbx
  0x00000248074720c7: mov    0x28(%rbx),%ebx
  0x00000248074720ca: shl    $0x3,%rbx
  0x00000248074720ce: mov    0x18(%rbx),%rbx
  0x00000248074720d2: test   %rbx,%rbx
  0x00000248074720d5: je     0x00000248074720de
  0x00000248074720db: jmp    *0x40(%rbx)
  0x00000248074720de: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x00000248074720e3: hlt    
  0x00000248074720e4: hlt    
  0x00000248074720e5: hlt    
  0x00000248074720e6: hlt    
  0x00000248074720e7: hlt    
<nmethod compile_id='142' compile_kind='c2n' level='0' entry='0x00000248074720c0' size='344' address='0x0000024807471f90' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.713'/>
<writer thread='14928'/>
<task_queued compile_id='143' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1280' backedge_count='31' iicount='1280' level='3' stamp='1.713' comment='tiered' hot_count='1280'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807471e10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feae7a8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000024807471f40: mov    0x18(%rsp),%rbx
  0x0000024807471f45: cmp    (%rdx),%rax
  0x0000024807471f48: mov    0x18(%rbx),%rbx
  0x0000024807471f4c: test   %rbx,%rbx
  0x0000024807471f4f: je     0x0000024807471f58
  0x0000024807471f55: jmp    *0x40(%rbx)
  0x0000024807471f58: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807471f5d: hlt    
  0x0000024807471f5e: hlt    
  0x0000024807471f5f: hlt    
<nmethod compile_id='144' compile_kind='c2n' level='0' entry='0x0000024807471f40' size='336' address='0x0000024807471e10' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.717'/>
<task_queued compile_id='145' method='java/lang/invoke/MethodHandle type ()Ljava/lang/invoke/MethodType;' bytes='5' count='128' iicount='128' level='1' stamp='1.717' comment='tiered' hot_count='128'/>
<task_queued compile_id='146' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='1152' iicount='1152' level='3' stamp='1.718' comment='tiered' hot_count='1152'/>
Decoding compiled method 0x0000024807471c90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feb7700} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000024807471dc0: mov    0x18(%rsp),%rbx
  0x0000024807471dc5: mov    0x18(%rbx),%rbx
  0x0000024807471dc9: test   %rbx,%rbx
  0x0000024807471dcc: je     0x0000024807471dd5
  0x0000024807471dd2: jmp    *0x40(%rbx)
  0x0000024807471dd5: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807471dda: hlt    
  0x0000024807471ddb: hlt    
  0x0000024807471ddc: hlt    
  0x0000024807471ddd: hlt    
  0x0000024807471dde: hlt    
  0x0000024807471ddf: hlt    
<nmethod compile_id='147' compile_kind='c2n' level='0' entry='0x0000024807471dc0' size='336' address='0x0000024807471c90' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.721'/>
Decoding compiled method 0x00000248074718d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481febd9b8} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm4:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  0x0000024807471a00: mov    0x14(%rdx),%ebx
  0x0000024807471a03: shl    $0x3,%rbx
  0x0000024807471a07: mov    0x28(%rbx),%ebx
  0x0000024807471a0a: shl    $0x3,%rbx
  0x0000024807471a0e: mov    0x18(%rbx),%rbx
  0x0000024807471a12: test   %rbx,%rbx
  0x0000024807471a15: je     0x0000024807471a1e
  0x0000024807471a1b: jmp    *0x40(%rbx)
  0x0000024807471a1e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807471a23: hlt    
  0x0000024807471a24: hlt    
  0x0000024807471a25: hlt    
  0x0000024807471a26: hlt    
  0x0000024807471a27: hlt    
<nmethod compile_id='148' compile_kind='c2n' level='0' entry='0x0000024807471a00' size='344' address='0x00000248074718d0' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.724'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074728d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x1d0]  (sp of caller)
  0x0000024807472da0: mov    0x8(%rdx),%r10d
  0x0000024807472da4: shl    $0x3,%r10
  0x0000024807472da8: cmp    %rax,%r10
  0x0000024807472dab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807472db1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807472dbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807472dc0: mov    %eax,-0x6000(%rsp)
  0x0000024807472dc7: push   %rbp
  0x0000024807472dc8: sub    $0x1c0,%rsp
  0x0000024807472dcf: mov    %rdx,0x100(%rsp)
  0x0000024807472dd7: mov    %r8,0xf0(%rsp)
  0x0000024807472ddf: mov    %r9d,0xe8(%rsp)
  0x0000024807472de7: movabs $0x2481fd59388,%rsi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807472df1: mov    0xdc(%rsi),%eax
  0x0000024807472df7: add    $0x8,%eax
  0x0000024807472dfa: mov    %eax,0xdc(%rsi)
  0x0000024807472e00: movabs $0x2481fc813b8,%rsi  ;   {metadata({method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807472e0a: and    $0x1ff8,%eax
  0x0000024807472e10: cmp    $0x0,%eax
  0x0000024807472e13: je     0x00000248074762ab  ;*iload_2
                                                ; - java.io.WinNTFileSystem::normalize@0 (line 130)

  0x0000024807472e19: cmp    $0x0,%r9d
  0x0000024807472e1d: movabs $0x2481fd59388,%rsi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807472e27: movabs $0x108,%rax
  0x0000024807472e31: jne    0x0000024807472e41
  0x0000024807472e37: movabs $0x118,%rax
  0x0000024807472e41: mov    (%rsi,%rax,1),%rcx
  0x0000024807472e45: lea    0x1(%rcx),%rcx
  0x0000024807472e49: mov    %rcx,(%rsi,%rax,1)
  0x0000024807472e4d: je     0x0000024807475e0b  ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 130)

  0x0000024807472e53: cmp    $0x3,%edi
  0x0000024807472e56: movabs $0x2481fd59388,%rsi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807472e60: movabs $0x128,%rax
  0x0000024807472e6a: jge    0x0000024807472e7a
  0x0000024807472e70: movabs $0x138,%rax
  0x0000024807472e7a: mov    (%rsi,%rax,1),%rcx
  0x0000024807472e7e: lea    0x1(%rcx),%rcx
  0x0000024807472e82: mov    %rcx,(%rsi,%rax,1)
  0x0000024807472e86: jge    0x0000024807472e91  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@8 (line 131)

  0x0000024807472e8c: mov    $0x0,%edi          ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@13 (line 133)

  0x0000024807472e91: movzwl 0xc(%rdx),%r11d    ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalize@14 (line 133)

  0x0000024807472e96: mov    %r11d,0xec(%rsp)
  0x0000024807472e9e: mov    %rdx,%r13
  0x0000024807472ea1: movabs $0x7c000d8b8,%rdx  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000024807472eab: mov    %rdi,%r14
  0x0000024807472eae: mov    0x60(%r15),%rax
  0x0000024807472eb2: lea    0x18(%rax),%rdi
  0x0000024807472eb6: cmp    0x70(%r15),%rdi
  0x0000024807472eba: ja     0x00000248074762c2
  0x0000024807472ec0: mov    %rdi,0x60(%r15)
  0x0000024807472ec4: mov    0xa8(%rdx),%rcx
  0x0000024807472ecb: mov    %rcx,(%rax)
  0x0000024807472ece: mov    %rdx,%rcx
  0x0000024807472ed1: shr    $0x3,%rcx
  0x0000024807472ed5: mov    %ecx,0x8(%rax)
  0x0000024807472ed8: xor    %rcx,%rcx
  0x0000024807472edb: mov    %ecx,0xc(%rax)
  0x0000024807472ede: xor    %rcx,%rcx
  0x0000024807472ee1: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.WinNTFileSystem::normalize@19 (line 134)

  0x0000024807472ee5: mov    %rax,0xf8(%rsp)
  0x0000024807472eed: mov    %rax,%rbx
  0x0000024807472ef0: movabs $0x2481fd59388,%rdx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807472efa: addq   $0x1,0x148(%rdx)
  0x0000024807472f02: movabs $0x2481fd6d460,%rbx  ;   {metadata(method data for {method} {0x000002481fb70bc8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807472f0c: mov    0xdc(%rbx),%edx
  0x0000024807472f12: add    $0x8,%edx
  0x0000024807472f15: mov    %edx,0xdc(%rbx)
  0x0000024807472f1b: movabs $0x2481fb70bc0,%rbx  ;   {metadata({method} {0x000002481fb70bc8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807472f25: and    $0x7ffff8,%edx
  0x0000024807472f2b: cmp    $0x0,%edx
  0x0000024807472f2e: je     0x00000248074762cf
  0x0000024807472f34: mov    %rax,%rbx
  0x0000024807472f37: movabs $0x2481fd6d460,%rdx  ;   {metadata(method data for {method} {0x000002481fb70bc8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807472f41: addq   $0x1,0x108(%rdx)
  0x0000024807472f49: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807472f53: mov    0xdc(%rbx),%edx
  0x0000024807472f59: add    $0x8,%edx
  0x0000024807472f5c: mov    %edx,0xdc(%rbx)
  0x0000024807472f62: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807472f6c: and    $0x7ffff8,%edx
  0x0000024807472f72: cmp    $0x0,%edx
  0x0000024807472f75: je     0x00000248074762e6
  0x0000024807472f7b: mov    %rax,%rbx
  0x0000024807472f7e: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807472f88: addq   $0x1,0x108(%rdx)
  0x0000024807472f90: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807472f9a: mov    0xdc(%rbx),%edx
  0x0000024807472fa0: add    $0x8,%edx
  0x0000024807472fa3: mov    %edx,0xdc(%rbx)
  0x0000024807472fa9: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807472fb3: and    $0x7ffff8,%edx
  0x0000024807472fb9: cmp    $0x0,%edx
  0x0000024807472fbc: je     0x00000248074762fd
  0x0000024807472fc2: mov    %r9,%rbx
  0x0000024807472fc5: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807472fcf: mov    %rax,%r9
  0x0000024807472fd2: movslq %ebx,%rbx
  0x0000024807472fd5: mov    %rbx,%rdi
  0x0000024807472fd8: cmp    $0xffffff,%rbx
  0x0000024807472fdf: ja     0x0000024807476314
  0x0000024807472fe5: movabs $0x17,%rsi
  0x0000024807472fef: lea    (%rsi,%rbx,2),%rsi
  0x0000024807472ff3: and    $0xfffffffffffffff8,%rsi
  0x0000024807472ff7: mov    0x60(%r15),%rax
  0x0000024807472ffb: lea    (%rax,%rsi,1),%rsi
  0x0000024807472fff: cmp    0x70(%r15),%rsi
  0x0000024807473003: ja     0x0000024807476314
  0x0000024807473009: mov    %rsi,0x60(%r15)
  0x000002480747300d: sub    %rax,%rsi
  0x0000024807473010: movq   $0x1,(%rax)
  0x0000024807473017: mov    %rdx,%rcx
  0x000002480747301a: shr    $0x3,%rcx
  0x000002480747301e: mov    %ecx,0x8(%rax)
  0x0000024807473021: mov    %ebx,0xc(%rax)
  0x0000024807473024: sub    $0x10,%rsi
  0x0000024807473028: je     0x000002480747303f
  0x000002480747302e: xor    %rbx,%rbx
  0x0000024807473031: shr    $0x3,%rsi
  0x0000024807473035: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480747303a: dec    %rsi
  0x000002480747303d: jne    0x0000024807473035  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 134)

  0x000002480747303f: mov    %rax,%r10
  0x0000024807473042: shr    $0x3,%r10
  0x0000024807473046: mov    %r10d,0x10(%r9)
  0x000002480747304a: mov    %r9,%rax
  0x000002480747304d: shr    $0x9,%rax
  0x0000024807473051: movabs $0x248130de000,%rdi
  0x000002480747305b: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 134)

  0x000002480747305f: cmp    $0x0,%r14d
  0x0000024807473063: movabs $0x2481fd59388,%rdi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747306d: movabs $0x158,%rdx
  0x0000024807473077: jne    0x0000024807473087
  0x000002480747307d: movabs $0x168,%rdx
  0x0000024807473087: mov    (%rdi,%rdx,1),%rsi
  0x000002480747308b: lea    0x1(%rsi),%rsi
  0x000002480747308f: mov    %rsi,(%rdi,%rdx,1)
  0x0000024807473093: jne    0x00000248074730f5  ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@30 (line 136)

  0x0000024807473099: mov    %r9,%rax
  0x000002480747309c: mov    0xe8(%rsp),%r9d
  0x00000248074730a4: mov    %r13,%rdx
  0x00000248074730a7: movabs $0x2481fd59388,%rdi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074730b1: addq   $0x1,0x178(%rdi)
  0x00000248074730b9: mov    %r8,%rsi
  0x00000248074730bc: mov    %rsi,%r8
  0x00000248074730bf: mov    %r9,%rbx
  0x00000248074730c2: mov    %rbx,%r9
  0x00000248074730c5: mov    %rax,%rdi
  0x00000248074730c8: mov    %r13,%rdx          ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 138)

  0x00000248074730cb: nop
  0x00000248074730cc: nop
  0x00000248074730cd: nop
  0x00000248074730ce: nop
  0x00000248074730cf: call   0x0000024807375ee0  ; OopMap{[240]=Oop [248]=Oop [256]=Oop off=820}
                                                ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 138)
                                                ;   {optimized virtual_call}
  0x00000248074730d4: movabs $0x2481fd59388,%r8  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074730de: incl   0x188(%r8)
  0x00000248074730e5: mov    %rax,%rsi
  0x00000248074730e8: mov    0xf8(%rsp),%rax
  0x00000248074730f0: jmp    0x00000248074733c8  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@43 (line 138)

  0x00000248074730f5: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000002480747631e
  0x00000248074730f8: mov    %r8,%r9
  0x00000248074730fb: movabs $0x2481fd59388,%rdx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473105: mov    0x8(%r9),%r9d
  0x0000024807473109: shl    $0x3,%r9
  0x000002480747310d: cmp    0x1a8(%rdx),%r9
  0x0000024807473114: jne    0x0000024807473123
  0x0000024807473116: addq   $0x1,0x1b0(%rdx)
  0x000002480747311e: jmp    0x0000024807473189
  0x0000024807473123: cmp    0x1b8(%rdx),%r9
  0x000002480747312a: jne    0x0000024807473139
  0x000002480747312c: addq   $0x1,0x1c0(%rdx)
  0x0000024807473134: jmp    0x0000024807473189
  0x0000024807473139: cmpq   $0x0,0x1a8(%rdx)
  0x0000024807473144: jne    0x000002480747315d
  0x0000024807473146: mov    %r9,0x1a8(%rdx)
  0x000002480747314d: movq   $0x1,0x1b0(%rdx)
  0x0000024807473158: jmp    0x0000024807473189
  0x000002480747315d: cmpq   $0x0,0x1b8(%rdx)
  0x0000024807473168: jne    0x0000024807473181
  0x000002480747316a: mov    %r9,0x1b8(%rdx)
  0x0000024807473171: movq   $0x1,0x1c0(%rdx)
  0x000002480747317c: jmp    0x0000024807473189
  0x0000024807473181: addq   $0x1,0x1a0(%rdx)
  0x0000024807473189: mov    %r8,%rsi
  0x000002480747318c: mov    $0x0,%r8d
  0x0000024807473192: mov    %r14,%r9
  0x0000024807473195: mov    %rsi,%rdx          ;*invokevirtual substring
                                                ; - java.io.WinNTFileSystem::normalize@54 (line 142)

  0x0000024807473198: mov    %r14d,0x108(%rsp)
  0x00000248074731a0: nop
  0x00000248074731a1: nop
  0x00000248074731a2: nop
  0x00000248074731a3: nop
  0x00000248074731a4: nop
  0x00000248074731a5: nop
  0x00000248074731a6: nop
  0x00000248074731a7: call   0x0000024807375ee0  ; OopMap{[256]=Oop [240]=Oop [248]=Oop off=1036}
                                                ;*invokevirtual substring
                                                ; - java.io.WinNTFileSystem::normalize@54 (line 142)
                                                ;   {optimized virtual_call}
  0x00000248074731ac: mov    %rax,%r8           ;*invokevirtual substring
                                                ; - java.io.WinNTFileSystem::normalize@54 (line 142)

  0x00000248074731af: mov    0xf8(%rsp),%rax
  0x00000248074731b7: movabs $0x2481fd59388,%rdx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074731c1: mov    0x8(%rax),%eax
  0x00000248074731c4: shl    $0x3,%rax
  0x00000248074731c8: cmp    0x1d8(%rdx),%rax
  0x00000248074731cf: jne    0x00000248074731de
  0x00000248074731d1: addq   $0x1,0x1e0(%rdx)
  0x00000248074731d9: jmp    0x0000024807473244
  0x00000248074731de: cmp    0x1e8(%rdx),%rax
  0x00000248074731e5: jne    0x00000248074731f4
  0x00000248074731e7: addq   $0x1,0x1f0(%rdx)
  0x00000248074731ef: jmp    0x0000024807473244
  0x00000248074731f4: cmpq   $0x0,0x1d8(%rdx)
  0x00000248074731ff: jne    0x0000024807473218
  0x0000024807473201: mov    %rax,0x1d8(%rdx)
  0x0000024807473208: movq   $0x1,0x1e0(%rdx)
  0x0000024807473213: jmp    0x0000024807473244
  0x0000024807473218: cmpq   $0x0,0x1e8(%rdx)
  0x0000024807473223: jne    0x000002480747323c
  0x0000024807473225: mov    %rax,0x1e8(%rdx)
  0x000002480747322c: movq   $0x1,0x1f0(%rdx)
  0x0000024807473237: jmp    0x0000024807473244
  0x000002480747323c: addq   $0x1,0x1d0(%rdx)
  0x0000024807473244: lea    0x1a8(%rsp),%rdx
  0x000002480747324c: mov    0xf8(%rsp),%rsi
  0x0000024807473254: mov    %rsi,0x8(%rdx)
  0x0000024807473258: mov    (%rsi),%rax
  0x000002480747325b: mov    %rax,%rdi
  0x000002480747325e: and    $0x7,%rdi
  0x0000024807473262: cmp    $0x5,%rdi
  0x0000024807473266: jne    0x00000248074732ed
  0x000002480747326c: mov    0x8(%rsi),%edi
  0x000002480747326f: shl    $0x3,%rdi
  0x0000024807473273: mov    0xa8(%rdi),%rdi
  0x000002480747327a: or     %r15,%rdi
  0x000002480747327d: xor    %rax,%rdi
  0x0000024807473280: and    $0xffffffffffffff87,%rdi
  0x0000024807473284: je     0x0000024807473315
  0x000002480747328a: test   $0x7,%rdi
  0x0000024807473291: jne    0x00000248074732da
  0x0000024807473293: test   $0x300,%rdi
  0x000002480747329a: jne    0x00000248074732b9
  0x000002480747329c: and    $0x37f,%rax
  0x00000248074732a3: mov    %rax,%rdi
  0x00000248074732a6: or     %r15,%rdi
  0x00000248074732a9: lock cmpxchg %rdi,(%rsi)
  0x00000248074732ae: jne    0x0000024807476323
  0x00000248074732b4: jmp    0x0000024807473315
  0x00000248074732b9: mov    0x8(%rsi),%edi
  0x00000248074732bc: shl    $0x3,%rdi
  0x00000248074732c0: mov    0xa8(%rdi),%rdi
  0x00000248074732c7: or     %r15,%rdi
  0x00000248074732ca: lock cmpxchg %rdi,(%rsi)
  0x00000248074732cf: jne    0x0000024807476323
  0x00000248074732d5: jmp    0x0000024807473315
  0x00000248074732da: mov    0x8(%rsi),%edi
  0x00000248074732dd: shl    $0x3,%rdi
  0x00000248074732e1: mov    0xa8(%rdi),%rdi
  0x00000248074732e8: lock cmpxchg %rdi,(%rsi)
  0x00000248074732ed: mov    (%rsi),%rax
  0x00000248074732f0: or     $0x1,%rax
  0x00000248074732f4: mov    %rax,(%rdx)
  0x00000248074732f7: lock cmpxchg %rdx,(%rsi)
  0x00000248074732fc: je     0x0000024807473315
  0x0000024807473302: sub    %rsp,%rax
  0x0000024807473305: and    $0xfffffffffffff007,%rax
  0x000002480747330c: mov    %rax,(%rdx)
  0x000002480747330f: jne    0x0000024807476323  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 275)
                                                ; - java.io.WinNTFileSystem::normalize@57 (line 142)

  0x0000024807473315: movabs $0x2481feaf0f8,%rdx  ;   {metadata(method data for {method} {0x000002481fb715b8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747331f: mov    0xdc(%rdx),%edi
  0x0000024807473325: add    $0x8,%edi
  0x0000024807473328: mov    %edi,0xdc(%rdx)
  0x000002480747332e: movabs $0x2481fb715b0,%rdx  ;   {metadata({method} {0x000002481fb715b8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807473338: and    $0x7ffff8,%edi
  0x000002480747333e: cmp    $0x0,%edi
  0x0000024807473341: je     0x0000024807476336
  0x0000024807473347: movl   $0x0,0x14(%rsi)
  0x000002480747334e: mov    %rsi,%rax
  0x0000024807473351: shr    $0x9,%rax
  0x0000024807473355: movabs $0x248130de000,%rdx
  0x000002480747335f: movb   $0x0,(%rax,%rdx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 275)
                                                ; - java.io.WinNTFileSystem::normalize@57 (line 142)

  0x0000024807473363: mov    %rsi,%rax
  0x0000024807473366: movabs $0x2481feaf0f8,%rdx  ;   {metadata(method data for {method} {0x000002481fb715b8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807473370: addq   $0x1,0x108(%rdx)
  0x0000024807473378: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 276)
                                                ; - java.io.WinNTFileSystem::normalize@57 (line 142)

  0x000002480747337b: nop
  0x000002480747337c: nop
  0x000002480747337d: nop
  0x000002480747337e: nop
  0x000002480747337f: call   0x0000024807375ee0  ; OopMap{[256]=Oop [240]=Oop [248]=Oop [432]=Oop off=1508}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 276)
                                                ; - java.io.WinNTFileSystem::normalize@57 (line 142)
                                                ;   {optimized virtual_call}
  0x0000024807473384: lea    0x1a8(%rsp),%rax
  0x000002480747338c: mov    0x8(%rax),%rdx
  0x0000024807473390: mov    (%rdx),%r8
  0x0000024807473393: and    $0x7,%r8
  0x0000024807473397: cmp    $0x5,%r8
  0x000002480747339b: je     0x00000248074733b8
  0x00000248074733a1: mov    (%rax),%r8
  0x00000248074733a4: test   %r8,%r8
  0x00000248074733a7: je     0x00000248074733b8
  0x00000248074733ad: lock cmpxchg %r8,(%rdx)
  0x00000248074733b2: jne    0x000002480747634d  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 275)
                                                ; - java.io.WinNTFileSystem::normalize@57 (line 142)

  0x00000248074733b8: mov    0x108(%rsp),%esi   ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 147)

  0x00000248074733bf: mov    0xf8(%rsp),%rax
  0x00000248074733c7: nop
  0x00000248074733c8: mov    0xe8(%rsp),%r9d
  0x00000248074733d0: mov    0xf0(%rsp),%r8
  0x00000248074733d8: mov    0x100(%rsp),%rdx
  0x00000248074733e0: cmp    %r9d,%esi
  0x00000248074733e3: movabs $0x2481fd59388,%rdi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074733ed: movabs $0x200,%rbx
  0x00000248074733f7: jge    0x0000024807473407
  0x00000248074733fd: movabs $0x210,%rbx
  0x0000024807473407: mov    (%rdi,%rbx,1),%rcx
  0x000002480747340b: lea    0x1(%rcx),%rcx
  0x000002480747340f: mov    %rcx,(%rdi,%rbx,1)
  0x0000024807473413: jge    0x0000024807474508  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 147)

  0x0000024807473419: mov    %rsi,%rdi
  0x000002480747341c: inc    %edi
  0x000002480747341e: mov    %edi,0x138(%rsp)
  0x0000024807473425: cmp    (%r8),%rax         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ; implicit exception: dispatches to 0x0000024807476363
  0x0000024807473428: mov    %r8,%rbx
  0x000002480747342b: movabs $0x2481fd59388,%rcx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473435: mov    0x8(%rbx),%ebx
  0x0000024807473438: shl    $0x3,%rbx
  0x000002480747343c: cmp    0x228(%rcx),%rbx
  0x0000024807473443: jne    0x0000024807473452
  0x0000024807473445: addq   $0x1,0x230(%rcx)
  0x000002480747344d: jmp    0x00000248074734b8
  0x0000024807473452: cmp    0x238(%rcx),%rbx
  0x0000024807473459: jne    0x0000024807473468
  0x000002480747345b: addq   $0x1,0x240(%rcx)
  0x0000024807473463: jmp    0x00000248074734b8
  0x0000024807473468: cmpq   $0x0,0x228(%rcx)
  0x0000024807473473: jne    0x000002480747348c
  0x0000024807473475: mov    %rbx,0x228(%rcx)
  0x000002480747347c: movq   $0x1,0x230(%rcx)
  0x0000024807473487: jmp    0x00000248074734b8
  0x000002480747348c: cmpq   $0x0,0x238(%rcx)
  0x0000024807473497: jne    0x00000248074734b0
  0x0000024807473499: mov    %rbx,0x238(%rcx)
  0x00000248074734a0: movq   $0x1,0x240(%rcx)
  0x00000248074734ab: jmp    0x00000248074734b8
  0x00000248074734b0: addq   $0x1,0x220(%rcx)
  0x00000248074734b8: movabs $0x2481fc35c48,%rbx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000248074734c2: mov    0xdc(%rbx),%ecx
  0x00000248074734c8: add    $0x8,%ecx
  0x00000248074734cb: mov    %ecx,0xdc(%rbx)
  0x00000248074734d1: movabs $0x2481fb03db0,%rbx  ;   {metadata({method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000248074734db: and    $0x7ffff8,%ecx
  0x00000248074734e1: cmp    $0x0,%ecx
  0x00000248074734e4: je     0x0000024807476368
  0x00000248074734ea: cmp    $0x0,%esi
  0x00000248074734ed: movabs $0x2481fc35c48,%rbx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000248074734f7: movabs $0x108,%rcx
  0x0000024807473501: jl     0x0000024807473511
  0x0000024807473507: movabs $0x118,%rcx
  0x0000024807473511: mov    (%rbx,%rcx,1),%r13
  0x0000024807473515: lea    0x1(%r13),%r13
  0x0000024807473519: mov    %r13,(%rbx,%rcx,1)
  0x000002480747351d: jl     0x0000024807475edc  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)

  0x0000024807473523: mov    0xc(%r8),%ebx
  0x0000024807473527: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)

  0x000002480747352b: mov    0xc(%rbx),%ecx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ; implicit exception: dispatches to 0x000002480747637f
  0x000002480747352e: cmp    %ecx,%esi
  0x0000024807473530: movabs $0x2481fc35c48,%rcx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480747353a: movabs $0x128,%r13
  0x0000024807473544: jl     0x0000024807473554
  0x000002480747354a: movabs $0x138,%r13
  0x0000024807473554: mov    (%rcx,%r13,1),%r14
  0x0000024807473558: lea    0x1(%r14),%r14
  0x000002480747355c: mov    %r14,(%rcx,%r13,1)
  0x0000024807473560: jge    0x0000024807475edc  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)

  0x0000024807473566: movslq %esi,%rcx
  0x0000024807473569: cmp    0xc(%rbx),%esi
  0x000002480747356c: jae    0x0000024807476384
  0x0000024807473572: movzwl 0x10(%rbx,%rcx,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)

  0x0000024807473577: and    $0xffff,%esi
  0x000002480747357d: mov    %rdx,%rbx
  0x0000024807473580: movabs $0x2481fd59388,%rcx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747358a: addq   $0x1,0x250(%rcx)
  0x0000024807473592: movabs $0x2481fd28b30,%rbx  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747359c: mov    0xdc(%rbx),%ecx
  0x00000248074735a2: add    $0x8,%ecx
  0x00000248074735a5: mov    %ecx,0xdc(%rbx)
  0x00000248074735ab: movabs $0x2481fc80e50,%rbx  ;   {metadata({method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074735b5: and    $0x7ffff8,%ecx
  0x00000248074735bb: cmp    $0x0,%ecx
  0x00000248074735be: je     0x000002480747638d
  0x00000248074735c4: cmp    $0x5c,%esi
  0x00000248074735c7: movabs $0x2481fd28b30,%rbx  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074735d1: movabs $0x108,%rcx
  0x00000248074735db: je     0x00000248074735eb
  0x00000248074735e1: movabs $0x118,%rcx
  0x00000248074735eb: mov    (%rbx,%rcx,1),%r13
  0x00000248074735ef: lea    0x1(%r13),%r13
  0x00000248074735f3: mov    %r13,(%rbx,%rcx,1)
  0x00000248074735f7: je     0x0000024807473636  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 149)

  0x00000248074735fd: cmp    $0x2f,%esi
  0x0000024807473600: movabs $0x2481fd28b30,%rbx  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747360a: movabs $0x128,%rcx
  0x0000024807473614: jne    0x0000024807473624
  0x000002480747361a: movabs $0x138,%rcx
  0x0000024807473624: mov    (%rbx,%rcx,1),%r13
  0x0000024807473628: lea    0x1(%r13),%r13
  0x000002480747362c: mov    %r13,(%rbx,%rcx,1)
  0x0000024807473630: jne    0x0000024807473650  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 149)

  0x0000024807473636: movabs $0x2481fd28b30,%rbx  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473640: incl   0x148(%rbx)
  0x0000024807473646: mov    $0x1,%ebx
  0x000002480747364b: jmp    0x0000024807473655  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 149)

  0x0000024807473650: mov    $0x0,%ebx          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 149)

  0x0000024807473655: and    $0x1,%ebx
  0x0000024807473658: cmp    $0x0,%ebx
  0x000002480747365b: movabs $0x2481fd59388,%rbx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473665: movabs $0x260,%rcx
  0x000002480747366f: je     0x000002480747367f
  0x0000024807473675: movabs $0x270,%rcx
  0x000002480747367f: mov    (%rbx,%rcx,1),%r13
  0x0000024807473683: lea    0x1(%r13),%r13
  0x0000024807473687: mov    %r13,(%rbx,%rcx,1)
  0x000002480747368b: je     0x0000024807473f47  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 149)

  0x0000024807473691: nopl   0x0(%rax)
  0x0000024807473698: cmp    %r9d,%edi
  0x000002480747369b: movabs $0x2481fd59388,%rsi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074736a5: movabs $0x280,%rbx
  0x00000248074736af: jge    0x00000248074736bf
  0x00000248074736b5: movabs $0x290,%rbx
  0x00000248074736bf: mov    (%rsi,%rbx,1),%rcx
  0x00000248074736c3: lea    0x1(%rcx),%rcx
  0x00000248074736c7: mov    %rcx,(%rsi,%rbx,1)
  0x00000248074736cb: jge    0x0000024807473989  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 150)

  0x00000248074736d1: mov    %r8,%rsi
  0x00000248074736d4: movabs $0x2481fd59388,%rbx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074736de: mov    0x8(%rsi),%esi
  0x00000248074736e1: shl    $0x3,%rsi
  0x00000248074736e5: cmp    0x2a8(%rbx),%rsi
  0x00000248074736ec: jne    0x00000248074736fb
  0x00000248074736ee: addq   $0x1,0x2b0(%rbx)
  0x00000248074736f6: jmp    0x0000024807473761
  0x00000248074736fb: cmp    0x2b8(%rbx),%rsi
  0x0000024807473702: jne    0x0000024807473711
  0x0000024807473704: addq   $0x1,0x2c0(%rbx)
  0x000002480747370c: jmp    0x0000024807473761
  0x0000024807473711: cmpq   $0x0,0x2a8(%rbx)
  0x000002480747371c: jne    0x0000024807473735
  0x000002480747371e: mov    %rsi,0x2a8(%rbx)
  0x0000024807473725: movq   $0x1,0x2b0(%rbx)
  0x0000024807473730: jmp    0x0000024807473761
  0x0000024807473735: cmpq   $0x0,0x2b8(%rbx)
  0x0000024807473740: jne    0x0000024807473759
  0x0000024807473742: mov    %rsi,0x2b8(%rbx)
  0x0000024807473749: movq   $0x1,0x2c0(%rbx)
  0x0000024807473754: jmp    0x0000024807473761
  0x0000024807473759: addq   $0x1,0x2a0(%rbx)
  0x0000024807473761: movabs $0x2481fc35c48,%rsi  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480747376b: mov    0xdc(%rsi),%ebx
  0x0000024807473771: add    $0x8,%ebx
  0x0000024807473774: mov    %ebx,0xdc(%rsi)
  0x000002480747377a: movabs $0x2481fb03db0,%rsi  ;   {metadata({method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807473784: and    $0x7ffff8,%ebx
  0x000002480747378a: cmp    $0x0,%ebx
  0x000002480747378d: je     0x00000248074763a4
  0x0000024807473793: cmp    $0x0,%edi
  0x0000024807473796: movabs $0x2481fc35c48,%rsi  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000248074737a0: movabs $0x108,%rbx
  0x00000248074737aa: jl     0x00000248074737ba
  0x00000248074737b0: movabs $0x118,%rbx
  0x00000248074737ba: mov    (%rsi,%rbx,1),%rcx
  0x00000248074737be: lea    0x1(%rcx),%rcx
  0x00000248074737c2: mov    %rcx,(%rsi,%rbx,1)
  0x00000248074737c6: jl     0x0000024807475f29  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)

  0x00000248074737cc: mov    0xc(%r8),%esi
  0x00000248074737d0: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)

  0x00000248074737d4: mov    0xc(%rsi),%ebx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)
                                                ; implicit exception: dispatches to 0x00000248074763bb
  0x00000248074737d7: cmp    %ebx,%edi
  0x00000248074737d9: movabs $0x2481fc35c48,%rbx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000248074737e3: movabs $0x128,%rcx
  0x00000248074737ed: jl     0x00000248074737fd
  0x00000248074737f3: movabs $0x138,%rcx
  0x00000248074737fd: mov    (%rbx,%rcx,1),%r13
  0x0000024807473801: lea    0x1(%r13),%r13
  0x0000024807473805: mov    %r13,(%rbx,%rcx,1)
  0x0000024807473809: jge    0x0000024807475f29  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)

  0x000002480747380f: movslq %edi,%rbx
  0x0000024807473812: cmp    0xc(%rsi),%edi
  0x0000024807473815: jae    0x00000248074763c0
  0x000002480747381b: movzwl 0x10(%rsi,%rbx,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)

  0x0000024807473820: and    $0xffff,%esi
  0x0000024807473826: mov    %rdx,%rbx
  0x0000024807473829: movabs $0x2481fd59388,%rcx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473833: addq   $0x1,0x2d0(%rcx)
  0x000002480747383b: movabs $0x2481fd28b30,%rbx  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473845: mov    0xdc(%rbx),%ecx
  0x000002480747384b: add    $0x8,%ecx
  0x000002480747384e: mov    %ecx,0xdc(%rbx)
  0x0000024807473854: movabs $0x2481fc80e50,%rbx  ;   {metadata({method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747385e: and    $0x7ffff8,%ecx
  0x0000024807473864: cmp    $0x0,%ecx
  0x0000024807473867: je     0x00000248074763c9
  0x000002480747386d: cmp    $0x5c,%esi
  0x0000024807473870: movabs $0x2481fd28b30,%rbx  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747387a: movabs $0x108,%rcx
  0x0000024807473884: je     0x0000024807473894
  0x000002480747388a: movabs $0x118,%rcx
  0x0000024807473894: mov    (%rbx,%rcx,1),%r13
  0x0000024807473898: lea    0x1(%r13),%r13
  0x000002480747389c: mov    %r13,(%rbx,%rcx,1)
  0x00000248074738a0: je     0x00000248074738df  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 150)

  0x00000248074738a6: cmp    $0x2f,%esi
  0x00000248074738a9: movabs $0x2481fd28b30,%rsi  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074738b3: movabs $0x128,%rbx
  0x00000248074738bd: jne    0x00000248074738cd
  0x00000248074738c3: movabs $0x138,%rbx
  0x00000248074738cd: mov    (%rsi,%rbx,1),%rcx
  0x00000248074738d1: lea    0x1(%rcx),%rcx
  0x00000248074738d5: mov    %rcx,(%rsi,%rbx,1)
  0x00000248074738d9: jne    0x00000248074738f9  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 150)

  0x00000248074738df: movabs $0x2481fd28b30,%rsi  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074738e9: incl   0x148(%rsi)
  0x00000248074738ef: mov    $0x1,%esi
  0x00000248074738f4: jmp    0x00000248074738fe  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 150)

  0x00000248074738f9: mov    $0x0,%esi          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 150)

  0x00000248074738fe: and    $0x1,%esi
  0x0000024807473901: cmp    $0x0,%esi
  0x0000024807473904: movabs $0x2481fd59388,%rsi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747390e: movabs $0x2e0,%rbx
  0x0000024807473918: je     0x0000024807473928
  0x000002480747391e: movabs $0x2f0,%rbx
  0x0000024807473928: mov    (%rsi,%rbx,1),%rcx
  0x000002480747392c: lea    0x1(%rcx),%rcx
  0x0000024807473930: mov    %rcx,(%rsi,%rbx,1)
  0x0000024807473934: je     0x0000024807473989  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 150)

  0x000002480747393a: inc    %edi
  0x000002480747393c: movabs $0x2481fd59388,%rsi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473946: mov    0xe0(%rsi),%ebx
  0x000002480747394c: add    $0x8,%ebx
  0x000002480747394f: mov    %ebx,0xe0(%rsi)
  0x0000024807473955: movabs $0x2481fc813b8,%rsi  ;   {metadata({method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747395f: and    $0xfff8,%ebx
  0x0000024807473965: cmp    $0x0,%ebx
  0x0000024807473968: je     0x00000248074763e0  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop off=3022}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@109 (line 150)

  0x000002480747396e: test   %eax,-0x1ec3874(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807473974: movabs $0x2481fd59388,%rsi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747397e: incl   0x300(%rsi)
  0x0000024807473984: jmp    0x0000024807473698  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@109 (line 150)

  0x0000024807473989: cmp    %r9d,%edi
  0x000002480747398c: movabs $0x2481fd59388,%rsi  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473996: movabs $0x318,%rbx
  0x00000248074739a0: jne    0x00000248074739b0
  0x00000248074739a6: movabs $0x328,%rbx
  0x00000248074739b0: mov    (%rsi,%rbx,1),%rcx
  0x00000248074739b4: lea    0x1(%rcx),%rcx
  0x00000248074739b8: mov    %rcx,(%rsi,%rbx,1)
  0x00000248074739bc: je     0x0000024807474510  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 151)

  0x00000248074739c2: mov    %rax,%rsi
  0x00000248074739c5: movabs $0x2481fd59388,%rbx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074739cf: mov    0x8(%rsi),%esi
  0x00000248074739d2: shl    $0x3,%rsi
  0x00000248074739d6: cmp    0x558(%rbx),%rsi
  0x00000248074739dd: jne    0x00000248074739ec
  0x00000248074739df: addq   $0x1,0x560(%rbx)
  0x00000248074739e7: jmp    0x0000024807473a52
  0x00000248074739ec: cmp    0x568(%rbx),%rsi
  0x00000248074739f3: jne    0x0000024807473a02
  0x00000248074739f5: addq   $0x1,0x570(%rbx)
  0x00000248074739fd: jmp    0x0000024807473a52
  0x0000024807473a02: cmpq   $0x0,0x558(%rbx)
  0x0000024807473a0d: jne    0x0000024807473a26
  0x0000024807473a0f: mov    %rsi,0x558(%rbx)
  0x0000024807473a16: movq   $0x1,0x560(%rbx)
  0x0000024807473a21: jmp    0x0000024807473a52
  0x0000024807473a26: cmpq   $0x0,0x568(%rbx)
  0x0000024807473a31: jne    0x0000024807473a4a
  0x0000024807473a33: mov    %rsi,0x568(%rbx)
  0x0000024807473a3a: movq   $0x1,0x570(%rbx)
  0x0000024807473a45: jmp    0x0000024807473a52
  0x0000024807473a4a: addq   $0x1,0x550(%rbx)
  0x0000024807473a52: lea    0x1a8(%rsp),%rsi
  0x0000024807473a5a: mov    %rax,%rbx
  0x0000024807473a5d: mov    %rbx,0x8(%rsi)
  0x0000024807473a61: mov    (%rbx),%rax
  0x0000024807473a64: mov    %rax,%rcx
  0x0000024807473a67: and    $0x7,%rcx
  0x0000024807473a6b: cmp    $0x5,%rcx
  0x0000024807473a6f: jne    0x0000024807473af6
  0x0000024807473a75: mov    0x8(%rbx),%ecx
  0x0000024807473a78: shl    $0x3,%rcx
  0x0000024807473a7c: mov    0xa8(%rcx),%rcx
  0x0000024807473a83: or     %r15,%rcx
  0x0000024807473a86: xor    %rax,%rcx
  0x0000024807473a89: and    $0xffffffffffffff87,%rcx
  0x0000024807473a8d: je     0x0000024807473b1e
  0x0000024807473a93: test   $0x7,%rcx
  0x0000024807473a9a: jne    0x0000024807473ae3
  0x0000024807473a9c: test   $0x300,%rcx
  0x0000024807473aa3: jne    0x0000024807473ac2
  0x0000024807473aa5: and    $0x37f,%rax
  0x0000024807473aac: mov    %rax,%rcx
  0x0000024807473aaf: or     %r15,%rcx
  0x0000024807473ab2: lock cmpxchg %rcx,(%rbx)
  0x0000024807473ab7: jne    0x00000248074763f7
  0x0000024807473abd: jmp    0x0000024807473b1e
  0x0000024807473ac2: mov    0x8(%rbx),%ecx
  0x0000024807473ac5: shl    $0x3,%rcx
  0x0000024807473ac9: mov    0xa8(%rcx),%rcx
  0x0000024807473ad0: or     %r15,%rcx
  0x0000024807473ad3: lock cmpxchg %rcx,(%rbx)
  0x0000024807473ad8: jne    0x00000248074763f7
  0x0000024807473ade: jmp    0x0000024807473b1e
  0x0000024807473ae3: mov    0x8(%rbx),%ecx
  0x0000024807473ae6: shl    $0x3,%rcx
  0x0000024807473aea: mov    0xa8(%rcx),%rcx
  0x0000024807473af1: lock cmpxchg %rcx,(%rbx)
  0x0000024807473af6: mov    (%rbx),%rax
  0x0000024807473af9: or     $0x1,%rax
  0x0000024807473afd: mov    %rax,(%rsi)
  0x0000024807473b00: lock cmpxchg %rsi,(%rbx)
  0x0000024807473b05: je     0x0000024807473b1e
  0x0000024807473b0b: sub    %rsp,%rax
  0x0000024807473b0e: and    $0xfffffffffffff007,%rax
  0x0000024807473b15: mov    %rax,(%rsi)
  0x0000024807473b18: jne    0x00000248074763f7  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473b1e: movabs $0x2481fd28cb0,%rsi  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807473b28: mov    0xdc(%rsi),%eax
  0x0000024807473b2e: add    $0x8,%eax
  0x0000024807473b31: mov    %eax,0xdc(%rsi)
  0x0000024807473b37: movabs $0x2481fb71ab0,%rsi  ;   {metadata({method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807473b41: and    $0x7ffff8,%eax
  0x0000024807473b47: cmp    $0x0,%eax
  0x0000024807473b4a: je     0x000002480747640a
  0x0000024807473b50: movl   $0x0,0x14(%rbx)
  0x0000024807473b57: mov    %rbx,%rax
  0x0000024807473b5a: shr    $0x9,%rax
  0x0000024807473b5e: movabs $0x248130de000,%rsi
  0x0000024807473b68: movb   $0x0,(%rax,%rsi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473b6c: mov    %rbx,%rax
  0x0000024807473b6f: movabs $0x2481fd28cb0,%rsi  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807473b79: addq   $0x1,0x108(%rsi)
  0x0000024807473b81: movabs $0x2481fd289f8,%rsi  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807473b8b: mov    0xdc(%rsi),%eax
  0x0000024807473b91: add    $0x8,%eax
  0x0000024807473b94: mov    %eax,0xdc(%rsi)
  0x0000024807473b9a: movabs $0x2481fb768b0,%rsi  ;   {metadata({method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807473ba4: and    $0x7ffff8,%eax
  0x0000024807473baa: cmp    $0x0,%eax
  0x0000024807473bad: je     0x0000024807476421
  0x0000024807473bb3: mov    0xc(%rbx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473bb6: inc    %esi
  0x0000024807473bb8: mov    %rbx,%rax
  0x0000024807473bbb: movabs $0x2481fd289f8,%rcx  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807473bc5: addq   $0x1,0x108(%rcx)
  0x0000024807473bcd: movabs $0x2481fd28388,%rax  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807473bd7: mov    0xdc(%rax),%ecx
  0x0000024807473bdd: add    $0x8,%ecx
  0x0000024807473be0: mov    %ecx,0xdc(%rax)
  0x0000024807473be6: movabs $0x2481fb75778,%rax  ;   {metadata({method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807473bf0: and    $0x7ffff8,%ecx
  0x0000024807473bf6: cmp    $0x0,%ecx
  0x0000024807473bf9: je     0x0000024807476438
  0x0000024807473bff: mov    0x10(%rbx),%eax
  0x0000024807473c02: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473c06: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ; implicit exception: dispatches to 0x000002480747644f
  0x0000024807473c09: mov    %rsi,%r13
  0x0000024807473c0c: sub    %ecx,%r13d
  0x0000024807473c0f: cmp    $0x0,%r13d
  0x0000024807473c13: movabs $0x2481fd28388,%r13  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807473c1d: movabs $0x108,%r14
  0x0000024807473c27: jle    0x0000024807473c37
  0x0000024807473c2d: movabs $0x118,%r14
  0x0000024807473c37: mov    %esi,0x10c(%rsp)
  0x0000024807473c3e: mov    0x0(%r13,%r14,1),%rsi
  0x0000024807473c43: lea    0x1(%rsi),%rsi
  0x0000024807473c47: mov    %rsi,0x0(%r13,%r14,1)
  0x0000024807473c4c: jg     0x0000024807473c5e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473c52: mov    %edi,0x110(%rsp)
  0x0000024807473c59: jmp    0x0000024807473ec9  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473c5e: mov    %ecx,0x114(%rsp)
  0x0000024807473c65: mov    %rax,0x118(%rsp)
  0x0000024807473c6d: mov    0x10c(%rsp),%esi
  0x0000024807473c74: mov    %edi,0x110(%rsp)
  0x0000024807473c7b: mov    %rbx,%r13
  0x0000024807473c7e: movabs $0x2481fd28388,%r14  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807473c88: addq   $0x1,0x128(%r14)
  0x0000024807473c90: mov    %rsi,%r8
  0x0000024807473c93: mov    %rbx,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473c96: nop
  0x0000024807473c97: call   0x0000024807375ee0  ; OopMap{[256]=Oop [248]=Oop [240]=Oop [280]=Oop [432]=Oop off=3836}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {optimized virtual_call}
  0x0000024807473c9c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473c9f: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807473ca9: addq   $0x1,0x138(%rbx)
  0x0000024807473cb1: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807473cbb: mov    0xdc(%rbx),%edx
  0x0000024807473cc1: add    $0x8,%edx
  0x0000024807473cc4: mov    %edx,0xdc(%rbx)
  0x0000024807473cca: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807473cd4: and    $0x7ffff8,%edx
  0x0000024807473cda: cmp    $0x0,%edx
  0x0000024807473cdd: je     0x0000024807476454
  0x0000024807473ce3: mov    %r8,%rbx
  0x0000024807473ce6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807473cf0: movslq %ebx,%rbx
  0x0000024807473cf3: mov    %rbx,%rdi
  0x0000024807473cf6: cmp    $0xffffff,%rbx
  0x0000024807473cfd: ja     0x000002480747646b
  0x0000024807473d03: movabs $0x17,%rsi
  0x0000024807473d0d: lea    (%rsi,%rbx,2),%rsi
  0x0000024807473d11: and    $0xfffffffffffffff8,%rsi
  0x0000024807473d15: mov    0x60(%r15),%rax
  0x0000024807473d19: lea    (%rax,%rsi,1),%rsi
  0x0000024807473d1d: cmp    0x70(%r15),%rsi
  0x0000024807473d21: ja     0x000002480747646b
  0x0000024807473d27: mov    %rsi,0x60(%r15)
  0x0000024807473d2b: sub    %rax,%rsi
  0x0000024807473d2e: movq   $0x1,(%rax)
  0x0000024807473d35: mov    %rdx,%rcx
  0x0000024807473d38: shr    $0x3,%rcx
  0x0000024807473d3c: mov    %ecx,0x8(%rax)
  0x0000024807473d3f: mov    %ebx,0xc(%rax)
  0x0000024807473d42: sub    $0x10,%rsi
  0x0000024807473d46: je     0x0000024807473d5d
  0x0000024807473d4c: xor    %rbx,%rbx
  0x0000024807473d4f: shr    $0x3,%rsi
  0x0000024807473d53: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807473d58: dec    %rsi
  0x0000024807473d5b: jne    0x0000024807473d53  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473d5d: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807473d67: addq   $0x1,0x108(%rdx)
  0x0000024807473d6f: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807473d79: mov    0xdc(%rdx),%r9d
  0x0000024807473d80: add    $0x8,%r9d
  0x0000024807473d84: mov    %r9d,0xdc(%rdx)
  0x0000024807473d8b: movabs $0x2481fbf7590,%rdx  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807473d95: and    $0x7ffff8,%r9d
  0x0000024807473d9c: cmp    $0x0,%r9d
  0x0000024807473da0: je     0x0000024807476475
  0x0000024807473da6: mov    0x114(%rsp),%ecx
  0x0000024807473dad: cmp    %r8d,%ecx
  0x0000024807473db0: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807473dba: movabs $0x108,%r9
  0x0000024807473dc4: jg     0x0000024807473dd4
  0x0000024807473dca: movabs $0x118,%r9
  0x0000024807473dd4: mov    (%rdx,%r9,1),%rdi
  0x0000024807473dd8: lea    0x1(%rdi),%rdi
  0x0000024807473ddc: mov    %rdi,(%rdx,%r9,1)
  0x0000024807473de0: jg     0x0000024807473dfb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473de6: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807473df0: incl   0x128(%rdx)
  0x0000024807473df6: jmp    0x0000024807473dfe  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473dfb: mov    %r8,%rcx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473dfe: mov    0x118(%rsp),%rdx
  0x0000024807473e06: movabs $0x2481fd58e70,%r8  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807473e10: addq   $0x1,0x118(%r8)
  0x0000024807473e18: mov    $0x0,%r8d
  0x0000024807473e1e: mov    %rax,%r9
  0x0000024807473e21: mov    $0x0,%edi
  0x0000024807473e26: mov    %rcx,%rsi
  0x0000024807473e29: mov    %rax,0x120(%rsp)
  0x0000024807473e31: lea    (%r8,%rsi,1),%rcx
  0x0000024807473e35: cmp    0xc(%rdx),%ecx
  0x0000024807473e38: ja     0x000002480747648c
  0x0000024807473e3e: lea    (%rdi,%rsi,1),%rcx
  0x0000024807473e42: cmp    0xc(%r9),%ecx
  0x0000024807473e46: ja     0x000002480747648c
  0x0000024807473e4c: test   %esi,%esi
  0x0000024807473e4e: jl     0x000002480747648c
  0x0000024807473e54: je     0x0000024807473e98
  0x0000024807473e5a: movslq %r8d,%r8
  0x0000024807473e5d: movslq %edi,%rdi
  0x0000024807473e60: lea    0x10(%rdx,%r8,2),%rcx
  0x0000024807473e65: lea    0x10(%r9,%rdi,2),%rdx
  0x0000024807473e6a: mov    %rsi,%r8
  0x0000024807473e6d: sub    $0x20,%rsp
  0x0000024807473e71: test   $0xf,%esp
  0x0000024807473e77: je     0x0000024807473e8f
  0x0000024807473e7d: sub    $0x8,%rsp
  0x0000024807473e81: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807473e86: add    $0x8,%rsp
  0x0000024807473e8a: jmp    0x0000024807473e94
  0x0000024807473e8f: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807473e94: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473e98: mov    0x120(%rsp),%rax
  0x0000024807473ea0: mov    0xf8(%rsp),%rbx
  0x0000024807473ea8: mov    %rax,%r10
  0x0000024807473eab: shr    $0x3,%r10
  0x0000024807473eaf: mov    %r10d,0x10(%rbx)
  0x0000024807473eb3: mov    %rbx,%rax
  0x0000024807473eb6: shr    $0x9,%rax
  0x0000024807473eba: movabs $0x248130de000,%r8
  0x0000024807473ec4: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473ec9: mov    0xec(%rsp),%r11d
  0x0000024807473ed1: mov    0x10(%rbx),%eax
  0x0000024807473ed4: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473ed8: mov    0xc(%rbx),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473edc: mov    %r8,%rdx
  0x0000024807473edf: inc    %edx
  0x0000024807473ee1: mov    %edx,0xc(%rbx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473ee4: movslq %r8d,%rdx
  0x0000024807473ee7: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000024807476499
  0x0000024807473eeb: jae    0x00000248074764a3
  0x0000024807473ef1: mov    %r11w,0x10(%rax,%rdx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473ef7: lea    0x1a8(%rsp),%rax
  0x0000024807473eff: mov    0x8(%rax),%rdx
  0x0000024807473f03: mov    (%rdx),%r8
  0x0000024807473f06: and    $0x7,%r8
  0x0000024807473f0a: cmp    $0x5,%r8
  0x0000024807473f0e: je     0x0000024807473f2b
  0x0000024807473f14: mov    (%rax),%r8
  0x0000024807473f17: test   %r8,%r8
  0x0000024807473f1a: je     0x0000024807473f2b
  0x0000024807473f20: lock cmpxchg %r8,(%rdx)
  0x0000024807473f25: jne    0x00000248074764ac  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807473f2b: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473f35: incl   0x580(%rax)
  0x0000024807473f3b: mov    0x110(%rsp),%edi
  0x0000024807473f42: jmp    0x00000248074744b0  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@207 (line 179)

  0x0000024807473f47: mov    %rax,%rbx
  0x0000024807473f4a: mov    0xec(%rsp),%r11d
  0x0000024807473f52: mov    %rbx,%rax
  0x0000024807473f55: movabs $0x2481fd59388,%r8  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807473f5f: mov    0x8(%rax),%eax
  0x0000024807473f62: shl    $0x3,%rax
  0x0000024807473f66: cmp    0x5a0(%r8),%rax
  0x0000024807473f6d: jne    0x0000024807473f7c
  0x0000024807473f6f: addq   $0x1,0x5a8(%r8)
  0x0000024807473f77: jmp    0x0000024807473fe2
  0x0000024807473f7c: cmp    0x5b0(%r8),%rax
  0x0000024807473f83: jne    0x0000024807473f92
  0x0000024807473f85: addq   $0x1,0x5b8(%r8)
  0x0000024807473f8d: jmp    0x0000024807473fe2
  0x0000024807473f92: cmpq   $0x0,0x5a0(%r8)
  0x0000024807473f9d: jne    0x0000024807473fb6
  0x0000024807473f9f: mov    %rax,0x5a0(%r8)
  0x0000024807473fa6: movq   $0x1,0x5a8(%r8)
  0x0000024807473fb1: jmp    0x0000024807473fe2
  0x0000024807473fb6: cmpq   $0x0,0x5b0(%r8)
  0x0000024807473fc1: jne    0x0000024807473fda
  0x0000024807473fc3: mov    %rax,0x5b0(%r8)
  0x0000024807473fca: movq   $0x1,0x5b8(%r8)
  0x0000024807473fd5: jmp    0x0000024807473fe2
  0x0000024807473fda: addq   $0x1,0x598(%r8)
  0x0000024807473fe2: lea    0x1a8(%rsp),%r8
  0x0000024807473fea: mov    %rbx,0x8(%r8)
  0x0000024807473fee: mov    (%rbx),%rax
  0x0000024807473ff1: mov    %rax,%rdx
  0x0000024807473ff4: and    $0x7,%rdx
  0x0000024807473ff8: cmp    $0x5,%rdx
  0x0000024807473ffc: jne    0x0000024807474083
  0x0000024807474002: mov    0x8(%rbx),%edx
  0x0000024807474005: shl    $0x3,%rdx
  0x0000024807474009: mov    0xa8(%rdx),%rdx
  0x0000024807474010: or     %r15,%rdx
  0x0000024807474013: xor    %rax,%rdx
  0x0000024807474016: and    $0xffffffffffffff87,%rdx
  0x000002480747401a: je     0x00000248074740ab
  0x0000024807474020: test   $0x7,%rdx
  0x0000024807474027: jne    0x0000024807474070
  0x0000024807474029: test   $0x300,%rdx
  0x0000024807474030: jne    0x000002480747404f
  0x0000024807474032: and    $0x37f,%rax
  0x0000024807474039: mov    %rax,%rdx
  0x000002480747403c: or     %r15,%rdx
  0x000002480747403f: lock cmpxchg %rdx,(%rbx)
  0x0000024807474044: jne    0x00000248074764c2
  0x000002480747404a: jmp    0x00000248074740ab
  0x000002480747404f: mov    0x8(%rbx),%edx
  0x0000024807474052: shl    $0x3,%rdx
  0x0000024807474056: mov    0xa8(%rdx),%rdx
  0x000002480747405d: or     %r15,%rdx
  0x0000024807474060: lock cmpxchg %rdx,(%rbx)
  0x0000024807474065: jne    0x00000248074764c2
  0x000002480747406b: jmp    0x00000248074740ab
  0x0000024807474070: mov    0x8(%rbx),%edx
  0x0000024807474073: shl    $0x3,%rdx
  0x0000024807474077: mov    0xa8(%rdx),%rdx
  0x000002480747407e: lock cmpxchg %rdx,(%rbx)
  0x0000024807474083: mov    (%rbx),%rax
  0x0000024807474086: or     $0x1,%rax
  0x000002480747408a: mov    %rax,(%r8)
  0x000002480747408d: lock cmpxchg %r8,(%rbx)
  0x0000024807474092: je     0x00000248074740ab
  0x0000024807474098: sub    %rsp,%rax
  0x000002480747409b: and    $0xfffffffffffff007,%rax
  0x00000248074740a2: mov    %rax,(%r8)
  0x00000248074740a5: jne    0x00000248074764c2  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x00000248074740ab: movabs $0x2481fd28cb0,%r8  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000248074740b5: mov    0xdc(%r8),%edx
  0x00000248074740bc: add    $0x8,%edx
  0x00000248074740bf: mov    %edx,0xdc(%r8)
  0x00000248074740c6: movabs $0x2481fb71ab0,%r8  ;   {metadata({method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000248074740d0: and    $0x7ffff8,%edx
  0x00000248074740d6: cmp    $0x0,%edx
  0x00000248074740d9: je     0x00000248074764d5
  0x00000248074740df: movl   $0x0,0x14(%rbx)
  0x00000248074740e6: mov    %rbx,%rax
  0x00000248074740e9: shr    $0x9,%rax
  0x00000248074740ed: movabs $0x248130de000,%r8
  0x00000248074740f7: movb   $0x0,(%rax,%r8,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x00000248074740fc: mov    %rbx,%rax
  0x00000248074740ff: movabs $0x2481fd28cb0,%r8  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807474109: addq   $0x1,0x108(%r8)
  0x0000024807474111: movabs $0x2481fd289f8,%r8  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480747411b: mov    0xdc(%r8),%edx
  0x0000024807474122: add    $0x8,%edx
  0x0000024807474125: mov    %edx,0xdc(%r8)
  0x000002480747412c: movabs $0x2481fb768b0,%r8  ;   {metadata({method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474136: and    $0x7ffff8,%edx
  0x000002480747413c: cmp    $0x0,%edx
  0x000002480747413f: je     0x00000248074764ec
  0x0000024807474145: mov    0xc(%rbx),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x0000024807474149: inc    %r8d
  0x000002480747414c: mov    %rbx,%rax
  0x000002480747414f: movabs $0x2481fd289f8,%rdx  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474159: addq   $0x1,0x108(%rdx)
  0x0000024807474161: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480747416b: mov    0xdc(%rdx),%eax
  0x0000024807474171: add    $0x8,%eax
  0x0000024807474174: mov    %eax,0xdc(%rdx)
  0x000002480747417a: movabs $0x2481fb75778,%rdx  ;   {metadata({method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474184: and    $0x7ffff8,%eax
  0x000002480747418a: cmp    $0x0,%eax
  0x000002480747418d: je     0x0000024807476503
  0x0000024807474193: mov    0x10(%rbx),%eax
  0x0000024807474196: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x000002480747419a: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ; implicit exception: dispatches to 0x000002480747651a
  0x000002480747419d: mov    %r8,%rdx
  0x00000248074741a0: sub    %ecx,%edx
  0x00000248074741a2: cmp    $0x0,%edx
  0x00000248074741a5: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074741af: movabs $0x108,%r9
  0x00000248074741b9: jle    0x00000248074741c9
  0x00000248074741bf: movabs $0x118,%r9
  0x00000248074741c9: mov    (%rdx,%r9,1),%r13
  0x00000248074741cd: lea    0x1(%r13),%r13
  0x00000248074741d1: mov    %r13,(%rdx,%r9,1)
  0x00000248074741d5: jg     0x00000248074741e7  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x00000248074741db: mov    %esi,0x12c(%rsp)
  0x00000248074741e2: jmp    0x0000024807474449  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x00000248074741e7: mov    %ecx,0x128(%rsp)
  0x00000248074741ee: mov    %rax,0x130(%rsp)
  0x00000248074741f6: mov    %esi,0x12c(%rsp)
  0x00000248074741fd: mov    %rbx,%rdx
  0x0000024807474200: movabs $0x2481fd28388,%r9  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480747420a: addq   $0x1,0x128(%r9)
  0x0000024807474212: mov    %rbx,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x0000024807474215: nop
  0x0000024807474216: nop
  0x0000024807474217: call   0x0000024807375ee0  ; OopMap{[256]=Oop [240]=Oop [304]=Oop [248]=Oop [432]=Oop off=5244}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {optimized virtual_call}
  0x000002480747421c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x000002480747421f: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474229: addq   $0x1,0x138(%rbx)
  0x0000024807474231: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480747423b: mov    0xdc(%rbx),%edx
  0x0000024807474241: add    $0x8,%edx
  0x0000024807474244: mov    %edx,0xdc(%rbx)
  0x000002480747424a: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807474254: and    $0x7ffff8,%edx
  0x000002480747425a: cmp    $0x0,%edx
  0x000002480747425d: je     0x000002480747651f
  0x0000024807474263: mov    %r8,%rbx
  0x0000024807474266: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807474270: movslq %ebx,%rbx
  0x0000024807474273: mov    %rbx,%rdi
  0x0000024807474276: cmp    $0xffffff,%rbx
  0x000002480747427d: ja     0x0000024807476536
  0x0000024807474283: movabs $0x17,%rsi
  0x000002480747428d: lea    (%rsi,%rbx,2),%rsi
  0x0000024807474291: and    $0xfffffffffffffff8,%rsi
  0x0000024807474295: mov    0x60(%r15),%rax
  0x0000024807474299: lea    (%rax,%rsi,1),%rsi
  0x000002480747429d: cmp    0x70(%r15),%rsi
  0x00000248074742a1: ja     0x0000024807476536
  0x00000248074742a7: mov    %rsi,0x60(%r15)
  0x00000248074742ab: sub    %rax,%rsi
  0x00000248074742ae: movq   $0x1,(%rax)
  0x00000248074742b5: mov    %rdx,%rcx
  0x00000248074742b8: shr    $0x3,%rcx
  0x00000248074742bc: mov    %ecx,0x8(%rax)
  0x00000248074742bf: mov    %ebx,0xc(%rax)
  0x00000248074742c2: sub    $0x10,%rsi
  0x00000248074742c6: je     0x00000248074742dd
  0x00000248074742cc: xor    %rbx,%rbx
  0x00000248074742cf: shr    $0x3,%rsi
  0x00000248074742d3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000248074742d8: dec    %rsi
  0x00000248074742db: jne    0x00000248074742d3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x00000248074742dd: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000248074742e7: addq   $0x1,0x108(%rdx)
  0x00000248074742ef: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000248074742f9: mov    0xdc(%rdx),%r9d
  0x0000024807474300: add    $0x8,%r9d
  0x0000024807474304: mov    %r9d,0xdc(%rdx)
  0x000002480747430b: movabs $0x2481fbf7590,%rdx  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807474315: and    $0x7ffff8,%r9d
  0x000002480747431c: cmp    $0x0,%r9d
  0x0000024807474320: je     0x0000024807476540
  0x0000024807474326: mov    0x128(%rsp),%ecx
  0x000002480747432d: cmp    %r8d,%ecx
  0x0000024807474330: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480747433a: movabs $0x108,%r9
  0x0000024807474344: jg     0x0000024807474354
  0x000002480747434a: movabs $0x118,%r9
  0x0000024807474354: mov    (%rdx,%r9,1),%rdi
  0x0000024807474358: lea    0x1(%rdi),%rdi
  0x000002480747435c: mov    %rdi,(%rdx,%r9,1)
  0x0000024807474360: jg     0x000002480747437b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x0000024807474366: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807474370: incl   0x128(%rdx)
  0x0000024807474376: jmp    0x000002480747437e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x000002480747437b: mov    %r8,%rcx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x000002480747437e: mov    0x130(%rsp),%rdx
  0x0000024807474386: movabs $0x2481fd58e70,%r8  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807474390: addq   $0x1,0x118(%r8)
  0x0000024807474398: mov    $0x0,%r8d
  0x000002480747439e: mov    %rax,%r9
  0x00000248074743a1: mov    $0x0,%edi
  0x00000248074743a6: mov    %rcx,%rsi
  0x00000248074743a9: mov    %rax,0x140(%rsp)
  0x00000248074743b1: lea    (%r8,%rsi,1),%rcx
  0x00000248074743b5: cmp    0xc(%rdx),%ecx
  0x00000248074743b8: ja     0x0000024807476557
  0x00000248074743be: lea    (%rdi,%rsi,1),%rcx
  0x00000248074743c2: cmp    0xc(%r9),%ecx
  0x00000248074743c6: ja     0x0000024807476557
  0x00000248074743cc: test   %esi,%esi
  0x00000248074743ce: jl     0x0000024807476557
  0x00000248074743d4: je     0x0000024807474418
  0x00000248074743da: movslq %r8d,%r8
  0x00000248074743dd: movslq %edi,%rdi
  0x00000248074743e0: lea    0x10(%rdx,%r8,2),%rcx
  0x00000248074743e5: lea    0x10(%r9,%rdi,2),%rdx
  0x00000248074743ea: mov    %rsi,%r8
  0x00000248074743ed: sub    $0x20,%rsp
  0x00000248074743f1: test   $0xf,%esp
  0x00000248074743f7: je     0x000002480747440f
  0x00000248074743fd: sub    $0x8,%rsp
  0x0000024807474401: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807474406: add    $0x8,%rsp
  0x000002480747440a: jmp    0x0000024807474414
  0x000002480747440f: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807474414: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x0000024807474418: mov    0x140(%rsp),%rax
  0x0000024807474420: mov    0xf8(%rsp),%rbx
  0x0000024807474428: mov    %rax,%r10
  0x000002480747442b: shr    $0x3,%r10
  0x000002480747442f: mov    %r10d,0x10(%rbx)
  0x0000024807474433: mov    %rbx,%rax
  0x0000024807474436: shr    $0x9,%rax
  0x000002480747443a: movabs $0x248130de000,%r8
  0x0000024807474444: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x0000024807474449: mov    0x12c(%rsp),%esi
  0x0000024807474450: mov    0x10(%rbx),%eax
  0x0000024807474453: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x0000024807474457: mov    0xc(%rbx),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x000002480747445b: mov    %r8,%rdx
  0x000002480747445e: inc    %edx
  0x0000024807474460: mov    %edx,0xc(%rbx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x0000024807474463: movslq %r8d,%rdx
  0x0000024807474466: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000024807476561
  0x000002480747446a: jae    0x000002480747656b
  0x0000024807474470: mov    %si,0x10(%rax,%rdx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x0000024807474475: lea    0x1a8(%rsp),%rax
  0x000002480747447d: mov    0x8(%rax),%rdx
  0x0000024807474481: mov    (%rdx),%r8
  0x0000024807474484: and    $0x7,%r8
  0x0000024807474488: cmp    $0x5,%r8
  0x000002480747448c: je     0x00000248074744a9
  0x0000024807474492: mov    (%rax),%r8
  0x0000024807474495: test   %r8,%r8
  0x0000024807474498: je     0x00000248074744a9
  0x000002480747449e: lock cmpxchg %r8,(%rdx)
  0x00000248074744a3: jne    0x0000024807476574  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x00000248074744a9: mov    0x138(%rsp),%edi   ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 184)

  0x00000248074744b0: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074744ba: mov    0xe0(%rax),%r8d
  0x00000248074744c1: add    $0x8,%r8d
  0x00000248074744c5: mov    %r8d,0xe0(%rax)
  0x00000248074744cc: movabs $0x2481fc813b8,%rax  ;   {metadata({method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074744d6: and    $0xfff8,%r8d
  0x00000248074744dd: cmp    $0x0,%r8d
  0x00000248074744e1: je     0x000002480747658a  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop off=5959}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 184)

  0x00000248074744e7: test   %eax,-0x1ec43ed(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x00000248074744ed: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074744f7: incl   0x5c8(%rax)
  0x00000248074744fd: mov    %rdi,%rsi
  0x0000024807474500: mov    %rbx,%rax
  0x0000024807474503: jmp    0x00000248074733c8  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 184)

  0x0000024807474508: mov    %rax,%rsi
  0x000002480747450b: jmp    0x0000024807475d5d  ;*aload
                                                ; - java.io.WinNTFileSystem::normalize@221 (line 186)

  0x0000024807474510: mov    %rax,%rbx
  0x0000024807474513: mov    %rbx,%rax
  0x0000024807474516: movabs $0x2481fd59388,%r8  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807474520: mov    0x8(%rax),%eax
  0x0000024807474523: shl    $0x3,%rax
  0x0000024807474527: cmp    0x340(%r8),%rax
  0x000002480747452e: jne    0x000002480747453d
  0x0000024807474530: addq   $0x1,0x348(%r8)
  0x0000024807474538: jmp    0x00000248074745a3
  0x000002480747453d: cmp    0x350(%r8),%rax
  0x0000024807474544: jne    0x0000024807474553
  0x0000024807474546: addq   $0x1,0x358(%r8)
  0x000002480747454e: jmp    0x00000248074745a3
  0x0000024807474553: cmpq   $0x0,0x340(%r8)
  0x000002480747455e: jne    0x0000024807474577
  0x0000024807474560: mov    %rax,0x340(%r8)
  0x0000024807474567: movq   $0x1,0x348(%r8)
  0x0000024807474572: jmp    0x00000248074745a3
  0x0000024807474577: cmpq   $0x0,0x350(%r8)
  0x0000024807474582: jne    0x000002480747459b
  0x0000024807474584: mov    %rax,0x350(%r8)
  0x000002480747458b: movq   $0x1,0x358(%r8)
  0x0000024807474596: jmp    0x00000248074745a3
  0x000002480747459b: addq   $0x1,0x338(%r8)
  0x00000248074745a3: lea    0x1a8(%rsp),%r8
  0x00000248074745ab: mov    %rbx,0x8(%r8)
  0x00000248074745af: mov    (%rbx),%rax
  0x00000248074745b2: mov    %rax,%rdx
  0x00000248074745b5: and    $0x7,%rdx
  0x00000248074745b9: cmp    $0x5,%rdx
  0x00000248074745bd: jne    0x0000024807474644
  0x00000248074745c3: mov    0x8(%rbx),%edx
  0x00000248074745c6: shl    $0x3,%rdx
  0x00000248074745ca: mov    0xa8(%rdx),%rdx
  0x00000248074745d1: or     %r15,%rdx
  0x00000248074745d4: xor    %rax,%rdx
  0x00000248074745d7: and    $0xffffffffffffff87,%rdx
  0x00000248074745db: je     0x000002480747466c
  0x00000248074745e1: test   $0x7,%rdx
  0x00000248074745e8: jne    0x0000024807474631
  0x00000248074745ea: test   $0x300,%rdx
  0x00000248074745f1: jne    0x0000024807474610
  0x00000248074745f3: and    $0x37f,%rax
  0x00000248074745fa: mov    %rax,%rdx
  0x00000248074745fd: or     %r15,%rdx
  0x0000024807474600: lock cmpxchg %rdx,(%rbx)
  0x0000024807474605: jne    0x00000248074765a1
  0x000002480747460b: jmp    0x000002480747466c
  0x0000024807474610: mov    0x8(%rbx),%edx
  0x0000024807474613: shl    $0x3,%rdx
  0x0000024807474617: mov    0xa8(%rdx),%rdx
  0x000002480747461e: or     %r15,%rdx
  0x0000024807474621: lock cmpxchg %rdx,(%rbx)
  0x0000024807474626: jne    0x00000248074765a1
  0x000002480747462c: jmp    0x000002480747466c
  0x0000024807474631: mov    0x8(%rbx),%edx
  0x0000024807474634: shl    $0x3,%rdx
  0x0000024807474638: mov    0xa8(%rdx),%rdx
  0x000002480747463f: lock cmpxchg %rdx,(%rbx)
  0x0000024807474644: mov    (%rbx),%rax
  0x0000024807474647: or     $0x1,%rax
  0x000002480747464b: mov    %rax,(%r8)
  0x000002480747464e: lock cmpxchg %r8,(%rbx)
  0x0000024807474653: je     0x000002480747466c
  0x0000024807474659: sub    %rsp,%rax
  0x000002480747465c: and    $0xfffffffffffff007,%rax
  0x0000024807474663: mov    %rax,(%r8)
  0x0000024807474666: jne    0x00000248074765a1  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 169)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 153)

  0x000002480747466c: mov    0xc(%rbx),%esi     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 169)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 153)

  0x000002480747466f: lea    0x1a8(%rsp),%rax
  0x0000024807474677: mov    0x8(%rax),%rdx
  0x000002480747467b: mov    (%rdx),%r8
  0x000002480747467e: and    $0x7,%r8
  0x0000024807474682: cmp    $0x5,%r8
  0x0000024807474686: je     0x00000248074746a3
  0x000002480747468c: mov    (%rax),%r8
  0x000002480747468f: test   %r8,%r8
  0x0000024807474692: je     0x00000248074746a3
  0x0000024807474698: lock cmpxchg %r8,(%rdx)
  0x000002480747469d: jne    0x00000248074765b4  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 169)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 153)

  0x00000248074746a3: cmp    $0x2,%esi
  0x00000248074746a6: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074746b0: movabs $0x368,%r8
  0x00000248074746ba: jne    0x00000248074746ca
  0x00000248074746c0: movabs $0x378,%r8
  0x00000248074746ca: mov    (%rax,%r8,1),%rdx
  0x00000248074746ce: lea    0x1(%rdx),%rdx
  0x00000248074746d2: mov    %rdx,(%rax,%r8,1)
  0x00000248074746d6: jne    0x0000024807474948  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 154)

  0x00000248074746dc: mov    %rbx,%rax
  0x00000248074746df: movabs $0x2481fd59388,%r8  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074746e9: mov    0x8(%rax),%eax
  0x00000248074746ec: shl    $0x3,%rax
  0x00000248074746f0: cmp    0x390(%r8),%rax
  0x00000248074746f7: jne    0x0000024807474706
  0x00000248074746f9: addq   $0x1,0x398(%r8)
  0x0000024807474701: jmp    0x000002480747476c
  0x0000024807474706: cmp    0x3a0(%r8),%rax
  0x000002480747470d: jne    0x000002480747471c
  0x000002480747470f: addq   $0x1,0x3a8(%r8)
  0x0000024807474717: jmp    0x000002480747476c
  0x000002480747471c: cmpq   $0x0,0x390(%r8)
  0x0000024807474727: jne    0x0000024807474740
  0x0000024807474729: mov    %rax,0x390(%r8)
  0x0000024807474730: movq   $0x1,0x398(%r8)
  0x000002480747473b: jmp    0x000002480747476c
  0x0000024807474740: cmpq   $0x0,0x3a0(%r8)
  0x000002480747474b: jne    0x0000024807474764
  0x000002480747474d: mov    %rax,0x3a0(%r8)
  0x0000024807474754: movq   $0x1,0x3a8(%r8)
  0x000002480747475f: jmp    0x000002480747476c
  0x0000024807474764: addq   $0x1,0x388(%r8)
  0x000002480747476c: lea    0x1a8(%rsp),%r8
  0x0000024807474774: mov    %rbx,0x8(%r8)
  0x0000024807474778: mov    (%rbx),%rax
  0x000002480747477b: mov    %rax,%rdx
  0x000002480747477e: and    $0x7,%rdx
  0x0000024807474782: cmp    $0x5,%rdx
  0x0000024807474786: jne    0x000002480747480d
  0x000002480747478c: mov    0x8(%rbx),%edx
  0x000002480747478f: shl    $0x3,%rdx
  0x0000024807474793: mov    0xa8(%rdx),%rdx
  0x000002480747479a: or     %r15,%rdx
  0x000002480747479d: xor    %rax,%rdx
  0x00000248074747a0: and    $0xffffffffffffff87,%rdx
  0x00000248074747a4: je     0x0000024807474835
  0x00000248074747aa: test   $0x7,%rdx
  0x00000248074747b1: jne    0x00000248074747fa
  0x00000248074747b3: test   $0x300,%rdx
  0x00000248074747ba: jne    0x00000248074747d9
  0x00000248074747bc: and    $0x37f,%rax
  0x00000248074747c3: mov    %rax,%rdx
  0x00000248074747c6: or     %r15,%rdx
  0x00000248074747c9: lock cmpxchg %rdx,(%rbx)
  0x00000248074747ce: jne    0x00000248074765ca
  0x00000248074747d4: jmp    0x0000024807474835
  0x00000248074747d9: mov    0x8(%rbx),%edx
  0x00000248074747dc: shl    $0x3,%rdx
  0x00000248074747e0: mov    0xa8(%rdx),%rdx
  0x00000248074747e7: or     %r15,%rdx
  0x00000248074747ea: lock cmpxchg %rdx,(%rbx)
  0x00000248074747ef: jne    0x00000248074765ca
  0x00000248074747f5: jmp    0x0000024807474835
  0x00000248074747fa: mov    0x8(%rbx),%edx
  0x00000248074747fd: shl    $0x3,%rdx
  0x0000024807474801: mov    0xa8(%rdx),%rdx
  0x0000024807474808: lock cmpxchg %rdx,(%rbx)
  0x000002480747480d: mov    (%rbx),%rax
  0x0000024807474810: or     $0x1,%rax
  0x0000024807474814: mov    %rax,(%r8)
  0x0000024807474817: lock cmpxchg %r8,(%rbx)
  0x000002480747481c: je     0x0000024807474835
  0x0000024807474822: sub    %rsp,%rax
  0x0000024807474825: and    $0xfffffffffffff007,%rax
  0x000002480747482c: mov    %rax,(%r8)
  0x000002480747482f: jne    0x00000248074765ca  ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x0000024807474835: movabs $0x2481feb2bf0,%rax  ;   {metadata(method data for {method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747483f: mov    0xdc(%rax),%r8d
  0x0000024807474846: add    $0x8,%r8d
  0x000002480747484a: mov    %r8d,0xdc(%rax)
  0x0000024807474851: movabs $0x2481fb710c0,%rax  ;   {metadata({method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747485b: and    $0x7ffff8,%r8d
  0x0000024807474862: cmp    $0x0,%r8d
  0x0000024807474866: je     0x00000248074765dd
  0x000002480747486c: movabs $0x2481feb2bf0,%rax  ;   {metadata(method data for {method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807474876: incl   0x118(%rax)        ;*iflt
                                                ; - java.lang.StringBuffer::charAt@1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x000002480747487c: mov    0xc(%rbx),%eax     ;*getfield count
                                                ; - java.lang.StringBuffer::charAt@6 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x000002480747487f: cmp    $0x1,%eax
  0x0000024807474882: movabs $0x2481feb2bf0,%rax  ;   {metadata(method data for {method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747488c: movabs $0x128,%r8
  0x0000024807474896: jg     0x00000248074748a6
  0x000002480747489c: movabs $0x138,%r8
  0x00000248074748a6: mov    (%rax,%r8,1),%rdx
  0x00000248074748aa: lea    0x1(%rdx),%rdx
  0x00000248074748ae: mov    %rdx,(%rax,%r8,1)
  0x00000248074748b2: jle    0x0000024807475e7c  ;*if_icmplt
                                                ; - java.lang.StringBuffer::charAt@9 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x00000248074748b8: mov    0x10(%rbx),%eax
  0x00000248074748bb: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.StringBuffer::charAt@22 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x00000248074748bf: cmpl   $0x1,0xc(%rax)     ; implicit exception: dispatches to 0x00000248074765f4
  0x00000248074748c6: jbe    0x00000248074765fe
  0x00000248074748cc: movzwl 0x12(%rax),%eax    ;*caload
                                                ; - java.lang.StringBuffer::charAt@26 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x00000248074748d0: mov    %rax,%r8
  0x00000248074748d3: and    $0xffff,%r8d
  0x00000248074748da: lea    0x1a8(%rsp),%rax
  0x00000248074748e2: mov    0x8(%rax),%rdi
  0x00000248074748e6: mov    (%rdi),%rdx
  0x00000248074748e9: and    $0x7,%rdx
  0x00000248074748ed: cmp    $0x5,%rdx
  0x00000248074748f1: je     0x000002480747490e
  0x00000248074748f7: mov    (%rax),%rdx
  0x00000248074748fa: test   %rdx,%rdx
  0x00000248074748fd: je     0x000002480747490e
  0x0000024807474903: lock cmpxchg %rdx,(%rdi)
  0x0000024807474908: jne    0x000002480747660b  ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x000002480747490e: cmp    $0x3a,%r8d
  0x0000024807474912: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747491c: movabs $0x3b8,%r8
  0x0000024807474926: jne    0x0000024807474936
  0x000002480747492c: movabs $0x3c8,%r8
  0x0000024807474936: mov    (%rax,%r8,1),%rdx
  0x000002480747493a: lea    0x1(%rdx),%rdx
  0x000002480747493e: mov    %rdx,(%rax,%r8,1)
  0x0000024807474942: je     0x00000248074757d3  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@139 (line 154)

  0x0000024807474948: cmp    $0x0,%esi
  0x000002480747494b: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807474955: movabs $0x420,%r8
  0x000002480747495f: jne    0x000002480747496f
  0x0000024807474965: movabs $0x430,%r8
  0x000002480747496f: mov    (%rax,%r8,1),%rdx
  0x0000024807474973: lea    0x1(%rdx),%rdx
  0x0000024807474977: mov    %rdx,(%rax,%r8,1)
  0x000002480747497b: jne    0x0000024807474edb  ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@155 (line 159)

  0x0000024807474981: mov    %rbx,%rax
  0x0000024807474984: movabs $0x2481fd59388,%r8  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747498e: mov    0x8(%rax),%eax
  0x0000024807474991: shl    $0x3,%rax
  0x0000024807474995: cmp    0x448(%r8),%rax
  0x000002480747499c: jne    0x00000248074749ab
  0x000002480747499e: addq   $0x1,0x450(%r8)
  0x00000248074749a6: jmp    0x0000024807474a11
  0x00000248074749ab: cmp    0x458(%r8),%rax
  0x00000248074749b2: jne    0x00000248074749c1
  0x00000248074749b4: addq   $0x1,0x460(%r8)
  0x00000248074749bc: jmp    0x0000024807474a11
  0x00000248074749c1: cmpq   $0x0,0x448(%r8)
  0x00000248074749cc: jne    0x00000248074749e5
  0x00000248074749ce: mov    %rax,0x448(%r8)
  0x00000248074749d5: movq   $0x1,0x450(%r8)
  0x00000248074749e0: jmp    0x0000024807474a11
  0x00000248074749e5: cmpq   $0x0,0x458(%r8)
  0x00000248074749f0: jne    0x0000024807474a09
  0x00000248074749f2: mov    %rax,0x458(%r8)
  0x00000248074749f9: movq   $0x1,0x460(%r8)
  0x0000024807474a04: jmp    0x0000024807474a11
  0x0000024807474a09: addq   $0x1,0x440(%r8)
  0x0000024807474a11: lea    0x1a8(%rsp),%r8
  0x0000024807474a19: mov    %rbx,0x8(%r8)
  0x0000024807474a1d: mov    (%rbx),%rax
  0x0000024807474a20: mov    %rax,%rdx
  0x0000024807474a23: and    $0x7,%rdx
  0x0000024807474a27: cmp    $0x5,%rdx
  0x0000024807474a2b: jne    0x0000024807474ab2
  0x0000024807474a31: mov    0x8(%rbx),%edx
  0x0000024807474a34: shl    $0x3,%rdx
  0x0000024807474a38: mov    0xa8(%rdx),%rdx
  0x0000024807474a3f: or     %r15,%rdx
  0x0000024807474a42: xor    %rax,%rdx
  0x0000024807474a45: and    $0xffffffffffffff87,%rdx
  0x0000024807474a49: je     0x0000024807474ada
  0x0000024807474a4f: test   $0x7,%rdx
  0x0000024807474a56: jne    0x0000024807474a9f
  0x0000024807474a58: test   $0x300,%rdx
  0x0000024807474a5f: jne    0x0000024807474a7e
  0x0000024807474a61: and    $0x37f,%rax
  0x0000024807474a68: mov    %rax,%rdx
  0x0000024807474a6b: or     %r15,%rdx
  0x0000024807474a6e: lock cmpxchg %rdx,(%rbx)
  0x0000024807474a73: jne    0x0000024807476621
  0x0000024807474a79: jmp    0x0000024807474ada
  0x0000024807474a7e: mov    0x8(%rbx),%edx
  0x0000024807474a81: shl    $0x3,%rdx
  0x0000024807474a85: mov    0xa8(%rdx),%rdx
  0x0000024807474a8c: or     %r15,%rdx
  0x0000024807474a8f: lock cmpxchg %rdx,(%rbx)
  0x0000024807474a94: jne    0x0000024807476621
  0x0000024807474a9a: jmp    0x0000024807474ada
  0x0000024807474a9f: mov    0x8(%rbx),%edx
  0x0000024807474aa2: shl    $0x3,%rdx
  0x0000024807474aa6: mov    0xa8(%rdx),%rdx
  0x0000024807474aad: lock cmpxchg %rdx,(%rbx)
  0x0000024807474ab2: mov    (%rbx),%rax
  0x0000024807474ab5: or     $0x1,%rax
  0x0000024807474ab9: mov    %rax,(%r8)
  0x0000024807474abc: lock cmpxchg %r8,(%rbx)
  0x0000024807474ac1: je     0x0000024807474ada
  0x0000024807474ac7: sub    %rsp,%rax
  0x0000024807474aca: and    $0xfffffffffffff007,%rax
  0x0000024807474ad1: mov    %rax,(%r8)
  0x0000024807474ad4: jne    0x0000024807476621  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474ada: movabs $0x2481fd28cb0,%r8  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807474ae4: mov    0xdc(%r8),%edx
  0x0000024807474aeb: add    $0x8,%edx
  0x0000024807474aee: mov    %edx,0xdc(%r8)
  0x0000024807474af5: movabs $0x2481fb71ab0,%r8  ;   {metadata({method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807474aff: and    $0x7ffff8,%edx
  0x0000024807474b05: cmp    $0x0,%edx
  0x0000024807474b08: je     0x0000024807476634
  0x0000024807474b0e: movl   $0x0,0x14(%rbx)
  0x0000024807474b15: mov    %rbx,%rax
  0x0000024807474b18: shr    $0x9,%rax
  0x0000024807474b1c: movabs $0x248130de000,%r8
  0x0000024807474b26: movb   $0x0,(%rax,%r8,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474b2b: mov    %rbx,%rax
  0x0000024807474b2e: movabs $0x2481fd28cb0,%r8  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807474b38: addq   $0x1,0x108(%r8)
  0x0000024807474b40: movabs $0x2481fd289f8,%r8  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474b4a: mov    0xdc(%r8),%edx
  0x0000024807474b51: add    $0x8,%edx
  0x0000024807474b54: mov    %edx,0xdc(%r8)
  0x0000024807474b5b: movabs $0x2481fb768b0,%r8  ;   {metadata({method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474b65: and    $0x7ffff8,%edx
  0x0000024807474b6b: cmp    $0x0,%edx
  0x0000024807474b6e: je     0x000002480747664b
  0x0000024807474b74: mov    0xc(%rbx),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474b78: inc    %r8d
  0x0000024807474b7b: mov    %rbx,%rax
  0x0000024807474b7e: movabs $0x2481fd289f8,%rdx  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474b88: addq   $0x1,0x108(%rdx)
  0x0000024807474b90: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474b9a: mov    0xdc(%rdx),%esi
  0x0000024807474ba0: add    $0x8,%esi
  0x0000024807474ba3: mov    %esi,0xdc(%rdx)
  0x0000024807474ba9: movabs $0x2481fb75778,%rdx  ;   {metadata({method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474bb3: and    $0x7ffff8,%esi
  0x0000024807474bb9: cmp    $0x0,%esi
  0x0000024807474bbc: je     0x0000024807476662
  0x0000024807474bc2: mov    0x10(%rbx),%esi
  0x0000024807474bc5: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474bc9: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ; implicit exception: dispatches to 0x0000024807476679
  0x0000024807474bcc: mov    %r8,%rdx
  0x0000024807474bcf: sub    %edi,%edx
  0x0000024807474bd1: cmp    $0x0,%edx
  0x0000024807474bd4: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474bde: movabs $0x108,%rax
  0x0000024807474be8: jle    0x0000024807474bf8
  0x0000024807474bee: movabs $0x118,%rax
  0x0000024807474bf8: mov    (%rdx,%rax,1),%rcx
  0x0000024807474bfc: lea    0x1(%rcx),%rcx
  0x0000024807474c00: mov    %rcx,(%rdx,%rax,1)
  0x0000024807474c04: jg     0x0000024807474c12  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474c0a: mov    %rbx,%rdi
  0x0000024807474c0d: jmp    0x0000024807474e71  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474c12: mov    %edi,0x13c(%rsp)
  0x0000024807474c19: mov    %rsi,0x148(%rsp)
  0x0000024807474c21: mov    %rbx,%rax
  0x0000024807474c24: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474c2e: addq   $0x1,0x128(%rdx)
  0x0000024807474c36: mov    %rbx,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474c39: nop
  0x0000024807474c3a: nop
  0x0000024807474c3b: nop
  0x0000024807474c3c: nop
  0x0000024807474c3d: nop
  0x0000024807474c3e: nop
  0x0000024807474c3f: call   0x0000024807375ee0  ; OopMap{[248]=Oop [328]=Oop [432]=Oop off=7844}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {optimized virtual_call}
  0x0000024807474c44: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474c47: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807474c51: addq   $0x1,0x138(%rbx)
  0x0000024807474c59: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807474c63: mov    0xdc(%rbx),%edx
  0x0000024807474c69: add    $0x8,%edx
  0x0000024807474c6c: mov    %edx,0xdc(%rbx)
  0x0000024807474c72: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807474c7c: and    $0x7ffff8,%edx
  0x0000024807474c82: cmp    $0x0,%edx
  0x0000024807474c85: je     0x000002480747667e
  0x0000024807474c8b: mov    %r8,%rbx
  0x0000024807474c8e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807474c98: movslq %ebx,%rbx
  0x0000024807474c9b: mov    %rbx,%rdi
  0x0000024807474c9e: cmp    $0xffffff,%rbx
  0x0000024807474ca5: ja     0x0000024807476695
  0x0000024807474cab: movabs $0x17,%rsi
  0x0000024807474cb5: lea    (%rsi,%rbx,2),%rsi
  0x0000024807474cb9: and    $0xfffffffffffffff8,%rsi
  0x0000024807474cbd: mov    0x60(%r15),%rax
  0x0000024807474cc1: lea    (%rax,%rsi,1),%rsi
  0x0000024807474cc5: cmp    0x70(%r15),%rsi
  0x0000024807474cc9: ja     0x0000024807476695
  0x0000024807474ccf: mov    %rsi,0x60(%r15)
  0x0000024807474cd3: sub    %rax,%rsi
  0x0000024807474cd6: movq   $0x1,(%rax)
  0x0000024807474cdd: mov    %rdx,%rcx
  0x0000024807474ce0: shr    $0x3,%rcx
  0x0000024807474ce4: mov    %ecx,0x8(%rax)
  0x0000024807474ce7: mov    %ebx,0xc(%rax)
  0x0000024807474cea: sub    $0x10,%rsi
  0x0000024807474cee: je     0x0000024807474d05
  0x0000024807474cf4: xor    %rbx,%rbx
  0x0000024807474cf7: shr    $0x3,%rsi
  0x0000024807474cfb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807474d00: dec    %rsi
  0x0000024807474d03: jne    0x0000024807474cfb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474d05: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807474d0f: addq   $0x1,0x108(%rdx)
  0x0000024807474d17: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807474d21: mov    0xdc(%rdx),%r9d
  0x0000024807474d28: add    $0x8,%r9d
  0x0000024807474d2c: mov    %r9d,0xdc(%rdx)
  0x0000024807474d33: movabs $0x2481fbf7590,%rdx  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807474d3d: and    $0x7ffff8,%r9d
  0x0000024807474d44: cmp    $0x0,%r9d
  0x0000024807474d48: je     0x000002480747669f
  0x0000024807474d4e: mov    0x13c(%rsp),%edi
  0x0000024807474d55: cmp    %r8d,%edi
  0x0000024807474d58: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807474d62: movabs $0x108,%r9
  0x0000024807474d6c: jg     0x0000024807474d7c
  0x0000024807474d72: movabs $0x118,%r9
  0x0000024807474d7c: mov    (%rdx,%r9,1),%rsi
  0x0000024807474d80: lea    0x1(%rsi),%rsi
  0x0000024807474d84: mov    %rsi,(%rdx,%r9,1)
  0x0000024807474d88: jg     0x0000024807474da6  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474d8e: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807474d98: incl   0x128(%rdx)
  0x0000024807474d9e: mov    %rdi,%rsi
  0x0000024807474da1: jmp    0x0000024807474da9  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474da6: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474da9: mov    0x148(%rsp),%rdx
  0x0000024807474db1: movabs $0x2481fd58e70,%r8  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807474dbb: addq   $0x1,0x118(%r8)
  0x0000024807474dc3: mov    $0x0,%r8d
  0x0000024807474dc9: mov    %rax,%r9
  0x0000024807474dcc: mov    $0x0,%edi
  0x0000024807474dd1: mov    %rax,0x150(%rsp)
  0x0000024807474dd9: lea    (%r8,%rsi,1),%rcx
  0x0000024807474ddd: cmp    0xc(%rdx),%ecx
  0x0000024807474de0: ja     0x00000248074766b6
  0x0000024807474de6: lea    (%rdi,%rsi,1),%rcx
  0x0000024807474dea: cmp    0xc(%r9),%ecx
  0x0000024807474dee: ja     0x00000248074766b6
  0x0000024807474df4: test   %esi,%esi
  0x0000024807474df6: jl     0x00000248074766b6
  0x0000024807474dfc: je     0x0000024807474e40
  0x0000024807474e02: movslq %r8d,%r8
  0x0000024807474e05: movslq %edi,%rdi
  0x0000024807474e08: lea    0x10(%rdx,%r8,2),%rcx
  0x0000024807474e0d: lea    0x10(%r9,%rdi,2),%rdx
  0x0000024807474e12: mov    %rsi,%r8
  0x0000024807474e15: sub    $0x20,%rsp
  0x0000024807474e19: test   $0xf,%esp
  0x0000024807474e1f: je     0x0000024807474e37
  0x0000024807474e25: sub    $0x8,%rsp
  0x0000024807474e29: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807474e2e: add    $0x8,%rsp
  0x0000024807474e32: jmp    0x0000024807474e3c
  0x0000024807474e37: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807474e3c: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474e40: mov    0x150(%rsp),%rax
  0x0000024807474e48: mov    0xf8(%rsp),%rdi
  0x0000024807474e50: mov    %rax,%r10
  0x0000024807474e53: shr    $0x3,%r10
  0x0000024807474e57: mov    %r10d,0x10(%rdi)
  0x0000024807474e5b: mov    %rdi,%rax
  0x0000024807474e5e: shr    $0x9,%rax
  0x0000024807474e62: movabs $0x248130de000,%r8
  0x0000024807474e6c: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474e71: mov    0xec(%rsp),%r11d
  0x0000024807474e79: mov    0x10(%rdi),%eax
  0x0000024807474e7c: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474e80: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474e84: mov    %r8,%rdx
  0x0000024807474e87: inc    %edx
  0x0000024807474e89: mov    %edx,0xc(%rdi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474e8c: movslq %r8d,%rdx
  0x0000024807474e8f: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000248074766c1
  0x0000024807474e93: jae    0x00000248074766cb
  0x0000024807474e99: mov    %r11w,0x10(%rax,%rdx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474e9f: lea    0x1a8(%rsp),%rax
  0x0000024807474ea7: mov    0x8(%rax),%rdx
  0x0000024807474eab: mov    (%rdx),%r8
  0x0000024807474eae: and    $0x7,%r8
  0x0000024807474eb2: cmp    $0x5,%r8
  0x0000024807474eb6: je     0x0000024807474ed3
  0x0000024807474ebc: mov    (%rax),%r8
  0x0000024807474ebf: test   %r8,%r8
  0x0000024807474ec2: je     0x0000024807474ed3
  0x0000024807474ec8: lock cmpxchg %r8,(%rdx)
  0x0000024807474ecd: jne    0x00000248074766d4  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807474ed3: mov    %rdi,%rsi
  0x0000024807474ed6: jmp    0x0000024807475d4d  ;*pop
                                                ; - java.io.WinNTFileSystem::normalize@165 (line 161)

  0x0000024807474edb: mov    %rbx,%rdi
  0x0000024807474ede: mov    0xec(%rsp),%r11d
  0x0000024807474ee6: cmp    $0x1,%esi
  0x0000024807474ee9: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807474ef3: movabs $0x488,%r8
  0x0000024807474efd: jne    0x0000024807474f0d
  0x0000024807474f03: movabs $0x498,%r8
  0x0000024807474f0d: mov    (%rax,%r8,1),%rdx
  0x0000024807474f11: lea    0x1(%rdx),%rdx
  0x0000024807474f15: mov    %rdx,(%rax,%r8,1)
  0x0000024807474f19: je     0x0000024807474f27  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@172 (line 164)

  0x0000024807474f1f: mov    %rdi,%rsi
  0x0000024807474f22: jmp    0x0000024807475d5d  ;*aload
                                                ; - java.io.WinNTFileSystem::normalize@221 (line 186)

  0x0000024807474f27: mov    %rdi,%rax
  0x0000024807474f2a: movabs $0x2481fd59388,%r8  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807474f34: mov    0x8(%rax),%eax
  0x0000024807474f37: shl    $0x3,%rax
  0x0000024807474f3b: cmp    0x4b0(%r8),%rax
  0x0000024807474f42: jne    0x0000024807474f51
  0x0000024807474f44: addq   $0x1,0x4b8(%r8)
  0x0000024807474f4c: jmp    0x0000024807474fb7
  0x0000024807474f51: cmp    0x4c0(%r8),%rax
  0x0000024807474f58: jne    0x0000024807474f67
  0x0000024807474f5a: addq   $0x1,0x4c8(%r8)
  0x0000024807474f62: jmp    0x0000024807474fb7
  0x0000024807474f67: cmpq   $0x0,0x4b0(%r8)
  0x0000024807474f72: jne    0x0000024807474f8b
  0x0000024807474f74: mov    %rax,0x4b0(%r8)
  0x0000024807474f7b: movq   $0x1,0x4b8(%r8)
  0x0000024807474f86: jmp    0x0000024807474fb7
  0x0000024807474f8b: cmpq   $0x0,0x4c0(%r8)
  0x0000024807474f96: jne    0x0000024807474faf
  0x0000024807474f98: mov    %rax,0x4c0(%r8)
  0x0000024807474f9f: movq   $0x1,0x4c8(%r8)
  0x0000024807474faa: jmp    0x0000024807474fb7
  0x0000024807474faf: addq   $0x1,0x4a8(%r8)
  0x0000024807474fb7: lea    0x1a8(%rsp),%r8
  0x0000024807474fbf: mov    %rdi,0x8(%r8)
  0x0000024807474fc3: mov    (%rdi),%rax
  0x0000024807474fc6: mov    %rax,%rdx
  0x0000024807474fc9: and    $0x7,%rdx
  0x0000024807474fcd: cmp    $0x5,%rdx
  0x0000024807474fd1: jne    0x0000024807475058
  0x0000024807474fd7: mov    0x8(%rdi),%edx
  0x0000024807474fda: shl    $0x3,%rdx
  0x0000024807474fde: mov    0xa8(%rdx),%rdx
  0x0000024807474fe5: or     %r15,%rdx
  0x0000024807474fe8: xor    %rax,%rdx
  0x0000024807474feb: and    $0xffffffffffffff87,%rdx
  0x0000024807474fef: je     0x0000024807475080
  0x0000024807474ff5: test   $0x7,%rdx
  0x0000024807474ffc: jne    0x0000024807475045
  0x0000024807474ffe: test   $0x300,%rdx
  0x0000024807475005: jne    0x0000024807475024
  0x0000024807475007: and    $0x37f,%rax
  0x000002480747500e: mov    %rax,%rdx
  0x0000024807475011: or     %r15,%rdx
  0x0000024807475014: lock cmpxchg %rdx,(%rdi)
  0x0000024807475019: jne    0x00000248074766ea
  0x000002480747501f: jmp    0x0000024807475080
  0x0000024807475024: mov    0x8(%rdi),%edx
  0x0000024807475027: shl    $0x3,%rdx
  0x000002480747502b: mov    0xa8(%rdx),%rdx
  0x0000024807475032: or     %r15,%rdx
  0x0000024807475035: lock cmpxchg %rdx,(%rdi)
  0x000002480747503a: jne    0x00000248074766ea
  0x0000024807475040: jmp    0x0000024807475080
  0x0000024807475045: mov    0x8(%rdi),%edx
  0x0000024807475048: shl    $0x3,%rdx
  0x000002480747504c: mov    0xa8(%rdx),%rdx
  0x0000024807475053: lock cmpxchg %rdx,(%rdi)
  0x0000024807475058: mov    (%rdi),%rax
  0x000002480747505b: or     $0x1,%rax
  0x000002480747505f: mov    %rax,(%r8)
  0x0000024807475062: lock cmpxchg %r8,(%rdi)
  0x0000024807475067: je     0x0000024807475080
  0x000002480747506d: sub    %rsp,%rax
  0x0000024807475070: and    $0xfffffffffffff007,%rax
  0x0000024807475077: mov    %rax,(%r8)
  0x000002480747507a: jne    0x00000248074766ea  ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x0000024807475080: movabs $0x2481feb2bf0,%rax  ;   {metadata(method data for {method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747508a: mov    0xdc(%rax),%r8d
  0x0000024807475091: add    $0x8,%r8d
  0x0000024807475095: mov    %r8d,0xdc(%rax)
  0x000002480747509c: movabs $0x2481fb710c0,%rax  ;   {metadata({method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000248074750a6: and    $0x7ffff8,%r8d
  0x00000248074750ad: cmp    $0x0,%r8d
  0x00000248074750b1: je     0x00000248074766fd
  0x00000248074750b7: movabs $0x2481feb2bf0,%rax  ;   {metadata(method data for {method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000248074750c1: incl   0x118(%rax)        ;*iflt
                                                ; - java.lang.StringBuffer::charAt@1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x00000248074750c7: mov    0xc(%rdi),%eax     ;*getfield count
                                                ; - java.lang.StringBuffer::charAt@6 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x00000248074750ca: cmp    $0x0,%eax
  0x00000248074750cd: movabs $0x2481feb2bf0,%rax  ;   {metadata(method data for {method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000248074750d7: movabs $0x128,%r8
  0x00000248074750e1: jg     0x00000248074750f1
  0x00000248074750e7: movabs $0x138,%r8
  0x00000248074750f1: mov    (%rax,%r8,1),%rdx
  0x00000248074750f5: lea    0x1(%rdx),%rdx
  0x00000248074750f9: mov    %rdx,(%rax,%r8,1)
  0x00000248074750fd: jle    0x0000024807475e22  ;*if_icmplt
                                                ; - java.lang.StringBuffer::charAt@9 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x0000024807475103: mov    0x10(%rdi),%eax
  0x0000024807475106: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.StringBuffer::charAt@22 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x000002480747510a: cmpl   $0x0,0xc(%rax)     ; implicit exception: dispatches to 0x0000024807476714
  0x0000024807475111: jbe    0x000002480747671e
  0x0000024807475117: movzwl 0x10(%rax),%eax    ;*caload
                                                ; - java.lang.StringBuffer::charAt@26 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x000002480747511b: mov    %rax,%r8
  0x000002480747511e: and    $0xffff,%r8d
  0x0000024807475125: lea    0x1a8(%rsp),%rax
  0x000002480747512d: mov    0x8(%rax),%rsi
  0x0000024807475131: mov    (%rsi),%rdx
  0x0000024807475134: and    $0x7,%rdx
  0x0000024807475138: cmp    $0x5,%rdx
  0x000002480747513c: je     0x0000024807475159
  0x0000024807475142: mov    (%rax),%rdx
  0x0000024807475145: test   %rdx,%rdx
  0x0000024807475148: je     0x0000024807475159
  0x000002480747514e: lock cmpxchg %rdx,(%rsi)
  0x0000024807475153: jne    0x000002480747672b  ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x0000024807475159: mov    0x100(%rsp),%rdx
  0x0000024807475161: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747516b: addq   $0x1,0x4d8(%rax)
  0x0000024807475173: movabs $0x2481fd28b30,%rax  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000002480747517d: mov    0xdc(%rax),%edx
  0x0000024807475183: add    $0x8,%edx
  0x0000024807475186: mov    %edx,0xdc(%rax)
  0x000002480747518c: movabs $0x2481fc80e50,%rax  ;   {metadata({method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807475196: and    $0x7ffff8,%edx
  0x000002480747519c: cmp    $0x0,%edx
  0x000002480747519f: je     0x0000024807476741
  0x00000248074751a5: cmp    $0x5c,%r8d
  0x00000248074751a9: movabs $0x2481fd28b30,%rax  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074751b3: movabs $0x108,%rdx
  0x00000248074751bd: je     0x00000248074751cd
  0x00000248074751c3: movabs $0x118,%rdx
  0x00000248074751cd: mov    (%rax,%rdx,1),%rsi
  0x00000248074751d1: lea    0x1(%rsi),%rsi
  0x00000248074751d5: mov    %rsi,(%rax,%rdx,1)
  0x00000248074751d9: je     0x0000024807475219  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 164)

  0x00000248074751df: cmp    $0x2f,%r8d
  0x00000248074751e3: movabs $0x2481fd28b30,%rax  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074751ed: movabs $0x128,%r8
  0x00000248074751f7: jne    0x0000024807475207
  0x00000248074751fd: movabs $0x138,%r8
  0x0000024807475207: mov    (%rax,%r8,1),%rdx
  0x000002480747520b: lea    0x1(%rdx),%rdx
  0x000002480747520f: mov    %rdx,(%rax,%r8,1)
  0x0000024807475213: jne    0x0000024807475233  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 164)

  0x0000024807475219: movabs $0x2481fd28b30,%rax  ;   {metadata(method data for {method} {0x000002481fc80e58} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807475223: incl   0x148(%rax)
  0x0000024807475229: mov    $0x1,%eax
  0x000002480747522e: jmp    0x0000024807475238  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 164)

  0x0000024807475233: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 164)

  0x0000024807475238: and    $0x1,%eax
  0x000002480747523b: cmp    $0x0,%eax
  0x000002480747523e: movabs $0x2481fd59388,%rax  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807475248: movabs $0x4e8,%r8
  0x0000024807475252: je     0x0000024807475262
  0x0000024807475258: movabs $0x4f8,%r8
  0x0000024807475262: mov    (%rax,%r8,1),%rdx
  0x0000024807475266: lea    0x1(%rdx),%rdx
  0x000002480747526a: mov    %rdx,(%rax,%r8,1)
  0x000002480747526e: jne    0x000002480747527c  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@185 (line 164)

  0x0000024807475274: mov    %rdi,%rsi
  0x0000024807475277: jmp    0x0000024807475d5d  ;*aload
                                                ; - java.io.WinNTFileSystem::normalize@221 (line 186)

  0x000002480747527c: mov    %rdi,%rax
  0x000002480747527f: movabs $0x2481fd59388,%r8  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807475289: mov    0x8(%rax),%eax
  0x000002480747528c: shl    $0x3,%rax
  0x0000024807475290: cmp    0x510(%r8),%rax
  0x0000024807475297: jne    0x00000248074752a6
  0x0000024807475299: addq   $0x1,0x518(%r8)
  0x00000248074752a1: jmp    0x000002480747530c
  0x00000248074752a6: cmp    0x520(%r8),%rax
  0x00000248074752ad: jne    0x00000248074752bc
  0x00000248074752af: addq   $0x1,0x528(%r8)
  0x00000248074752b7: jmp    0x000002480747530c
  0x00000248074752bc: cmpq   $0x0,0x510(%r8)
  0x00000248074752c7: jne    0x00000248074752e0
  0x00000248074752c9: mov    %rax,0x510(%r8)
  0x00000248074752d0: movq   $0x1,0x518(%r8)
  0x00000248074752db: jmp    0x000002480747530c
  0x00000248074752e0: cmpq   $0x0,0x520(%r8)
  0x00000248074752eb: jne    0x0000024807475304
  0x00000248074752ed: mov    %rax,0x520(%r8)
  0x00000248074752f4: movq   $0x1,0x528(%r8)
  0x00000248074752ff: jmp    0x000002480747530c
  0x0000024807475304: addq   $0x1,0x508(%r8)
  0x000002480747530c: lea    0x1a8(%rsp),%r8
  0x0000024807475314: mov    %rdi,0x8(%r8)
  0x0000024807475318: mov    (%rdi),%rax
  0x000002480747531b: mov    %rax,%rdx
  0x000002480747531e: and    $0x7,%rdx
  0x0000024807475322: cmp    $0x5,%rdx
  0x0000024807475326: jne    0x00000248074753ad
  0x000002480747532c: mov    0x8(%rdi),%edx
  0x000002480747532f: shl    $0x3,%rdx
  0x0000024807475333: mov    0xa8(%rdx),%rdx
  0x000002480747533a: or     %r15,%rdx
  0x000002480747533d: xor    %rax,%rdx
  0x0000024807475340: and    $0xffffffffffffff87,%rdx
  0x0000024807475344: je     0x00000248074753d5
  0x000002480747534a: test   $0x7,%rdx
  0x0000024807475351: jne    0x000002480747539a
  0x0000024807475353: test   $0x300,%rdx
  0x000002480747535a: jne    0x0000024807475379
  0x000002480747535c: and    $0x37f,%rax
  0x0000024807475363: mov    %rax,%rdx
  0x0000024807475366: or     %r15,%rdx
  0x0000024807475369: lock cmpxchg %rdx,(%rdi)
  0x000002480747536e: jne    0x0000024807476758
  0x0000024807475374: jmp    0x00000248074753d5
  0x0000024807475379: mov    0x8(%rdi),%edx
  0x000002480747537c: shl    $0x3,%rdx
  0x0000024807475380: mov    0xa8(%rdx),%rdx
  0x0000024807475387: or     %r15,%rdx
  0x000002480747538a: lock cmpxchg %rdx,(%rdi)
  0x000002480747538f: jne    0x0000024807476758
  0x0000024807475395: jmp    0x00000248074753d5
  0x000002480747539a: mov    0x8(%rdi),%edx
  0x000002480747539d: shl    $0x3,%rdx
  0x00000248074753a1: mov    0xa8(%rdx),%rdx
  0x00000248074753a8: lock cmpxchg %rdx,(%rdi)
  0x00000248074753ad: mov    (%rdi),%rax
  0x00000248074753b0: or     $0x1,%rax
  0x00000248074753b4: mov    %rax,(%r8)
  0x00000248074753b7: lock cmpxchg %r8,(%rdi)
  0x00000248074753bc: je     0x00000248074753d5
  0x00000248074753c2: sub    %rsp,%rax
  0x00000248074753c5: and    $0xfffffffffffff007,%rax
  0x00000248074753cc: mov    %rax,(%r8)
  0x00000248074753cf: jne    0x0000024807476758  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x00000248074753d5: movabs $0x2481fd28cb0,%r8  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000248074753df: mov    0xdc(%r8),%edx
  0x00000248074753e6: add    $0x8,%edx
  0x00000248074753e9: mov    %edx,0xdc(%r8)
  0x00000248074753f0: movabs $0x2481fb71ab0,%r8  ;   {metadata({method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000248074753fa: and    $0x7ffff8,%edx
  0x0000024807475400: cmp    $0x0,%edx
  0x0000024807475403: je     0x000002480747676b
  0x0000024807475409: movl   $0x0,0x14(%rdi)
  0x0000024807475410: mov    %rdi,%rax
  0x0000024807475413: shr    $0x9,%rax
  0x0000024807475417: movabs $0x248130de000,%r8
  0x0000024807475421: movb   $0x0,(%rax,%r8,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x0000024807475426: mov    %rdi,%rax
  0x0000024807475429: movabs $0x2481fd28cb0,%r8  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807475433: addq   $0x1,0x108(%r8)
  0x000002480747543b: movabs $0x2481fd289f8,%r8  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475445: mov    0xdc(%r8),%edx
  0x000002480747544c: add    $0x8,%edx
  0x000002480747544f: mov    %edx,0xdc(%r8)
  0x0000024807475456: movabs $0x2481fb768b0,%r8  ;   {metadata({method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475460: and    $0x7ffff8,%edx
  0x0000024807475466: cmp    $0x0,%edx
  0x0000024807475469: je     0x0000024807476782
  0x000002480747546f: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x0000024807475473: inc    %r8d
  0x0000024807475476: mov    %rdi,%rax
  0x0000024807475479: movabs $0x2481fd289f8,%rdx  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475483: addq   $0x1,0x108(%rdx)
  0x000002480747548b: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475495: mov    0xdc(%rdx),%esi
  0x000002480747549b: add    $0x8,%esi
  0x000002480747549e: mov    %esi,0xdc(%rdx)
  0x00000248074754a4: movabs $0x2481fb75778,%rdx  ;   {metadata({method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074754ae: and    $0x7ffff8,%esi
  0x00000248074754b4: cmp    $0x0,%esi
  0x00000248074754b7: je     0x0000024807476799
  0x00000248074754bd: mov    0x10(%rdi),%esi
  0x00000248074754c0: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x00000248074754c4: mov    0xc(%rsi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ; implicit exception: dispatches to 0x00000248074767b0
  0x00000248074754c7: mov    %r8,%rdx
  0x00000248074754ca: sub    %ebx,%edx
  0x00000248074754cc: cmp    $0x0,%edx
  0x00000248074754cf: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074754d9: movabs $0x108,%rax
  0x00000248074754e3: jle    0x00000248074754f3
  0x00000248074754e9: movabs $0x118,%rax
  0x00000248074754f3: mov    (%rdx,%rax,1),%rcx
  0x00000248074754f7: lea    0x1(%rcx),%rcx
  0x00000248074754fb: mov    %rcx,(%rdx,%rax,1)
  0x00000248074754ff: jg     0x000002480747550d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x0000024807475505: mov    %rdi,%rsi
  0x0000024807475508: jmp    0x000002480747576c  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747550d: mov    %ebx,0x158(%rsp)
  0x0000024807475514: mov    %rsi,0x160(%rsp)
  0x000002480747551c: mov    %rdi,%rax
  0x000002480747551f: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475529: addq   $0x1,0x128(%rdx)
  0x0000024807475531: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x0000024807475534: nop
  0x0000024807475535: nop
  0x0000024807475536: nop
  0x0000024807475537: call   0x0000024807375ee0  ; OopMap{[248]=Oop [352]=Oop [432]=Oop off=10140}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {optimized virtual_call}
  0x000002480747553c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747553f: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475549: addq   $0x1,0x138(%rbx)
  0x0000024807475551: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480747555b: mov    0xdc(%rbx),%edx
  0x0000024807475561: add    $0x8,%edx
  0x0000024807475564: mov    %edx,0xdc(%rbx)
  0x000002480747556a: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807475574: and    $0x7ffff8,%edx
  0x000002480747557a: cmp    $0x0,%edx
  0x000002480747557d: je     0x00000248074767b5
  0x0000024807475583: mov    %r8,%rbx
  0x0000024807475586: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807475590: movslq %ebx,%rbx
  0x0000024807475593: mov    %rbx,%rdi
  0x0000024807475596: cmp    $0xffffff,%rbx
  0x000002480747559d: ja     0x00000248074767cc
  0x00000248074755a3: movabs $0x17,%rsi
  0x00000248074755ad: lea    (%rsi,%rbx,2),%rsi
  0x00000248074755b1: and    $0xfffffffffffffff8,%rsi
  0x00000248074755b5: mov    0x60(%r15),%rax
  0x00000248074755b9: lea    (%rax,%rsi,1),%rsi
  0x00000248074755bd: cmp    0x70(%r15),%rsi
  0x00000248074755c1: ja     0x00000248074767cc
  0x00000248074755c7: mov    %rsi,0x60(%r15)
  0x00000248074755cb: sub    %rax,%rsi
  0x00000248074755ce: movq   $0x1,(%rax)
  0x00000248074755d5: mov    %rdx,%rcx
  0x00000248074755d8: shr    $0x3,%rcx
  0x00000248074755dc: mov    %ecx,0x8(%rax)
  0x00000248074755df: mov    %ebx,0xc(%rax)
  0x00000248074755e2: sub    $0x10,%rsi
  0x00000248074755e6: je     0x00000248074755fd
  0x00000248074755ec: xor    %rbx,%rbx
  0x00000248074755ef: shr    $0x3,%rsi
  0x00000248074755f3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000248074755f8: dec    %rsi
  0x00000248074755fb: jne    0x00000248074755f3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x00000248074755fd: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807475607: addq   $0x1,0x108(%rdx)
  0x000002480747560f: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807475619: mov    0xdc(%rdx),%r9d
  0x0000024807475620: add    $0x8,%r9d
  0x0000024807475624: mov    %r9d,0xdc(%rdx)
  0x000002480747562b: movabs $0x2481fbf7590,%rdx  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807475635: and    $0x7ffff8,%r9d
  0x000002480747563c: cmp    $0x0,%r9d
  0x0000024807475640: je     0x00000248074767d6
  0x0000024807475646: mov    0x158(%rsp),%ebx
  0x000002480747564d: cmp    %r8d,%ebx
  0x0000024807475650: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480747565a: movabs $0x108,%r9
  0x0000024807475664: jg     0x0000024807475674
  0x000002480747566a: movabs $0x118,%r9
  0x0000024807475674: mov    (%rdx,%r9,1),%rdi
  0x0000024807475678: lea    0x1(%rdi),%rdi
  0x000002480747567c: mov    %rdi,(%rdx,%r9,1)
  0x0000024807475680: jg     0x000002480747569b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x0000024807475686: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807475690: incl   0x128(%rdx)
  0x0000024807475696: jmp    0x000002480747569e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747569b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747569e: mov    0x160(%rsp),%rsi
  0x00000248074756a6: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000248074756b0: addq   $0x1,0x118(%rdx)
  0x00000248074756b8: mov    %rsi,%rdx
  0x00000248074756bb: mov    $0x0,%r8d
  0x00000248074756c1: mov    %rax,%r9
  0x00000248074756c4: mov    $0x0,%edi
  0x00000248074756c9: mov    %rbx,%rsi
  0x00000248074756cc: mov    %rax,0x168(%rsp)
  0x00000248074756d4: lea    (%r8,%rsi,1),%rcx
  0x00000248074756d8: cmp    0xc(%rdx),%ecx
  0x00000248074756db: ja     0x00000248074767ed
  0x00000248074756e1: lea    (%rdi,%rsi,1),%rcx
  0x00000248074756e5: cmp    0xc(%r9),%ecx
  0x00000248074756e9: ja     0x00000248074767ed
  0x00000248074756ef: test   %esi,%esi
  0x00000248074756f1: jl     0x00000248074767ed
  0x00000248074756f7: je     0x000002480747573b
  0x00000248074756fd: movslq %r8d,%r8
  0x0000024807475700: movslq %edi,%rdi
  0x0000024807475703: lea    0x10(%rdx,%r8,2),%rcx
  0x0000024807475708: lea    0x10(%r9,%rdi,2),%rdx
  0x000002480747570d: mov    %rsi,%r8
  0x0000024807475710: sub    $0x20,%rsp
  0x0000024807475714: test   $0xf,%esp
  0x000002480747571a: je     0x0000024807475732
  0x0000024807475720: sub    $0x8,%rsp
  0x0000024807475724: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807475729: add    $0x8,%rsp
  0x000002480747572d: jmp    0x0000024807475737
  0x0000024807475732: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807475737: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747573b: mov    0x168(%rsp),%rax
  0x0000024807475743: mov    0xf8(%rsp),%rsi
  0x000002480747574b: mov    %rax,%r10
  0x000002480747574e: shr    $0x3,%r10
  0x0000024807475752: mov    %r10d,0x10(%rsi)
  0x0000024807475756: mov    %rsi,%rax
  0x0000024807475759: shr    $0x9,%rax
  0x000002480747575d: movabs $0x248130de000,%r8
  0x0000024807475767: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747576c: mov    0xec(%rsp),%r11d
  0x0000024807475774: mov    0x10(%rsi),%eax
  0x0000024807475777: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747577b: mov    0xc(%rsi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747577f: mov    %r8,%rdx
  0x0000024807475782: inc    %edx
  0x0000024807475784: mov    %edx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x0000024807475787: movslq %r8d,%rdx
  0x000002480747578a: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000248074767f9
  0x000002480747578e: jae    0x0000024807476803
  0x0000024807475794: mov    %r11w,0x10(%rax,%rdx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x000002480747579a: lea    0x1a8(%rsp),%rax
  0x00000248074757a2: mov    0x8(%rax),%rdx
  0x00000248074757a6: mov    (%rdx),%r8
  0x00000248074757a9: and    $0x7,%r8
  0x00000248074757ad: cmp    $0x5,%r8
  0x00000248074757b1: je     0x00000248074757ce
  0x00000248074757b7: mov    (%rax),%r8
  0x00000248074757ba: test   %r8,%r8
  0x00000248074757bd: je     0x00000248074757ce
  0x00000248074757c3: lock cmpxchg %r8,(%rdx)
  0x00000248074757c8: jne    0x000002480747680c  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x00000248074757ce: jmp    0x0000024807475d38  ;*pop
                                                ; - java.io.WinNTFileSystem::normalize@195 (line 172)

  0x00000248074757d3: mov    %rbx,%rsi
  0x00000248074757d6: mov    0xec(%rsp),%r11d
  0x00000248074757de: mov    %rsi,%rax
  0x00000248074757e1: movabs $0x2481fd59388,%r8  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000248074757eb: mov    0x8(%rax),%eax
  0x00000248074757ee: shl    $0x3,%rax
  0x00000248074757f2: cmp    0x3e0(%r8),%rax
  0x00000248074757f9: jne    0x0000024807475808
  0x00000248074757fb: addq   $0x1,0x3e8(%r8)
  0x0000024807475803: jmp    0x000002480747586e
  0x0000024807475808: cmp    0x3f0(%r8),%rax
  0x000002480747580f: jne    0x000002480747581e
  0x0000024807475811: addq   $0x1,0x3f8(%r8)
  0x0000024807475819: jmp    0x000002480747586e
  0x000002480747581e: cmpq   $0x0,0x3e0(%r8)
  0x0000024807475829: jne    0x0000024807475842
  0x000002480747582b: mov    %rax,0x3e0(%r8)
  0x0000024807475832: movq   $0x1,0x3e8(%r8)
  0x000002480747583d: jmp    0x000002480747586e
  0x0000024807475842: cmpq   $0x0,0x3f0(%r8)
  0x000002480747584d: jne    0x0000024807475866
  0x000002480747584f: mov    %rax,0x3f0(%r8)
  0x0000024807475856: movq   $0x1,0x3f8(%r8)
  0x0000024807475861: jmp    0x000002480747586e
  0x0000024807475866: addq   $0x1,0x3d8(%r8)
  0x000002480747586e: lea    0x1a8(%rsp),%r8
  0x0000024807475876: mov    %rsi,0x8(%r8)
  0x000002480747587a: mov    (%rsi),%rax
  0x000002480747587d: mov    %rax,%rdx
  0x0000024807475880: and    $0x7,%rdx
  0x0000024807475884: cmp    $0x5,%rdx
  0x0000024807475888: jne    0x000002480747590f
  0x000002480747588e: mov    0x8(%rsi),%edx
  0x0000024807475891: shl    $0x3,%rdx
  0x0000024807475895: mov    0xa8(%rdx),%rdx
  0x000002480747589c: or     %r15,%rdx
  0x000002480747589f: xor    %rax,%rdx
  0x00000248074758a2: and    $0xffffffffffffff87,%rdx
  0x00000248074758a6: je     0x0000024807475937
  0x00000248074758ac: test   $0x7,%rdx
  0x00000248074758b3: jne    0x00000248074758fc
  0x00000248074758b5: test   $0x300,%rdx
  0x00000248074758bc: jne    0x00000248074758db
  0x00000248074758be: and    $0x37f,%rax
  0x00000248074758c5: mov    %rax,%rdx
  0x00000248074758c8: or     %r15,%rdx
  0x00000248074758cb: lock cmpxchg %rdx,(%rsi)
  0x00000248074758d0: jne    0x0000024807476822
  0x00000248074758d6: jmp    0x0000024807475937
  0x00000248074758db: mov    0x8(%rsi),%edx
  0x00000248074758de: shl    $0x3,%rdx
  0x00000248074758e2: mov    0xa8(%rdx),%rdx
  0x00000248074758e9: or     %r15,%rdx
  0x00000248074758ec: lock cmpxchg %rdx,(%rsi)
  0x00000248074758f1: jne    0x0000024807476822
  0x00000248074758f7: jmp    0x0000024807475937
  0x00000248074758fc: mov    0x8(%rsi),%edx
  0x00000248074758ff: shl    $0x3,%rdx
  0x0000024807475903: mov    0xa8(%rdx),%rdx
  0x000002480747590a: lock cmpxchg %rdx,(%rsi)
  0x000002480747590f: mov    (%rsi),%rax
  0x0000024807475912: or     $0x1,%rax
  0x0000024807475916: mov    %rax,(%r8)
  0x0000024807475919: lock cmpxchg %r8,(%rsi)
  0x000002480747591e: je     0x0000024807475937
  0x0000024807475924: sub    %rsp,%rax
  0x0000024807475927: and    $0xfffffffffffff007,%rax
  0x000002480747592e: mov    %rax,(%r8)
  0x0000024807475931: jne    0x0000024807476822  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475937: movabs $0x2481fd28cb0,%r8  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807475941: mov    0xdc(%r8),%edx
  0x0000024807475948: add    $0x8,%edx
  0x000002480747594b: mov    %edx,0xdc(%r8)
  0x0000024807475952: movabs $0x2481fb71ab0,%r8  ;   {metadata({method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747595c: and    $0x7ffff8,%edx
  0x0000024807475962: cmp    $0x0,%edx
  0x0000024807475965: je     0x0000024807476835
  0x000002480747596b: movl   $0x0,0x14(%rsi)
  0x0000024807475972: mov    %rsi,%rax
  0x0000024807475975: shr    $0x9,%rax
  0x0000024807475979: movabs $0x248130de000,%r8
  0x0000024807475983: movb   $0x0,(%rax,%r8,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475988: mov    %rsi,%rax
  0x000002480747598b: movabs $0x2481fd28cb0,%r8  ;   {metadata(method data for {method} {0x000002481fb71ab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807475995: addq   $0x1,0x108(%r8)
  0x000002480747599d: movabs $0x2481fd289f8,%r8  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074759a7: mov    0xdc(%r8),%edx
  0x00000248074759ae: add    $0x8,%edx
  0x00000248074759b1: mov    %edx,0xdc(%r8)
  0x00000248074759b8: movabs $0x2481fb768b0,%r8  ;   {metadata({method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074759c2: and    $0x7ffff8,%edx
  0x00000248074759c8: cmp    $0x0,%edx
  0x00000248074759cb: je     0x000002480747684c
  0x00000248074759d1: mov    0xc(%rsi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x00000248074759d5: inc    %r8d
  0x00000248074759d8: mov    %rsi,%rax
  0x00000248074759db: movabs $0x2481fd289f8,%rdx  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074759e5: addq   $0x1,0x108(%rdx)
  0x00000248074759ed: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074759f7: mov    0xdc(%rdx),%edi
  0x00000248074759fd: add    $0x8,%edi
  0x0000024807475a00: mov    %edi,0xdc(%rdx)
  0x0000024807475a06: movabs $0x2481fb75778,%rdx  ;   {metadata({method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475a10: and    $0x7ffff8,%edi
  0x0000024807475a16: cmp    $0x0,%edi
  0x0000024807475a19: je     0x0000024807476863
  0x0000024807475a1f: mov    0x10(%rsi),%edi
  0x0000024807475a22: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475a26: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ; implicit exception: dispatches to 0x000002480747687a
  0x0000024807475a29: mov    %r8,%rdx
  0x0000024807475a2c: sub    %ebx,%edx
  0x0000024807475a2e: cmp    $0x0,%edx
  0x0000024807475a31: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475a3b: movabs $0x108,%rax
  0x0000024807475a45: jle    0x0000024807475a55
  0x0000024807475a4b: movabs $0x118,%rax
  0x0000024807475a55: mov    (%rdx,%rax,1),%rcx
  0x0000024807475a59: lea    0x1(%rcx),%rcx
  0x0000024807475a5d: mov    %rcx,(%rdx,%rax,1)
  0x0000024807475a61: jle    0x0000024807475cc3  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475a67: mov    %ebx,0x15c(%rsp)
  0x0000024807475a6e: mov    %rdi,0x170(%rsp)
  0x0000024807475a76: mov    %rsi,%rax
  0x0000024807475a79: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475a83: addq   $0x1,0x128(%rdx)
  0x0000024807475a8b: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475a8e: nop
  0x0000024807475a8f: call   0x0000024807375ee0  ; OopMap{[368]=Oop [248]=Oop [432]=Oop off=11508}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {optimized virtual_call}
  0x0000024807475a94: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475a97: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807475aa1: addq   $0x1,0x138(%rbx)
  0x0000024807475aa9: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807475ab3: mov    0xdc(%rbx),%edx
  0x0000024807475ab9: add    $0x8,%edx
  0x0000024807475abc: mov    %edx,0xdc(%rbx)
  0x0000024807475ac2: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807475acc: and    $0x7ffff8,%edx
  0x0000024807475ad2: cmp    $0x0,%edx
  0x0000024807475ad5: je     0x000002480747687f
  0x0000024807475adb: mov    %r8,%rbx
  0x0000024807475ade: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807475ae8: movslq %ebx,%rbx
  0x0000024807475aeb: mov    %rbx,%rdi
  0x0000024807475aee: cmp    $0xffffff,%rbx
  0x0000024807475af5: ja     0x0000024807476896
  0x0000024807475afb: movabs $0x17,%rsi
  0x0000024807475b05: lea    (%rsi,%rbx,2),%rsi
  0x0000024807475b09: and    $0xfffffffffffffff8,%rsi
  0x0000024807475b0d: mov    0x60(%r15),%rax
  0x0000024807475b11: lea    (%rax,%rsi,1),%rsi
  0x0000024807475b15: cmp    0x70(%r15),%rsi
  0x0000024807475b19: ja     0x0000024807476896
  0x0000024807475b1f: mov    %rsi,0x60(%r15)
  0x0000024807475b23: sub    %rax,%rsi
  0x0000024807475b26: movq   $0x1,(%rax)
  0x0000024807475b2d: mov    %rdx,%rcx
  0x0000024807475b30: shr    $0x3,%rcx
  0x0000024807475b34: mov    %ecx,0x8(%rax)
  0x0000024807475b37: mov    %ebx,0xc(%rax)
  0x0000024807475b3a: sub    $0x10,%rsi
  0x0000024807475b3e: je     0x0000024807475b55
  0x0000024807475b44: xor    %rbx,%rbx
  0x0000024807475b47: shr    $0x3,%rsi
  0x0000024807475b4b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807475b50: dec    %rsi
  0x0000024807475b53: jne    0x0000024807475b4b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475b55: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807475b5f: addq   $0x1,0x108(%rdx)
  0x0000024807475b67: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807475b71: mov    0xdc(%rdx),%r9d
  0x0000024807475b78: add    $0x8,%r9d
  0x0000024807475b7c: mov    %r9d,0xdc(%rdx)
  0x0000024807475b83: movabs $0x2481fbf7590,%rdx  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807475b8d: and    $0x7ffff8,%r9d
  0x0000024807475b94: cmp    $0x0,%r9d
  0x0000024807475b98: je     0x00000248074768a0
  0x0000024807475b9e: mov    0x15c(%rsp),%ebx
  0x0000024807475ba5: cmp    %r8d,%ebx
  0x0000024807475ba8: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807475bb2: movabs $0x108,%r9
  0x0000024807475bbc: jg     0x0000024807475bcc
  0x0000024807475bc2: movabs $0x118,%r9
  0x0000024807475bcc: mov    (%rdx,%r9,1),%rdi
  0x0000024807475bd0: lea    0x1(%rdi),%rdi
  0x0000024807475bd4: mov    %rdi,(%rdx,%r9,1)
  0x0000024807475bd8: jg     0x0000024807475bf3  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475bde: movabs $0x2481fd13600,%rdx  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807475be8: incl   0x128(%rdx)
  0x0000024807475bee: jmp    0x0000024807475bf6  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475bf3: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475bf6: mov    0x170(%rsp),%rdi
  0x0000024807475bfe: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807475c08: addq   $0x1,0x118(%rdx)
  0x0000024807475c10: mov    %rdi,%rdx
  0x0000024807475c13: mov    $0x0,%r8d
  0x0000024807475c19: mov    %rax,%r9
  0x0000024807475c1c: mov    $0x0,%edi
  0x0000024807475c21: mov    %rbx,%rsi
  0x0000024807475c24: mov    %rax,0x178(%rsp)
  0x0000024807475c2c: lea    (%r8,%rsi,1),%rcx
  0x0000024807475c30: cmp    0xc(%rdx),%ecx
  0x0000024807475c33: ja     0x00000248074768b7
  0x0000024807475c39: lea    (%rdi,%rsi,1),%rcx
  0x0000024807475c3d: cmp    0xc(%r9),%ecx
  0x0000024807475c41: ja     0x00000248074768b7
  0x0000024807475c47: test   %esi,%esi
  0x0000024807475c49: jl     0x00000248074768b7
  0x0000024807475c4f: je     0x0000024807475c93
  0x0000024807475c55: movslq %r8d,%r8
  0x0000024807475c58: movslq %edi,%rdi
  0x0000024807475c5b: lea    0x10(%rdx,%r8,2),%rcx
  0x0000024807475c60: lea    0x10(%r9,%rdi,2),%rdx
  0x0000024807475c65: mov    %rsi,%r8
  0x0000024807475c68: sub    $0x20,%rsp
  0x0000024807475c6c: test   $0xf,%esp
  0x0000024807475c72: je     0x0000024807475c8a
  0x0000024807475c78: sub    $0x8,%rsp
  0x0000024807475c7c: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807475c81: add    $0x8,%rsp
  0x0000024807475c85: jmp    0x0000024807475c8f
  0x0000024807475c8a: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807475c8f: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475c93: mov    0x178(%rsp),%rax
  0x0000024807475c9b: mov    0xf8(%rsp),%rsi
  0x0000024807475ca3: mov    %rax,%r10
  0x0000024807475ca6: shr    $0x3,%r10
  0x0000024807475caa: mov    %r10d,0x10(%rsi)
  0x0000024807475cae: mov    %rsi,%rax
  0x0000024807475cb1: shr    $0x9,%rax
  0x0000024807475cb5: movabs $0x248130de000,%rdx
  0x0000024807475cbf: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475cc3: mov    0xec(%rsp),%r11d
  0x0000024807475ccb: mov    0x10(%rsi),%eax
  0x0000024807475cce: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475cd2: mov    0xc(%rsi),%edx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475cd5: mov    %rdx,%rdi
  0x0000024807475cd8: inc    %edi
  0x0000024807475cda: mov    %edi,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475cdd: movslq %edx,%rdi
  0x0000024807475ce0: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00000248074768c1
  0x0000024807475ce3: jae    0x00000248074768cb
  0x0000024807475ce9: mov    %r11w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475cef: lea    0x1a8(%rsp),%rax
  0x0000024807475cf7: mov    0x8(%rax),%rdi
  0x0000024807475cfb: mov    (%rdi),%rdx
  0x0000024807475cfe: and    $0x7,%rdx
  0x0000024807475d02: cmp    $0x5,%rdx
  0x0000024807475d06: je     0x0000024807475d23
  0x0000024807475d0c: mov    (%rax),%rdx
  0x0000024807475d0f: test   %rdx,%rdx
  0x0000024807475d12: je     0x0000024807475d23
  0x0000024807475d18: lock cmpxchg %rdx,(%rdi)
  0x0000024807475d1d: jne    0x00000248074768d4  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807475d23: movabs $0x2481fd59388,%rdx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807475d2d: incl   0x408(%rdx)
  0x0000024807475d33: jmp    0x0000024807475d5d  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@150 (line 157)

  0x0000024807475d38: movabs $0x2481fd59388,%rdx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807475d42: incl   0x538(%rdx)
  0x0000024807475d48: jmp    0x0000024807475d5d  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@196 (line 173)

  0x0000024807475d4d: movabs $0x2481fd59388,%rdx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807475d57: incl   0x470(%rdx)        ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@166 (line 162)

  0x0000024807475d5d: mov    %rsi,%rax
  0x0000024807475d60: movabs $0x2481fd59388,%rdx  ;   {metadata(method data for {method} {0x000002481fc813c0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000024807475d6a: mov    0x8(%rax),%eax
  0x0000024807475d6d: shl    $0x3,%rax
  0x0000024807475d71: cmp    0x5e8(%rdx),%rax
  0x0000024807475d78: jne    0x0000024807475d87
  0x0000024807475d7a: addq   $0x1,0x5f0(%rdx)
  0x0000024807475d82: jmp    0x0000024807475ded
  0x0000024807475d87: cmp    0x5f8(%rdx),%rax
  0x0000024807475d8e: jne    0x0000024807475d9d
  0x0000024807475d90: addq   $0x1,0x600(%rdx)
  0x0000024807475d98: jmp    0x0000024807475ded
  0x0000024807475d9d: cmpq   $0x0,0x5e8(%rdx)
  0x0000024807475da8: jne    0x0000024807475dc1
  0x0000024807475daa: mov    %rax,0x5e8(%rdx)
  0x0000024807475db1: movq   $0x1,0x5f0(%rdx)
  0x0000024807475dbc: jmp    0x0000024807475ded
  0x0000024807475dc1: cmpq   $0x0,0x5f8(%rdx)
  0x0000024807475dcc: jne    0x0000024807475de5
  0x0000024807475dce: mov    %rax,0x5f8(%rdx)
  0x0000024807475dd5: movq   $0x1,0x600(%rdx)
  0x0000024807475de0: jmp    0x0000024807475ded
  0x0000024807475de5: addq   $0x1,0x5e0(%rdx)
  0x0000024807475ded: mov    %rsi,%rdx          ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 186)

  0x0000024807475df0: nop
  0x0000024807475df1: nop
  0x0000024807475df2: nop
  0x0000024807475df3: nop
  0x0000024807475df4: nop
  0x0000024807475df5: nop
  0x0000024807475df6: nop
  0x0000024807475df7: call   0x0000024807375ee0  ; OopMap{off=12380}
                                                ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 186)
                                                ;   {optimized virtual_call}
  0x0000024807475dfc: add    $0x1c0,%rsp
  0x0000024807475e03: pop    %rbp
  0x0000024807475e04: test   %eax,-0x1ec5d0a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807475e0a: ret                       ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@230 (line 187)

  0x0000024807475e0b: mov    0xf0(%rsp),%rax
  0x0000024807475e13: add    $0x1c0,%rsp
  0x0000024807475e1a: pop    %rbp
  0x0000024807475e1b: test   %eax,-0x1ec5d21(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807475e21: ret                       ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@5 (line 130)

  0x0000024807475e22: nopw   0x0(%rax,%rax,1)
  0x0000024807475e28: jmp    0x00000248074768f9  ;   {no_reloc}
  0x0000024807475e2d: add    %al,(%rax)
  0x0000024807475e2f: add    %al,(%rax)
  0x0000024807475e31: add    %ch,%cl
  0x0000024807475e33: int3   
  0x0000024807475e34: or     (%rax),%al
  0x0000024807475e36: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.StringBuffer::charAt@12 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x0000024807475e3a: movabs $0x2481feb2bf0,%rdx  ;   {metadata(method data for {method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807475e44: addq   $0x1,0x148(%rdx)
  0x0000024807475e4c: mov    $0x0,%r8d
  0x0000024807475e52: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::charAt@17 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x0000024807475e55: mov    %rax,0x180(%rsp)
  0x0000024807475e5d: nop
  0x0000024807475e5e: nop
  0x0000024807475e5f: call   0x0000024807375ee0  ; OopMap{[256]=Oop [384]=Oop [248]=Oop [432]=Oop off=12484}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::charAt@17 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)
                                                ;   {optimized virtual_call}
  0x0000024807475e64: mov    0x180(%rsp),%rax   ; OopMap{[256]=Oop [248]=Oop [432]=Oop rax=Oop off=12492}
                                                ;*athrow
                                                ; - java.lang.StringBuffer::charAt@20 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x0000024807475e6c: movabs $0x24807475e6c,%rdx  ;   {section_word}
  0x0000024807475e76: call   0x0000024807430ee0  ;   {runtime_call}
  0x0000024807475e7b: nop                       ;*athrow
                                                ; - java.lang.StringBuffer::charAt@20 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x0000024807475e7c: mov    %esi,0x190(%rsp)
  0x0000024807475e83: nopl   0x0(%rax,%rax,1)
  0x0000024807475e88: jmp    0x000002480747691f  ;   {no_reloc}
  0x0000024807475e8d: add    %al,(%rax)
  0x0000024807475e8f: add    %al,(%rax)
  0x0000024807475e91: add    %ch,%cl
  0x0000024807475e93: xchg   %eax,%edx
  0x0000024807475e94: or     (%rax),%al
  0x0000024807475e96: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.StringBuffer::charAt@12 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x0000024807475e9a: movabs $0x2481feb2bf0,%rdx  ;   {metadata(method data for {method} {0x000002481fb710c8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000024807475ea4: addq   $0x1,0x148(%rdx)
  0x0000024807475eac: mov    $0x1,%r8d
  0x0000024807475eb2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::charAt@17 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x0000024807475eb5: mov    %rax,0x188(%rsp)
  0x0000024807475ebd: nop
  0x0000024807475ebe: nop
  0x0000024807475ebf: call   0x0000024807375ee0  ; OopMap{[248]=Oop [256]=Oop [392]=Oop [432]=Oop off=12580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::charAt@17 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)
                                                ;   {optimized virtual_call}
  0x0000024807475ec4: mov    0x188(%rsp),%rax   ; OopMap{[248]=Oop [256]=Oop [432]=Oop rax=Oop off=12588}
                                                ;*athrow
                                                ; - java.lang.StringBuffer::charAt@20 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x0000024807475ecc: movabs $0x24807475ecc,%rdx  ;   {section_word}
  0x0000024807475ed6: call   0x0000024807430ee0  ;   {runtime_call}
  0x0000024807475edb: nop                       ;*athrow
                                                ; - java.lang.StringBuffer::charAt@20 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x0000024807475edc: nopl   0x0(%rax)
  0x0000024807475ee0: jmp    0x0000024807476945  ;   {no_reloc}
  0x0000024807475ee5: add    %al,(%rax)
  0x0000024807475ee7: add    %al,(%rax)
  0x0000024807475ee9: add    %ch,%cl
  0x0000024807475eeb: (bad)  
  0x0000024807475eec: or     (%rax),%al
  0x0000024807475eee: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)

  0x0000024807475ef2: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807475efc: addq   $0x1,0x148(%rdx)
  0x0000024807475f04: mov    %rsi,%r8
  0x0000024807475f07: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)

  0x0000024807475f0a: mov    %rax,0x198(%rsp)
  0x0000024807475f12: nop
  0x0000024807475f13: nop
  0x0000024807475f14: nop
  0x0000024807475f15: nop
  0x0000024807475f16: nop
  0x0000024807475f17: call   0x0000024807375ee0  ; OopMap{[240]=Oop [256]=Oop [248]=Oop [408]=Oop off=12668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ;   {optimized virtual_call}
  0x0000024807475f1c: mov    0x198(%rsp),%rax
  0x0000024807475f24: jmp    0x0000024807476a73  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)

  0x0000024807475f29: nopl   0x0(%rax)
  0x0000024807475f30: jmp    0x000002480747696b  ;   {no_reloc}
  0x0000024807475f35: add    %al,(%rax)
  0x0000024807475f37: add    %al,(%rax)
  0x0000024807475f39: add    %ch,%cl
  0x0000024807475f3b: ss or  (%rax),%al
  0x0000024807475f3e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)

  0x0000024807475f41: rorb   -0x47(%rax)        ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807475f44: rex.W pop %rsp
  0x0000024807475f46: ret    
  0x0000024807475f47: (bad)  
  0x0000024807475f48: rex.W add (%rax),%al
  0x0000024807475f4b: add    %cl,-0x7d(%rax)
  0x0000024807475f4e: orl    $0x4c010000,0x1(%rax)
  0x0000024807475f55: mov    %edi,%eax
  0x0000024807475f57: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)

  0x0000024807475f5a: mov    %edi,0x110(%rsp)
  0x0000024807475f61: mov    %rax,0x1a0(%rsp)
  0x0000024807475f69: nop
  0x0000024807475f6a: nop
  0x0000024807475f6b: nop
  0x0000024807475f6c: nop
  0x0000024807475f6d: nop
  0x0000024807475f6e: nop
  0x0000024807475f6f: call   0x0000024807375ee0  ; OopMap{[240]=Oop [416]=Oop [248]=Oop [256]=Oop off=12756}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)
                                                ;   {optimized virtual_call}
  0x0000024807475f74: mov    0x1a0(%rsp),%rax
  0x0000024807475f7c: jmp    0x0000024807476a73  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)

  0x0000024807475f81: mov    0x308(%r15),%rax
  0x0000024807475f88: xor    %r10,%r10
  0x0000024807475f8b: mov    %r10,0x308(%r15)
  0x0000024807475f92: xor    %r10,%r10
  0x0000024807475f95: mov    %r10,0x310(%r15)
  0x0000024807475f9c: mov    %rax,%rsi
  0x0000024807475f9f: lea    0x1a8(%rsp),%rax
  0x0000024807475fa7: mov    0x8(%rax),%rbx
  0x0000024807475fab: mov    (%rbx),%rdi
  0x0000024807475fae: and    $0x7,%rdi
  0x0000024807475fb2: cmp    $0x5,%rdi
  0x0000024807475fb6: je     0x0000024807475fd3
  0x0000024807475fbc: mov    (%rax),%rdi
  0x0000024807475fbf: test   %rdi,%rdi
  0x0000024807475fc2: je     0x0000024807475fd3
  0x0000024807475fc8: lock cmpxchg %rdi,(%rbx)
  0x0000024807475fcd: jne    0x0000024807476982  ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x0000024807475fd3: mov    %rsi,%rax
  0x0000024807475fd6: jmp    0x0000024807476a73  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)

  0x0000024807475fdb: mov    0x308(%r15),%rax
  0x0000024807475fe2: xor    %r10,%r10
  0x0000024807475fe5: mov    %r10,0x308(%r15)
  0x0000024807475fec: xor    %r10,%r10
  0x0000024807475fef: mov    %r10,0x310(%r15)
  0x0000024807475ff6: mov    %rax,%rsi
  0x0000024807475ff9: lea    0x1a8(%rsp),%rax
  0x0000024807476001: mov    0x8(%rax),%rbx
  0x0000024807476005: mov    (%rbx),%rdi
  0x0000024807476008: and    $0x7,%rdi
  0x000002480747600c: cmp    $0x5,%rdi
  0x0000024807476010: je     0x000002480747602d
  0x0000024807476016: mov    (%rax),%rdi
  0x0000024807476019: test   %rdi,%rdi
  0x000002480747601c: je     0x000002480747602d
  0x0000024807476022: lock cmpxchg %rdi,(%rbx)
  0x0000024807476027: jne    0x0000024807476998  ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x000002480747602d: mov    %rsi,%rax
  0x0000024807476030: jmp    0x0000024807476a73  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)

  0x0000024807476035: mov    0x308(%r15),%rax
  0x000002480747603c: xor    %r10,%r10
  0x000002480747603f: mov    %r10,0x308(%r15)
  0x0000024807476046: xor    %r10,%r10
  0x0000024807476049: mov    %r10,0x310(%r15)
  0x0000024807476050: mov    %rax,%rsi
  0x0000024807476053: lea    0x1a8(%rsp),%rax
  0x000002480747605b: mov    0x8(%rax),%rbx
  0x000002480747605f: mov    (%rbx),%rdi
  0x0000024807476062: and    $0x7,%rdi
  0x0000024807476066: cmp    $0x5,%rdi
  0x000002480747606a: je     0x0000024807476087
  0x0000024807476070: mov    (%rax),%rdi
  0x0000024807476073: test   %rdi,%rdi
  0x0000024807476076: je     0x0000024807476087
  0x000002480747607c: lock cmpxchg %rdi,(%rbx)
  0x0000024807476081: jne    0x00000248074769ae  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x0000024807476087: mov    %rsi,%rax
  0x000002480747608a: jmp    0x0000024807476a73  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)

  0x000002480747608f: mov    0x308(%r15),%rax
  0x0000024807476096: xor    %r10,%r10
  0x0000024807476099: mov    %r10,0x308(%r15)
  0x00000248074760a0: xor    %r10,%r10
  0x00000248074760a3: mov    %r10,0x310(%r15)
  0x00000248074760aa: mov    %rax,%rsi
  0x00000248074760ad: lea    0x1a8(%rsp),%rax
  0x00000248074760b5: mov    0x8(%rax),%rbx
  0x00000248074760b9: mov    (%rbx),%rdi
  0x00000248074760bc: and    $0x7,%rdi
  0x00000248074760c0: cmp    $0x5,%rdi
  0x00000248074760c4: je     0x00000248074760e1
  0x00000248074760ca: mov    (%rax),%rdi
  0x00000248074760cd: test   %rdi,%rdi
  0x00000248074760d0: je     0x00000248074760e1
  0x00000248074760d6: lock cmpxchg %rdi,(%rbx)
  0x00000248074760db: jne    0x00000248074769c4  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x00000248074760e1: mov    %rsi,%rax
  0x00000248074760e4: jmp    0x0000024807476a73  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)

  0x00000248074760e9: mov    0x308(%r15),%rax
  0x00000248074760f0: xor    %r10,%r10
  0x00000248074760f3: mov    %r10,0x308(%r15)
  0x00000248074760fa: xor    %r10,%r10
  0x00000248074760fd: mov    %r10,0x310(%r15)
  0x0000024807476104: mov    %rax,%rsi
  0x0000024807476107: lea    0x1a8(%rsp),%rax
  0x000002480747610f: mov    0x8(%rax),%rbx
  0x0000024807476113: mov    (%rbx),%rdi
  0x0000024807476116: and    $0x7,%rdi
  0x000002480747611a: cmp    $0x5,%rdi
  0x000002480747611e: je     0x000002480747613b
  0x0000024807476124: mov    (%rax),%rdi
  0x0000024807476127: test   %rdi,%rdi
  0x000002480747612a: je     0x000002480747613b
  0x0000024807476130: lock cmpxchg %rdi,(%rbx)
  0x0000024807476135: jne    0x00000248074769da  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x000002480747613b: mov    %rsi,%rax
  0x000002480747613e: jmp    0x0000024807476a73  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)

  0x0000024807476143: mov    0x308(%r15),%rax
  0x000002480747614a: xor    %r10,%r10
  0x000002480747614d: mov    %r10,0x308(%r15)
  0x0000024807476154: xor    %r10,%r10
  0x0000024807476157: mov    %r10,0x310(%r15)
  0x000002480747615e: mov    %rax,%rsi
  0x0000024807476161: lea    0x1a8(%rsp),%rax
  0x0000024807476169: mov    0x8(%rax),%rbx
  0x000002480747616d: mov    (%rbx),%rdi
  0x0000024807476170: and    $0x7,%rdi
  0x0000024807476174: cmp    $0x5,%rdi
  0x0000024807476178: je     0x0000024807476195
  0x000002480747617e: mov    (%rax),%rdi
  0x0000024807476181: test   %rdi,%rdi
  0x0000024807476184: je     0x0000024807476195
  0x000002480747618a: lock cmpxchg %rdi,(%rbx)
  0x000002480747618f: jne    0x00000248074769f0  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 169)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 153)

  0x0000024807476195: mov    %rsi,%rax
  0x0000024807476198: jmp    0x0000024807476a73  ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 153)

  0x000002480747619d: mov    0x308(%r15),%rax
  0x00000248074761a4: xor    %r10,%r10
  0x00000248074761a7: mov    %r10,0x308(%r15)
  0x00000248074761ae: xor    %r10,%r10
  0x00000248074761b1: mov    %r10,0x310(%r15)
  0x00000248074761b8: mov    %rax,%rsi
  0x00000248074761bb: lea    0x1a8(%rsp),%rax
  0x00000248074761c3: mov    0x8(%rax),%rbx
  0x00000248074761c7: mov    (%rbx),%rdi
  0x00000248074761ca: and    $0x7,%rdi
  0x00000248074761ce: cmp    $0x5,%rdi
  0x00000248074761d2: je     0x00000248074761ef
  0x00000248074761d8: mov    (%rax),%rdi
  0x00000248074761db: test   %rdi,%rdi
  0x00000248074761de: je     0x00000248074761ef
  0x00000248074761e4: lock cmpxchg %rdi,(%rbx)
  0x00000248074761e9: jne    0x0000024807476a06  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x00000248074761ef: mov    %rsi,%rax
  0x00000248074761f2: jmp    0x0000024807476a73  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)

  0x00000248074761f7: mov    0x308(%r15),%rax
  0x00000248074761fe: xor    %r10,%r10
  0x0000024807476201: mov    %r10,0x308(%r15)
  0x0000024807476208: xor    %r10,%r10
  0x000002480747620b: mov    %r10,0x310(%r15)
  0x0000024807476212: mov    %rax,%rsi
  0x0000024807476215: lea    0x1a8(%rsp),%rax
  0x000002480747621d: mov    0x8(%rax),%rbx
  0x0000024807476221: mov    (%rbx),%rdi
  0x0000024807476224: and    $0x7,%rdi
  0x0000024807476228: cmp    $0x5,%rdi
  0x000002480747622c: je     0x0000024807476249
  0x0000024807476232: mov    (%rax),%rdi
  0x0000024807476235: test   %rdi,%rdi
  0x0000024807476238: je     0x0000024807476249
  0x000002480747623e: lock cmpxchg %rdi,(%rbx)
  0x0000024807476243: jne    0x0000024807476a1c  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807476249: mov    %rsi,%rax
  0x000002480747624c: jmp    0x0000024807476a73  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)

  0x0000024807476251: mov    0x308(%r15),%rax
  0x0000024807476258: xor    %r10,%r10
  0x000002480747625b: mov    %r10,0x308(%r15)
  0x0000024807476262: xor    %r10,%r10
  0x0000024807476265: mov    %r10,0x310(%r15)
  0x000002480747626c: mov    %rax,%rsi
  0x000002480747626f: lea    0x1a8(%rsp),%rax
  0x0000024807476277: mov    0x8(%rax),%rbx
  0x000002480747627b: mov    (%rbx),%rdi
  0x000002480747627e: and    $0x7,%rdi
  0x0000024807476282: cmp    $0x5,%rdi
  0x0000024807476286: je     0x00000248074762a3
  0x000002480747628c: mov    (%rax),%rdi
  0x000002480747628f: test   %rdi,%rdi
  0x0000024807476292: je     0x00000248074762a3
  0x0000024807476298: lock cmpxchg %rdi,(%rbx)
  0x000002480747629d: jne    0x0000024807476a32  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 275)
                                                ; - java.io.WinNTFileSystem::normalize@57 (line 142)

  0x00000248074762a3: mov    %rsi,%rax
  0x00000248074762a6: jmp    0x0000024807476a73
  0x00000248074762ab: mov    %rsi,0x8(%rsp)
  0x00000248074762b0: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074762b8: call   0x0000024807433da0  ; OopMap{rdx=Oop [256]=Oop r8=Oop [240]=Oop off=13597}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 130)
                                                ;   {runtime_call}
  0x00000248074762bd: jmp    0x0000024807472e19
  0x00000248074762c2: mov    %rdx,%rdx
  0x00000248074762c5: call   0x000002480742f900  ; OopMap{r8=Oop [240]=Oop r13=Oop [256]=Oop off=13610}
                                                ;*new  ; - java.io.WinNTFileSystem::normalize@19 (line 134)
                                                ;   {runtime_call}
  0x00000248074762ca: jmp    0x0000024807472ee5
  0x00000248074762cf: mov    %rbx,0x8(%rsp)
  0x00000248074762d4: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074762dc: call   0x0000024807433da0  ; OopMap{r8=Oop [240]=Oop r13=Oop [256]=Oop rax=Oop [248]=Oop off=13633}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::&lt;init&gt;@-1 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 134)
                                                ;   {runtime_call}
  0x00000248074762e1: jmp    0x0000024807472f34
  0x00000248074762e6: mov    %rbx,0x8(%rsp)
  0x00000248074762eb: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074762f3: call   0x0000024807433da0  ; OopMap{r8=Oop [240]=Oop r13=Oop [256]=Oop rax=Oop [248]=Oop off=13656}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 134)
                                                ;   {runtime_call}
  0x00000248074762f8: jmp    0x0000024807472f7b
  0x00000248074762fd: mov    %rbx,0x8(%rsp)
  0x0000024807476302: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747630a: call   0x0000024807433da0  ; OopMap{r8=Oop [240]=Oop r13=Oop [256]=Oop rax=Oop [248]=Oop off=13679}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 134)
                                                ;   {runtime_call}
  0x000002480747630f: jmp    0x0000024807472fc2
  0x0000024807476314: call   0x0000024807430280  ; OopMap{r8=Oop [240]=Oop r13=Oop [256]=Oop r9=Oop [248]=Oop off=13689}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 134)
                                                ;   {runtime_call}
  0x0000024807476319: jmp    0x000002480747303f
  0x000002480747631e: call   0x000002480742f100  ; OopMap{[256]=Oop r8=Oop [240]=Oop [248]=Oop off=13699}
                                                ;*invokevirtual substring
                                                ; - java.io.WinNTFileSystem::normalize@54 (line 142)
                                                ;   {runtime_call}
  0x0000024807476323: mov    %rsi,0x8(%rsp)
  0x0000024807476328: mov    %rdx,(%rsp)
  0x000002480747632c: call   0x0000024807431ea0  ; OopMap{[256]=Oop [240]=Oop r8=Oop rsi=Oop [248]=Oop [432]=Oop off=13713}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 275)
                                                ; - java.io.WinNTFileSystem::normalize@57 (line 142)
                                                ;   {runtime_call}
  0x0000024807476331: jmp    0x0000024807473315
  0x0000024807476336: mov    %rdx,0x8(%rsp)
  0x000002480747633b: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476343: call   0x0000024807433da0  ; OopMap{[256]=Oop [240]=Oop r8=Oop rsi=Oop [248]=Oop [432]=Oop off=13736}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 275)
                                                ; - java.io.WinNTFileSystem::normalize@57 (line 142)
                                                ;   {runtime_call}
  0x0000024807476348: jmp    0x0000024807473347
  0x000002480747634d: lea    0x1a8(%rsp),%rax
  0x0000024807476355: mov    %rax,(%rsp)
  0x0000024807476359: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480747635e: jmp    0x00000248074733b8
  0x0000024807476363: call   0x000002480742f100  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop off=13768}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ;   {runtime_call}
  0x0000024807476368: mov    %rbx,0x8(%rsp)
  0x000002480747636d: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476375: call   0x0000024807433da0  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop off=13786}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ;   {runtime_call}
  0x000002480747637a: jmp    0x00000248074734ea
  0x000002480747637f: call   0x000002480742f100  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop rbx=Oop off=13796}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ;   {runtime_call}
  0x0000024807476384: mov    %rsi,(%rsp)
  0x0000024807476388: call   0x000002480742e800  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop rbx=Oop off=13805}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ;   {runtime_call}
  0x000002480747638d: mov    %rbx,0x8(%rsp)
  0x0000024807476392: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747639a: call   0x0000024807433da0  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop off=13823}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 149)
                                                ;   {runtime_call}
  0x000002480747639f: jmp    0x00000248074735c4
  0x00000248074763a4: mov    %rsi,0x8(%rsp)
  0x00000248074763a9: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074763b1: call   0x0000024807433da0  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop off=13846}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)
                                                ;   {runtime_call}
  0x00000248074763b6: jmp    0x0000024807473793
  0x00000248074763bb: call   0x000002480742f100  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop rsi=Oop off=13856}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)
                                                ;   {runtime_call}
  0x00000248074763c0: mov    %rdi,(%rsp)
  0x00000248074763c4: call   0x000002480742e800  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop rsi=Oop off=13865}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)
                                                ;   {runtime_call}
  0x00000248074763c9: mov    %rbx,0x8(%rsp)
  0x00000248074763ce: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074763d6: call   0x0000024807433da0  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop off=13883}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 150)
                                                ;   {runtime_call}
  0x00000248074763db: jmp    0x000002480747386d
  0x00000248074763e0: mov    %rsi,0x8(%rsp)
  0x00000248074763e5: movq   $0x6d,(%rsp)
  0x00000248074763ed: call   0x0000024807433da0  ; OopMap{rax=Oop [248]=Oop rdx=Oop [256]=Oop r8=Oop [240]=Oop off=13906}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@109 (line 150)
                                                ;   {runtime_call}
  0x00000248074763f2: jmp    0x000002480747396e
  0x00000248074763f7: mov    %rbx,0x8(%rsp)
  0x00000248074763fc: mov    %rsi,(%rsp)
  0x0000024807476400: call   0x0000024807431ea0  ; OopMap{rdx=Oop [256]=Oop r8=Oop [240]=Oop rbx=Oop [248]=Oop [432]=Oop off=13925}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x0000024807476405: jmp    0x0000024807473b1e
  0x000002480747640a: mov    %rsi,0x8(%rsp)
  0x000002480747640f: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476417: call   0x0000024807433da0  ; OopMap{rdx=Oop [256]=Oop r8=Oop [240]=Oop rbx=Oop [248]=Oop [432]=Oop off=13948}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x000002480747641c: jmp    0x0000024807473b50
  0x0000024807476421: mov    %rsi,0x8(%rsp)
  0x0000024807476426: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747642e: call   0x0000024807433da0  ; OopMap{rdx=Oop [256]=Oop r8=Oop [240]=Oop rbx=Oop [248]=Oop [432]=Oop off=13971}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x0000024807476433: jmp    0x0000024807473bb3
  0x0000024807476438: mov    %rax,0x8(%rsp)
  0x000002480747643d: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476445: call   0x0000024807433da0  ; OopMap{rdx=Oop [256]=Oop r8=Oop [240]=Oop rbx=Oop [248]=Oop [432]=Oop off=13994}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x000002480747644a: jmp    0x0000024807473bff
  0x000002480747644f: call   0x000002480742f100  ; OopMap{rdx=Oop [256]=Oop r8=Oop [240]=Oop rbx=Oop [248]=Oop rax=Oop [432]=Oop off=14004}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x0000024807476454: mov    %rbx,0x8(%rsp)
  0x0000024807476459: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476461: call   0x0000024807433da0  ; OopMap{[256]=Oop [248]=Oop [240]=Oop [280]=Oop [432]=Oop off=14022}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x0000024807476466: jmp    0x0000024807473ce3
  0x000002480747646b: call   0x0000024807430280  ; OopMap{[256]=Oop [248]=Oop [240]=Oop [280]=Oop [432]=Oop off=14032}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x0000024807476470: jmp    0x0000024807473d5d
  0x0000024807476475: mov    %rdx,0x8(%rsp)
  0x000002480747647a: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476482: call   0x0000024807433da0  ; OopMap{[256]=Oop [248]=Oop [240]=Oop [280]=Oop rax=Oop [432]=Oop off=14055}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x0000024807476487: jmp    0x0000024807473da6
  0x000002480747648c: nop
  0x000002480747648d: nop
  0x000002480747648e: nop
  0x000002480747648f: call   0x0000024807376360  ; OopMap{[256]=Oop [248]=Oop [240]=Oop [288]=Oop [432]=Oop off=14068}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {static_call}
  0x0000024807476494: jmp    0x0000024807473e98
  0x0000024807476499: call   0x000002480742f100  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop rax=Oop [432]=Oop off=14078}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x000002480747649e: call   0x000002480742f100  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop rax=Oop [432]=Oop off=14083}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x00000248074764a3: mov    %r8,(%rsp)
  0x00000248074764a7: call   0x000002480742e800  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop rax=Oop [432]=Oop off=14092}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 179)
                                                ;   {runtime_call}
  0x00000248074764ac: lea    0x1a8(%rsp),%rax
  0x00000248074764b4: mov    %rax,(%rsp)
  0x00000248074764b8: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074764bd: jmp    0x0000024807473f2b
  0x00000248074764c2: mov    %rbx,0x8(%rsp)
  0x00000248074764c7: mov    %r8,(%rsp)
  0x00000248074764cb: call   0x0000024807431ea0  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop [432]=Oop off=14128}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x00000248074764d0: jmp    0x00000248074740ab
  0x00000248074764d5: mov    %r8,0x8(%rsp)
  0x00000248074764da: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074764e2: call   0x0000024807433da0  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop [432]=Oop off=14151}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x00000248074764e7: jmp    0x00000248074740df
  0x00000248074764ec: mov    %r8,0x8(%rsp)
  0x00000248074764f1: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074764f9: call   0x0000024807433da0  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop [432]=Oop off=14174}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x00000248074764fe: jmp    0x0000024807474145
  0x0000024807476503: mov    %rdx,0x8(%rsp)
  0x0000024807476508: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476510: call   0x0000024807433da0  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop [432]=Oop off=14197}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x0000024807476515: jmp    0x0000024807474193
  0x000002480747651a: call   0x000002480742f100  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop rax=Oop [432]=Oop off=14207}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x000002480747651f: mov    %rbx,0x8(%rsp)
  0x0000024807476524: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747652c: call   0x0000024807433da0  ; OopMap{[256]=Oop [240]=Oop [304]=Oop [248]=Oop [432]=Oop off=14225}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x0000024807476531: jmp    0x0000024807474263
  0x0000024807476536: call   0x0000024807430280  ; OopMap{[256]=Oop [240]=Oop [304]=Oop [248]=Oop [432]=Oop off=14235}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x000002480747653b: jmp    0x00000248074742dd
  0x0000024807476540: mov    %rdx,0x8(%rsp)
  0x0000024807476545: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747654d: call   0x0000024807433da0  ; OopMap{[256]=Oop [240]=Oop [304]=Oop [248]=Oop rax=Oop [432]=Oop off=14258}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x0000024807476552: jmp    0x0000024807474326
  0x0000024807476557: call   0x0000024807376360  ; OopMap{[256]=Oop [240]=Oop [248]=Oop [320]=Oop [432]=Oop off=14268}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {static_call}
  0x000002480747655c: jmp    0x0000024807474418
  0x0000024807476561: call   0x000002480742f100  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop rax=Oop [432]=Oop off=14278}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x0000024807476566: call   0x000002480742f100  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop rax=Oop [432]=Oop off=14283}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x000002480747656b: mov    %r8,(%rsp)
  0x000002480747656f: call   0x000002480742e800  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop rax=Oop [432]=Oop off=14292}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 182)
                                                ;   {runtime_call}
  0x0000024807476574: lea    0x1a8(%rsp),%rax
  0x000002480747657c: mov    %rax,(%rsp)
  0x0000024807476580: call   0x00000248074322e0  ;   {runtime_call}
  0x0000024807476585: jmp    0x00000248074744a9
  0x000002480747658a: mov    %rax,0x8(%rsp)
  0x000002480747658f: movq   $0xda,(%rsp)
  0x0000024807476597: call   0x0000024807433da0  ; OopMap{[256]=Oop [240]=Oop rbx=Oop [248]=Oop off=14332}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 184)
                                                ;   {runtime_call}
  0x000002480747659c: jmp    0x00000248074744e7
  0x00000248074765a1: mov    %rbx,0x8(%rsp)
  0x00000248074765a6: mov    %r8,(%rsp)
  0x00000248074765aa: call   0x0000024807431ea0  ; OopMap{rbx=Oop [248]=Oop [256]=Oop [432]=Oop off=14351}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 169)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 153)
                                                ;   {runtime_call}
  0x00000248074765af: jmp    0x000002480747466c
  0x00000248074765b4: lea    0x1a8(%rsp),%rax
  0x00000248074765bc: mov    %rax,(%rsp)
  0x00000248074765c0: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074765c5: jmp    0x00000248074746a3
  0x00000248074765ca: mov    %rbx,0x8(%rsp)
  0x00000248074765cf: mov    %r8,(%rsp)
  0x00000248074765d3: call   0x0000024807431ea0  ; OopMap{rbx=Oop [248]=Oop [256]=Oop [432]=Oop off=14392}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)
                                                ;   {runtime_call}
  0x00000248074765d8: jmp    0x0000024807474835
  0x00000248074765dd: mov    %rax,0x8(%rsp)
  0x00000248074765e2: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074765ea: call   0x0000024807433da0  ; OopMap{rbx=Oop [248]=Oop [256]=Oop [432]=Oop off=14415}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)
                                                ;   {runtime_call}
  0x00000248074765ef: jmp    0x000002480747486c
  0x00000248074765f4: call   0x000002480742f100  ; OopMap{rbx=Oop [248]=Oop [256]=Oop rax=Oop [432]=Oop off=14425}
                                                ;*caload
                                                ; - java.lang.StringBuffer::charAt@26 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)
                                                ;   {runtime_call}
  0x00000248074765f9: call   0x000002480742f100  ; OopMap{rbx=Oop [248]=Oop [256]=Oop rax=Oop [432]=Oop off=14430}
                                                ;*caload
                                                ; - java.lang.StringBuffer::charAt@26 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)
                                                ;   {runtime_call}
  0x00000248074765fe: movq   $0x1,(%rsp)
  0x0000024807476606: call   0x000002480742e800  ; OopMap{rbx=Oop [248]=Oop [256]=Oop rax=Oop [432]=Oop off=14443}
                                                ;*caload
                                                ; - java.lang.StringBuffer::charAt@26 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)
                                                ;   {runtime_call}
  0x000002480747660b: lea    0x1a8(%rsp),%rax
  0x0000024807476613: mov    %rax,(%rsp)
  0x0000024807476617: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480747661c: jmp    0x000002480747490e
  0x0000024807476621: mov    %rbx,0x8(%rsp)
  0x0000024807476626: mov    %r8,(%rsp)
  0x000002480747662a: call   0x0000024807431ea0  ; OopMap{rbx=Oop [248]=Oop [432]=Oop off=14479}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x000002480747662f: jmp    0x0000024807474ada
  0x0000024807476634: mov    %r8,0x8(%rsp)
  0x0000024807476639: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476641: call   0x0000024807433da0  ; OopMap{rbx=Oop [248]=Oop [432]=Oop off=14502}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x0000024807476646: jmp    0x0000024807474b0e
  0x000002480747664b: mov    %r8,0x8(%rsp)
  0x0000024807476650: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476658: call   0x0000024807433da0  ; OopMap{rbx=Oop [248]=Oop [432]=Oop off=14525}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x000002480747665d: jmp    0x0000024807474b74
  0x0000024807476662: mov    %rdx,0x8(%rsp)
  0x0000024807476667: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747666f: call   0x0000024807433da0  ; OopMap{rbx=Oop [248]=Oop [432]=Oop off=14548}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x0000024807476674: jmp    0x0000024807474bc2
  0x0000024807476679: call   0x000002480742f100  ; OopMap{rbx=Oop [248]=Oop rsi=Oop [432]=Oop off=14558}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x000002480747667e: mov    %rbx,0x8(%rsp)
  0x0000024807476683: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747668b: call   0x0000024807433da0  ; OopMap{[248]=Oop [328]=Oop [432]=Oop off=14576}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x0000024807476690: jmp    0x0000024807474c8b
  0x0000024807476695: call   0x0000024807430280  ; OopMap{[248]=Oop [328]=Oop [432]=Oop off=14586}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x000002480747669a: jmp    0x0000024807474d05
  0x000002480747669f: mov    %rdx,0x8(%rsp)
  0x00000248074766a4: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074766ac: call   0x0000024807433da0  ; OopMap{[248]=Oop [328]=Oop rax=Oop [432]=Oop off=14609}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x00000248074766b1: jmp    0x0000024807474d4e
  0x00000248074766b6: nop
  0x00000248074766b7: call   0x0000024807376360  ; OopMap{[248]=Oop [336]=Oop [432]=Oop off=14620}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {static_call}
  0x00000248074766bc: jmp    0x0000024807474e40
  0x00000248074766c1: call   0x000002480742f100  ; OopMap{rdi=Oop [248]=Oop rax=Oop [432]=Oop off=14630}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x00000248074766c6: call   0x000002480742f100  ; OopMap{rdi=Oop [248]=Oop rax=Oop [432]=Oop off=14635}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x00000248074766cb: mov    %r8,(%rsp)
  0x00000248074766cf: call   0x000002480742e800  ; OopMap{rdi=Oop [248]=Oop rax=Oop [432]=Oop off=14644}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 161)
                                                ;   {runtime_call}
  0x00000248074766d4: lea    0x1a8(%rsp),%rax
  0x00000248074766dc: mov    %rax,(%rsp)
  0x00000248074766e0: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074766e5: jmp    0x0000024807474ed3
  0x00000248074766ea: mov    %rdi,0x8(%rsp)
  0x00000248074766ef: mov    %r8,(%rsp)
  0x00000248074766f3: call   0x0000024807431ea0  ; OopMap{rdi=Oop [248]=Oop [256]=Oop [432]=Oop off=14680}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)
                                                ;   {runtime_call}
  0x00000248074766f8: jmp    0x0000024807475080
  0x00000248074766fd: mov    %rax,0x8(%rsp)
  0x0000024807476702: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747670a: call   0x0000024807433da0  ; OopMap{rdi=Oop [248]=Oop [256]=Oop [432]=Oop off=14703}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::charAt@-1 (line 207)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)
                                                ;   {runtime_call}
  0x000002480747670f: jmp    0x00000248074750b7
  0x0000024807476714: call   0x000002480742f100  ; OopMap{rdi=Oop [248]=Oop [256]=Oop rax=Oop [432]=Oop off=14713}
                                                ;*caload
                                                ; - java.lang.StringBuffer::charAt@26 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)
                                                ;   {runtime_call}
  0x0000024807476719: call   0x000002480742f100  ; OopMap{rdi=Oop [248]=Oop [256]=Oop rax=Oop [432]=Oop off=14718}
                                                ;*caload
                                                ; - java.lang.StringBuffer::charAt@26 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)
                                                ;   {runtime_call}
  0x000002480747671e: movq   $0x0,(%rsp)
  0x0000024807476726: call   0x000002480742e800  ; OopMap{rdi=Oop [248]=Oop [256]=Oop rax=Oop [432]=Oop off=14731}
                                                ;*caload
                                                ; - java.lang.StringBuffer::charAt@26 (line 209)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)
                                                ;   {runtime_call}
  0x000002480747672b: lea    0x1a8(%rsp),%rax
  0x0000024807476733: mov    %rax,(%rsp)
  0x0000024807476737: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480747673c: jmp    0x0000024807475159
  0x0000024807476741: mov    %rax,0x8(%rsp)
  0x0000024807476746: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747674e: call   0x0000024807433da0  ; OopMap{rdi=Oop [248]=Oop off=14771}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 80)
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 164)
                                                ;   {runtime_call}
  0x0000024807476753: jmp    0x00000248074751a5
  0x0000024807476758: mov    %rdi,0x8(%rsp)
  0x000002480747675d: mov    %r8,(%rsp)
  0x0000024807476761: call   0x0000024807431ea0  ; OopMap{rdi=Oop [248]=Oop [432]=Oop off=14790}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x0000024807476766: jmp    0x00000248074753d5
  0x000002480747676b: mov    %r8,0x8(%rsp)
  0x0000024807476770: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476778: call   0x0000024807433da0  ; OopMap{rdi=Oop [248]=Oop [432]=Oop off=14813}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x000002480747677d: jmp    0x0000024807475409
  0x0000024807476782: mov    %r8,0x8(%rsp)
  0x0000024807476787: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747678f: call   0x0000024807433da0  ; OopMap{rdi=Oop [248]=Oop [432]=Oop off=14836}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x0000024807476794: jmp    0x000002480747546f
  0x0000024807476799: mov    %rdx,0x8(%rsp)
  0x000002480747679e: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074767a6: call   0x0000024807433da0  ; OopMap{rdi=Oop [248]=Oop [432]=Oop off=14859}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x00000248074767ab: jmp    0x00000248074754bd
  0x00000248074767b0: call   0x000002480742f100  ; OopMap{rdi=Oop [248]=Oop rsi=Oop [432]=Oop off=14869}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x00000248074767b5: mov    %rbx,0x8(%rsp)
  0x00000248074767ba: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074767c2: call   0x0000024807433da0  ; OopMap{[248]=Oop [352]=Oop [432]=Oop off=14887}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x00000248074767c7: jmp    0x0000024807475583
  0x00000248074767cc: call   0x0000024807430280  ; OopMap{[248]=Oop [352]=Oop [432]=Oop off=14897}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x00000248074767d1: jmp    0x00000248074755fd
  0x00000248074767d6: mov    %rdx,0x8(%rsp)
  0x00000248074767db: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074767e3: call   0x0000024807433da0  ; OopMap{[248]=Oop [352]=Oop rax=Oop [432]=Oop off=14920}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x00000248074767e8: jmp    0x0000024807475646
  0x00000248074767ed: nop
  0x00000248074767ee: nop
  0x00000248074767ef: call   0x0000024807376360  ; OopMap{[248]=Oop [360]=Oop [432]=Oop off=14932}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {static_call}
  0x00000248074767f4: jmp    0x000002480747573b
  0x00000248074767f9: call   0x000002480742f100  ; OopMap{rsi=Oop [248]=Oop rax=Oop [432]=Oop off=14942}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x00000248074767fe: call   0x000002480742f100  ; OopMap{rsi=Oop [248]=Oop rax=Oop [432]=Oop off=14947}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x0000024807476803: mov    %r8,(%rsp)
  0x0000024807476807: call   0x000002480742e800  ; OopMap{rsi=Oop [248]=Oop rax=Oop [432]=Oop off=14956}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 172)
                                                ;   {runtime_call}
  0x000002480747680c: lea    0x1a8(%rsp),%rax
  0x0000024807476814: mov    %rax,(%rsp)
  0x0000024807476818: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480747681d: jmp    0x00000248074757ce
  0x0000024807476822: mov    %rsi,0x8(%rsp)
  0x0000024807476827: mov    %r8,(%rsp)
  0x000002480747682b: call   0x0000024807431ea0  ; OopMap{rsi=Oop [248]=Oop [432]=Oop off=14992}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x0000024807476830: jmp    0x0000024807475937
  0x0000024807476835: mov    %r8,0x8(%rsp)
  0x000002480747683a: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476842: call   0x0000024807433da0  ; OopMap{rsi=Oop [248]=Oop [432]=Oop off=15015}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 386)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x0000024807476847: jmp    0x000002480747596b
  0x000002480747684c: mov    %r8,0x8(%rsp)
  0x0000024807476851: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476859: call   0x0000024807433da0  ; OopMap{rsi=Oop [248]=Oop [432]=Oop off=15038}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x000002480747685e: jmp    0x00000248074759d1
  0x0000024807476863: mov    %rdx,0x8(%rsp)
  0x0000024807476868: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807476870: call   0x0000024807433da0  ; OopMap{rsi=Oop [248]=Oop [432]=Oop off=15061}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x0000024807476875: jmp    0x0000024807475a1f
  0x000002480747687a: call   0x000002480742f100  ; OopMap{rsi=Oop [248]=Oop rdi=Oop [432]=Oop off=15071}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x000002480747687f: mov    %rbx,0x8(%rsp)
  0x0000024807476884: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747688c: call   0x0000024807433da0  ; OopMap{[368]=Oop [248]=Oop [432]=Oop off=15089}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x0000024807476891: jmp    0x0000024807475adb
  0x0000024807476896: call   0x0000024807430280  ; OopMap{[368]=Oop [248]=Oop [432]=Oop off=15099}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x000002480747689b: jmp    0x0000024807475b55
  0x00000248074768a0: mov    %rdx,0x8(%rsp)
  0x00000248074768a5: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074768ad: call   0x0000024807433da0  ; OopMap{[368]=Oop [248]=Oop rax=Oop [432]=Oop off=15122}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x00000248074768b2: jmp    0x0000024807475b9e
  0x00000248074768b7: call   0x0000024807376360  ; OopMap{[248]=Oop [376]=Oop [432]=Oop off=15132}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {static_call}
  0x00000248074768bc: jmp    0x0000024807475c93
  0x00000248074768c1: call   0x000002480742f100  ; OopMap{rsi=Oop [248]=Oop rax=Oop [432]=Oop off=15142}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x00000248074768c6: call   0x000002480742f100  ; OopMap{rsi=Oop [248]=Oop rax=Oop [432]=Oop off=15147}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x00000248074768cb: mov    %rdx,(%rsp)
  0x00000248074768cf: call   0x000002480742e800  ; OopMap{rsi=Oop [248]=Oop rax=Oop [432]=Oop off=15156}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 387)
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 156)
                                                ;   {runtime_call}
  0x00000248074768d4: lea    0x1a8(%rsp),%rax
  0x00000248074768dc: mov    %rax,(%rsp)
  0x00000248074768e0: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074768e5: jmp    0x0000024807475d23
  0x00000248074768ea: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000248074768f4: mov    $0xa050f00,%eax
  0x00000248074768f9: call   0x0000024807432b60  ; OopMap{[248]=Oop [256]=Oop [432]=Oop off=15198}
                                                ;*new  ; - java.lang.StringBuffer::charAt@12 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)
                                                ;   {runtime_call}
  0x00000248074768fe: jmp    0x0000024807475e28
  0x0000024807476903: mov    %rdx,%rdx
  0x0000024807476906: call   0x000002480742f5e0  ; OopMap{[256]=Oop [248]=Oop [432]=Oop off=15211}
                                                ;*new  ; - java.lang.StringBuffer::charAt@12 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 164)
                                                ;   {runtime_call}
  0x000002480747690b: jmp    0x0000024807475e37
  0x0000024807476910: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480747691a: mov    $0xa050f00,%eax
  0x000002480747691f: call   0x0000024807432b60  ; OopMap{[248]=Oop [256]=Oop [432]=Oop off=15236}
                                                ;*new  ; - java.lang.StringBuffer::charAt@12 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)
                                                ;   {runtime_call}
  0x0000024807476924: jmp    0x0000024807475e88
  0x0000024807476929: mov    %rdx,%rdx
  0x000002480747692c: call   0x000002480742f5e0  ; OopMap{[248]=Oop [256]=Oop [432]=Oop off=15249}
                                                ;*new  ; - java.lang.StringBuffer::charAt@12 (line 208)
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 154)
                                                ;   {runtime_call}
  0x0000024807476931: jmp    0x0000024807475e97
  0x0000024807476936: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807476940: mov    $0xa050f00,%eax
  0x0000024807476945: call   0x0000024807432b60  ; OopMap{[240]=Oop [256]=Oop [248]=Oop off=15274}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ;   {runtime_call}
  0x000002480747694a: jmp    0x0000024807475ee0
  0x000002480747694f: mov    %rdx,%rdx
  0x0000024807476952: call   0x000002480742f5e0  ; OopMap{[240]=Oop [256]=Oop [248]=Oop off=15287}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 148)
                                                ;   {runtime_call}
  0x0000024807476957: jmp    0x0000024807475eef
  0x000002480747695c: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807476966: mov    $0xa050f00,%eax
  0x000002480747696b: call   0x0000024807432b60  ; OopMap{[248]=Oop [240]=Oop [256]=Oop off=15312}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)
                                                ;   {runtime_call}
  0x0000024807476970: jmp    0x0000024807475f30
  0x0000024807476975: mov    %rdx,%rdx
  0x0000024807476978: call   0x000002480742f5e0  ; OopMap{[240]=Oop [256]=Oop [248]=Oop off=15325}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 150)
                                                ;   {runtime_call}
  0x000002480747697d: jmp    0x0000024807475f3f
  0x0000024807476982: lea    0x1a8(%rsp),%rax
  0x000002480747698a: mov    %rax,(%rsp)
  0x000002480747698e: call   0x00000248074322e0  ;   {runtime_call}
  0x0000024807476993: jmp    0x0000024807475fd3
  0x0000024807476998: lea    0x1a8(%rsp),%rax
  0x00000248074769a0: mov    %rax,(%rsp)
  0x00000248074769a4: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074769a9: jmp    0x000002480747602d
  0x00000248074769ae: lea    0x1a8(%rsp),%rax
  0x00000248074769b6: mov    %rax,(%rsp)
  0x00000248074769ba: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074769bf: jmp    0x0000024807476087
  0x00000248074769c4: lea    0x1a8(%rsp),%rax
  0x00000248074769cc: mov    %rax,(%rsp)
  0x00000248074769d0: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074769d5: jmp    0x00000248074760e1
  0x00000248074769da: lea    0x1a8(%rsp),%rax
  0x00000248074769e2: mov    %rax,(%rsp)
  0x00000248074769e6: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074769eb: jmp    0x000002480747613b
  0x00000248074769f0: lea    0x1a8(%rsp),%rax
  0x00000248074769f8: mov    %rax,(%rsp)
  0x00000248074769fc: call   0x00000248074322e0  ;   {runtime_call}
  0x0000024807476a01: jmp    0x0000024807476195
  0x0000024807476a06: lea    0x1a8(%rsp),%rax
  0x0000024807476a0e: mov    %rax,(%rsp)
  0x0000024807476a12: call   0x00000248074322e0  ;   {runtime_call}
  0x0000024807476a17: jmp    0x00000248074761ef
  0x0000024807476a1c: lea    0x1a8(%rsp),%rax
  0x0000024807476a24: mov    %rax,(%rsp)
  0x0000024807476a28: call   0x00000248074322e0  ;   {runtime_call}
  0x0000024807476a2d: jmp    0x0000024807476249
  0x0000024807476a32: lea    0x1a8(%rsp),%rax
  0x0000024807476a3a: mov    %rax,(%rsp)
  0x0000024807476a3e: call   0x00000248074322e0  ;   {runtime_call}
  0x0000024807476a43: jmp    0x00000248074762a3
  0x0000024807476a48: nop
  0x0000024807476a49: nop
  0x0000024807476a4a: mov    0x308(%r15),%rax
  0x0000024807476a51: movabs $0x0,%r10
  0x0000024807476a5b: mov    %r10,0x308(%r15)
  0x0000024807476a62: movabs $0x0,%r10
  0x0000024807476a6c: mov    %r10,0x310(%r15)
  0x0000024807476a73: add    $0x1c0,%rsp
  0x0000024807476a7a: pop    %rbp
  0x0000024807476a7b: jmp    0x000002480742eee0  ;   {runtime_call}
[Stub Code]
  0x0000024807476a80: nop                       ;   {no_reloc}
  0x0000024807476a81: nop
  0x0000024807476a82: nop
  0x0000024807476a83: nop
  0x0000024807476a84: nop
  0x0000024807476a85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476a8f: jmp    0x0000024807476a8f  ;   {runtime_call}
  0x0000024807476a94: nop
  0x0000024807476a95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476a9f: jmp    0x0000024807476a9f  ;   {runtime_call}
  0x0000024807476aa4: nop
  0x0000024807476aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476aaf: jmp    0x0000024807476aaf  ;   {runtime_call}
  0x0000024807476ab4: nop
  0x0000024807476ab5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476abf: jmp    0x0000024807476abf  ;   {runtime_call}
  0x0000024807476ac4: nop
  0x0000024807476ac5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476acf: jmp    0x0000024807476acf  ;   {runtime_call}
  0x0000024807476ad4: nop
  0x0000024807476ad5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476adf: jmp    0x0000024807476adf  ;   {runtime_call}
  0x0000024807476ae4: nop
  0x0000024807476ae5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476aef: jmp    0x0000024807476aef  ;   {runtime_call}
  0x0000024807476af4: nop
  0x0000024807476af5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476aff: jmp    0x0000024807476aff  ;   {runtime_call}
  0x0000024807476b04: nop
  0x0000024807476b05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b0f: jmp    0x0000024807476b0f  ;   {runtime_call}
  0x0000024807476b14: nop
  0x0000024807476b15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b1f: jmp    0x0000024807476b1f  ;   {runtime_call}
  0x0000024807476b24: nop
  0x0000024807476b25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b2f: jmp    0x0000024807476b2f  ;   {runtime_call}
  0x0000024807476b34: nop
  0x0000024807476b35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b3f: jmp    0x0000024807476b3f  ;   {runtime_call}
  0x0000024807476b44: nop
  0x0000024807476b45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b4f: jmp    0x0000024807476b4f  ;   {runtime_call}
  0x0000024807476b54: nop
  0x0000024807476b55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b5f: jmp    0x0000024807476b5f  ;   {runtime_call}
  0x0000024807476b64: nop
  0x0000024807476b65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b6f: jmp    0x0000024807476b6f  ;   {runtime_call}
  0x0000024807476b74: nop
  0x0000024807476b75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b7f: jmp    0x0000024807476b7f  ;   {runtime_call}
  0x0000024807476b84: nop
  0x0000024807476b85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b8f: jmp    0x0000024807476b8f  ;   {runtime_call}
  0x0000024807476b94: nop
  0x0000024807476b95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807476b9f: jmp    0x0000024807476b9f  ;   {runtime_call}
[Exception Handler]
  0x0000024807476ba4: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807476ba9: mov    %rsp,-0x28(%rsp)
  0x0000024807476bae: sub    $0x80,%rsp
  0x0000024807476bb5: mov    %rax,0x78(%rsp)
  0x0000024807476bba: mov    %rcx,0x70(%rsp)
  0x0000024807476bbf: mov    %rdx,0x68(%rsp)
  0x0000024807476bc4: mov    %rbx,0x60(%rsp)
  0x0000024807476bc9: mov    %rbp,0x50(%rsp)
  0x0000024807476bce: mov    %rsi,0x48(%rsp)
  0x0000024807476bd3: mov    %rdi,0x40(%rsp)
  0x0000024807476bd8: mov    %r8,0x38(%rsp)
  0x0000024807476bdd: mov    %r9,0x30(%rsp)
  0x0000024807476be2: mov    %r10,0x28(%rsp)
  0x0000024807476be7: mov    %r11,0x20(%rsp)
  0x0000024807476bec: mov    %r12,0x18(%rsp)
  0x0000024807476bf1: mov    %r13,0x10(%rsp)
  0x0000024807476bf6: mov    %r14,0x8(%rsp)
  0x0000024807476bfb: mov    %r15,(%rsp)
  0x0000024807476bff: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807476c09: movabs $0x24807476ba9,%rdx  ;   {internal_word}
  0x0000024807476c13: mov    %rsp,%r8
  0x0000024807476c16: and    $0xfffffffffffffff0,%rsp
  0x0000024807476c1a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807476c24: call   *%r10
  0x0000024807476c27: hlt    
[Deopt Handler Code]
  0x0000024807476c28: movabs $0x24807476c28,%r10  ;   {section_word}
  0x0000024807476c32: push   %r10
  0x0000024807476c34: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807476c39: hlt    
  0x0000024807476c3a: hlt    
  0x0000024807476c3b: hlt    
  0x0000024807476c3c: hlt    
  0x0000024807476c3d: hlt    
  0x0000024807476c3e: hlt    
  0x0000024807476c3f: hlt    
<nmethod compile_id='141' compiler='C1' level='3' entry='0x0000024807472da0' size='28120' address='0x00000248074728d0' relocation_offset='288' insts_offset='1232' stub_offset='16816' scopes_data_offset='17384' scopes_pcs_offset='21440' dependencies_offset='26720' handler_table_offset='26728' nul_chk_table_offset='27928' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;II)Ljava/lang/String;' bytes='231' count='391' backedge_count='34006' iicount='391' stamp='1.919'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807471750:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481febe038} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000024807471880: mov    0x20(%rsp),%rbx
  0x0000024807471885: cmp    (%rdx),%rax
  0x0000024807471888: mov    0x18(%rbx),%rbx
  0x000002480747188c: test   %rbx,%rbx
  0x000002480747188f: je     0x0000024807471898
  0x0000024807471895: jmp    *0x40(%rbx)
  0x0000024807471898: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747189d: hlt    
  0x000002480747189e: hlt    
  0x000002480747189f: hlt    
<nmethod compile_id='149' compile_kind='c2n' level='0' entry='0x0000024807471880' size='336' address='0x0000024807471750' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.922'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074706d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000248074708a0: mov    0x8(%rdx),%r10d
  0x00000248074708a4: shl    $0x3,%r10
  0x00000248074708a8: cmp    %rax,%r10
  0x00000248074708ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074708b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074708bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074708c0: mov    %eax,-0x6000(%rsp)
  0x00000248074708c7: push   %rbp
  0x00000248074708c8: sub    $0x50,%rsp
  0x00000248074708cc: mov    %r8d,0x28(%rsp)
  0x00000248074708d1: mov    %r9,0x30(%rsp)
  0x00000248074708d6: movabs $0x2481fd15060,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074708e0: mov    0xdc(%rsi),%edi
  0x00000248074708e6: add    $0x8,%edi
  0x00000248074708e9: mov    %edi,0xdc(%rsi)
  0x00000248074708ef: movabs $0x2481fbeb390,%rsi  ;   {metadata({method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074708f9: and    $0x1ff8,%edi
  0x00000248074708ff: cmp    $0x0,%edi
  0x0000024807470902: je     0x00000248074710e7  ;*aload_0
                                                ; - java.util.HashMap::getNode@0 (line 570)

  0x0000024807470908: mov    0x24(%rdx),%edx
  0x000002480747090b: shl    $0x3,%rdx          ;*getfield table
                                                ; - java.util.HashMap::getNode@1 (line 570)

  0x000002480747090f: cmp    $0x0,%rdx
  0x0000024807470913: movabs $0x2481fd15060,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000002480747091d: movabs $0x108,%rdi
  0x0000024807470927: je     0x0000024807470937
  0x000002480747092d: movabs $0x118,%rdi
  0x0000024807470937: mov    (%rsi,%rdi,1),%rbx
  0x000002480747093b: lea    0x1(%rbx),%rbx
  0x000002480747093f: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807470943: je     0x0000024807470f30  ;*ifnull
                                                ; - java.util.HashMap::getNode@6 (line 570)

  0x0000024807470949: mov    0xc(%rdx),%esi     ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 570)
                                                ; implicit exception: dispatches to 0x00000248074710fe
  0x000002480747094c: cmp    $0x0,%esi
  0x000002480747094f: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470959: movabs $0x128,%rbx
  0x0000024807470963: jle    0x0000024807470973
  0x0000024807470969: movabs $0x138,%rbx
  0x0000024807470973: mov    (%rdi,%rbx,1),%rax
  0x0000024807470977: lea    0x1(%rax),%rax
  0x000002480747097b: mov    %rax,(%rdi,%rbx,1)
  0x000002480747097f: jle    0x0000024807470f30  ;*ifle
                                                ; - java.util.HashMap::getNode@14 (line 570)

  0x0000024807470985: dec    %esi
  0x0000024807470987: and    %r8,%rsi
  0x000002480747098a: movslq %esi,%rdi
  0x000002480747098d: cmp    0xc(%rdx),%esi
  0x0000024807470990: jae    0x0000024807471103
  0x0000024807470996: mov    0x10(%rdx,%rdi,4),%esi
  0x000002480747099a: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 570)

  0x000002480747099e: cmp    $0x0,%rsi
  0x00000248074709a2: movabs $0x2481fd15060,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074709ac: movabs $0x148,%rdi
  0x00000248074709b6: je     0x00000248074709c6
  0x00000248074709bc: movabs $0x158,%rdi
  0x00000248074709c6: mov    (%rdx,%rdi,1),%rbx
  0x00000248074709ca: lea    0x1(%rbx),%rbx
  0x00000248074709ce: mov    %rbx,(%rdx,%rdi,1)
  0x00000248074709d2: je     0x0000024807470f30  ;*ifnull
                                                ; - java.util.HashMap::getNode@28 (line 570)

  0x00000248074709d8: mov    0xc(%rsi),%edx     ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 572)
                                                ; implicit exception: dispatches to 0x000002480747110c
  0x00000248074709db: cmp    %r8d,%edx
  0x00000248074709de: movabs $0x2481fd15060,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074709e8: movabs $0x168,%rdi
  0x00000248074709f2: jne    0x0000024807470a02
  0x00000248074709f8: movabs $0x178,%rdi
  0x0000024807470a02: mov    (%rdx,%rdi,1),%rbx
  0x0000024807470a06: lea    0x1(%rbx),%rbx
  0x0000024807470a0a: mov    %rbx,(%rdx,%rdi,1)
  0x0000024807470a0e: jne    0x0000024807470b7a  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@37 (line 572)

  0x0000024807470a14: mov    0x10(%rsi),%edx
  0x0000024807470a17: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::getNode@42 (line 572)

  0x0000024807470a1b: cmp    %r9,%rdx
  0x0000024807470a1e: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470a28: movabs $0x188,%rbx
  0x0000024807470a32: je     0x0000024807470a42
  0x0000024807470a38: movabs $0x198,%rbx
  0x0000024807470a42: mov    (%rdi,%rbx,1),%rax
  0x0000024807470a46: lea    0x1(%rax),%rax
  0x0000024807470a4a: mov    %rax,(%rdi,%rbx,1)
  0x0000024807470a4e: je     0x00000248074710d8  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@49 (line 572)

  0x0000024807470a54: cmp    $0x0,%r9
  0x0000024807470a58: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470a62: movabs $0x1a8,%rbx
  0x0000024807470a6c: je     0x0000024807470a7c
  0x0000024807470a72: movabs $0x1b8,%rbx
  0x0000024807470a7c: mov    (%rdi,%rbx,1),%rax
  0x0000024807470a80: lea    0x1(%rax),%rax
  0x0000024807470a84: mov    %rax,(%rdi,%rbx,1)
  0x0000024807470a88: je     0x0000024807470b7a  ;*ifnull
                                                ; - java.util.HashMap::getNode@53 (line 572)

  0x0000024807470a8e: mov    %rsi,0x20(%rsp)
  0x0000024807470a93: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000024807471111
  0x0000024807470a96: mov    %r9,%rdi
  0x0000024807470a99: movabs $0x2481fd15060,%rbx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470aa3: mov    0x8(%rdi),%edi
  0x0000024807470aa6: shl    $0x3,%rdi
  0x0000024807470aaa: cmp    0x1d0(%rbx),%rdi
  0x0000024807470ab1: jne    0x0000024807470ac0
  0x0000024807470ab3: addq   $0x1,0x1d8(%rbx)
  0x0000024807470abb: jmp    0x0000024807470b26
  0x0000024807470ac0: cmp    0x1e0(%rbx),%rdi
  0x0000024807470ac7: jne    0x0000024807470ad6
  0x0000024807470ac9: addq   $0x1,0x1e8(%rbx)
  0x0000024807470ad1: jmp    0x0000024807470b26
  0x0000024807470ad6: cmpq   $0x0,0x1d0(%rbx)
  0x0000024807470ae1: jne    0x0000024807470afa
  0x0000024807470ae3: mov    %rdi,0x1d0(%rbx)
  0x0000024807470aea: movq   $0x1,0x1d8(%rbx)
  0x0000024807470af5: jmp    0x0000024807470b26
  0x0000024807470afa: cmpq   $0x0,0x1e0(%rbx)
  0x0000024807470b05: jne    0x0000024807470b1e
  0x0000024807470b07: mov    %rdi,0x1e0(%rbx)
  0x0000024807470b0e: movq   $0x1,0x1e8(%rbx)
  0x0000024807470b19: jmp    0x0000024807470b26
  0x0000024807470b1e: addq   $0x1,0x1c8(%rbx)
  0x0000024807470b26: mov    %rdx,%r8
  0x0000024807470b29: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 573)

  0x0000024807470b2c: nop
  0x0000024807470b2d: movabs $0xffffffffffffffff,%rax
  0x0000024807470b37: call   0x0000024807376120  ; OopMap{[32]=Oop [48]=Oop off=668}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 573)
                                                ;   {virtual_call}
  0x0000024807470b3c: cmp    $0x0,%eax
  0x0000024807470b3f: movabs $0x2481fd15060,%r8  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470b49: movabs $0x1f8,%rdx
  0x0000024807470b53: je     0x0000024807470b63
  0x0000024807470b59: movabs $0x208,%rdx
  0x0000024807470b63: mov    (%r8,%rdx,1),%rsi
  0x0000024807470b67: lea    0x1(%rsi),%rsi
  0x0000024807470b6b: mov    %rsi,(%r8,%rdx,1)
  0x0000024807470b6f: mov    0x20(%rsp),%rsi
  0x0000024807470b74: jne    0x00000248074710d8  ;*ifeq
                                                ; - java.util.HashMap::getNode@62 (line 573)

  0x0000024807470b7a: mov    0x18(%rsi),%r8d
  0x0000024807470b7e: shl    $0x3,%r8           ;*getfield next
                                                ; - java.util.HashMap::getNode@70 (line 575)

  0x0000024807470b82: cmp    $0x0,%r8
  0x0000024807470b86: movabs $0x2481fd15060,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470b90: movabs $0x218,%rdi
  0x0000024807470b9a: je     0x0000024807470baa
  0x0000024807470ba0: movabs $0x228,%rdi
  0x0000024807470baa: mov    (%rdx,%rdi,1),%rbx
  0x0000024807470bae: lea    0x1(%rbx),%rbx
  0x0000024807470bb2: mov    %rbx,(%rdx,%rdi,1)
  0x0000024807470bb6: je     0x0000024807470f30  ;*ifnull
                                                ; - java.util.HashMap::getNode@76 (line 575)

  0x0000024807470bbc: cmp    $0x0,%rsi
  0x0000024807470bc0: jne    0x0000024807470bdb
  0x0000024807470bc2: movabs $0x2481fd15060,%rbx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470bcc: orl    $0x100,0x230(%rbx)
  0x0000024807470bd6: jmp    0x0000024807470c9b
  0x0000024807470bdb: movabs $0x7c0038bc0,%rax  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000024807470be5: mov    0x8(%rsi),%edi
  0x0000024807470be8: shl    $0x3,%rdi
  0x0000024807470bec: cmp    %rdi,%rax
  0x0000024807470bef: jne    0x0000024807470c7f
  0x0000024807470bf5: movabs $0x2481fd15060,%rbx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470bff: mov    0x8(%rsi),%eax
  0x0000024807470c02: shl    $0x3,%rax
  0x0000024807470c06: cmp    0x240(%rbx),%rax
  0x0000024807470c0d: jne    0x0000024807470c1c
  0x0000024807470c0f: addq   $0x1,0x248(%rbx)
  0x0000024807470c17: jmp    0x0000024807470ca0
  0x0000024807470c1c: cmp    0x250(%rbx),%rax
  0x0000024807470c23: jne    0x0000024807470c32
  0x0000024807470c25: addq   $0x1,0x258(%rbx)
  0x0000024807470c2d: jmp    0x0000024807470ca0
  0x0000024807470c32: cmpq   $0x0,0x240(%rbx)
  0x0000024807470c3d: jne    0x0000024807470c56
  0x0000024807470c3f: mov    %rax,0x240(%rbx)
  0x0000024807470c46: movq   $0x1,0x248(%rbx)
  0x0000024807470c51: jmp    0x0000024807470ca0
  0x0000024807470c56: cmpq   $0x0,0x250(%rbx)
  0x0000024807470c61: jne    0x0000024807470c7a
  0x0000024807470c63: mov    %rax,0x250(%rbx)
  0x0000024807470c6a: movq   $0x1,0x258(%rbx)
  0x0000024807470c75: jmp    0x0000024807470ca0
  0x0000024807470c7a: jmp    0x0000024807470ca0
  0x0000024807470c7f: movabs $0x2481fd15060,%rbx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470c89: subq   $0x1,0x238(%rbx)
  0x0000024807470c91: jmp    0x0000024807470c9b
  0x0000024807470c96: jmp    0x0000024807470ca0
  0x0000024807470c9b: xor    %rdx,%rdx
  0x0000024807470c9e: jmp    0x0000024807470caa
  0x0000024807470ca0: movabs $0x1,%rdx          ;*instanceof
                                                ; - java.util.HashMap::getNode@81 (line 576)

  0x0000024807470caa: cmp    $0x0,%edx
  0x0000024807470cad: movabs $0x2481fd15060,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470cb7: movabs $0x268,%rdi
  0x0000024807470cc1: je     0x0000024807470cd1
  0x0000024807470cc7: movabs $0x278,%rdi
  0x0000024807470cd1: mov    (%rdx,%rdi,1),%rbx
  0x0000024807470cd5: lea    0x1(%rbx),%rbx
  0x0000024807470cd9: mov    %rbx,(%rdx,%rdi,1)
  0x0000024807470cdd: jne    0x0000024807470f46  ;*ifeq
                                                ; - java.util.HashMap::getNode@84 (line 576)

  0x0000024807470ce3: nopl   0x0(%rax,%rax,1)
  0x0000024807470ce8: mov    0x30(%rsp),%r9
  0x0000024807470ced: mov    0x28(%rsp),%esi
  0x0000024807470cf1: mov    0xc(%r8),%edx      ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 579)
                                                ; implicit exception: dispatches to 0x0000024807471116
  0x0000024807470cf5: cmp    %esi,%edx
  0x0000024807470cf7: movabs $0x2481fd15060,%rdx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470d01: movabs $0x2e8,%rdi
  0x0000024807470d0b: jne    0x0000024807470d1b
  0x0000024807470d11: movabs $0x2f8,%rdi
  0x0000024807470d1b: mov    (%rdx,%rdi,1),%rbx
  0x0000024807470d1f: lea    0x1(%rbx),%rbx
  0x0000024807470d23: mov    %rbx,(%rdx,%rdi,1)
  0x0000024807470d27: jne    0x0000024807470e9a  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@104 (line 579)

  0x0000024807470d2d: mov    0x10(%r8),%edx
  0x0000024807470d31: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::getNode@109 (line 579)

  0x0000024807470d35: cmp    %r9,%rdx
  0x0000024807470d38: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470d42: movabs $0x308,%rbx
  0x0000024807470d4c: je     0x0000024807470d5c
  0x0000024807470d52: movabs $0x318,%rbx
  0x0000024807470d5c: mov    (%rdi,%rbx,1),%rax
  0x0000024807470d60: lea    0x1(%rax),%rax
  0x0000024807470d64: mov    %rax,(%rdi,%rbx,1)
  0x0000024807470d68: je     0x0000024807470f21  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@116 (line 579)

  0x0000024807470d6e: cmp    $0x0,%r9
  0x0000024807470d72: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470d7c: movabs $0x328,%rbx
  0x0000024807470d86: je     0x0000024807470d96
  0x0000024807470d8c: movabs $0x338,%rbx
  0x0000024807470d96: mov    (%rdi,%rbx,1),%rax
  0x0000024807470d9a: lea    0x1(%rax),%rax
  0x0000024807470d9e: mov    %rax,(%rdi,%rbx,1)
  0x0000024807470da2: je     0x0000024807470e9a  ;*ifnull
                                                ; - java.util.HashMap::getNode@120 (line 579)

  0x0000024807470da8: mov    %r8,0x38(%rsp)
  0x0000024807470dad: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000002480747111b
  0x0000024807470db0: mov    %r9,%rdi
  0x0000024807470db3: movabs $0x2481fd15060,%rbx  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470dbd: mov    0x8(%rdi),%edi
  0x0000024807470dc0: shl    $0x3,%rdi
  0x0000024807470dc4: cmp    0x350(%rbx),%rdi
  0x0000024807470dcb: jne    0x0000024807470dda
  0x0000024807470dcd: addq   $0x1,0x358(%rbx)
  0x0000024807470dd5: jmp    0x0000024807470e40
  0x0000024807470dda: cmp    0x360(%rbx),%rdi
  0x0000024807470de1: jne    0x0000024807470df0
  0x0000024807470de3: addq   $0x1,0x368(%rbx)
  0x0000024807470deb: jmp    0x0000024807470e40
  0x0000024807470df0: cmpq   $0x0,0x350(%rbx)
  0x0000024807470dfb: jne    0x0000024807470e14
  0x0000024807470dfd: mov    %rdi,0x350(%rbx)
  0x0000024807470e04: movq   $0x1,0x358(%rbx)
  0x0000024807470e0f: jmp    0x0000024807470e40
  0x0000024807470e14: cmpq   $0x0,0x360(%rbx)
  0x0000024807470e1f: jne    0x0000024807470e38
  0x0000024807470e21: mov    %rdi,0x360(%rbx)
  0x0000024807470e28: movq   $0x1,0x368(%rbx)
  0x0000024807470e33: jmp    0x0000024807470e40
  0x0000024807470e38: addq   $0x1,0x348(%rbx)
  0x0000024807470e40: mov    %rdx,%r8
  0x0000024807470e43: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 580)

  0x0000024807470e46: nop
  0x0000024807470e47: nop
  0x0000024807470e48: nop
  0x0000024807470e49: nop
  0x0000024807470e4a: nop
  0x0000024807470e4b: nop
  0x0000024807470e4c: nop
  0x0000024807470e4d: movabs $0xffffffffffffffff,%rax
  0x0000024807470e57: call   0x0000024807376120  ; OopMap{[48]=Oop [56]=Oop off=1468}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 580)
                                                ;   {virtual_call}
  0x0000024807470e5c: cmp    $0x0,%eax
  0x0000024807470e5f: movabs $0x2481fd15060,%rax  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470e69: movabs $0x378,%r8
  0x0000024807470e73: je     0x0000024807470e83
  0x0000024807470e79: movabs $0x388,%r8
  0x0000024807470e83: mov    (%rax,%r8,1),%r9
  0x0000024807470e87: lea    0x1(%r9),%r9
  0x0000024807470e8b: mov    %r9,(%rax,%r8,1)
  0x0000024807470e8f: mov    0x38(%rsp),%r8
  0x0000024807470e94: jne    0x0000024807470f21  ;*ifeq
                                                ; - java.util.HashMap::getNode@129 (line 580)

  0x0000024807470e9a: mov    0x18(%r8),%eax
  0x0000024807470e9e: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::getNode@137 (line 582)

  0x0000024807470ea2: movabs $0x2481fd15060,%r8  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470eac: mov    0xe0(%r8),%r9d
  0x0000024807470eb3: add    $0x8,%r9d
  0x0000024807470eb7: mov    %r9d,0xe0(%r8)
  0x0000024807470ebe: movabs $0x2481fbeb390,%r8  ;   {metadata({method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470ec8: and    $0xfff8,%r9d
  0x0000024807470ecf: cmp    $0x0,%r9d
  0x0000024807470ed3: je     0x0000024807471120  ; OopMap{[48]=Oop rax=Oop off=1593}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 582)

  0x0000024807470ed9: test   %eax,-0x1ec0ddf(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807470edf: cmp    $0x0,%rax
  0x0000024807470ee3: movabs $0x2481fd15060,%r8  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470eed: movabs $0x398,%r9
  0x0000024807470ef7: jne    0x0000024807470f07
  0x0000024807470efd: movabs $0x3a8,%r9
  0x0000024807470f07: mov    (%r8,%r9,1),%rdx
  0x0000024807470f0b: lea    0x1(%rdx),%rdx
  0x0000024807470f0f: mov    %rdx,(%r8,%r9,1)
  0x0000024807470f13: je     0x0000024807470f30  ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 582)

  0x0000024807470f19: mov    %rax,%r8
  0x0000024807470f1c: jmp    0x0000024807470ce8  ;*aload
                                                ; - java.util.HashMap::getNode@98 (line 579)

  0x0000024807470f21: mov    %r8,%rax
  0x0000024807470f24: add    $0x50,%rsp
  0x0000024807470f28: pop    %rbp
  0x0000024807470f29: test   %eax,-0x1ec0e2f(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807470f2f: ret                       ;*areturn
                                                ; - java.util.HashMap::getNode@134 (line 581)

  0x0000024807470f30: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000024807470f3a: add    $0x50,%rsp
  0x0000024807470f3e: pop    %rbp
  0x0000024807470f3f: test   %eax,-0x1ec0e45(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807470f45: ret                       ;*areturn
                                                ; - java.util.HashMap::getNode@147 (line 585)

  0x0000024807470f46: mov    0x30(%rsp),%r9
  0x0000024807470f4b: mov    0x28(%rsp),%r8d
  0x0000024807470f50: cmp    $0x0,%rsi
  0x0000024807470f54: jne    0x0000024807470f6f
  0x0000024807470f56: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470f60: orl    $0x100,0x280(%rdi)
  0x0000024807470f6a: jmp    0x000002480747102f
  0x0000024807470f6f: movabs $0x7c0038bc0,%rbx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000024807470f79: mov    0x8(%rsi),%edx
  0x0000024807470f7c: shl    $0x3,%rdx
  0x0000024807470f80: cmp    %rdx,%rbx
  0x0000024807470f83: jne    0x0000024807471013
  0x0000024807470f89: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807470f93: mov    0x8(%rsi),%ebx
  0x0000024807470f96: shl    $0x3,%rbx
  0x0000024807470f9a: cmp    0x290(%rdi),%rbx
  0x0000024807470fa1: jne    0x0000024807470fb0
  0x0000024807470fa3: addq   $0x1,0x298(%rdi)
  0x0000024807470fab: jmp    0x000002480747102f
  0x0000024807470fb0: cmp    0x2a0(%rdi),%rbx
  0x0000024807470fb7: jne    0x0000024807470fc6
  0x0000024807470fb9: addq   $0x1,0x2a8(%rdi)
  0x0000024807470fc1: jmp    0x000002480747102f
  0x0000024807470fc6: cmpq   $0x0,0x290(%rdi)
  0x0000024807470fd1: jne    0x0000024807470fea
  0x0000024807470fd3: mov    %rbx,0x290(%rdi)
  0x0000024807470fda: movq   $0x1,0x298(%rdi)
  0x0000024807470fe5: jmp    0x000002480747102f
  0x0000024807470fea: cmpq   $0x0,0x2a0(%rdi)
  0x0000024807470ff5: jne    0x000002480747100e
  0x0000024807470ff7: mov    %rbx,0x2a0(%rdi)
  0x0000024807470ffe: movq   $0x1,0x2a8(%rdi)
  0x0000024807471009: jmp    0x000002480747102f
  0x000002480747100e: jmp    0x000002480747102f
  0x0000024807471013: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000002480747101d: subq   $0x1,0x288(%rdi)
  0x0000024807471025: jmp    0x0000024807471137
  0x000002480747102a: jmp    0x000002480747102f
  0x000002480747102f: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 577)

  0x0000024807471032: cmp    (%rdx),%rax        ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 577)
                                                ; implicit exception: dispatches to 0x0000024807471140
  0x0000024807471035: mov    %rdx,%rsi
  0x0000024807471038: movabs $0x2481fd15060,%rdi  ;   {metadata(method data for {method} {0x000002481fbeb398} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807471042: mov    0x8(%rsi),%esi
  0x0000024807471045: shl    $0x3,%rsi
  0x0000024807471049: cmp    0x2c0(%rdi),%rsi
  0x0000024807471050: jne    0x000002480747105f
  0x0000024807471052: addq   $0x1,0x2c8(%rdi)
  0x000002480747105a: jmp    0x00000248074710c5
  0x000002480747105f: cmp    0x2d0(%rdi),%rsi
  0x0000024807471066: jne    0x0000024807471075
  0x0000024807471068: addq   $0x1,0x2d8(%rdi)
  0x0000024807471070: jmp    0x00000248074710c5
  0x0000024807471075: cmpq   $0x0,0x2c0(%rdi)
  0x0000024807471080: jne    0x0000024807471099
  0x0000024807471082: mov    %rsi,0x2c0(%rdi)
  0x0000024807471089: movq   $0x1,0x2c8(%rdi)
  0x0000024807471094: jmp    0x00000248074710c5
  0x0000024807471099: cmpq   $0x0,0x2d0(%rdi)
  0x00000248074710a4: jne    0x00000248074710bd
  0x00000248074710a6: mov    %rsi,0x2d0(%rdi)
  0x00000248074710ad: movq   $0x1,0x2d8(%rdi)
  0x00000248074710b8: jmp    0x00000248074710c5
  0x00000248074710bd: addq   $0x1,0x2b8(%rdi)
  0x00000248074710c5: nop
  0x00000248074710c6: nop
  0x00000248074710c7: call   0x0000024807375ee0  ; OopMap{off=2092}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 577)
                                                ;   {optimized virtual_call}
  0x00000248074710cc: add    $0x50,%rsp
  0x00000248074710d0: pop    %rbp
  0x00000248074710d1: test   %eax,-0x1ec0fd7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074710d7: ret                       ;*areturn
                                                ; - java.util.HashMap::getNode@97 (line 577)

  0x00000248074710d8: mov    %rsi,%rax
  0x00000248074710db: add    $0x50,%rsp
  0x00000248074710df: pop    %rbp
  0x00000248074710e0: test   %eax,-0x1ec0fe6(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074710e6: ret    
  0x00000248074710e7: mov    %rsi,0x8(%rsp)
  0x00000248074710ec: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074710f4: call   0x0000024807433da0  ; OopMap{rdx=Oop r9=Oop [48]=Oop off=2137}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 570)
                                                ;   {runtime_call}
  0x00000248074710f9: jmp    0x0000024807470908
  0x00000248074710fe: call   0x000002480742f100  ; OopMap{rdx=Oop r9=Oop [48]=Oop off=2147}
                                                ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 570)
                                                ;   {runtime_call}
  0x0000024807471103: mov    %rsi,(%rsp)
  0x0000024807471107: call   0x000002480742e800  ; OopMap{r9=Oop [48]=Oop rdx=Oop off=2156}
                                                ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 570)
                                                ;   {runtime_call}
  0x000002480747110c: call   0x000002480742f100  ; OopMap{rsi=Oop r9=Oop [48]=Oop off=2161}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 572)
                                                ;   {runtime_call}
  0x0000024807471111: call   0x000002480742f100  ; OopMap{r9=Oop [48]=Oop [32]=Oop rdx=Oop off=2166}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 573)
                                                ;   {runtime_call}
  0x0000024807471116: call   0x000002480742f100  ; OopMap{r8=Oop r9=Oop [48]=Oop off=2171}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 579)
                                                ;   {runtime_call}
  0x000002480747111b: call   0x000002480742f100  ; OopMap{r9=Oop [48]=Oop [56]=Oop rdx=Oop off=2176}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 580)
                                                ;   {runtime_call}
  0x0000024807471120: mov    %r8,0x8(%rsp)
  0x0000024807471125: movq   $0x8f,(%rsp)
  0x000002480747112d: call   0x0000024807433da0  ; OopMap{[48]=Oop rax=Oop off=2194}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 582)
                                                ;   {runtime_call}
  0x0000024807471132: jmp    0x0000024807470ed9
  0x0000024807471137: mov    %rsi,(%rsp)
  0x000002480747113b: call   0x00000248074316c0  ; OopMap{r9=Oop [48]=Oop off=2208}
                                                ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 577)
                                                ;   {runtime_call}
  0x0000024807471140: call   0x000002480742f100  ; OopMap{r9=Oop [48]=Oop rdx=Oop off=2213}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 577)
                                                ;   {runtime_call}
  0x0000024807471145: nop
  0x0000024807471146: nop
  0x0000024807471147: mov    0x308(%r15),%rax
  0x000002480747114e: movabs $0x0,%r10
  0x0000024807471158: mov    %r10,0x308(%r15)
  0x000002480747115f: movabs $0x0,%r10
  0x0000024807471169: mov    %r10,0x310(%r15)
  0x0000024807471170: add    $0x50,%rsp
  0x0000024807471174: pop    %rbp
  0x0000024807471175: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747117a: hlt    
  0x000002480747117b: hlt    
  0x000002480747117c: hlt    
  0x000002480747117d: hlt    
  0x000002480747117e: hlt    
  0x000002480747117f: hlt    
[Stub Code]
  0x0000024807471180: nop                       ;   {no_reloc}
  0x0000024807471181: nop
  0x0000024807471182: nop
  0x0000024807471183: nop
  0x0000024807471184: nop
  0x0000024807471185: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747118f: jmp    0x000002480747118f  ;   {runtime_call}
  0x0000024807471194: nop
  0x0000024807471195: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747119f: jmp    0x000002480747119f  ;   {runtime_call}
  0x00000248074711a4: nop
  0x00000248074711a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074711af: jmp    0x00000248074711af  ;   {runtime_call}
[Exception Handler]
  0x00000248074711b4: call   0x0000024807431320  ;   {runtime_call}
  0x00000248074711b9: mov    %rsp,-0x28(%rsp)
  0x00000248074711be: sub    $0x80,%rsp
  0x00000248074711c5: mov    %rax,0x78(%rsp)
  0x00000248074711ca: mov    %rcx,0x70(%rsp)
  0x00000248074711cf: mov    %rdx,0x68(%rsp)
  0x00000248074711d4: mov    %rbx,0x60(%rsp)
  0x00000248074711d9: mov    %rbp,0x50(%rsp)
  0x00000248074711de: mov    %rsi,0x48(%rsp)
  0x00000248074711e3: mov    %rdi,0x40(%rsp)
  0x00000248074711e8: mov    %r8,0x38(%rsp)
  0x00000248074711ed: mov    %r9,0x30(%rsp)
  0x00000248074711f2: mov    %r10,0x28(%rsp)
  0x00000248074711f7: mov    %r11,0x20(%rsp)
  0x00000248074711fc: mov    %r12,0x18(%rsp)
  0x0000024807471201: mov    %r13,0x10(%rsp)
  0x0000024807471206: mov    %r14,0x8(%rsp)
  0x000002480747120b: mov    %r15,(%rsp)
  0x000002480747120f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807471219: movabs $0x248074711b9,%rdx  ;   {internal_word}
  0x0000024807471223: mov    %rsp,%r8
  0x0000024807471226: and    $0xfffffffffffffff0,%rsp
  0x000002480747122a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807471234: call   *%r10
  0x0000024807471237: hlt    
[Deopt Handler Code]
  0x0000024807471238: movabs $0x24807471238,%r10  ;   {section_word}
  0x0000024807471242: push   %r10
  0x0000024807471244: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807471249: hlt    
  0x000002480747124a: hlt    
  0x000002480747124b: hlt    
  0x000002480747124c: hlt    
  0x000002480747124d: hlt    
  0x000002480747124e: hlt    
  0x000002480747124f: hlt    
<nmethod compile_id='143' compiler='C1' level='3' entry='0x00000248074708a0' size='4184' address='0x00000248074706d0' relocation_offset='288' insts_offset='464' stub_offset='2736' scopes_data_offset='2952' scopes_pcs_offset='3336' dependencies_offset='4120' nul_chk_table_offset='4128' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1284' backedge_count='31' iicount='1284' stamp='1.947'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807470550:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fec6690} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000024807470680: mov    0x20(%rsp),%rbx
  0x0000024807470685: mov    0x18(%rbx),%rbx
  0x0000024807470689: test   %rbx,%rbx
  0x000002480747068c: je     0x0000024807470695
  0x0000024807470692: jmp    *0x40(%rbx)
  0x0000024807470695: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747069a: hlt    
  0x000002480747069b: hlt    
  0x000002480747069c: hlt    
  0x000002480747069d: hlt    
  0x000002480747069e: hlt    
  0x000002480747069f: hlt    
<nmethod compile_id='150' compile_kind='c2n' level='0' entry='0x0000024807470680' size='336' address='0x0000024807470550' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.950'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807470150:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = boolean
  #           [sp+0x40]  (sp of caller)
  0x00000248074702a0: mov    0x8(%rdx),%r10d
  0x00000248074702a4: shl    $0x3,%r10
  0x00000248074702a8: cmp    %rax,%r10
  0x00000248074702ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074702b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074702bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074702c0: mov    %eax,-0x6000(%rsp)
  0x00000248074702c7: push   %rbp
  0x00000248074702c8: sub    $0x30,%rsp
  0x00000248074702cc: movabs $0x2481fd6b4d8,%rsi  ;   {metadata(method data for {method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000248074702d6: mov    0xdc(%rsi),%edi
  0x00000248074702dc: add    $0x8,%edi
  0x00000248074702df: mov    %edi,0xdc(%rsi)
  0x00000248074702e5: movabs $0x2481fb03bc8,%rsi  ;   {metadata({method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000248074702ef: and    $0x1ff8,%edi
  0x00000248074702f5: cmp    $0x0,%edi
  0x00000248074702f8: je     0x000002480747036e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 609)

  0x00000248074702fe: mov    %rdx,%rsi
  0x0000024807470301: movabs $0x2481fd6b4d8,%rdi  ;   {metadata(method data for {method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480747030b: addq   $0x1,0x108(%rdi)
  0x0000024807470313: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480747031d: mov    0xdc(%rsi),%edi
  0x0000024807470323: add    $0x8,%edi
  0x0000024807470326: mov    %edi,0xdc(%rsi)
  0x000002480747032c: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000024807470336: and    $0x7ffff8,%edi
  0x000002480747033c: cmp    $0x0,%edi
  0x000002480747033f: je     0x0000024807470385
  0x0000024807470345: mov    %r8,%r10
  0x0000024807470348: shr    $0x3,%r10
  0x000002480747034c: mov    %r10d,0xc(%rdx)
  0x0000024807470350: shr    $0x9,%rdx
  0x0000024807470354: movabs $0x248130de000,%rsi
  0x000002480747035e: movb   $0x0,(%rdx,%rsi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)

  0x0000024807470362: add    $0x30,%rsp
  0x0000024807470366: pop    %rbp
  0x0000024807470367: test   %eax,-0x1ec026d(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747036d: ret    
  0x000002480747036e: mov    %rsi,0x8(%rsp)
  0x0000024807470373: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747037b: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=224}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ;   {runtime_call}
  0x0000024807470380: jmp    0x00000248074702fe
  0x0000024807470385: mov    %rsi,0x8(%rsp)
  0x000002480747038a: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807470392: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=247}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ;   {runtime_call}
  0x0000024807470397: jmp    0x0000024807470345
  0x0000024807470399: nop
  0x000002480747039a: nop
  0x000002480747039b: mov    0x308(%r15),%rax
  0x00000248074703a2: movabs $0x0,%r10
  0x00000248074703ac: mov    %r10,0x308(%r15)
  0x00000248074703b3: movabs $0x0,%r10
  0x00000248074703bd: mov    %r10,0x310(%r15)
  0x00000248074703c4: add    $0x30,%rsp
  0x00000248074703c8: pop    %rbp
  0x00000248074703c9: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074703ce: hlt    
  0x00000248074703cf: hlt    
  0x00000248074703d0: hlt    
  0x00000248074703d1: hlt    
  0x00000248074703d2: hlt    
  0x00000248074703d3: hlt    
  0x00000248074703d4: hlt    
  0x00000248074703d5: hlt    
  0x00000248074703d6: hlt    
  0x00000248074703d7: hlt    
  0x00000248074703d8: hlt    
  0x00000248074703d9: hlt    
  0x00000248074703da: hlt    
  0x00000248074703db: hlt    
  0x00000248074703dc: hlt    
  0x00000248074703dd: hlt    
  0x00000248074703de: hlt    
  0x00000248074703df: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074703e0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074703e5: mov    %rsp,-0x28(%rsp)
  0x00000248074703ea: sub    $0x80,%rsp
  0x00000248074703f1: mov    %rax,0x78(%rsp)
  0x00000248074703f6: mov    %rcx,0x70(%rsp)
  0x00000248074703fb: mov    %rdx,0x68(%rsp)
  0x0000024807470400: mov    %rbx,0x60(%rsp)
  0x0000024807470405: mov    %rbp,0x50(%rsp)
  0x000002480747040a: mov    %rsi,0x48(%rsp)
  0x000002480747040f: mov    %rdi,0x40(%rsp)
  0x0000024807470414: mov    %r8,0x38(%rsp)
  0x0000024807470419: mov    %r9,0x30(%rsp)
  0x000002480747041e: mov    %r10,0x28(%rsp)
  0x0000024807470423: mov    %r11,0x20(%rsp)
  0x0000024807470428: mov    %r12,0x18(%rsp)
  0x000002480747042d: mov    %r13,0x10(%rsp)
  0x0000024807470432: mov    %r14,0x8(%rsp)
  0x0000024807470437: mov    %r15,(%rsp)
  0x000002480747043b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807470445: movabs $0x248074703e5,%rdx  ;   {internal_word}
  0x000002480747044f: mov    %rsp,%r8
  0x0000024807470452: and    $0xfffffffffffffff0,%rsp
  0x0000024807470456: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807470460: call   *%r10
  0x0000024807470463: hlt    
[Deopt Handler Code]
  0x0000024807470464: movabs $0x24807470464,%r10  ;   {section_word}
  0x000002480747046e: push   %r10
  0x0000024807470470: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807470475: hlt    
  0x0000024807470476: hlt    
  0x0000024807470477: hlt    
<nmethod compile_id='146' compiler='C1' level='3' entry='0x00000248074702a0' size='984' address='0x0000024807470150' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='824' scopes_pcs_offset='880' dependencies_offset='976' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='1224' iicount='1224' stamp='1.955'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480746ffd0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fec7298} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm4:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x18]   = &apos;java/lang/Object&apos;
  0x0000024807470100: mov    0x14(%rdx),%ebx
  0x0000024807470103: shl    $0x3,%rbx
  0x0000024807470107: mov    0x28(%rbx),%ebx
  0x000002480747010a: shl    $0x3,%rbx
  0x000002480747010e: mov    0x18(%rbx),%rbx
  0x0000024807470112: test   %rbx,%rbx
  0x0000024807470115: je     0x000002480747011e
  0x000002480747011b: jmp    *0x40(%rbx)
  0x000002480747011e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807470123: hlt    
  0x0000024807470124: hlt    
  0x0000024807470125: hlt    
  0x0000024807470126: hlt    
  0x0000024807470127: hlt    
<nmethod compile_id='151' compile_kind='c2n' level='0' entry='0x0000024807470100' size='344' address='0x000002480746ffd0' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.958'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074796d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fbeb4d8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000024807479860: mov    0x8(%rdx),%r10d
  0x0000024807479864: shl    $0x3,%r10
  0x0000024807479868: cmp    %rax,%r10
  0x000002480747986b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807479871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747987c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807479880: mov    %eax,-0x6000(%rsp)
  0x0000024807479887: push   %rbp
  0x0000024807479888: sub    $0x80,%rsp
  0x000002480747988f: movabs $0x2481fd5f020,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb4d8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807479899: mov    0xdc(%rsi),%edi
  0x000002480747989f: add    $0x8,%edi
  0x00000248074798a2: mov    %edi,0xdc(%rsi)
  0x00000248074798a8: movabs $0x2481fbeb4d0,%rsi  ;   {metadata({method} {0x000002481fbeb4d8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074798b2: and    $0x1ff8,%edi
  0x00000248074798b8: cmp    $0x0,%edi
  0x00000248074798bb: je     0x0000024807479aeb  ;*aload_0
                                                ; - java.util.HashMap::put@0 (line 613)

  0x00000248074798c1: movabs $0x2481fd5f020,%rsi  ;   {metadata(method data for {method} {0x000002481fbeb4d8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074798cb: addq   $0x1,0x108(%rsi)
  0x00000248074798d3: movabs $0x2481fd14928,%rsi  ;   {metadata(method data for {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074798dd: mov    0xdc(%rsi),%edi
  0x00000248074798e3: add    $0x8,%edi
  0x00000248074798e6: mov    %edi,0xdc(%rsi)
  0x00000248074798ec: movabs $0x2481fbea9e0,%rsi  ;   {metadata({method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000248074798f6: and    $0x7ffff8,%edi
  0x00000248074798fc: cmp    $0x0,%edi
  0x00000248074798ff: je     0x0000024807479b02
  0x0000024807479905: cmp    $0x0,%r8
  0x0000024807479909: movabs $0x2481fd14928,%rsi  ;   {metadata(method data for {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807479913: movabs $0x108,%rdi
  0x000002480747991d: jne    0x000002480747992d
  0x0000024807479923: movabs $0x118,%rdi
  0x000002480747992d: mov    (%rsi,%rdi,1),%rbx
  0x0000024807479931: lea    0x1(%rbx),%rbx
  0x0000024807479935: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807479939: jne    0x0000024807479968  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 340)
                                                ; - java.util.HashMap::put@2 (line 613)

  0x000002480747993f: movabs $0x2481fd14928,%rsi  ;   {metadata(method data for {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807479949: incl   0x128(%rsi)
  0x000002480747994f: mov    $0x0,%esi
  0x0000024807479954: mov    %r9,0x68(%rsp)
  0x0000024807479959: mov    %r8,0x60(%rsp)
  0x000002480747995e: mov    %rdx,0x58(%rsp)
  0x0000024807479963: jmp    0x0000024807479a29  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 340)
                                                ; - java.util.HashMap::put@2 (line 613)

  0x0000024807479968: mov    %r9,0x68(%rsp)
  0x000002480747996d: mov    %rdx,0x58(%rsp)
  0x0000024807479972: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000024807479b19
  0x0000024807479975: mov    %r8,%rsi
  0x0000024807479978: movabs $0x2481fd14928,%rdi  ;   {metadata(method data for {method} {0x000002481fbea9e8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807479982: mov    0x8(%rsi),%esi
  0x0000024807479985: shl    $0x3,%rsi
  0x0000024807479989: cmp    0x148(%rdi),%rsi
  0x0000024807479990: jne    0x000002480747999f
  0x0000024807479992: addq   $0x1,0x150(%rdi)
  0x000002480747999a: jmp    0x0000024807479a05
  0x000002480747999f: cmp    0x158(%rdi),%rsi
  0x00000248074799a6: jne    0x00000248074799b5
  0x00000248074799a8: addq   $0x1,0x160(%rdi)
  0x00000248074799b0: jmp    0x0000024807479a05
  0x00000248074799b5: cmpq   $0x0,0x148(%rdi)
  0x00000248074799c0: jne    0x00000248074799d9
  0x00000248074799c2: mov    %rsi,0x148(%rdi)
  0x00000248074799c9: movq   $0x1,0x150(%rdi)
  0x00000248074799d4: jmp    0x0000024807479a05
  0x00000248074799d9: cmpq   $0x0,0x158(%rdi)
  0x00000248074799e4: jne    0x00000248074799fd
  0x00000248074799e6: mov    %rsi,0x158(%rdi)
  0x00000248074799ed: movq   $0x1,0x160(%rdi)
  0x00000248074799f8: jmp    0x0000024807479a05
  0x00000248074799fd: addq   $0x1,0x140(%rdi)
  0x0000024807479a05: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::put@2 (line 613)

  0x0000024807479a08: mov    %r8,0x60(%rsp)
  0x0000024807479a0d: movabs $0xffffffffffffffff,%rax
  0x0000024807479a17: call   0x0000024807376120  ; OopMap{[88]=Oop [104]=Oop [96]=Oop off=444}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::put@2 (line 613)
                                                ;   {virtual_call}
  0x0000024807479a1c: mov    %rax,%r8
  0x0000024807479a1f: shr    $0x10,%r8d
  0x0000024807479a23: xor    %rax,%r8
  0x0000024807479a26: mov    %r8,%rsi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 340)
                                                ; - java.util.HashMap::put@2 (line 613)

  0x0000024807479a29: mov    0x68(%rsp),%rdi
  0x0000024807479a2e: mov    0x60(%rsp),%r9
  0x0000024807479a33: mov    0x58(%rsp),%rdx
  0x0000024807479a38: mov    %rdx,%r8
  0x0000024807479a3b: movabs $0x2481fd5f020,%rcx  ;   {metadata(method data for {method} {0x000002481fbeb4d8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000024807479a45: mov    0x8(%r8),%r8d
  0x0000024807479a49: shl    $0x3,%r8
  0x0000024807479a4d: cmp    0x120(%rcx),%r8
  0x0000024807479a54: jne    0x0000024807479a63
  0x0000024807479a56: addq   $0x1,0x128(%rcx)
  0x0000024807479a5e: jmp    0x0000024807479ac9
  0x0000024807479a63: cmp    0x130(%rcx),%r8
  0x0000024807479a6a: jne    0x0000024807479a79
  0x0000024807479a6c: addq   $0x1,0x138(%rcx)
  0x0000024807479a74: jmp    0x0000024807479ac9
  0x0000024807479a79: cmpq   $0x0,0x120(%rcx)
  0x0000024807479a84: jne    0x0000024807479a9d
  0x0000024807479a86: mov    %r8,0x120(%rcx)
  0x0000024807479a8d: movq   $0x1,0x128(%rcx)
  0x0000024807479a98: jmp    0x0000024807479ac9
  0x0000024807479a9d: cmpq   $0x0,0x130(%rcx)
  0x0000024807479aa8: jne    0x0000024807479ac1
  0x0000024807479aaa: mov    %r8,0x130(%rcx)
  0x0000024807479ab1: movq   $0x1,0x138(%rcx)
  0x0000024807479abc: jmp    0x0000024807479ac9
  0x0000024807479ac1: addq   $0x1,0x118(%rcx)
  0x0000024807479ac9: mov    %rsi,%r8
  0x0000024807479acc: mov    $0x0,%esi
  0x0000024807479ad1: mov    $0x1,%ecx          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 613)

  0x0000024807479ad6: nop
  0x0000024807479ad7: call   0x0000024807375ee0  ; OopMap{off=636}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 613)
                                                ;   {optimized virtual_call}
  0x0000024807479adc: add    $0x80,%rsp
  0x0000024807479ae3: pop    %rbp
  0x0000024807479ae4: test   %eax,-0x1ec99ea(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807479aea: ret    
  0x0000024807479aeb: mov    %rsi,0x8(%rsp)
  0x0000024807479af0: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807479af8: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop r9=Oop off=669}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 613)
                                                ;   {runtime_call}
  0x0000024807479afd: jmp    0x00000248074798c1
  0x0000024807479b02: mov    %rsi,0x8(%rsp)
  0x0000024807479b07: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807479b0f: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop r9=Oop off=692}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 340)
                                                ; - java.util.HashMap::put@2 (line 613)
                                                ;   {runtime_call}
  0x0000024807479b14: jmp    0x0000024807479905
  0x0000024807479b19: call   0x000002480742f100  ; OopMap{r8=Oop [88]=Oop [104]=Oop off=702}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::put@2 (line 613)
                                                ;   {runtime_call}
  0x0000024807479b1e: nop
  0x0000024807479b1f: nop
  0x0000024807479b20: mov    0x308(%r15),%rax
  0x0000024807479b27: movabs $0x0,%r10
  0x0000024807479b31: mov    %r10,0x308(%r15)
  0x0000024807479b38: movabs $0x0,%r10
  0x0000024807479b42: mov    %r10,0x310(%r15)
  0x0000024807479b49: add    $0x80,%rsp
  0x0000024807479b50: pop    %rbp
  0x0000024807479b51: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807479b56: hlt    
  0x0000024807479b57: hlt    
  0x0000024807479b58: hlt    
  0x0000024807479b59: hlt    
  0x0000024807479b5a: hlt    
  0x0000024807479b5b: hlt    
  0x0000024807479b5c: hlt    
  0x0000024807479b5d: hlt    
  0x0000024807479b5e: hlt    
  0x0000024807479b5f: hlt    
[Stub Code]
  0x0000024807479b60: nop                       ;   {no_reloc}
  0x0000024807479b61: nop
  0x0000024807479b62: nop
  0x0000024807479b63: nop
  0x0000024807479b64: nop
  0x0000024807479b65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807479b6f: jmp    0x0000024807479b6f  ;   {runtime_call}
  0x0000024807479b74: nop
  0x0000024807479b75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807479b7f: jmp    0x0000024807479b7f  ;   {runtime_call}
[Exception Handler]
  0x0000024807479b84: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807479b89: mov    %rsp,-0x28(%rsp)
  0x0000024807479b8e: sub    $0x80,%rsp
  0x0000024807479b95: mov    %rax,0x78(%rsp)
  0x0000024807479b9a: mov    %rcx,0x70(%rsp)
  0x0000024807479b9f: mov    %rdx,0x68(%rsp)
  0x0000024807479ba4: mov    %rbx,0x60(%rsp)
  0x0000024807479ba9: mov    %rbp,0x50(%rsp)
  0x0000024807479bae: mov    %rsi,0x48(%rsp)
  0x0000024807479bb3: mov    %rdi,0x40(%rsp)
  0x0000024807479bb8: mov    %r8,0x38(%rsp)
  0x0000024807479bbd: mov    %r9,0x30(%rsp)
  0x0000024807479bc2: mov    %r10,0x28(%rsp)
  0x0000024807479bc7: mov    %r11,0x20(%rsp)
  0x0000024807479bcc: mov    %r12,0x18(%rsp)
  0x0000024807479bd1: mov    %r13,0x10(%rsp)
  0x0000024807479bd6: mov    %r14,0x8(%rsp)
  0x0000024807479bdb: mov    %r15,(%rsp)
  0x0000024807479bdf: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807479be9: movabs $0x24807479b89,%rdx  ;   {internal_word}
  0x0000024807479bf3: mov    %rsp,%r8
  0x0000024807479bf6: and    $0xfffffffffffffff0,%rsp
  0x0000024807479bfa: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807479c04: call   *%r10
  0x0000024807479c07: hlt    
[Deopt Handler Code]
  0x0000024807479c08: movabs $0x24807479c08,%r10  ;   {section_word}
  0x0000024807479c12: push   %r10
  0x0000024807479c14: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807479c19: hlt    
  0x0000024807479c1a: hlt    
  0x0000024807479c1b: hlt    
  0x0000024807479c1c: hlt    
  0x0000024807479c1d: hlt    
  0x0000024807479c1e: hlt    
  0x0000024807479c1f: hlt    
<nmethod compile_id='131' compiler='C1' level='3' entry='0x0000024807479860' size='1760' address='0x00000248074796d0' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1376' scopes_pcs_offset='1528' dependencies_offset='1736' nul_chk_table_offset='1744' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='943' iicount='943' stamp='1.968'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480746fe50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fed2718} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/invoke/MemberName&apos;
  0x000002480746ff80: mov    0x28(%rsp),%rbx
  0x000002480746ff85: cmp    (%rdx),%rax
  0x000002480746ff88: mov    0x18(%rbx),%rbx
  0x000002480746ff8c: test   %rbx,%rbx
  0x000002480746ff8f: je     0x000002480746ff98
  0x000002480746ff95: jmp    *0x40(%rbx)
  0x000002480746ff98: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480746ff9d: hlt    
  0x000002480746ff9e: hlt    
  0x000002480746ff9f: hlt    
<nmethod compile_id='152' compile_kind='c2n' level='0' entry='0x000002480746ff80' size='336' address='0x000002480746fe50' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.970'/>
<task_queued compile_id='153' method='java/lang/Object equals (Ljava/lang/Object;)Z' bytes='11' count='768' iicount='768' level='3' stamp='1.970' comment='tiered' hot_count='768'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807479dd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb06ef0} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000024807479f40: mov    0x8(%rdx),%r10d
  0x0000024807479f44: shl    $0x3,%r10
  0x0000024807479f48: cmp    %rax,%r10
  0x0000024807479f4b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807479f51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807479f5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807479f60: mov    %eax,-0x6000(%rsp)
  0x0000024807479f67: push   %rbp
  0x0000024807479f68: sub    $0x40,%rsp
  0x0000024807479f6c: mov    %rdx,%r8
  0x0000024807479f6f: movabs $0x2481fd57bd8,%rbx  ;   {metadata(method data for {method} {0x000002481fb06ef0} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807479f79: mov    0xdc(%rbx),%edx
  0x0000024807479f7f: add    $0x8,%edx
  0x0000024807479f82: mov    %edx,0xdc(%rbx)
  0x0000024807479f88: movabs $0x2481fb06ee8,%rbx  ;   {metadata({method} {0x000002481fb06ef0} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807479f92: and    $0x1ff8,%edx
  0x0000024807479f98: cmp    $0x0,%edx
  0x0000024807479f9b: je     0x000002480747a0af  ;*aload_0
                                                ; - java.lang.String::toCharArray@0 (line 2899)

  0x0000024807479fa1: mov    0xc(%r8),%r9d
  0x0000024807479fa5: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::toCharArray@1 (line 2899)

  0x0000024807479fa9: mov    0xc(%r9),%r11d     ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; implicit exception: dispatches to 0x000002480747a0c6
  0x0000024807479fad: mov    %r11,%rbx
  0x0000024807479fb0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807479fba: movslq %ebx,%rbx
  0x0000024807479fbd: mov    %rbx,%rdi
  0x0000024807479fc0: cmp    $0xffffff,%rbx
  0x0000024807479fc7: ja     0x000002480747a0cb
  0x0000024807479fcd: movabs $0x17,%rsi
  0x0000024807479fd7: lea    (%rsi,%rbx,2),%rsi
  0x0000024807479fdb: and    $0xfffffffffffffff8,%rsi
  0x0000024807479fdf: mov    0x60(%r15),%rax
  0x0000024807479fe3: lea    (%rax,%rsi,1),%rsi
  0x0000024807479fe7: cmp    0x70(%r15),%rsi
  0x0000024807479feb: ja     0x000002480747a0cb
  0x0000024807479ff1: mov    %rsi,0x60(%r15)
  0x0000024807479ff5: sub    %rax,%rsi
  0x0000024807479ff8: movq   $0x1,(%rax)
  0x0000024807479fff: mov    %rdx,%rcx
  0x000002480747a002: shr    $0x3,%rcx
  0x000002480747a006: mov    %ecx,0x8(%rax)
  0x000002480747a009: mov    %ebx,0xc(%rax)
  0x000002480747a00c: sub    $0x10,%rsi
  0x000002480747a010: je     0x000002480747a027
  0x000002480747a016: xor    %rbx,%rbx
  0x000002480747a019: shr    $0x3,%rsi
  0x000002480747a01d: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480747a022: dec    %rsi
  0x000002480747a025: jne    0x000002480747a01d  ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)

  0x000002480747a027: movabs $0x2481fd57bd8,%rdx  ;   {metadata(method data for {method} {0x000002481fb06ef0} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x000002480747a031: addq   $0x1,0x108(%rdx)
  0x000002480747a039: mov    %r9,%rdx
  0x000002480747a03c: mov    $0x0,%r8d
  0x000002480747a042: mov    %rax,%r9
  0x000002480747a045: mov    $0x0,%edi
  0x000002480747a04a: mov    %r11,%rsi
  0x000002480747a04d: mov    %rax,0x30(%rsp)
  0x000002480747a052: lea    (%rdi,%rsi,1),%rcx
  0x000002480747a056: cmp    0xc(%r9),%ecx
  0x000002480747a05a: ja     0x000002480747a0d5
  0x000002480747a060: movslq %r8d,%r8
  0x000002480747a063: movslq %edi,%rdi
  0x000002480747a066: lea    0x10(%rdx,%r8,2),%rcx
  0x000002480747a06b: lea    0x10(%r9,%rdi,2),%rdx
  0x000002480747a070: mov    %rsi,%r8
  0x000002480747a073: sub    $0x20,%rsp
  0x000002480747a077: test   $0xf,%esp
  0x000002480747a07d: je     0x000002480747a095
  0x000002480747a083: sub    $0x8,%rsp
  0x000002480747a087: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480747a08c: add    $0x8,%rsp
  0x000002480747a090: jmp    0x000002480747a09a
  0x000002480747a095: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480747a09a: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)

  0x000002480747a09e: mov    0x30(%rsp),%rax
  0x000002480747a0a3: add    $0x40,%rsp
  0x000002480747a0a7: pop    %rbp
  0x000002480747a0a8: test   %eax,-0x1ec9fae(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747a0ae: ret    
  0x000002480747a0af: mov    %rbx,0x8(%rsp)
  0x000002480747a0b4: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747a0bc: call   0x0000024807433da0  ; OopMap{r8=Oop off=385}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ;   {runtime_call}
  0x000002480747a0c1: jmp    0x0000024807479fa1
  0x000002480747a0c6: call   0x000002480742f100  ; OopMap{r8=Oop r9=Oop off=395}
                                                ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ;   {runtime_call}
  0x000002480747a0cb: call   0x0000024807430280  ; OopMap{r8=Oop r9=Oop off=400}
                                                ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ;   {runtime_call}
  0x000002480747a0d0: jmp    0x000002480747a027
  0x000002480747a0d5: nop
  0x000002480747a0d6: nop
  0x000002480747a0d7: call   0x0000024807376360  ; OopMap{[48]=Oop off=412}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {static_call}
  0x000002480747a0dc: jmp    0x000002480747a09e
  0x000002480747a0de: nop
  0x000002480747a0df: nop
  0x000002480747a0e0: mov    0x308(%r15),%rax
  0x000002480747a0e7: movabs $0x0,%r10
  0x000002480747a0f1: mov    %r10,0x308(%r15)
  0x000002480747a0f8: movabs $0x0,%r10
  0x000002480747a102: mov    %r10,0x310(%r15)
  0x000002480747a109: add    $0x40,%rsp
  0x000002480747a10d: pop    %rbp
  0x000002480747a10e: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747a113: hlt    
  0x000002480747a114: hlt    
  0x000002480747a115: hlt    
  0x000002480747a116: hlt    
  0x000002480747a117: hlt    
  0x000002480747a118: hlt    
  0x000002480747a119: hlt    
  0x000002480747a11a: hlt    
  0x000002480747a11b: hlt    
  0x000002480747a11c: hlt    
  0x000002480747a11d: hlt    
  0x000002480747a11e: hlt    
  0x000002480747a11f: hlt    
[Stub Code]
  0x000002480747a120: nop                       ;   {no_reloc}
  0x000002480747a121: nop
  0x000002480747a122: nop
  0x000002480747a123: nop
  0x000002480747a124: nop
  0x000002480747a125: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747a12f: jmp    0x000002480747a12f  ;   {runtime_call}
[Exception Handler]
  0x000002480747a134: call   0x0000024807431320  ;   {runtime_call}
  0x000002480747a139: mov    %rsp,-0x28(%rsp)
  0x000002480747a13e: sub    $0x80,%rsp
  0x000002480747a145: mov    %rax,0x78(%rsp)
  0x000002480747a14a: mov    %rcx,0x70(%rsp)
  0x000002480747a14f: mov    %rdx,0x68(%rsp)
  0x000002480747a154: mov    %rbx,0x60(%rsp)
  0x000002480747a159: mov    %rbp,0x50(%rsp)
  0x000002480747a15e: mov    %rsi,0x48(%rsp)
  0x000002480747a163: mov    %rdi,0x40(%rsp)
  0x000002480747a168: mov    %r8,0x38(%rsp)
  0x000002480747a16d: mov    %r9,0x30(%rsp)
  0x000002480747a172: mov    %r10,0x28(%rsp)
  0x000002480747a177: mov    %r11,0x20(%rsp)
  0x000002480747a17c: mov    %r12,0x18(%rsp)
  0x000002480747a181: mov    %r13,0x10(%rsp)
  0x000002480747a186: mov    %r14,0x8(%rsp)
  0x000002480747a18b: mov    %r15,(%rsp)
  0x000002480747a18f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747a199: movabs $0x2480747a139,%rdx  ;   {internal_word}
  0x000002480747a1a3: mov    %rsp,%r8
  0x000002480747a1a6: and    $0xfffffffffffffff0,%rsp
  0x000002480747a1aa: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747a1b4: call   *%r10
  0x000002480747a1b7: hlt    
[Deopt Handler Code]
  0x000002480747a1b8: movabs $0x2480747a1b8,%r10  ;   {section_word}
  0x000002480747a1c2: push   %r10
  0x000002480747a1c4: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747a1c9: hlt    
  0x000002480747a1ca: hlt    
  0x000002480747a1cb: hlt    
  0x000002480747a1cc: hlt    
  0x000002480747a1cd: hlt    
  0x000002480747a1ce: hlt    
  0x000002480747a1cf: hlt    
<nmethod compile_id='138' compiler='C1' level='3' entry='0x0000024807479f40' size='1304' address='0x0000024807479dd0' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1032' scopes_pcs_offset='1104' dependencies_offset='1280' nul_chk_table_offset='1288' method='java/lang/String toCharArray ()[C' bytes='25' count='1159' iicount='1159' stamp='1.979'/>
<writer thread='27436'/>
<task_queued compile_id='154' method='java/lang/invoke/LambdaForm$BasicType basicType (Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='19' count='640' iicount='640' level='3' stamp='1.979' comment='tiered' hot_count='640'/>
<task_queued compile_id='155' method='java/lang/invoke/MemberName testAllFlags (I)Z' bytes='7' count='640' iicount='640' level='3' stamp='1.979' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480746f9d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb006f0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/Object&apos;
  # this:     rdx:rdx   = &apos;java/lang/Object&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480746fb20: mov    0x8(%rdx),%r10d
  0x000002480746fb24: shl    $0x3,%r10
  0x000002480746fb28: cmp    %rax,%r10
  0x000002480746fb2b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480746fb31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480746fb3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480746fb40: mov    %eax,-0x6000(%rsp)
  0x000002480746fb47: push   %rbp
  0x000002480746fb48: sub    $0x30,%rsp
  0x000002480746fb4c: movabs $0x2481feae318,%rax  ;   {metadata(method data for {method} {0x000002481fb006f0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/Object&apos;)}
  0x000002480746fb56: mov    0xdc(%rax),%esi
  0x000002480746fb5c: add    $0x8,%esi
  0x000002480746fb5f: mov    %esi,0xdc(%rax)
  0x000002480746fb65: movabs $0x2481fb006e8,%rax  ;   {metadata({method} {0x000002481fb006f0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/Object&apos;)}
  0x000002480746fb6f: and    $0x1ff8,%esi
  0x000002480746fb75: cmp    $0x0,%esi
  0x000002480746fb78: je     0x000002480746fbe5  ;*aload_0
                                                ; - java.lang.Object::equals@0 (line 149)

  0x000002480746fb7e: cmp    %r8,%rdx
  0x000002480746fb81: movabs $0x2481feae318,%rax  ;   {metadata(method data for {method} {0x000002481fb006f0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/Object&apos;)}
  0x000002480746fb8b: movabs $0x108,%rsi
  0x000002480746fb95: jne    0x000002480746fba5
  0x000002480746fb9b: movabs $0x118,%rsi
  0x000002480746fba5: mov    (%rax,%rsi,1),%rdi
  0x000002480746fba9: lea    0x1(%rdi),%rdi
  0x000002480746fbad: mov    %rdi,(%rax,%rsi,1)
  0x000002480746fbb1: jne    0x000002480746fbd1  ;*if_acmpne
                                                ; - java.lang.Object::equals@2 (line 149)

  0x000002480746fbb7: movabs $0x2481feae318,%rax  ;   {metadata(method data for {method} {0x000002481fb006f0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/Object&apos;)}
  0x000002480746fbc1: incl   0x128(%rax)
  0x000002480746fbc7: mov    $0x1,%eax
  0x000002480746fbcc: jmp    0x000002480746fbd6  ;*goto
                                                ; - java.lang.Object::equals@6 (line 149)

  0x000002480746fbd1: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.Object::equals@10 (line 149)

  0x000002480746fbd6: and    $0x1,%eax
  0x000002480746fbd9: add    $0x30,%rsp
  0x000002480746fbdd: pop    %rbp
  0x000002480746fbde: test   %eax,-0x1ebfae4(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480746fbe4: ret    
  0x000002480746fbe5: mov    %rax,0x8(%rsp)
  0x000002480746fbea: movq   $0xffffffffffffffff,(%rsp)
  0x000002480746fbf2: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=215}
                                                ;*synchronization entry
                                                ; - java.lang.Object::equals@-1 (line 149)
                                                ;   {runtime_call}
  0x000002480746fbf7: jmp    0x000002480746fb7e
  0x000002480746fbf9: nop
  0x000002480746fbfa: nop
  0x000002480746fbfb: mov    0x308(%r15),%rax
  0x000002480746fc02: movabs $0x0,%r10
  0x000002480746fc0c: mov    %r10,0x308(%r15)
  0x000002480746fc13: movabs $0x0,%r10
  0x000002480746fc1d: mov    %r10,0x310(%r15)
  0x000002480746fc24: add    $0x30,%rsp
  0x000002480746fc28: pop    %rbp
  0x000002480746fc29: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480746fc2e: hlt    
  0x000002480746fc2f: hlt    
  0x000002480746fc30: hlt    
  0x000002480746fc31: hlt    
  0x000002480746fc32: hlt    
  0x000002480746fc33: hlt    
  0x000002480746fc34: hlt    
  0x000002480746fc35: hlt    
  0x000002480746fc36: hlt    
  0x000002480746fc37: hlt    
  0x000002480746fc38: hlt    
  0x000002480746fc39: hlt    
  0x000002480746fc3a: hlt    
  0x000002480746fc3b: hlt    
  0x000002480746fc3c: hlt    
  0x000002480746fc3d: hlt    
  0x000002480746fc3e: hlt    
  0x000002480746fc3f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480746fc40: call   0x0000024807431320  ;   {no_reloc}
  0x000002480746fc45: mov    %rsp,-0x28(%rsp)
  0x000002480746fc4a: sub    $0x80,%rsp
  0x000002480746fc51: mov    %rax,0x78(%rsp)
  0x000002480746fc56: mov    %rcx,0x70(%rsp)
  0x000002480746fc5b: mov    %rdx,0x68(%rsp)
  0x000002480746fc60: mov    %rbx,0x60(%rsp)
  0x000002480746fc65: mov    %rbp,0x50(%rsp)
  0x000002480746fc6a: mov    %rsi,0x48(%rsp)
  0x000002480746fc6f: mov    %rdi,0x40(%rsp)
  0x000002480746fc74: mov    %r8,0x38(%rsp)
  0x000002480746fc79: mov    %r9,0x30(%rsp)
  0x000002480746fc7e: mov    %r10,0x28(%rsp)
  0x000002480746fc83: mov    %r11,0x20(%rsp)
  0x000002480746fc88: mov    %r12,0x18(%rsp)
  0x000002480746fc8d: mov    %r13,0x10(%rsp)
  0x000002480746fc92: mov    %r14,0x8(%rsp)
  0x000002480746fc97: mov    %r15,(%rsp)
  0x000002480746fc9b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480746fca5: movabs $0x2480746fc45,%rdx  ;   {internal_word}
  0x000002480746fcaf: mov    %rsp,%r8
  0x000002480746fcb2: and    $0xfffffffffffffff0,%rsp
  0x000002480746fcb6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480746fcc0: call   *%r10
  0x000002480746fcc3: hlt    
[Deopt Handler Code]
  0x000002480746fcc4: movabs $0x2480746fcc4,%r10  ;   {section_word}
  0x000002480746fcce: push   %r10
  0x000002480746fcd0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480746fcd5: hlt    
  0x000002480746fcd6: hlt    
  0x000002480746fcd7: hlt    
<nmethod compile_id='153' compiler='C1' level='3' entry='0x000002480746fb20' size='944' address='0x000002480746f9d0' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='784' scopes_pcs_offset='824' dependencies_offset='936' method='java/lang/Object equals (Ljava/lang/Object;)Z' bytes='11' count='780' iicount='780' stamp='1.984'/>
<writer thread='27436'/>
<task_queued compile_id='156' method='java/lang/invoke/MethodType parameterType (I)Ljava/lang/Class;' bytes='7' count='640' iicount='640' level='3' stamp='1.984' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747a310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb5a0f8} &apos;testAllFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x000002480747a480: mov    0x8(%rdx),%r10d
  0x000002480747a484: shl    $0x3,%r10
  0x000002480747a488: cmp    %rax,%r10
  0x000002480747a48b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747a491: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747a49c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747a4a0: mov    %eax,-0x6000(%rsp)
  0x000002480747a4a7: push   %rbp
  0x000002480747a4a8: sub    $0x40,%rsp
  0x000002480747a4ac: movabs $0x2481feae4a0,%rax  ;   {metadata(method data for {method} {0x000002481fb5a0f8} &apos;testAllFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480747a4b6: mov    0xdc(%rax),%esi
  0x000002480747a4bc: add    $0x8,%esi
  0x000002480747a4bf: mov    %esi,0xdc(%rax)
  0x000002480747a4c5: movabs $0x2481fb5a0f0,%rax  ;   {metadata({method} {0x000002481fb5a0f8} &apos;testAllFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480747a4cf: and    $0x1ff8,%esi
  0x000002480747a4d5: cmp    $0x0,%esi
  0x000002480747a4d8: je     0x000002480747a595  ;*aload_0
                                                ; - java.lang.invoke.MemberName::testAllFlags@0 (line 337)

  0x000002480747a4de: mov    %rdx,%rax
  0x000002480747a4e1: movabs $0x2481feae4a0,%rsi  ;   {metadata(method data for {method} {0x000002481fb5a0f8} &apos;testAllFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480747a4eb: addq   $0x1,0x108(%rsi)
  0x000002480747a4f3: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480747a4fd: mov    0xdc(%rax),%esi
  0x000002480747a503: add    $0x8,%esi
  0x000002480747a506: mov    %esi,0xdc(%rax)
  0x000002480747a50c: movabs $0x2481fb5a058,%rax  ;   {metadata({method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480747a516: and    $0x7ffff8,%esi
  0x000002480747a51c: cmp    $0x0,%esi
  0x000002480747a51f: je     0x000002480747a5ac
  0x000002480747a525: mov    0xc(%rdx),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)

  0x000002480747a528: and    %r8,%rax
  0x000002480747a52b: cmp    %r8d,%eax
  0x000002480747a52e: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480747a538: movabs $0x108,%rsi
  0x000002480747a542: jne    0x000002480747a552
  0x000002480747a548: movabs $0x118,%rsi
  0x000002480747a552: mov    (%rax,%rsi,1),%rdi
  0x000002480747a556: lea    0x1(%rdi),%rdi
  0x000002480747a55a: mov    %rdi,(%rax,%rsi,1)
  0x000002480747a55e: jne    0x000002480747a57e  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)

  0x000002480747a564: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480747a56e: incl   0x128(%rax)
  0x000002480747a574: mov    $0x1,%eax
  0x000002480747a579: jmp    0x000002480747a583  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)

  0x000002480747a57e: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)

  0x000002480747a583: and    $0x1,%eax
  0x000002480747a586: and    $0x1,%eax
  0x000002480747a589: add    $0x40,%rsp
  0x000002480747a58d: pop    %rbp
  0x000002480747a58e: test   %eax,-0x1eca494(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747a594: ret    
  0x000002480747a595: mov    %rax,0x8(%rsp)
  0x000002480747a59a: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747a5a2: call   0x0000024807433da0  ; OopMap{rdx=Oop off=295}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAllFlags@-1 (line 337)
                                                ;   {runtime_call}
  0x000002480747a5a7: jmp    0x000002480747a4de
  0x000002480747a5ac: mov    %rax,0x8(%rsp)
  0x000002480747a5b1: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747a5b9: call   0x0000024807433da0  ; OopMap{rdx=Oop off=318}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ;   {runtime_call}
  0x000002480747a5be: jmp    0x000002480747a525
  0x000002480747a5c3: nop
  0x000002480747a5c4: nop
  0x000002480747a5c5: mov    0x308(%r15),%rax
  0x000002480747a5cc: movabs $0x0,%r10
  0x000002480747a5d6: mov    %r10,0x308(%r15)
  0x000002480747a5dd: movabs $0x0,%r10
  0x000002480747a5e7: mov    %r10,0x310(%r15)
  0x000002480747a5ee: add    $0x40,%rsp
  0x000002480747a5f2: pop    %rbp
  0x000002480747a5f3: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747a5f8: hlt    
  0x000002480747a5f9: hlt    
  0x000002480747a5fa: hlt    
  0x000002480747a5fb: hlt    
  0x000002480747a5fc: hlt    
  0x000002480747a5fd: hlt    
  0x000002480747a5fe: hlt    
  0x000002480747a5ff: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747a600: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747a605: mov    %rsp,-0x28(%rsp)
  0x000002480747a60a: sub    $0x80,%rsp
  0x000002480747a611: mov    %rax,0x78(%rsp)
  0x000002480747a616: mov    %rcx,0x70(%rsp)
  0x000002480747a61b: mov    %rdx,0x68(%rsp)
  0x000002480747a620: mov    %rbx,0x60(%rsp)
  0x000002480747a625: mov    %rbp,0x50(%rsp)
  0x000002480747a62a: mov    %rsi,0x48(%rsp)
  0x000002480747a62f: mov    %rdi,0x40(%rsp)
  0x000002480747a634: mov    %r8,0x38(%rsp)
  0x000002480747a639: mov    %r9,0x30(%rsp)
  0x000002480747a63e: mov    %r10,0x28(%rsp)
  0x000002480747a643: mov    %r11,0x20(%rsp)
  0x000002480747a648: mov    %r12,0x18(%rsp)
  0x000002480747a64d: mov    %r13,0x10(%rsp)
  0x000002480747a652: mov    %r14,0x8(%rsp)
  0x000002480747a657: mov    %r15,(%rsp)
  0x000002480747a65b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747a665: movabs $0x2480747a605,%rdx  ;   {internal_word}
  0x000002480747a66f: mov    %rsp,%r8
  0x000002480747a672: and    $0xfffffffffffffff0,%rsp
  0x000002480747a676: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747a680: call   *%r10
  0x000002480747a683: hlt    
[Deopt Handler Code]
  0x000002480747a684: movabs $0x2480747a684,%r10  ;   {section_word}
  0x000002480747a68e: push   %r10
  0x000002480747a690: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747a695: hlt    
  0x000002480747a696: hlt    
  0x000002480747a697: hlt    
<nmethod compile_id='155' compiler='C1' level='3' entry='0x000002480747a480' size='1152' address='0x000002480747a310' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='920' scopes_pcs_offset='1000' dependencies_offset='1144' method='java/lang/invoke/MemberName testAllFlags (I)Z' bytes='7' count='649' iicount='649' stamp='1.989'/>
<writer thread='14928'/>
<task_queued compile_id='157' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='128' iicount='128' level='1' stamp='1.990' comment='tiered' hot_count='128'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480747a7d0:
Code:
[Entry Point]
  # {method} {0x000002481fb0c5e8} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x70]  (sp of caller)
  0x000002480747a940: mov    0x8(%rdx),%r10d
  0x000002480747a944: shl    $0x3,%r10
  0x000002480747a948: cmp    %r10,%rax
  0x000002480747a94b: je     0x000002480747a958
  0x000002480747a951: jmp    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747a956: xchg   %ax,%ax
[Verified Entry Point]
  0x000002480747a958: mov    %eax,-0x6000(%rsp)
  0x000002480747a95f: push   %rbp
  0x000002480747a960: mov    %rsp,%rbp
  0x000002480747a963: sub    $0x60,%rsp
  0x000002480747a967: mov    %rdx,0x20(%rsp)
  0x000002480747a96c: cmp    $0x0,%rdx
  0x000002480747a970: lea    0x20(%rsp),%rdx
  0x000002480747a975: cmove  0x20(%rsp),%rdx    ; OopMap{[32]=Oop off=59}
  0x000002480747a97b: movabs $0x2480747a97b,%r10  ;   {section_word}
  0x000002480747a985: mov    %r10,0x240(%r15)
  0x000002480747a98c: mov    %rsp,0x238(%r15)
  0x000002480747a993: movabs $0x667e60d1,%r10   ;   {external_word}
  0x000002480747a99d: cmpb   $0x0,(%r10)
  0x000002480747a9a1: je     0x000002480747a9f1
  0x000002480747a9a7: push   %rdx
  0x000002480747a9a8: movabs $0x2481fb0c5e0,%rdx  ;   {metadata({method} {0x000002481fb0c5e8} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x000002480747a9b2: mov    %r15,%rcx
  0x000002480747a9b5: sub    $0x20,%rsp
  0x000002480747a9b9: test   $0xf,%esp
  0x000002480747a9bf: je     0x000002480747a9df
  0x000002480747a9c5: sub    $0x8,%rsp
  0x000002480747a9c9: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480747a9d3: call   *%r10
  0x000002480747a9d6: add    $0x8,%rsp
  0x000002480747a9da: jmp    0x000002480747a9ec
  0x000002480747a9df: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480747a9e9: call   *%r10
  0x000002480747a9ec: add    $0x20,%rsp
  0x000002480747a9f0: pop    %rdx
  0x000002480747a9f1: lea    0x258(%r15),%rcx
  0x000002480747a9f8: movl   $0x4,0x2d0(%r15)
  0x000002480747aa03: movabs $0x7ffe39990402,%r10  ;   {runtime_call}
  0x000002480747aa0d: call   *%r10
  0x000002480747aa10: vzeroupper 
  0x000002480747aa13: and    $0xff,%eax
  0x000002480747aa19: setne  %al
  0x000002480747aa1c: movl   $0x5,0x2d0(%r15)
  0x000002480747aa27: mov    %r15d,%ecx
  0x000002480747aa2a: shr    $0x4,%ecx
  0x000002480747aa2d: and    $0xffc,%ecx
  0x000002480747aa33: movabs $0x248055c0000,%r10  ;   {external_word}
  0x000002480747aa3d: mov    %ecx,(%r10,%rcx,1)
  0x000002480747aa41: movabs $0x667e6b0c,%r10   ;   {external_word}
  0x000002480747aa4b: cmpl   $0x0,(%r10)
  0x000002480747aa52: jne    0x000002480747aa66
  0x000002480747aa58: cmpl   $0x0,0x30(%r15)
  0x000002480747aa60: je     0x000002480747aa8f
  0x000002480747aa66: mov    %rax,-0x8(%rbp)
  0x000002480747aa6a: mov    %r15,%rcx
  0x000002480747aa6d: mov    %rsp,%r12
  0x000002480747aa70: sub    $0x20,%rsp
  0x000002480747aa74: and    $0xfffffffffffffff0,%rsp
  0x000002480747aa78: movabs $0x662139d0,%r10   ;   {runtime_call}
  0x000002480747aa82: call   *%r10
  0x000002480747aa85: mov    %r12,%rsp
  0x000002480747aa88: xor    %r12,%r12
  0x000002480747aa8b: mov    -0x8(%rbp),%rax
  0x000002480747aa8f: movl   $0x8,0x2d0(%r15)
  0x000002480747aa9a: cmpl   $0x1,0x2fc(%r15)
  0x000002480747aaa5: je     0x000002480747ab54
  0x000002480747aaab: movabs $0x667e60d1,%r10   ;   {external_word}
  0x000002480747aab5: cmpb   $0x0,(%r10)
  0x000002480747aab9: je     0x000002480747ab0f
  0x000002480747aabf: mov    %rax,-0x8(%rbp)
  0x000002480747aac3: movabs $0x2481fb0c5e0,%rdx  ;   {metadata({method} {0x000002481fb0c5e8} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x000002480747aacd: mov    %r15,%rcx
  0x000002480747aad0: sub    $0x20,%rsp
  0x000002480747aad4: test   $0xf,%esp
  0x000002480747aada: je     0x000002480747aafa
  0x000002480747aae0: sub    $0x8,%rsp
  0x000002480747aae4: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480747aaee: call   *%r10
  0x000002480747aaf1: add    $0x8,%rsp
  0x000002480747aaf5: jmp    0x000002480747ab07
  0x000002480747aafa: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480747ab04: call   *%r10
  0x000002480747ab07: add    $0x20,%rsp
  0x000002480747ab0b: mov    -0x8(%rbp),%rax
  0x000002480747ab0f: movabs $0x0,%r10
  0x000002480747ab19: mov    %r10,0x238(%r15)
  0x000002480747ab20: movabs $0x0,%r10
  0x000002480747ab2a: mov    %r10,0x240(%r15)
  0x000002480747ab31: mov    0x38(%r15),%rcx
  0x000002480747ab35: movl   $0x0,0x100(%rcx)
  0x000002480747ab3f: leave  
  0x000002480747ab40: cmpq   $0x0,0x8(%r15)
  0x000002480747ab48: jne    0x000002480747ab4f
  0x000002480747ab4e: ret    
  0x000002480747ab4f: jmp    Stub::forward exception  ;   {runtime_call}
  0x000002480747ab54: mov    %rax,-0x8(%rbp)
  0x000002480747ab58: mov    %rsp,%r12
  0x000002480747ab5b: sub    $0x20,%rsp
  0x000002480747ab5f: and    $0xfffffffffffffff0,%rsp
  0x000002480747ab63: movabs $0x66203da0,%r10   ;   {runtime_call}
  0x000002480747ab6d: call   *%r10
  0x000002480747ab70: mov    %r12,%rsp
  0x000002480747ab73: xor    %r12,%r12
  0x000002480747ab76: mov    -0x8(%rbp),%rax
  0x000002480747ab7a: jmp    0x000002480747aaab
  0x000002480747ab7f: hlt    
<nmethod compile_id='158' compile_kind='c2n' level='0' entry='0x000002480747a940' size='944' address='0x000002480747a7d0' relocation_offset='288' consts_offset='944' insts_offset='368' method='java/lang/Class isArray ()Z' bytes='0' count='768' iicount='768' stamp='1.995'/>
<writer thread='14928'/>
<task_queued compile_id='159' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='768' iicount='768' level='3' stamp='1.995' comment='tiered' hot_count='768'/>
<task_queued compile_id='160' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='768' iicount='768' level='3' stamp='1.995' comment='tiered' hot_count='768'/>
<task_queued compile_id='161' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='768' iicount='768' level='3' stamp='1.995' comment='tiered' hot_count='768'/>
<task_queued compile_id='162' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='768' iicount='768' level='3' stamp='1.995' comment='tiered' hot_count='768'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480747ab90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fed60b0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/invoke/MemberName&apos;
  0x000002480747acc0: mov    0x28(%rsp),%rbx
  0x000002480747acc5: mov    0x18(%rbx),%rbx
  0x000002480747acc9: test   %rbx,%rbx
  0x000002480747accc: je     0x000002480747acd5
  0x000002480747acd2: jmp    *0x40(%rbx)
  0x000002480747acd5: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747acda: hlt    
  0x000002480747acdb: hlt    
  0x000002480747acdc: hlt    
  0x000002480747acdd: hlt    
  0x000002480747acde: hlt    
  0x000002480747acdf: hlt    
<nmethod compile_id='163' compile_kind='c2n' level='0' entry='0x000002480747acc0' size='336' address='0x000002480747ab90' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.997'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747ad10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fe17038} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x000002480747aea0: mov    %eax,-0x6000(%rsp)
  0x000002480747aea7: push   %rbp
  0x000002480747aea8: sub    $0x40,%rsp
  0x000002480747aeac: movabs $0x2481febc980,%rsi  ;   {metadata(method data for {method} {0x000002481fe17038} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747aeb6: mov    0xdc(%rsi),%edi
  0x000002480747aebc: add    $0x8,%edi
  0x000002480747aebf: mov    %edi,0xdc(%rsi)
  0x000002480747aec5: movabs $0x2481fe17030,%rsi  ;   {metadata({method} {0x000002481fe17038} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747aecf: and    $0x1ff8,%edi
  0x000002480747aed5: cmp    $0x0,%edi
  0x000002480747aed8: je     0x000002480747b0f8  ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@0 (line 197)

  0x000002480747aede: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000002480747b10f
  0x000002480747aee1: mov    %rdx,%rsi
  0x000002480747aee4: movabs $0x2481febc980,%rdi  ;   {metadata(method data for {method} {0x000002481fe17038} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747aeee: mov    0x8(%rsi),%esi
  0x000002480747aef1: shl    $0x3,%rsi
  0x000002480747aef5: cmp    0x110(%rdi),%rsi
  0x000002480747aefc: jne    0x000002480747af0b
  0x000002480747aefe: addq   $0x1,0x118(%rdi)
  0x000002480747af06: jmp    0x000002480747af71
  0x000002480747af0b: cmp    0x120(%rdi),%rsi
  0x000002480747af12: jne    0x000002480747af21
  0x000002480747af14: addq   $0x1,0x128(%rdi)
  0x000002480747af1c: jmp    0x000002480747af71
  0x000002480747af21: cmpq   $0x0,0x110(%rdi)
  0x000002480747af2c: jne    0x000002480747af45
  0x000002480747af2e: mov    %rsi,0x110(%rdi)
  0x000002480747af35: movq   $0x1,0x118(%rdi)
  0x000002480747af40: jmp    0x000002480747af71
  0x000002480747af45: cmpq   $0x0,0x120(%rdi)
  0x000002480747af50: jne    0x000002480747af69
  0x000002480747af52: mov    %rsi,0x120(%rdi)
  0x000002480747af59: movq   $0x1,0x128(%rdi)
  0x000002480747af64: jmp    0x000002480747af71
  0x000002480747af69: addq   $0x1,0x108(%rdi)
  0x000002480747af71: mov    %rdx,%rsi
  0x000002480747af74: mov    %rsi,%rdx          ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 197)

  0x000002480747af77: mov    %rsi,0x30(%rsp)
  0x000002480747af7c: nop
  0x000002480747af7d: nop
  0x000002480747af7e: nop
  0x000002480747af7f: call   0x0000024807375ee0  ; OopMap{[48]=Oop off=228}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 197)
                                                ;   {optimized virtual_call}
  0x000002480747af84: cmp    $0x0,%eax
  0x000002480747af87: movabs $0x2481febc980,%rax  ;   {metadata(method data for {method} {0x000002481fe17038} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747af91: movabs $0x138,%rdx
  0x000002480747af9b: jne    0x000002480747afab
  0x000002480747afa1: movabs $0x148,%rdx
  0x000002480747afab: mov    (%rax,%rdx,1),%rsi
  0x000002480747afaf: lea    0x1(%rsi),%rsi
  0x000002480747afb3: mov    %rsi,(%rax,%rdx,1)
  0x000002480747afb7: jne    0x000002480747afd3  ;*ifne
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@4 (line 197)

  0x000002480747afbd: movabs $0x76bc31b50,%rax  ;   {oop(a &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747afc7: add    $0x40,%rsp
  0x000002480747afcb: pop    %rbp
  0x000002480747afcc: test   %eax,-0x1ecaed2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747afd2: ret                       ;*areturn
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@10 (line 197)

  0x000002480747afd3: mov    0x30(%rsp),%rdx
  0x000002480747afd8: movabs $0x2481febc980,%rsi  ;   {metadata(method data for {method} {0x000002481fe17038} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747afe2: addq   $0x1,0x158(%rsi)
  0x000002480747afea: nop
  0x000002480747afeb: nop
  0x000002480747afec: nop
  0x000002480747afed: nop
  0x000002480747afee: nop
  0x000002480747afef: call   0x0000024807376360  ; OopMap{off=340}
                                                ;*invokestatic forPrimitiveType
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@12 (line 198)
                                                ;   {static_call}
  0x000002480747aff4: movabs $0x2481febc980,%rdx  ;   {metadata(method data for {method} {0x000002481fe17038} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747affe: addq   $0x1,0x168(%rdx)
  0x000002480747b006: movabs $0x2481fed54a0,%rdx  ;   {metadata(method data for {method} {0x000002481fe16f90} &apos;basicType&apos; &apos;(Lsun/invoke/util/Wrapper;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747b010: mov    0xdc(%rdx),%esi
  0x000002480747b016: add    $0x8,%esi
  0x000002480747b019: mov    %esi,0xdc(%rdx)
  0x000002480747b01f: movabs $0x2481fe16f88,%rdx  ;   {metadata({method} {0x000002481fe16f90} &apos;basicType&apos; &apos;(Lsun/invoke/util/Wrapper;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747b029: and    $0x7ffff8,%esi
  0x000002480747b02f: cmp    $0x0,%esi
  0x000002480747b032: je     0x000002480747b114
  0x000002480747b038: cmp    (%rax),%rax        ;*invokevirtual basicTypeChar
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 193)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)
                                                ; implicit exception: dispatches to 0x000002480747b12b
  0x000002480747b03b: mov    %rax,%rdx
  0x000002480747b03e: movabs $0x2481fed54a0,%rsi  ;   {metadata(method data for {method} {0x000002481fe16f90} &apos;basicType&apos; &apos;(Lsun/invoke/util/Wrapper;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747b048: mov    0x8(%rdx),%edx
  0x000002480747b04b: shl    $0x3,%rdx
  0x000002480747b04f: cmp    0x110(%rsi),%rdx
  0x000002480747b056: jne    0x000002480747b065
  0x000002480747b058: addq   $0x1,0x118(%rsi)
  0x000002480747b060: jmp    0x000002480747b0cb
  0x000002480747b065: cmp    0x120(%rsi),%rdx
  0x000002480747b06c: jne    0x000002480747b07b
  0x000002480747b06e: addq   $0x1,0x128(%rsi)
  0x000002480747b076: jmp    0x000002480747b0cb
  0x000002480747b07b: cmpq   $0x0,0x110(%rsi)
  0x000002480747b086: jne    0x000002480747b09f
  0x000002480747b088: mov    %rdx,0x110(%rsi)
  0x000002480747b08f: movq   $0x1,0x118(%rsi)
  0x000002480747b09a: jmp    0x000002480747b0cb
  0x000002480747b09f: cmpq   $0x0,0x120(%rsi)
  0x000002480747b0aa: jne    0x000002480747b0c3
  0x000002480747b0ac: mov    %rdx,0x120(%rsi)
  0x000002480747b0b3: movq   $0x1,0x128(%rsi)
  0x000002480747b0be: jmp    0x000002480747b0cb
  0x000002480747b0c3: addq   $0x1,0x108(%rsi)
  0x000002480747b0cb: movzwl 0x18(%rax),%edx    ;*getfield basicTypeChar
                                                ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 411)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 193)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)

  0x000002480747b0cf: movabs $0x2481fed54a0,%rsi  ;   {metadata(method data for {method} {0x000002481fe16f90} &apos;basicType&apos; &apos;(Lsun/invoke/util/Wrapper;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000002480747b0d9: addq   $0x1,0x138(%rsi)
  0x000002480747b0e1: and    $0xffff,%edx
  0x000002480747b0e7: call   0x0000024807376360  ; OopMap{off=588}
                                                ;*invokestatic basicType
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@6 (line 194)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)
                                                ;   {static_call}
  0x000002480747b0ec: add    $0x40,%rsp
  0x000002480747b0f0: pop    %rbp
  0x000002480747b0f1: test   %eax,-0x1ecaff7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747b0f7: ret    
  0x000002480747b0f8: mov    %rsi,0x8(%rsp)
  0x000002480747b0fd: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747b105: call   0x0000024807433da0  ; OopMap{rdx=Oop off=618}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@-1 (line 197)
                                                ;   {runtime_call}
  0x000002480747b10a: jmp    0x000002480747aede
  0x000002480747b10f: call   0x000002480742f100  ; OopMap{rdx=Oop off=628}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 197)
                                                ;   {runtime_call}
  0x000002480747b114: mov    %rdx,0x8(%rsp)
  0x000002480747b119: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747b121: call   0x0000024807433da0  ; OopMap{rax=Oop off=646}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@-1 (line 193)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)
                                                ;   {runtime_call}
  0x000002480747b126: jmp    0x000002480747b038
  0x000002480747b12b: call   0x000002480742f100  ; OopMap{rax=Oop off=656}
                                                ;*invokevirtual basicTypeChar
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 193)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)
                                                ;   {runtime_call}
  0x000002480747b130: nop
  0x000002480747b131: nop
  0x000002480747b132: mov    0x308(%r15),%rax
  0x000002480747b139: movabs $0x0,%r10
  0x000002480747b143: mov    %r10,0x308(%r15)
  0x000002480747b14a: movabs $0x0,%r10
  0x000002480747b154: mov    %r10,0x310(%r15)
  0x000002480747b15b: add    $0x40,%rsp
  0x000002480747b15f: pop    %rbp
  0x000002480747b160: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747b165: hlt    
  0x000002480747b166: hlt    
  0x000002480747b167: hlt    
  0x000002480747b168: hlt    
  0x000002480747b169: hlt    
  0x000002480747b16a: hlt    
  0x000002480747b16b: hlt    
  0x000002480747b16c: hlt    
  0x000002480747b16d: hlt    
  0x000002480747b16e: hlt    
  0x000002480747b16f: hlt    
  0x000002480747b170: hlt    
  0x000002480747b171: hlt    
  0x000002480747b172: hlt    
  0x000002480747b173: hlt    
  0x000002480747b174: hlt    
  0x000002480747b175: hlt    
  0x000002480747b176: hlt    
  0x000002480747b177: hlt    
  0x000002480747b178: hlt    
  0x000002480747b179: hlt    
  0x000002480747b17a: hlt    
  0x000002480747b17b: hlt    
  0x000002480747b17c: hlt    
  0x000002480747b17d: hlt    
  0x000002480747b17e: hlt    
  0x000002480747b17f: hlt    
[Stub Code]
  0x000002480747b180: nop                       ;   {no_reloc}
  0x000002480747b181: nop
  0x000002480747b182: nop
  0x000002480747b183: nop
  0x000002480747b184: nop
  0x000002480747b185: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747b18f: jmp    0x000002480747b18f  ;   {runtime_call}
  0x000002480747b194: nop
  0x000002480747b195: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747b19f: jmp    0x000002480747b19f  ;   {runtime_call}
  0x000002480747b1a4: nop
  0x000002480747b1a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747b1af: jmp    0x000002480747b1af  ;   {runtime_call}
[Exception Handler]
  0x000002480747b1b4: call   0x0000024807431320  ;   {runtime_call}
  0x000002480747b1b9: mov    %rsp,-0x28(%rsp)
  0x000002480747b1be: sub    $0x80,%rsp
  0x000002480747b1c5: mov    %rax,0x78(%rsp)
  0x000002480747b1ca: mov    %rcx,0x70(%rsp)
  0x000002480747b1cf: mov    %rdx,0x68(%rsp)
  0x000002480747b1d4: mov    %rbx,0x60(%rsp)
  0x000002480747b1d9: mov    %rbp,0x50(%rsp)
  0x000002480747b1de: mov    %rsi,0x48(%rsp)
  0x000002480747b1e3: mov    %rdi,0x40(%rsp)
  0x000002480747b1e8: mov    %r8,0x38(%rsp)
  0x000002480747b1ed: mov    %r9,0x30(%rsp)
  0x000002480747b1f2: mov    %r10,0x28(%rsp)
  0x000002480747b1f7: mov    %r11,0x20(%rsp)
  0x000002480747b1fc: mov    %r12,0x18(%rsp)
  0x000002480747b201: mov    %r13,0x10(%rsp)
  0x000002480747b206: mov    %r14,0x8(%rsp)
  0x000002480747b20b: mov    %r15,(%rsp)
  0x000002480747b20f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747b219: movabs $0x2480747b1b9,%rdx  ;   {internal_word}
  0x000002480747b223: mov    %rsp,%r8
  0x000002480747b226: and    $0xfffffffffffffff0,%rsp
  0x000002480747b22a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747b234: call   *%r10
  0x000002480747b237: hlt    
[Deopt Handler Code]
  0x000002480747b238: movabs $0x2480747b238,%r10  ;   {section_word}
  0x000002480747b242: push   %r10
  0x000002480747b244: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747b249: hlt    
  0x000002480747b24a: hlt    
  0x000002480747b24b: hlt    
  0x000002480747b24c: hlt    
  0x000002480747b24d: hlt    
  0x000002480747b24e: hlt    
  0x000002480747b24f: hlt    
<nmethod compile_id='154' compiler='C1' level='3' entry='0x000002480747aea0' size='1752' address='0x000002480747ad10' relocation_offset='288' insts_offset='400' stub_offset='1136' scopes_data_offset='1368' scopes_pcs_offset='1480' dependencies_offset='1720' nul_chk_table_offset='1728' method='java/lang/invoke/LambdaForm$BasicType basicType (Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='19' count='692' iicount='692' stamp='2.005'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480747b410:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fed66e8} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm4:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x20]   = &apos;java/lang/Object&apos;
  0x000002480747b540: mov    0x14(%rdx),%ebx
  0x000002480747b543: shl    $0x3,%rbx
  0x000002480747b547: mov    0x28(%rbx),%ebx
  0x000002480747b54a: shl    $0x3,%rbx
  0x000002480747b54e: mov    0x18(%rbx),%rbx
  0x000002480747b552: test   %rbx,%rbx
  0x000002480747b555: je     0x000002480747b55e
  0x000002480747b55b: jmp    *0x40(%rbx)
  0x000002480747b55e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747b563: hlt    
  0x000002480747b564: hlt    
  0x000002480747b565: hlt    
  0x000002480747b566: hlt    
  0x000002480747b567: hlt    
<nmethod compile_id='164' compile_kind='c2n' level='0' entry='0x000002480747b540' size='344' address='0x000002480747b410' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='2.007'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747b590:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fcaa760} &apos;removeEldestEntry&apos; &apos;(Ljava/util/Map$Entry;)Z&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8:r8     = &apos;java/util/Map$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480747b6e0: mov    0x8(%rdx),%r10d
  0x000002480747b6e4: shl    $0x3,%r10
  0x000002480747b6e8: cmp    %rax,%r10
  0x000002480747b6eb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747b6f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747b6fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747b700: mov    %eax,-0x6000(%rsp)
  0x000002480747b707: push   %rbp
  0x000002480747b708: sub    $0x30,%rsp         ;*iconst_0
                                                ; - java.util.LinkedHashMap::removeEldestEntry@0 (line 509)

  0x000002480747b70c: mov    $0x0,%eax
  0x000002480747b711: add    $0x30,%rsp
  0x000002480747b715: pop    %rbp
  0x000002480747b716: test   %eax,-0x1ecb61c(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747b71c: ret    
  0x000002480747b71d: nop
  0x000002480747b71e: nop
  0x000002480747b71f: mov    0x308(%r15),%rax
  0x000002480747b726: movabs $0x0,%r10
  0x000002480747b730: mov    %r10,0x308(%r15)
  0x000002480747b737: movabs $0x0,%r10
  0x000002480747b741: mov    %r10,0x310(%r15)
  0x000002480747b748: add    $0x30,%rsp
  0x000002480747b74c: pop    %rbp
  0x000002480747b74d: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747b752: hlt    
  0x000002480747b753: hlt    
  0x000002480747b754: hlt    
  0x000002480747b755: hlt    
  0x000002480747b756: hlt    
  0x000002480747b757: hlt    
  0x000002480747b758: hlt    
  0x000002480747b759: hlt    
  0x000002480747b75a: hlt    
  0x000002480747b75b: hlt    
  0x000002480747b75c: hlt    
  0x000002480747b75d: hlt    
  0x000002480747b75e: hlt    
  0x000002480747b75f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747b760: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747b765: mov    %rsp,-0x28(%rsp)
  0x000002480747b76a: sub    $0x80,%rsp
  0x000002480747b771: mov    %rax,0x78(%rsp)
  0x000002480747b776: mov    %rcx,0x70(%rsp)
  0x000002480747b77b: mov    %rdx,0x68(%rsp)
  0x000002480747b780: mov    %rbx,0x60(%rsp)
  0x000002480747b785: mov    %rbp,0x50(%rsp)
  0x000002480747b78a: mov    %rsi,0x48(%rsp)
  0x000002480747b78f: mov    %rdi,0x40(%rsp)
  0x000002480747b794: mov    %r8,0x38(%rsp)
  0x000002480747b799: mov    %r9,0x30(%rsp)
  0x000002480747b79e: mov    %r10,0x28(%rsp)
  0x000002480747b7a3: mov    %r11,0x20(%rsp)
  0x000002480747b7a8: mov    %r12,0x18(%rsp)
  0x000002480747b7ad: mov    %r13,0x10(%rsp)
  0x000002480747b7b2: mov    %r14,0x8(%rsp)
  0x000002480747b7b7: mov    %r15,(%rsp)
  0x000002480747b7bb: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747b7c5: movabs $0x2480747b765,%rdx  ;   {internal_word}
  0x000002480747b7cf: mov    %rsp,%r8
  0x000002480747b7d2: and    $0xfffffffffffffff0,%rsp
  0x000002480747b7d6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747b7e0: call   *%r10
  0x000002480747b7e3: hlt    
[Deopt Handler Code]
  0x000002480747b7e4: movabs $0x2480747b7e4,%r10  ;   {section_word}
  0x000002480747b7ee: push   %r10
  0x000002480747b7f0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747b7f5: hlt    
  0x000002480747b7f6: hlt    
  0x000002480747b7f7: hlt    
<nmethod compile_id='157' compiler='C1' level='1' entry='0x000002480747b6e0' size='688' address='0x000002480747b590' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='632' dependencies_offset='680' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='588' iicount='588' stamp='2.010'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480747b850:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fed6b80} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/invoke/MemberName&apos;
  0x000002480747b980: mov    0x30(%rsp),%rbx
  0x000002480747b985: cmp    (%rdx),%rax
  0x000002480747b988: mov    0x18(%rbx),%rbx
  0x000002480747b98c: test   %rbx,%rbx
  0x000002480747b98f: je     0x000002480747b998
  0x000002480747b995: jmp    *0x40(%rbx)
  0x000002480747b998: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747b99d: hlt    
  0x000002480747b99e: hlt    
  0x000002480747b99f: hlt    
<nmethod compile_id='165' compile_kind='c2n' level='0' entry='0x000002480747b980' size='336' address='0x000002480747b850' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='2.012'/>
<writer thread='14928'/>
<task_queued compile_id='166' method='java/lang/StringBuffer toString ()Ljava/lang/String;' bytes='36' count='768' iicount='768' level='3' stamp='2.012' comment='tiered' hot_count='768'/>
<writer thread='27436'/>
<task_queued compile_id='167' method='sun/invoke/util/Wrapper basicTypeChar ()C' bytes='5' count='256' iicount='256' level='1' stamp='2.012' comment='tiered' hot_count='256'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747b9d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb72c88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;
  #           [sp+0x80]  (sp of caller)
  0x000002480747bb60: mov    0x8(%rdx),%r10d
  0x000002480747bb64: shl    $0x3,%r10
  0x000002480747bb68: cmp    %rax,%r10
  0x000002480747bb6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747bb71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747bb7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747bb80: mov    %eax,-0x6000(%rsp)
  0x000002480747bb87: push   %rbp
  0x000002480747bb88: sub    $0x70,%rsp
  0x000002480747bb8c: lea    0x50(%rsp),%r8
  0x000002480747bb91: mov    %rdx,0x8(%r8)
  0x000002480747bb95: mov    (%rdx),%rax
  0x000002480747bb98: mov    %rax,%r9
  0x000002480747bb9b: and    $0x7,%r9
  0x000002480747bb9f: cmp    $0x5,%r9
  0x000002480747bba3: jne    0x000002480747bc2d
  0x000002480747bba9: mov    0x8(%rdx),%r9d
  0x000002480747bbad: shl    $0x3,%r9
  0x000002480747bbb1: mov    0xa8(%r9),%r9
  0x000002480747bbb8: or     %r15,%r9
  0x000002480747bbbb: xor    %rax,%r9
  0x000002480747bbbe: and    $0xffffffffffffff87,%r9
  0x000002480747bbc2: je     0x000002480747bc55
  0x000002480747bbc8: test   $0x7,%r9
  0x000002480747bbcf: jne    0x000002480747bc19
  0x000002480747bbd1: test   $0x300,%r9
  0x000002480747bbd8: jne    0x000002480747bbf7
  0x000002480747bbda: and    $0x37f,%rax
  0x000002480747bbe1: mov    %rax,%r9
  0x000002480747bbe4: or     %r15,%r9
  0x000002480747bbe7: lock cmpxchg %r9,(%rdx)
  0x000002480747bbec: jne    0x000002480747be6a
  0x000002480747bbf2: jmp    0x000002480747bc55
  0x000002480747bbf7: mov    0x8(%rdx),%r9d
  0x000002480747bbfb: shl    $0x3,%r9
  0x000002480747bbff: mov    0xa8(%r9),%r9
  0x000002480747bc06: or     %r15,%r9
  0x000002480747bc09: lock cmpxchg %r9,(%rdx)
  0x000002480747bc0e: jne    0x000002480747be6a
  0x000002480747bc14: jmp    0x000002480747bc55
  0x000002480747bc19: mov    0x8(%rdx),%r9d
  0x000002480747bc1d: shl    $0x3,%r9
  0x000002480747bc21: mov    0xa8(%r9),%r9
  0x000002480747bc28: lock cmpxchg %r9,(%rdx)
  0x000002480747bc2d: mov    (%rdx),%rax
  0x000002480747bc30: or     $0x1,%rax
  0x000002480747bc34: mov    %rax,(%r8)
  0x000002480747bc37: lock cmpxchg %r8,(%rdx)
  0x000002480747bc3c: je     0x000002480747bc55
  0x000002480747bc42: sub    %rsp,%rax
  0x000002480747bc45: and    $0xfffffffffffff007,%rax
  0x000002480747bc4c: mov    %rax,(%r8)
  0x000002480747bc4f: jne    0x000002480747be6a
  0x000002480747bc55: movabs $0x2481fd6d598,%r8  ;   {metadata(method data for {method} {0x000002481fb72c88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747bc5f: mov    0xdc(%r8),%r9d
  0x000002480747bc66: add    $0x8,%r9d
  0x000002480747bc6a: mov    %r9d,0xdc(%r8)
  0x000002480747bc71: movabs $0x2481fb72c80,%r8  ;   {metadata({method} {0x000002481fb72c88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747bc7b: and    $0x1ff8,%r9d
  0x000002480747bc82: cmp    $0x0,%r9d
  0x000002480747bc86: je     0x000002480747be7d  ;*aload_0
                                                ; - java.lang.StringBuffer::toString@0 (line 674)

  0x000002480747bc8c: mov    0x14(%rdx),%r8d
  0x000002480747bc90: shl    $0x3,%r8           ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@1 (line 674)

  0x000002480747bc94: cmp    $0x0,%r8
  0x000002480747bc98: movabs $0x2481fd6d598,%r8  ;   {metadata(method data for {method} {0x000002481fb72c88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747bca2: movabs $0x108,%r9
  0x000002480747bcac: jne    0x000002480747bcbc
  0x000002480747bcb2: movabs $0x118,%r9
  0x000002480747bcbc: mov    (%r8,%r9,1),%rsi
  0x000002480747bcc0: lea    0x1(%rsi),%rsi
  0x000002480747bcc4: mov    %rsi,(%r8,%r9,1)
  0x000002480747bcc8: je     0x000002480747bcd6  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 674)

  0x000002480747bcce: mov    %rdx,%rbx
  0x000002480747bcd1: jmp    0x000002480747bd31  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 677)

  0x000002480747bcd6: mov    0x10(%rdx),%r8d
  0x000002480747bcda: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.StringBuffer::toString@9 (line 675)

  0x000002480747bcde: mov    0xc(%rdx),%r9d     ;*getfield count
                                                ; - java.lang.StringBuffer::toString@14 (line 675)

  0x000002480747bce2: movabs $0x2481fd6d598,%rsi  ;   {metadata(method data for {method} {0x000002481fb72c88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747bcec: addq   $0x1,0x128(%rsi)
  0x000002480747bcf4: mov    %rdx,0x48(%rsp)
  0x000002480747bcf9: mov    %r8,%rdx
  0x000002480747bcfc: mov    $0x0,%r8d          ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 675)

  0x000002480747bd02: nop
  0x000002480747bd03: nop
  0x000002480747bd04: nop
  0x000002480747bd05: nop
  0x000002480747bd06: nop
  0x000002480747bd07: call   0x0000024807376360  ; OopMap{[72]=Oop [88]=Oop off=428}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 675)
                                                ;   {static_call}
  0x000002480747bd0c: mov    0x48(%rsp),%rbx
  0x000002480747bd11: mov    %rax,%r10
  0x000002480747bd14: shr    $0x3,%r10
  0x000002480747bd18: mov    %r10d,0x14(%rbx)
  0x000002480747bd1c: mov    %rbx,%rdx
  0x000002480747bd1f: shr    $0x9,%rdx
  0x000002480747bd23: movabs $0x248130de000,%rsi
  0x000002480747bd2d: movb   $0x0,(%rdx,%rsi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::toString@20 (line 675)

  0x000002480747bd31: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000002480747bd3b: mov    0x60(%r15),%rax
  0x000002480747bd3f: lea    0x18(%rax),%rdi
  0x000002480747bd43: cmp    0x70(%r15),%rdi
  0x000002480747bd47: ja     0x000002480747be94
  0x000002480747bd4d: mov    %rdi,0x60(%r15)
  0x000002480747bd51: mov    0xa8(%rdx),%rcx
  0x000002480747bd58: mov    %rcx,(%rax)
  0x000002480747bd5b: mov    %rdx,%rcx
  0x000002480747bd5e: shr    $0x3,%rcx
  0x000002480747bd62: mov    %ecx,0x8(%rax)
  0x000002480747bd65: xor    %rcx,%rcx
  0x000002480747bd68: mov    %ecx,0xc(%rax)
  0x000002480747bd6b: xor    %rcx,%rcx
  0x000002480747bd6e: mov    %rcx,0x10(%rax)
  0x000002480747bd72: mov    %rax,%rsi          ;*new  ; - java.lang.StringBuffer::toString@23 (line 677)

  0x000002480747bd75: mov    0x14(%rbx),%eax
  0x000002480747bd78: shl    $0x3,%rax          ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 677)

  0x000002480747bd7c: mov    %rsi,%rdi
  0x000002480747bd7f: movabs $0x2481fd6d598,%rbx  ;   {metadata(method data for {method} {0x000002481fb72c88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000002480747bd89: addq   $0x1,0x138(%rbx)
  0x000002480747bd91: movabs $0x2481fd6b4d8,%rdi  ;   {metadata(method data for {method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480747bd9b: mov    0xdc(%rdi),%ebx
  0x000002480747bda1: add    $0x8,%ebx
  0x000002480747bda4: mov    %ebx,0xdc(%rdi)
  0x000002480747bdaa: movabs $0x2481fb03bc8,%rdi  ;   {metadata({method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480747bdb4: and    $0x7ffff8,%ebx
  0x000002480747bdba: cmp    $0x0,%ebx
  0x000002480747bdbd: je     0x000002480747bea1
  0x000002480747bdc3: mov    %rsi,%rdi
  0x000002480747bdc6: movabs $0x2481fd6b4d8,%rbx  ;   {metadata(method data for {method} {0x000002481fb03bd0} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000002480747bdd0: addq   $0x1,0x108(%rbx)
  0x000002480747bdd8: movabs $0x2481fc36b00,%rdi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480747bde2: mov    0xdc(%rdi),%ebx
  0x000002480747bde8: add    $0x8,%ebx
  0x000002480747bdeb: mov    %ebx,0xdc(%rdi)
  0x000002480747bdf1: movabs $0x2481fb00480,%rdi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480747bdfb: and    $0x7ffff8,%ebx
  0x000002480747be01: cmp    $0x0,%ebx
  0x000002480747be04: je     0x000002480747beb8
  0x000002480747be0a: mov    %rax,%r10
  0x000002480747be0d: shr    $0x3,%r10
  0x000002480747be11: mov    %r10d,0xc(%rsi)
  0x000002480747be15: mov    %rsi,%rax
  0x000002480747be18: shr    $0x9,%rax
  0x000002480747be1c: movabs $0x248130de000,%rdi
  0x000002480747be26: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 677)

  0x000002480747be2a: lea    0x50(%rsp),%rax
  0x000002480747be2f: mov    0x8(%rax),%rbx
  0x000002480747be33: mov    (%rbx),%rdi
  0x000002480747be36: and    $0x7,%rdi
  0x000002480747be3a: cmp    $0x5,%rdi
  0x000002480747be3e: je     0x000002480747be5b
  0x000002480747be44: mov    (%rax),%rdi
  0x000002480747be47: test   %rdi,%rdi
  0x000002480747be4a: je     0x000002480747be5b
  0x000002480747be50: lock cmpxchg %rdi,(%rbx)
  0x000002480747be55: jne    0x000002480747becf  ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 677)

  0x000002480747be5b: mov    %rsi,%rax
  0x000002480747be5e: add    $0x70,%rsp
  0x000002480747be62: pop    %rbp
  0x000002480747be63: test   %eax,-0x1ecbd69(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747be69: ret    
  0x000002480747be6a: mov    %rdx,0x8(%rsp)
  0x000002480747be6f: mov    %r8,(%rsp)
  0x000002480747be73: call   0x0000024807431ea0  ; OopMap{rdx=Oop [88]=Oop off=792}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 674)
                                                ;   {runtime_call}
  0x000002480747be78: jmp    0x000002480747bc55
  0x000002480747be7d: mov    %r8,0x8(%rsp)
  0x000002480747be82: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747be8a: call   0x0000024807433da0  ; OopMap{rdx=Oop [88]=Oop off=815}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 674)
                                                ;   {runtime_call}
  0x000002480747be8f: jmp    0x000002480747bc8c
  0x000002480747be94: mov    %rdx,%rdx
  0x000002480747be97: call   0x000002480742f900  ; OopMap{rbx=Oop [88]=Oop off=828}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 677)
                                                ;   {runtime_call}
  0x000002480747be9c: jmp    0x000002480747bd72
  0x000002480747bea1: mov    %rdi,0x8(%rsp)
  0x000002480747bea6: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747beae: call   0x0000024807433da0  ; OopMap{rsi=Oop rax=Oop [88]=Oop off=851}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 677)
                                                ;   {runtime_call}
  0x000002480747beb3: jmp    0x000002480747bdc3
  0x000002480747beb8: mov    %rdi,0x8(%rsp)
  0x000002480747bebd: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747bec5: call   0x0000024807433da0  ; OopMap{rsi=Oop rax=Oop [88]=Oop off=874}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 677)
                                                ;   {runtime_call}
  0x000002480747beca: jmp    0x000002480747be0a
  0x000002480747becf: lea    0x50(%rsp),%rax
  0x000002480747bed4: mov    %rax,(%rsp)
  0x000002480747bed8: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480747bedd: jmp    0x000002480747be5b
  0x000002480747bee2: nop
  0x000002480747bee3: nop
  0x000002480747bee4: mov    0x308(%r15),%rax
  0x000002480747beeb: movabs $0x0,%r10
  0x000002480747bef5: mov    %r10,0x308(%r15)
  0x000002480747befc: movabs $0x0,%r10
  0x000002480747bf06: mov    %r10,0x310(%r15)
  0x000002480747bf0d: mov    %rax,%rbx
  0x000002480747bf10: lea    0x50(%rsp),%rax
  0x000002480747bf15: mov    0x8(%rax),%rsi
  0x000002480747bf19: mov    (%rsi),%rdi
  0x000002480747bf1c: and    $0x7,%rdi
  0x000002480747bf20: cmp    $0x5,%rdi
  0x000002480747bf24: je     0x000002480747bf41
  0x000002480747bf2a: mov    (%rax),%rdi
  0x000002480747bf2d: test   %rdi,%rdi
  0x000002480747bf30: je     0x000002480747bf41
  0x000002480747bf36: lock cmpxchg %rdi,(%rsi)
  0x000002480747bf3b: jne    0x000002480747bf4e
  0x000002480747bf41: mov    %rbx,%rax
  0x000002480747bf44: add    $0x70,%rsp
  0x000002480747bf48: pop    %rbp
  0x000002480747bf49: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747bf4e: lea    0x50(%rsp),%rax
  0x000002480747bf53: mov    %rax,(%rsp)
  0x000002480747bf57: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480747bf5c: jmp    0x000002480747bf41
  0x000002480747bf5e: hlt    
  0x000002480747bf5f: hlt    
[Stub Code]
  0x000002480747bf60: nop                       ;   {no_reloc}
  0x000002480747bf61: nop
  0x000002480747bf62: nop
  0x000002480747bf63: nop
  0x000002480747bf64: nop
  0x000002480747bf65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747bf6f: jmp    0x000002480747bf6f  ;   {runtime_call}
[Exception Handler]
  0x000002480747bf74: call   0x0000024807431320  ;   {runtime_call}
  0x000002480747bf79: mov    %rsp,-0x28(%rsp)
  0x000002480747bf7e: sub    $0x80,%rsp
  0x000002480747bf85: mov    %rax,0x78(%rsp)
  0x000002480747bf8a: mov    %rcx,0x70(%rsp)
  0x000002480747bf8f: mov    %rdx,0x68(%rsp)
  0x000002480747bf94: mov    %rbx,0x60(%rsp)
  0x000002480747bf99: mov    %rbp,0x50(%rsp)
  0x000002480747bf9e: mov    %rsi,0x48(%rsp)
  0x000002480747bfa3: mov    %rdi,0x40(%rsp)
  0x000002480747bfa8: mov    %r8,0x38(%rsp)
  0x000002480747bfad: mov    %r9,0x30(%rsp)
  0x000002480747bfb2: mov    %r10,0x28(%rsp)
  0x000002480747bfb7: mov    %r11,0x20(%rsp)
  0x000002480747bfbc: mov    %r12,0x18(%rsp)
  0x000002480747bfc1: mov    %r13,0x10(%rsp)
  0x000002480747bfc6: mov    %r14,0x8(%rsp)
  0x000002480747bfcb: mov    %r15,(%rsp)
  0x000002480747bfcf: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747bfd9: movabs $0x2480747bf79,%rdx  ;   {internal_word}
  0x000002480747bfe3: mov    %rsp,%r8
  0x000002480747bfe6: and    $0xfffffffffffffff0,%rsp
  0x000002480747bfea: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747bff4: call   *%r10
  0x000002480747bff7: hlt    
[Deopt Handler Code]
  0x000002480747bff8: movabs $0x2480747bff8,%r10  ;   {section_word}
  0x000002480747c002: push   %r10
  0x000002480747c004: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747c009: hlt    
  0x000002480747c00a: hlt    
  0x000002480747c00b: hlt    
  0x000002480747c00c: hlt    
  0x000002480747c00d: hlt    
  0x000002480747c00e: hlt    
  0x000002480747c00f: hlt    
<nmethod compile_id='166' compiler='C1' level='3' entry='0x000002480747bb60' size='2104' address='0x000002480747b9d0' relocation_offset='288' insts_offset='400' stub_offset='1424' scopes_data_offset='1624' scopes_pcs_offset='1776' dependencies_offset='2096' method='java/lang/StringBuffer toString ()Ljava/lang/String;' bytes='36' count='898' iicount='898' stamp='2.022'/>
Decoding compiled method 0x000002480747c250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fcb82e0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap$Entry&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x000002480747c3c0: mov    0x8(%rdx),%r10d
  0x000002480747c3c4: shl    $0x3,%r10
  0x000002480747c3c8: cmp    %rax,%r10
  0x000002480747c3cb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747c3d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747c3dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747c3e0: mov    %eax,-0x6000(%rsp)
  0x000002480747c3e7: push   %rbp
  0x000002480747c3e8: sub    $0x60,%rsp
  0x000002480747c3ec: movabs $0x2481fed5628,%rbx  ;   {metadata(method data for {method} {0x000002481fcb82e0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000002480747c3f6: mov    0xdc(%rbx),%eax
  0x000002480747c3fc: add    $0x8,%eax
  0x000002480747c3ff: mov    %eax,0xdc(%rbx)
  0x000002480747c405: movabs $0x2481fcb82d8,%rbx  ;   {metadata({method} {0x000002481fcb82e0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000002480747c40f: and    $0x1ff8,%eax
  0x000002480747c415: cmp    $0x0,%eax
  0x000002480747c418: je     0x000002480747c505  ;*aload_0
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@0 (line 195)

  0x000002480747c41e: mov    %rdx,%rbx
  0x000002480747c421: movabs $0x2481fed5628,%rax  ;   {metadata(method data for {method} {0x000002481fcb82e0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000002480747c42b: addq   $0x1,0x108(%rax)
  0x000002480747c433: movabs $0x2481fd5f868,%rbx  ;   {metadata(method data for {method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000002480747c43d: mov    0xdc(%rbx),%eax
  0x000002480747c443: add    $0x8,%eax
  0x000002480747c446: mov    %eax,0xdc(%rbx)
  0x000002480747c44c: movabs $0x2481fbef950,%rbx  ;   {metadata({method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000002480747c456: and    $0x7ffff8,%eax
  0x000002480747c45c: cmp    $0x0,%eax
  0x000002480747c45f: je     0x000002480747c51c
  0x000002480747c465: mov    %rdx,%rbx
  0x000002480747c468: movabs $0x2481fd5f868,%rax  ;   {metadata(method data for {method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000002480747c472: addq   $0x1,0x108(%rax)
  0x000002480747c47a: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480747c484: mov    0xdc(%rbx),%eax
  0x000002480747c48a: add    $0x8,%eax
  0x000002480747c48d: mov    %eax,0xdc(%rbx)
  0x000002480747c493: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480747c49d: and    $0x7ffff8,%eax
  0x000002480747c4a3: cmp    $0x0,%eax
  0x000002480747c4a6: je     0x000002480747c533
  0x000002480747c4ac: mov    %r8d,0xc(%rdx)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x000002480747c4b0: mov    %r9,%r10
  0x000002480747c4b3: shr    $0x3,%r10
  0x000002480747c4b7: mov    %r10d,0x10(%rdx)
  0x000002480747c4bb: mov    %rdx,%rbx
  0x000002480747c4be: shr    $0x9,%rbx
  0x000002480747c4c2: movabs $0x248130de000,%rax
  0x000002480747c4cc: movb   $0x0,(%rbx,%rax,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x000002480747c4d0: mov    %rdi,%r10
  0x000002480747c4d3: shr    $0x3,%r10
  0x000002480747c4d7: mov    %r10d,0x14(%rdx)
  0x000002480747c4db: mov    %rdx,%rdi
  0x000002480747c4de: shr    $0x9,%rdi
  0x000002480747c4e2: movb   $0x0,(%rdi,%rax,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 289)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x000002480747c4e6: mov    %rsi,%r10
  0x000002480747c4e9: shr    $0x3,%r10
  0x000002480747c4ed: mov    %r10d,0x18(%rdx)
  0x000002480747c4f1: shr    $0x9,%rdx
  0x000002480747c4f5: movb   $0x0,(%rdx,%rax,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 290)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x000002480747c4f9: add    $0x60,%rsp
  0x000002480747c4fd: pop    %rbp
  0x000002480747c4fe: test   %eax,-0x1ecc404(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747c504: ret    
  0x000002480747c505: mov    %rbx,0x8(%rsp)
  0x000002480747c50a: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747c512: call   0x0000024807433da0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=343}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@-1 (line 195)
                                                ;   {runtime_call}
  0x000002480747c517: jmp    0x000002480747c41e
  0x000002480747c51c: mov    %rbx,0x8(%rsp)
  0x000002480747c521: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747c529: call   0x0000024807433da0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=366}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ;   {runtime_call}
  0x000002480747c52e: jmp    0x000002480747c465
  0x000002480747c533: mov    %rbx,0x8(%rsp)
  0x000002480747c538: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747c540: call   0x0000024807433da0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=389}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ;   {runtime_call}
  0x000002480747c545: jmp    0x000002480747c4ac
  0x000002480747c54a: nop
  0x000002480747c54b: nop
  0x000002480747c54c: mov    0x308(%r15),%rax
  0x000002480747c553: movabs $0x0,%r10
  0x000002480747c55d: mov    %r10,0x308(%r15)
  0x000002480747c564: movabs $0x0,%r10
  0x000002480747c56e: mov    %r10,0x310(%r15)
  0x000002480747c575: add    $0x60,%rsp
  0x000002480747c579: pop    %rbp
  0x000002480747c57a: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747c57f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747c580: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747c585: mov    %rsp,-0x28(%rsp)
  0x000002480747c58a: sub    $0x80,%rsp
  0x000002480747c591: mov    %rax,0x78(%rsp)
  0x000002480747c596: mov    %rcx,0x70(%rsp)
  0x000002480747c59b: mov    %rdx,0x68(%rsp)
  0x000002480747c5a0: mov    %rbx,0x60(%rsp)
  0x000002480747c5a5: mov    %rbp,0x50(%rsp)
  0x000002480747c5aa: mov    %rsi,0x48(%rsp)
  0x000002480747c5af: mov    %rdi,0x40(%rsp)
  0x000002480747c5b4: mov    %r8,0x38(%rsp)
  0x000002480747c5b9: mov    %r9,0x30(%rsp)
  0x000002480747c5be: mov    %r10,0x28(%rsp)
  0x000002480747c5c3: mov    %r11,0x20(%rsp)
  0x000002480747c5c8: mov    %r12,0x18(%rsp)
  0x000002480747c5cd: mov    %r13,0x10(%rsp)
  0x000002480747c5d2: mov    %r14,0x8(%rsp)
  0x000002480747c5d7: mov    %r15,(%rsp)
  0x000002480747c5db: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747c5e5: movabs $0x2480747c585,%rdx  ;   {internal_word}
  0x000002480747c5ef: mov    %rsp,%r8
  0x000002480747c5f2: and    $0xfffffffffffffff0,%rsp
  0x000002480747c5f6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747c600: call   *%r10
  0x000002480747c603: hlt    
[Deopt Handler Code]
  0x000002480747c604: movabs $0x2480747c604,%r10  ;   {section_word}
  0x000002480747c60e: push   %r10
  0x000002480747c610: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747c615: hlt    
  0x000002480747c616: hlt    
  0x000002480747c617: hlt    
<nmethod compile_id='160' compiler='C1' level='3' entry='0x000002480747c3c0' size='1264' address='0x000002480747c250' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='1000' scopes_pcs_offset='1096' dependencies_offset='1256' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='839' iicount='839' stamp='2.028'/>
Decoding compiled method 0x000002480747c750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8:r8     = &apos;java/util/LinkedHashMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480747c8c0: mov    0x8(%rdx),%r10d
  0x000002480747c8c4: shl    $0x3,%r10
  0x000002480747c8c8: cmp    %rax,%r10
  0x000002480747c8cb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747c8d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747c8dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747c8e0: mov    %eax,-0x6000(%rsp)
  0x000002480747c8e7: push   %rbp
  0x000002480747c8e8: sub    $0x30,%rsp
  0x000002480747c8ec: movabs $0x2481fed5778,%rsi  ;   {metadata(method data for {method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747c8f6: mov    0xdc(%rsi),%edi
  0x000002480747c8fc: add    $0x8,%edi
  0x000002480747c8ff: mov    %edi,0xdc(%rsi)
  0x000002480747c905: movabs $0x2481fca9920,%rsi  ;   {metadata({method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747c90f: and    $0x1ff8,%edi
  0x000002480747c915: cmp    $0x0,%edi
  0x000002480747c918: je     0x000002480747c9f7  ;*aload_0
                                                ; - java.util.LinkedHashMap::linkNodeLast@0 (line 223)

  0x000002480747c91e: mov    0x34(%rdx),%esi
  0x000002480747c921: shl    $0x3,%rsi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)

  0x000002480747c925: mov    %r8,%r10
  0x000002480747c928: shr    $0x3,%r10
  0x000002480747c92c: mov    %r10d,0x34(%rdx)
  0x000002480747c930: mov    %rdx,%rdi
  0x000002480747c933: shr    $0x9,%rdi
  0x000002480747c937: movabs $0x248130de000,%rbx
  0x000002480747c941: movb   $0x0,(%rdi,%rbx,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)

  0x000002480747c945: cmp    $0x0,%rsi
  0x000002480747c949: movabs $0x2481fed5778,%rdi  ;   {metadata(method data for {method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747c953: movabs $0x108,%rbx
  0x000002480747c95d: jne    0x000002480747c96d
  0x000002480747c963: movabs $0x118,%rbx
  0x000002480747c96d: mov    (%rdi,%rbx,1),%rax
  0x000002480747c971: lea    0x1(%rax),%rax
  0x000002480747c975: mov    %rax,(%rdi,%rbx,1)
  0x000002480747c979: jne    0x000002480747c9b8  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)

  0x000002480747c97f: mov    %r8,%r10
  0x000002480747c982: shr    $0x3,%r10
  0x000002480747c986: mov    %r10d,0x30(%rdx)
  0x000002480747c98a: shr    $0x9,%rdx
  0x000002480747c98e: movabs $0x248130de000,%rsi
  0x000002480747c998: movb   $0x0,(%rdx,%rsi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)

  0x000002480747c99c: movabs $0x2481fed5778,%rsi  ;   {metadata(method data for {method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747c9a6: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)

  0x000002480747c9ac: add    $0x30,%rsp
  0x000002480747c9b0: pop    %rbp
  0x000002480747c9b1: test   %eax,-0x1ecc8b7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747c9b7: ret    
  0x000002480747c9b8: mov    %rsi,%r10
  0x000002480747c9bb: shr    $0x3,%r10
  0x000002480747c9bf: mov    %r10d,0x1c(%r8)    ; implicit exception: dispatches to 0x000002480747ca0e
  0x000002480747c9c3: mov    %r8,%rdi
  0x000002480747c9c6: shr    $0x9,%rdi
  0x000002480747c9ca: movabs $0x248130de000,%rbx
  0x000002480747c9d4: movb   $0x0,(%rdi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)

  0x000002480747c9d8: mov    %r8,%r10
  0x000002480747c9db: shr    $0x3,%r10
  0x000002480747c9df: mov    %r10d,0x20(%rsi)   ; implicit exception: dispatches to 0x000002480747ca13
  0x000002480747c9e3: shr    $0x9,%rsi
  0x000002480747c9e7: movb   $0x0,(%rsi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)

  0x000002480747c9eb: add    $0x30,%rsp
  0x000002480747c9ef: pop    %rbp
  0x000002480747c9f0: test   %eax,-0x1ecc8f6(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747c9f6: ret    
  0x000002480747c9f7: mov    %rsi,0x8(%rsp)
  0x000002480747c9fc: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747ca04: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=329}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ;   {runtime_call}
  0x000002480747ca09: jmp    0x000002480747c91e
  0x000002480747ca0e: call   0x000002480742f100  ; OopMap{rsi=Oop r8=Oop off=339}
                                                ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ;   {runtime_call}
  0x000002480747ca13: call   0x000002480742f100  ; OopMap{rsi=Oop off=344}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ;   {runtime_call}
  0x000002480747ca18: nop
  0x000002480747ca19: nop
  0x000002480747ca1a: mov    0x308(%r15),%rax
  0x000002480747ca21: movabs $0x0,%r10
  0x000002480747ca2b: mov    %r10,0x308(%r15)
  0x000002480747ca32: movabs $0x0,%r10
  0x000002480747ca3c: mov    %r10,0x310(%r15)
  0x000002480747ca43: add    $0x30,%rsp
  0x000002480747ca47: pop    %rbp
  0x000002480747ca48: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747ca4d: hlt    
  0x000002480747ca4e: hlt    
  0x000002480747ca4f: hlt    
  0x000002480747ca50: hlt    
  0x000002480747ca51: hlt    
  0x000002480747ca52: hlt    
  0x000002480747ca53: hlt    
  0x000002480747ca54: hlt    
  0x000002480747ca55: hlt    
  0x000002480747ca56: hlt    
  0x000002480747ca57: hlt    
  0x000002480747ca58: hlt    
  0x000002480747ca59: hlt    
  0x000002480747ca5a: hlt    
  0x000002480747ca5b: hlt    
  0x000002480747ca5c: hlt    
  0x000002480747ca5d: hlt    
  0x000002480747ca5e: hlt    
  0x000002480747ca5f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747ca60: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747ca65: mov    %rsp,-0x28(%rsp)
  0x000002480747ca6a: sub    $0x80,%rsp
  0x000002480747ca71: mov    %rax,0x78(%rsp)
  0x000002480747ca76: mov    %rcx,0x70(%rsp)
  0x000002480747ca7b: mov    %rdx,0x68(%rsp)
  0x000002480747ca80: mov    %rbx,0x60(%rsp)
  0x000002480747ca85: mov    %rbp,0x50(%rsp)
  0x000002480747ca8a: mov    %rsi,0x48(%rsp)
  0x000002480747ca8f: mov    %rdi,0x40(%rsp)
  0x000002480747ca94: mov    %r8,0x38(%rsp)
  0x000002480747ca99: mov    %r9,0x30(%rsp)
  0x000002480747ca9e: mov    %r10,0x28(%rsp)
  0x000002480747caa3: mov    %r11,0x20(%rsp)
  0x000002480747caa8: mov    %r12,0x18(%rsp)
  0x000002480747caad: mov    %r13,0x10(%rsp)
  0x000002480747cab2: mov    %r14,0x8(%rsp)
  0x000002480747cab7: mov    %r15,(%rsp)
  0x000002480747cabb: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747cac5: movabs $0x2480747ca65,%rdx  ;   {internal_word}
  0x000002480747cacf: mov    %rsp,%r8
  0x000002480747cad2: and    $0xfffffffffffffff0,%rsp
  0x000002480747cad6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747cae0: call   *%r10
  0x000002480747cae3: hlt    
[Deopt Handler Code]
  0x000002480747cae4: movabs $0x2480747cae4,%r10  ;   {section_word}
  0x000002480747caee: push   %r10
  0x000002480747caf0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747caf5: hlt    
  0x000002480747caf6: hlt    
  0x000002480747caf7: hlt    
<nmethod compile_id='161' compiler='C1' level='3' entry='0x000002480747c8c0' size='1272' address='0x000002480747c750' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='944' scopes_pcs_offset='1032' dependencies_offset='1240' nul_chk_table_offset='1248' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='839' iicount='839' stamp='2.034'/>
<writer thread='27436'/>
<task_queued compile_id='168' method='java/lang/invoke/MethodTypeForm erasedType ()Ljava/lang/invoke/MethodType;' bytes='5' count='128' iicount='128' level='1' stamp='2.034' comment='tiered' hot_count='128'/>
Decoding compiled method 0x000002480747cc90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feda248} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/invoke/MemberName&apos;
  0x000002480747cdc0: mov    0x30(%rsp),%rbx
  0x000002480747cdc5: mov    0x18(%rbx),%rbx
  0x000002480747cdc9: test   %rbx,%rbx
  0x000002480747cdcc: je     0x000002480747cdd5
  0x000002480747cdd2: jmp    *0x40(%rbx)
  0x000002480747cdd5: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747cdda: hlt    
  0x000002480747cddb: hlt    
  0x000002480747cddc: hlt    
  0x000002480747cddd: hlt    
  0x000002480747cdde: hlt    
  0x000002480747cddf: hlt    
<nmethod compile_id='169' compile_kind='c2n' level='0' entry='0x000002480747cdc0' size='336' address='0x000002480747cc90' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='2.037'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747ce10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb6b440} &apos;parameterType&apos; &apos;(I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodType&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000002480747cf60: mov    0x8(%rdx),%r10d
  0x000002480747cf64: shl    $0x3,%r10
  0x000002480747cf68: cmp    %rax,%r10
  0x000002480747cf6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747cf71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747cf7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747cf80: mov    %eax,-0x6000(%rsp)
  0x000002480747cf87: push   %rbp
  0x000002480747cf88: sub    $0x30,%rsp
  0x000002480747cf8c: movabs $0x2481febe168,%rax  ;   {metadata(method data for {method} {0x000002481fb6b440} &apos;parameterType&apos; &apos;(I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480747cf96: mov    0xdc(%rax),%esi
  0x000002480747cf9c: add    $0x8,%esi
  0x000002480747cf9f: mov    %esi,0xdc(%rax)
  0x000002480747cfa5: movabs $0x2481fb6b438,%rax  ;   {metadata({method} {0x000002481fb6b440} &apos;parameterType&apos; &apos;(I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480747cfaf: and    $0x1ff8,%esi
  0x000002480747cfb5: cmp    $0x0,%esi
  0x000002480747cfb8: je     0x000002480747cfe8  ;*aload_0
                                                ; - java.lang.invoke.MethodType::parameterType@0 (line 707)

  0x000002480747cfbe: mov    0x10(%rdx),%eax
  0x000002480747cfc1: shl    $0x3,%rax          ;*getfield ptypes
                                                ; - java.lang.invoke.MethodType::parameterType@1 (line 707)

  0x000002480747cfc5: mov    0xc(%rax),%esi     ; implicit exception: dispatches to 0x000002480747cffc
  0x000002480747cfc8: movslq %r8d,%rdi
  0x000002480747cfcb: cmp    %r8d,%esi
  0x000002480747cfce: jbe    0x000002480747d001
  0x000002480747cfd4: mov    0x10(%rax,%rdi,4),%eax
  0x000002480747cfd8: shl    $0x3,%rax          ;*aaload
                                                ; - java.lang.invoke.MethodType::parameterType@5 (line 707)

  0x000002480747cfdc: add    $0x30,%rsp
  0x000002480747cfe0: pop    %rbp
  0x000002480747cfe1: test   %eax,-0x1eccee7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747cfe7: ret    
  0x000002480747cfe8: mov    %rax,0x8(%rsp)
  0x000002480747cfed: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747cff5: call   0x0000024807433da0  ; OopMap{rdx=Oop off=154}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::parameterType@-1 (line 707)
                                                ;   {runtime_call}
  0x000002480747cffa: jmp    0x000002480747cfbe
  0x000002480747cffc: call   0x000002480742f100  ; OopMap{rax=Oop off=161}
                                                ;*aaload
                                                ; - java.lang.invoke.MethodType::parameterType@5 (line 707)
                                                ;   {runtime_call}
  0x000002480747d001: mov    %r8,(%rsp)
  0x000002480747d005: call   0x000002480742e800  ; OopMap{rax=Oop off=170}
                                                ;*aaload
                                                ; - java.lang.invoke.MethodType::parameterType@5 (line 707)
                                                ;   {runtime_call}
  0x000002480747d00a: nop
  0x000002480747d00b: nop
  0x000002480747d00c: mov    0x308(%r15),%rax
  0x000002480747d013: movabs $0x0,%r10
  0x000002480747d01d: mov    %r10,0x308(%r15)
  0x000002480747d024: movabs $0x0,%r10
  0x000002480747d02e: mov    %r10,0x310(%r15)
  0x000002480747d035: add    $0x30,%rsp
  0x000002480747d039: pop    %rbp
  0x000002480747d03a: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747d03f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747d040: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747d045: mov    %rsp,-0x28(%rsp)
  0x000002480747d04a: sub    $0x80,%rsp
  0x000002480747d051: mov    %rax,0x78(%rsp)
  0x000002480747d056: mov    %rcx,0x70(%rsp)
  0x000002480747d05b: mov    %rdx,0x68(%rsp)
  0x000002480747d060: mov    %rbx,0x60(%rsp)
  0x000002480747d065: mov    %rbp,0x50(%rsp)
  0x000002480747d06a: mov    %rsi,0x48(%rsp)
  0x000002480747d06f: mov    %rdi,0x40(%rsp)
  0x000002480747d074: mov    %r8,0x38(%rsp)
  0x000002480747d079: mov    %r9,0x30(%rsp)
  0x000002480747d07e: mov    %r10,0x28(%rsp)
  0x000002480747d083: mov    %r11,0x20(%rsp)
  0x000002480747d088: mov    %r12,0x18(%rsp)
  0x000002480747d08d: mov    %r13,0x10(%rsp)
  0x000002480747d092: mov    %r14,0x8(%rsp)
  0x000002480747d097: mov    %r15,(%rsp)
  0x000002480747d09b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747d0a5: movabs $0x2480747d045,%rdx  ;   {internal_word}
  0x000002480747d0af: mov    %rsp,%r8
  0x000002480747d0b2: and    $0xfffffffffffffff0,%rsp
  0x000002480747d0b6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747d0c0: call   *%r10
  0x000002480747d0c3: hlt    
[Deopt Handler Code]
  0x000002480747d0c4: movabs $0x2480747d0c4,%r10  ;   {section_word}
  0x000002480747d0ce: push   %r10
  0x000002480747d0d0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747d0d5: hlt    
  0x000002480747d0d6: hlt    
  0x000002480747d0d7: hlt    
<nmethod compile_id='156' compiler='C1' level='3' entry='0x000002480747cf60' size='920' address='0x000002480747ce10' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='720' scopes_pcs_offset='768' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/invoke/MethodType parameterType (I)Ljava/lang/Class;' bytes='7' count='851' iicount='851' stamp='2.043'/>
<writer thread='27436'/>
<task_queued compile_id='170' method='java/util/Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='896' iicount='896' level='3' stamp='2.043' comment='tiered' hot_count='896'/>
Decoding compiled method 0x000002480747d490:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481feda360} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm5:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/Object&apos;
  # parm12:   [sp+0x30]   = &apos;java/lang/invoke/MemberName&apos;
  0x000002480747d5c0: mov    0x38(%rsp),%rbx
  0x000002480747d5c5: mov    0x18(%rbx),%rbx
  0x000002480747d5c9: test   %rbx,%rbx
  0x000002480747d5cc: je     0x000002480747d5d5
  0x000002480747d5d2: jmp    *0x40(%rbx)
  0x000002480747d5d5: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747d5da: hlt    
  0x000002480747d5db: hlt    
  0x000002480747d5dc: hlt    
  0x000002480747d5dd: hlt    
  0x000002480747d5de: hlt    
  0x000002480747d5df: hlt    
<nmethod compile_id='171' compile_kind='c2n' level='0' entry='0x000002480747d5c0' size='336' address='0x000002480747d490' relocation_offset='288' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='2.046'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747d610:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fca9b48} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0xa0]  (sp of caller)
  0x000002480747d7a0: mov    0x8(%rdx),%r10d
  0x000002480747d7a4: shl    $0x3,%r10
  0x000002480747d7a8: cmp    %rax,%r10
  0x000002480747d7ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747d7b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747d7bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747d7c0: mov    %eax,-0x6000(%rsp)
  0x000002480747d7c7: push   %rbp
  0x000002480747d7c8: sub    $0x90,%rsp
  0x000002480747d7cf: mov    %rdx,%rbx
  0x000002480747d7d2: mov    %rdi,%r11
  0x000002480747d7d5: mov    %rsi,%r13
  0x000002480747d7d8: movabs $0x2481fed5340,%rdx  ;   {metadata(method data for {method} {0x000002481fca9b48} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747d7e2: mov    0xdc(%rdx),%esi
  0x000002480747d7e8: add    $0x8,%esi
  0x000002480747d7eb: mov    %esi,0xdc(%rdx)
  0x000002480747d7f1: movabs $0x2481fca9b40,%rdx  ;   {metadata({method} {0x000002481fca9b48} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747d7fb: and    $0x1ff8,%esi
  0x000002480747d801: cmp    $0x0,%esi
  0x000002480747d804: je     0x000002480747da94
  0x000002480747d80a: movabs $0x7c00338d0,%rdx  ;   {metadata(&apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000002480747d814: mov    0x60(%r15),%rax
  0x000002480747d818: lea    0x28(%rax),%rdi
  0x000002480747d81c: cmp    0x70(%r15),%rdi
  0x000002480747d820: ja     0x000002480747daab
  0x000002480747d826: mov    %rdi,0x60(%r15)
  0x000002480747d82a: mov    0xa8(%rdx),%rcx
  0x000002480747d831: mov    %rcx,(%rax)
  0x000002480747d834: mov    %rdx,%rcx
  0x000002480747d837: shr    $0x3,%rcx
  0x000002480747d83b: mov    %ecx,0x8(%rax)
  0x000002480747d83e: xor    %rcx,%rcx
  0x000002480747d841: mov    %ecx,0xc(%rax)
  0x000002480747d844: xor    %rcx,%rcx
  0x000002480747d847: mov    %rcx,0x10(%rax)
  0x000002480747d84b: mov    %rcx,0x18(%rax)
  0x000002480747d84f: mov    %rcx,0x20(%rax)    ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)

  0x000002480747d853: mov    %rax,%rsi
  0x000002480747d856: movabs $0x2481fed5340,%rdi  ;   {metadata(method data for {method} {0x000002481fca9b48} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747d860: addq   $0x1,0x108(%rdi)
  0x000002480747d868: movabs $0x2481fed5628,%rsi  ;   {metadata(method data for {method} {0x000002481fcb82e0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000002480747d872: mov    0xdc(%rsi),%edi
  0x000002480747d878: add    $0x8,%edi
  0x000002480747d87b: mov    %edi,0xdc(%rsi)
  0x000002480747d881: movabs $0x2481fcb82d8,%rsi  ;   {metadata({method} {0x000002481fcb82e0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000002480747d88b: and    $0x7ffff8,%edi
  0x000002480747d891: cmp    $0x0,%edi
  0x000002480747d894: je     0x000002480747dab8
  0x000002480747d89a: mov    %rax,%rsi
  0x000002480747d89d: movabs $0x2481fed5628,%rdi  ;   {metadata(method data for {method} {0x000002481fcb82e0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000002480747d8a7: addq   $0x1,0x108(%rdi)
  0x000002480747d8af: movabs $0x2481fd5f868,%rsi  ;   {metadata(method data for {method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000002480747d8b9: mov    0xdc(%rsi),%edi
  0x000002480747d8bf: add    $0x8,%edi
  0x000002480747d8c2: mov    %edi,0xdc(%rsi)
  0x000002480747d8c8: movabs $0x2481fbef950,%rsi  ;   {metadata({method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000002480747d8d2: and    $0x7ffff8,%edi
  0x000002480747d8d8: cmp    $0x0,%edi
  0x000002480747d8db: je     0x000002480747dacf
  0x000002480747d8e1: mov    %rax,%rsi
  0x000002480747d8e4: movabs $0x2481fd5f868,%rdi  ;   {metadata(method data for {method} {0x000002481fbef958} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000002480747d8ee: addq   $0x1,0x108(%rdi)
  0x000002480747d8f6: movabs $0x2481fc36b00,%rsi  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480747d900: mov    0xdc(%rsi),%edi
  0x000002480747d906: add    $0x8,%edi
  0x000002480747d909: mov    %edi,0xdc(%rsi)
  0x000002480747d90f: movabs $0x2481fb00480,%rsi  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000002480747d919: and    $0x7ffff8,%edi
  0x000002480747d91f: cmp    $0x0,%edi
  0x000002480747d922: je     0x000002480747dae6
  0x000002480747d928: mov    %r8d,0xc(%rax)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000002480747d92c: mov    %r9,%r10
  0x000002480747d92f: shr    $0x3,%r10
  0x000002480747d933: mov    %r10d,0x10(%rax)
  0x000002480747d937: mov    %rax,%rsi
  0x000002480747d93a: shr    $0x9,%rsi
  0x000002480747d93e: movabs $0x248130de000,%rdi
  0x000002480747d948: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000002480747d94c: mov    %r11,%r10
  0x000002480747d94f: shr    $0x3,%r10
  0x000002480747d953: mov    %r10d,0x14(%rax)
  0x000002480747d957: mov    %rax,%rsi
  0x000002480747d95a: shr    $0x9,%rsi
  0x000002480747d95e: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 289)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000002480747d962: mov    %r13,%r10
  0x000002480747d965: shr    $0x3,%r10
  0x000002480747d969: mov    %r10d,0x18(%rax)
  0x000002480747d96d: mov    %rax,%rsi
  0x000002480747d970: shr    $0x9,%rsi
  0x000002480747d974: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 290)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000002480747d978: mov    %rbx,%rsi
  0x000002480747d97b: movabs $0x2481fed5340,%rdx  ;   {metadata(method data for {method} {0x000002481fca9b48} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747d985: addq   $0x1,0x118(%rdx)
  0x000002480747d98d: movabs $0x2481fed5778,%rsi  ;   {metadata(method data for {method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747d997: mov    0xdc(%rsi),%edx
  0x000002480747d99d: add    $0x8,%edx
  0x000002480747d9a0: mov    %edx,0xdc(%rsi)
  0x000002480747d9a6: movabs $0x2481fca9920,%rsi  ;   {metadata({method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747d9b0: and    $0x7ffff8,%edx
  0x000002480747d9b6: cmp    $0x0,%edx
  0x000002480747d9b9: je     0x000002480747dafd
  0x000002480747d9bf: mov    0x34(%rbx),%esi
  0x000002480747d9c2: shl    $0x3,%rsi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000002480747d9c6: mov    %rax,%r10
  0x000002480747d9c9: shr    $0x3,%r10
  0x000002480747d9cd: mov    %r10d,0x34(%rbx)
  0x000002480747d9d1: mov    %rbx,%rdx
  0x000002480747d9d4: shr    $0x9,%rdx
  0x000002480747d9d8: movb   $0x0,(%rdx,%rdi,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000002480747d9dc: cmp    $0x0,%rsi
  0x000002480747d9e0: movabs $0x2481fed5778,%rdi  ;   {metadata(method data for {method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747d9ea: movabs $0x108,%rdx
  0x000002480747d9f4: jne    0x000002480747da04
  0x000002480747d9fa: movabs $0x118,%rdx
  0x000002480747da04: mov    (%rdi,%rdx,1),%rcx
  0x000002480747da08: lea    0x1(%rcx),%rcx
  0x000002480747da0c: mov    %rcx,(%rdi,%rdx,1)
  0x000002480747da10: jne    0x000002480747da52  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000002480747da16: mov    %rax,%r10
  0x000002480747da19: shr    $0x3,%r10
  0x000002480747da1d: mov    %r10d,0x30(%rbx)
  0x000002480747da21: shr    $0x9,%rbx
  0x000002480747da25: movabs $0x248130de000,%rsi
  0x000002480747da2f: movb   $0x0,(%rbx,%rsi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000002480747da33: movabs $0x2481fed5778,%rsi  ;   {metadata(method data for {method} {0x000002481fca9928} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000002480747da3d: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000002480747da43: add    $0x90,%rsp
  0x000002480747da4a: pop    %rbp
  0x000002480747da4b: test   %eax,-0x1ecd951(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747da51: ret    
  0x000002480747da52: mov    %rsi,%r10
  0x000002480747da55: shr    $0x3,%r10
  0x000002480747da59: mov    %r10d,0x1c(%rax)
  0x000002480747da5d: mov    %rax,%rdi
  0x000002480747da60: shr    $0x9,%rdi
  0x000002480747da64: movabs $0x248130de000,%rbx
  0x000002480747da6e: movb   $0x0,(%rdi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000002480747da72: mov    %rax,%r10
  0x000002480747da75: shr    $0x3,%r10
  0x000002480747da79: mov    %r10d,0x20(%rsi)   ; implicit exception: dispatches to 0x000002480747db14
  0x000002480747da7d: shr    $0x9,%rsi
  0x000002480747da81: movb   $0x0,(%rsi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000002480747da85: add    $0x90,%rsp
  0x000002480747da8c: pop    %rbp
  0x000002480747da8d: test   %eax,-0x1ecd993(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747da93: ret    
  0x000002480747da94: mov    %rdx,0x8(%rsp)
  0x000002480747da99: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747daa1: call   0x0000024807433da0  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop off=774}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::newNode@-1 (line 256)
                                                ;   {runtime_call}
  0x000002480747daa6: jmp    0x000002480747d80a
  0x000002480747daab: mov    %rdx,%rdx
  0x000002480747daae: call   0x000002480742f900  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop off=787}
                                                ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)
                                                ;   {runtime_call}
  0x000002480747dab3: jmp    0x000002480747d853
  0x000002480747dab8: mov    %rsi,0x8(%rsp)
  0x000002480747dabd: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747dac5: call   0x0000024807433da0  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=810}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@-1 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000002480747daca: jmp    0x000002480747d89a
  0x000002480747dacf: mov    %rsi,0x8(%rsp)
  0x000002480747dad4: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747dadc: call   0x0000024807433da0  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=833}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000002480747dae1: jmp    0x000002480747d8e1
  0x000002480747dae6: mov    %rsi,0x8(%rsp)
  0x000002480747daeb: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747daf3: call   0x0000024807433da0  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=856}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000002480747daf8: jmp    0x000002480747d928
  0x000002480747dafd: mov    %rsi,0x8(%rsp)
  0x000002480747db02: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747db0a: call   0x0000024807433da0  ; OopMap{rbx=Oop rax=Oop off=879}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x000002480747db0f: jmp    0x000002480747d9bf
  0x000002480747db14: call   0x000002480742f100  ; OopMap{rax=Oop rsi=Oop off=889}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x000002480747db19: nop
  0x000002480747db1a: nop
  0x000002480747db1b: mov    0x308(%r15),%rax
  0x000002480747db22: movabs $0x0,%r10
  0x000002480747db2c: mov    %r10,0x308(%r15)
  0x000002480747db33: movabs $0x0,%r10
  0x000002480747db3d: mov    %r10,0x310(%r15)
  0x000002480747db44: add    $0x90,%rsp
  0x000002480747db4b: pop    %rbp
  0x000002480747db4c: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747db51: hlt    
  0x000002480747db52: hlt    
  0x000002480747db53: hlt    
  0x000002480747db54: hlt    
  0x000002480747db55: hlt    
  0x000002480747db56: hlt    
  0x000002480747db57: hlt    
  0x000002480747db58: hlt    
  0x000002480747db59: hlt    
  0x000002480747db5a: hlt    
  0x000002480747db5b: hlt    
  0x000002480747db5c: hlt    
  0x000002480747db5d: hlt    
  0x000002480747db5e: hlt    
  0x000002480747db5f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747db60: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747db65: mov    %rsp,-0x28(%rsp)
  0x000002480747db6a: sub    $0x80,%rsp
  0x000002480747db71: mov    %rax,0x78(%rsp)
  0x000002480747db76: mov    %rcx,0x70(%rsp)
  0x000002480747db7b: mov    %rdx,0x68(%rsp)
  0x000002480747db80: mov    %rbx,0x60(%rsp)
  0x000002480747db85: mov    %rbp,0x50(%rsp)
  0x000002480747db8a: mov    %rsi,0x48(%rsp)
  0x000002480747db8f: mov    %rdi,0x40(%rsp)
  0x000002480747db94: mov    %r8,0x38(%rsp)
  0x000002480747db99: mov    %r9,0x30(%rsp)
  0x000002480747db9e: mov    %r10,0x28(%rsp)
  0x000002480747dba3: mov    %r11,0x20(%rsp)
  0x000002480747dba8: mov    %r12,0x18(%rsp)
  0x000002480747dbad: mov    %r13,0x10(%rsp)
  0x000002480747dbb2: mov    %r14,0x8(%rsp)
  0x000002480747dbb7: mov    %r15,(%rsp)
  0x000002480747dbbb: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747dbc5: movabs $0x2480747db65,%rdx  ;   {internal_word}
  0x000002480747dbcf: mov    %rsp,%r8
  0x000002480747dbd2: and    $0xfffffffffffffff0,%rsp
  0x000002480747dbd6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747dbe0: call   *%r10
  0x000002480747dbe3: hlt    
[Deopt Handler Code]
  0x000002480747dbe4: movabs $0x2480747dbe4,%r10  ;   {section_word}
  0x000002480747dbee: push   %r10
  0x000002480747dbf0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747dbf5: hlt    
  0x000002480747dbf6: hlt    
  0x000002480747dbf7: hlt    
<nmethod compile_id='159' compiler='C1' level='3' entry='0x000002480747d7a0' size='2168' address='0x000002480747d610' relocation_offset='288' insts_offset='400' stub_offset='1360' scopes_data_offset='1552' scopes_pcs_offset='1808' dependencies_offset='2144' nul_chk_table_offset='2152' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='839' iicount='839' stamp='2.057'/>
<writer thread='27436'/>
<task_queued compile_id='172' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='890' backedge_count='28716' iicount='890' stamp='2.057' comment='tiered' hot_count='890'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747ded0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480747e040: mov    %eax,-0x6000(%rsp)
  0x000002480747e047: push   %rbp
  0x000002480747e048: sub    $0x30,%rsp
  0x000002480747e04c: movabs $0x2481feac4c8,%rax  ;   {metadata(method data for {method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000002480747e056: mov    0xdc(%rax),%esi
  0x000002480747e05c: add    $0x8,%esi
  0x000002480747e05f: mov    %esi,0xdc(%rax)
  0x000002480747e065: movabs $0x2481fc49910,%rax  ;   {metadata({method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000002480747e06f: and    $0x1ff8,%esi
  0x000002480747e075: cmp    $0x0,%esi
  0x000002480747e078: je     0x000002480747e13e  ;*aload_0
                                                ; - java.util.Objects::requireNonNull@0 (line 202)

  0x000002480747e07e: cmp    $0x0,%rdx
  0x000002480747e082: movabs $0x2481feac4c8,%rax  ;   {metadata(method data for {method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000002480747e08c: movabs $0x108,%rsi
  0x000002480747e096: jne    0x000002480747e0a6
  0x000002480747e09c: movabs $0x118,%rsi
  0x000002480747e0a6: mov    (%rax,%rsi,1),%rdi
  0x000002480747e0aa: lea    0x1(%rdi),%rdi
  0x000002480747e0ae: mov    %rdi,(%rax,%rsi,1)
  0x000002480747e0b2: je     0x000002480747e0c7  ;*ifnonnull
                                                ; - java.util.Objects::requireNonNull@1 (line 202)

  0x000002480747e0b8: mov    %rdx,%rax
  0x000002480747e0bb: add    $0x30,%rsp
  0x000002480747e0bf: pop    %rbp
  0x000002480747e0c0: test   %eax,-0x1ecdfc6(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747e0c6: ret                       ;*areturn
                                                ; - java.util.Objects::requireNonNull@13 (line 204)

  0x000002480747e0c7: nop
  0x000002480747e0c8: jmp    0x000002480747e164  ;   {no_reloc}
  0x000002480747e0cd: add    %al,(%rax)
  0x000002480747e0cf: add    %al,(%rax)
  0x000002480747e0d1: add    %cl,-0x75(%rcx)
  0x000002480747e0d4: rex.RXB (bad) 
  0x000002480747e0d6: lea    0x20(%rax),%rdi
  0x000002480747e0da: cmp    0x70(%r15),%rdi
  0x000002480747e0de: ja     0x000002480747e16e
  0x000002480747e0e4: mov    %rdi,0x60(%r15)
  0x000002480747e0e8: mov    0xa8(%rdx),%rcx
  0x000002480747e0ef: mov    %rcx,(%rax)
  0x000002480747e0f2: mov    %rdx,%rcx
  0x000002480747e0f5: shr    $0x3,%rcx
  0x000002480747e0f9: mov    %ecx,0x8(%rax)
  0x000002480747e0fc: xor    %rcx,%rcx
  0x000002480747e0ff: mov    %ecx,0xc(%rax)
  0x000002480747e102: xor    %rcx,%rcx
  0x000002480747e105: mov    %rcx,0x10(%rax)
  0x000002480747e109: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)

  0x000002480747e10d: mov    %rax,%rdx
  0x000002480747e110: movabs $0x2481feac4c8,%rsi  ;   {metadata(method data for {method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000002480747e11a: addq   $0x1,0x128(%rsi)
  0x000002480747e122: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.util.Objects::requireNonNull@8 (line 203)

  0x000002480747e125: mov    %rax,0x20(%rsp)
  0x000002480747e12a: nop
  0x000002480747e12b: nop
  0x000002480747e12c: nop
  0x000002480747e12d: nop
  0x000002480747e12e: nop
  0x000002480747e12f: call   0x0000024807375ee0  ; OopMap{[32]=Oop off=244}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Objects::requireNonNull@8 (line 203)
                                                ;   {optimized virtual_call}
  0x000002480747e134: mov    0x20(%rsp),%rax
  0x000002480747e139: jmp    0x000002480747e1a3
  0x000002480747e13e: mov    %rax,0x8(%rsp)
  0x000002480747e143: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747e14b: call   0x0000024807433da0  ; OopMap{rdx=Oop off=272}
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 202)
                                                ;   {runtime_call}
  0x000002480747e150: jmp    0x000002480747e07e
  0x000002480747e155: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480747e15f: mov    $0xa050f00,%eax
  0x000002480747e164: call   0x0000024807432b60  ; OopMap{off=297}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ;   {runtime_call}
  0x000002480747e169: jmp    0x000002480747e0c8
  0x000002480747e16e: mov    %rdx,%rdx
  0x000002480747e171: call   0x000002480742f900  ; OopMap{off=310}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ;   {runtime_call}
  0x000002480747e176: jmp    0x000002480747e10d
  0x000002480747e178: nop
  0x000002480747e179: nop
  0x000002480747e17a: mov    0x308(%r15),%rax
  0x000002480747e181: movabs $0x0,%r10
  0x000002480747e18b: mov    %r10,0x308(%r15)
  0x000002480747e192: movabs $0x0,%r10
  0x000002480747e19c: mov    %r10,0x310(%r15)
  0x000002480747e1a3: add    $0x30,%rsp
  0x000002480747e1a7: pop    %rbp
  0x000002480747e1a8: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747e1ad: hlt    
  0x000002480747e1ae: hlt    
  0x000002480747e1af: hlt    
  0x000002480747e1b0: hlt    
  0x000002480747e1b1: hlt    
  0x000002480747e1b2: hlt    
  0x000002480747e1b3: hlt    
  0x000002480747e1b4: hlt    
  0x000002480747e1b5: hlt    
  0x000002480747e1b6: hlt    
  0x000002480747e1b7: hlt    
  0x000002480747e1b8: hlt    
  0x000002480747e1b9: hlt    
  0x000002480747e1ba: hlt    
  0x000002480747e1bb: hlt    
  0x000002480747e1bc: hlt    
  0x000002480747e1bd: hlt    
  0x000002480747e1be: hlt    
  0x000002480747e1bf: hlt    
[Stub Code]
  0x000002480747e1c0: nop                       ;   {no_reloc}
  0x000002480747e1c1: nop
  0x000002480747e1c2: nop
  0x000002480747e1c3: nop
  0x000002480747e1c4: nop
  0x000002480747e1c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747e1cf: jmp    0x000002480747e1cf  ;   {runtime_call}
[Exception Handler]
  0x000002480747e1d4: call   0x0000024807431320  ;   {runtime_call}
  0x000002480747e1d9: mov    %rsp,-0x28(%rsp)
  0x000002480747e1de: sub    $0x80,%rsp
  0x000002480747e1e5: mov    %rax,0x78(%rsp)
  0x000002480747e1ea: mov    %rcx,0x70(%rsp)
  0x000002480747e1ef: mov    %rdx,0x68(%rsp)
  0x000002480747e1f4: mov    %rbx,0x60(%rsp)
  0x000002480747e1f9: mov    %rbp,0x50(%rsp)
  0x000002480747e1fe: mov    %rsi,0x48(%rsp)
  0x000002480747e203: mov    %rdi,0x40(%rsp)
  0x000002480747e208: mov    %r8,0x38(%rsp)
  0x000002480747e20d: mov    %r9,0x30(%rsp)
  0x000002480747e212: mov    %r10,0x28(%rsp)
  0x000002480747e217: mov    %r11,0x20(%rsp)
  0x000002480747e21c: mov    %r12,0x18(%rsp)
  0x000002480747e221: mov    %r13,0x10(%rsp)
  0x000002480747e226: mov    %r14,0x8(%rsp)
  0x000002480747e22b: mov    %r15,(%rsp)
  0x000002480747e22f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747e239: movabs $0x2480747e1d9,%rdx  ;   {internal_word}
  0x000002480747e243: mov    %rsp,%r8
  0x000002480747e246: and    $0xfffffffffffffff0,%rsp
  0x000002480747e24a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747e254: call   *%r10
  0x000002480747e257: hlt    
[Deopt Handler Code]
  0x000002480747e258: movabs $0x2480747e258,%r10  ;   {section_word}
  0x000002480747e262: push   %r10
  0x000002480747e264: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747e269: hlt    
  0x000002480747e26a: hlt    
  0x000002480747e26b: hlt    
  0x000002480747e26c: hlt    
  0x000002480747e26d: hlt    
  0x000002480747e26e: hlt    
  0x000002480747e26f: hlt    
<nmethod compile_id='170' compiler='C1' level='3' entry='0x000002480747e040' size='1184' address='0x000002480747ded0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='936' scopes_pcs_offset='1000' dependencies_offset='1176' method='java/util/Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='946' iicount='946' stamp='2.064'/>
Decoding compiled method 0x000002480747e390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe01318} &apos;basicTypeChar&apos; &apos;()C&apos; in &apos;sun/invoke/util/Wrapper&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480747e4e0: mov    0x8(%rdx),%r10d
  0x000002480747e4e4: shl    $0x3,%r10
  0x000002480747e4e8: cmp    %rax,%r10
  0x000002480747e4eb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747e4f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747e4fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747e500: mov    %eax,-0x6000(%rsp)
  0x000002480747e507: push   %rbp
  0x000002480747e508: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.invoke.util.Wrapper::basicTypeChar@0 (line 411)

  0x000002480747e50c: movzwl 0x18(%rdx),%eax    ;*getfield basicTypeChar
                                                ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 411)

  0x000002480747e510: and    $0xffff,%eax
  0x000002480747e516: add    $0x30,%rsp
  0x000002480747e51a: pop    %rbp
  0x000002480747e51b: test   %eax,-0x1ece421(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747e521: ret    
  0x000002480747e522: nop
  0x000002480747e523: nop
  0x000002480747e524: mov    0x308(%r15),%rax
  0x000002480747e52b: movabs $0x0,%r10
  0x000002480747e535: mov    %r10,0x308(%r15)
  0x000002480747e53c: movabs $0x0,%r10
  0x000002480747e546: mov    %r10,0x310(%r15)
  0x000002480747e54d: add    $0x30,%rsp
  0x000002480747e551: pop    %rbp
  0x000002480747e552: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747e557: hlt    
  0x000002480747e558: hlt    
  0x000002480747e559: hlt    
  0x000002480747e55a: hlt    
  0x000002480747e55b: hlt    
  0x000002480747e55c: hlt    
  0x000002480747e55d: hlt    
  0x000002480747e55e: hlt    
  0x000002480747e55f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747e560: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747e565: mov    %rsp,-0x28(%rsp)
  0x000002480747e56a: sub    $0x80,%rsp
  0x000002480747e571: mov    %rax,0x78(%rsp)
  0x000002480747e576: mov    %rcx,0x70(%rsp)
  0x000002480747e57b: mov    %rdx,0x68(%rsp)
  0x000002480747e580: mov    %rbx,0x60(%rsp)
  0x000002480747e585: mov    %rbp,0x50(%rsp)
  0x000002480747e58a: mov    %rsi,0x48(%rsp)
  0x000002480747e58f: mov    %rdi,0x40(%rsp)
  0x000002480747e594: mov    %r8,0x38(%rsp)
  0x000002480747e599: mov    %r9,0x30(%rsp)
  0x000002480747e59e: mov    %r10,0x28(%rsp)
  0x000002480747e5a3: mov    %r11,0x20(%rsp)
  0x000002480747e5a8: mov    %r12,0x18(%rsp)
  0x000002480747e5ad: mov    %r13,0x10(%rsp)
  0x000002480747e5b2: mov    %r14,0x8(%rsp)
  0x000002480747e5b7: mov    %r15,(%rsp)
  0x000002480747e5bb: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747e5c5: movabs $0x2480747e565,%rdx  ;   {internal_word}
  0x000002480747e5cf: mov    %rsp,%r8
  0x000002480747e5d2: and    $0xfffffffffffffff0,%rsp
  0x000002480747e5d6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747e5e0: call   *%r10
  0x000002480747e5e3: hlt    
[Deopt Handler Code]
  0x000002480747e5e4: movabs $0x2480747e5e4,%r10  ;   {section_word}
  0x000002480747e5ee: push   %r10
  0x000002480747e5f0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747e5f5: hlt    
  0x000002480747e5f6: hlt    
  0x000002480747e5f7: hlt    
<nmethod compile_id='167' compiler='C1' level='1' entry='0x000002480747e4e0' size='712' address='0x000002480747e390' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='sun/invoke/util/Wrapper basicTypeChar ()C' bytes='5' count='284' iicount='284' stamp='2.067'/>
<writer thread='27436'/>
<task_queued compile_id='173' method='java/lang/invoke/MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='256' iicount='256' level='1' stamp='2.067' comment='tiered' hot_count='256'/>
Decoding compiled method 0x000002480747e690:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fedaa10} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480747e7c0: mov    0x18(%r9),%rbx
  0x000002480747e7c4: test   %rbx,%rbx
  0x000002480747e7c7: je     0x000002480747e7d0
  0x000002480747e7cd: jmp    *0x40(%rbx)
  0x000002480747e7d0: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747e7d5: hlt    
  0x000002480747e7d6: hlt    
  0x000002480747e7d7: hlt    
<nmethod compile_id='174' compile_kind='c2n' level='0' entry='0x000002480747e7c0' size='328' address='0x000002480747e690' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='2.068'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747e810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe1a6d0} &apos;index&apos; &apos;()I&apos; in &apos;java/lang/invoke/LambdaForm$Name&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480747e960: mov    0x8(%rdx),%r10d
  0x000002480747e964: shl    $0x3,%r10
  0x000002480747e968: cmp    %rax,%r10
  0x000002480747e96b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747e971: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747e97c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747e980: mov    %eax,-0x6000(%rsp)
  0x000002480747e987: push   %rbp
  0x000002480747e988: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$Name::index@0 (line 1420)

  0x000002480747e98c: movswl 0xc(%rdx),%eax     ;*getfield index
                                                ; - java.lang.invoke.LambdaForm$Name::index@1 (line 1420)

  0x000002480747e990: add    $0x30,%rsp
  0x000002480747e994: pop    %rbp
  0x000002480747e995: test   %eax,-0x1ece89b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747e99b: ret    
  0x000002480747e99c: nop
  0x000002480747e99d: nop
  0x000002480747e99e: mov    0x308(%r15),%rax
  0x000002480747e9a5: movabs $0x0,%r10
  0x000002480747e9af: mov    %r10,0x308(%r15)
  0x000002480747e9b6: movabs $0x0,%r10
  0x000002480747e9c0: mov    %r10,0x310(%r15)
  0x000002480747e9c7: add    $0x30,%rsp
  0x000002480747e9cb: pop    %rbp
  0x000002480747e9cc: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747e9d1: hlt    
  0x000002480747e9d2: hlt    
  0x000002480747e9d3: hlt    
  0x000002480747e9d4: hlt    
  0x000002480747e9d5: hlt    
  0x000002480747e9d6: hlt    
  0x000002480747e9d7: hlt    
  0x000002480747e9d8: hlt    
  0x000002480747e9d9: hlt    
  0x000002480747e9da: hlt    
  0x000002480747e9db: hlt    
  0x000002480747e9dc: hlt    
  0x000002480747e9dd: hlt    
  0x000002480747e9de: hlt    
  0x000002480747e9df: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747e9e0: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747e9e5: mov    %rsp,-0x28(%rsp)
  0x000002480747e9ea: sub    $0x80,%rsp
  0x000002480747e9f1: mov    %rax,0x78(%rsp)
  0x000002480747e9f6: mov    %rcx,0x70(%rsp)
  0x000002480747e9fb: mov    %rdx,0x68(%rsp)
  0x000002480747ea00: mov    %rbx,0x60(%rsp)
  0x000002480747ea05: mov    %rbp,0x50(%rsp)
  0x000002480747ea0a: mov    %rsi,0x48(%rsp)
  0x000002480747ea0f: mov    %rdi,0x40(%rsp)
  0x000002480747ea14: mov    %r8,0x38(%rsp)
  0x000002480747ea19: mov    %r9,0x30(%rsp)
  0x000002480747ea1e: mov    %r10,0x28(%rsp)
  0x000002480747ea23: mov    %r11,0x20(%rsp)
  0x000002480747ea28: mov    %r12,0x18(%rsp)
  0x000002480747ea2d: mov    %r13,0x10(%rsp)
  0x000002480747ea32: mov    %r14,0x8(%rsp)
  0x000002480747ea37: mov    %r15,(%rsp)
  0x000002480747ea3b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747ea45: movabs $0x2480747e9e5,%rdx  ;   {internal_word}
  0x000002480747ea4f: mov    %rsp,%r8
  0x000002480747ea52: and    $0xfffffffffffffff0,%rsp
  0x000002480747ea56: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747ea60: call   *%r10
  0x000002480747ea63: hlt    
[Deopt Handler Code]
  0x000002480747ea64: movabs $0x2480747ea64,%r10  ;   {section_word}
  0x000002480747ea6e: push   %r10
  0x000002480747ea70: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747ea75: hlt    
  0x000002480747ea76: hlt    
  0x000002480747ea77: hlt    
<nmethod compile_id='111' compiler='C1' level='1' entry='0x000002480747e960' size='712' address='0x000002480747e810' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/invoke/LambdaForm$Name index ()I' bytes='5' count='454' iicount='454' stamp='2.071'/>
Decoding compiled method 0x000002480747eb10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fe1b8c8} &apos;access$000&apos; &apos;(Ljava/lang/invoke/LambdaForm$Name;)S&apos; in &apos;java/lang/invoke/LambdaForm$Name&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/invoke/LambdaForm$Name&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480747ec60: mov    %eax,-0x6000(%rsp)
  0x000002480747ec67: push   %rbp
  0x000002480747ec68: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$Name::access$000@0 (line 1372)

  0x000002480747ec6c: movswl 0xc(%rdx),%eax     ;*getfield index
                                                ; - java.lang.invoke.LambdaForm$Name::access$000@1 (line 1372)
                                                ; implicit exception: dispatches to 0x000002480747ec82
  0x000002480747ec70: shl    $0x10,%eax
  0x000002480747ec73: sar    $0x10,%eax
  0x000002480747ec76: add    $0x30,%rsp
  0x000002480747ec7a: pop    %rbp
  0x000002480747ec7b: test   %eax,-0x1eceb81(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747ec81: ret    
  0x000002480747ec82: call   0x000002480742f100  ; OopMap{off=39}
                                                ;*getfield index
                                                ; - java.lang.invoke.LambdaForm$Name::access$000@1 (line 1372)
                                                ;   {runtime_call}
  0x000002480747ec87: nop
  0x000002480747ec88: nop
  0x000002480747ec89: mov    0x308(%r15),%rax
  0x000002480747ec90: movabs $0x0,%r10
  0x000002480747ec9a: mov    %r10,0x308(%r15)
  0x000002480747eca1: movabs $0x0,%r10
  0x000002480747ecab: mov    %r10,0x310(%r15)
  0x000002480747ecb2: add    $0x30,%rsp
  0x000002480747ecb6: pop    %rbp
  0x000002480747ecb7: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747ecbc: hlt    
  0x000002480747ecbd: hlt    
  0x000002480747ecbe: hlt    
  0x000002480747ecbf: hlt    
[Exception Handler]
[Stub Code]
  0x000002480747ecc0: call   0x0000024807431320  ;   {no_reloc}
  0x000002480747ecc5: mov    %rsp,-0x28(%rsp)
  0x000002480747ecca: sub    $0x80,%rsp
  0x000002480747ecd1: mov    %rax,0x78(%rsp)
  0x000002480747ecd6: mov    %rcx,0x70(%rsp)
  0x000002480747ecdb: mov    %rdx,0x68(%rsp)
  0x000002480747ece0: mov    %rbx,0x60(%rsp)
  0x000002480747ece5: mov    %rbp,0x50(%rsp)
  0x000002480747ecea: mov    %rsi,0x48(%rsp)
  0x000002480747ecef: mov    %rdi,0x40(%rsp)
  0x000002480747ecf4: mov    %r8,0x38(%rsp)
  0x000002480747ecf9: mov    %r9,0x30(%rsp)
  0x000002480747ecfe: mov    %r10,0x28(%rsp)
  0x000002480747ed03: mov    %r11,0x20(%rsp)
  0x000002480747ed08: mov    %r12,0x18(%rsp)
  0x000002480747ed0d: mov    %r13,0x10(%rsp)
  0x000002480747ed12: mov    %r14,0x8(%rsp)
  0x000002480747ed17: mov    %r15,(%rsp)
  0x000002480747ed1b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747ed25: movabs $0x2480747ecc5,%rdx  ;   {internal_word}
  0x000002480747ed2f: mov    %rsp,%r8
  0x000002480747ed32: and    $0xfffffffffffffff0,%rsp
  0x000002480747ed36: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747ed40: call   *%r10
  0x000002480747ed43: hlt    
[Deopt Handler Code]
  0x000002480747ed44: movabs $0x2480747ed44,%r10  ;   {section_word}
  0x000002480747ed4e: push   %r10
  0x000002480747ed50: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747ed55: hlt    
  0x000002480747ed56: hlt    
  0x000002480747ed57: hlt    
<nmethod compile_id='124' compiler='C1' level='1' entry='0x000002480747ec60' size='720' address='0x000002480747eb10' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='616' dependencies_offset='696' nul_chk_table_offset='704' method='java/lang/invoke/LambdaForm$Name access$000 (Ljava/lang/invoke/LambdaForm$Name;)S' bytes='5' count='336' iicount='336' stamp='2.074'/>
<writer thread='27436'/>
Decoding compiled method 0x0000024807480310:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fedab28} &apos;linkToStatic&apos; &apos;(ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx       = int
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807480440: mov    0x18(%r9),%rbx
  0x0000024807480444: test   %rbx,%rbx
  0x0000024807480447: je     0x0000024807480450
  0x000002480748044d: jmp    *0x40(%rbx)
  0x0000024807480450: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x0000024807480455: hlt    
  0x0000024807480456: hlt    
  0x0000024807480457: hlt    
<nmethod compile_id='175' compile_kind='c2n' level='0' entry='0x0000024807480440' size='328' address='0x0000024807480310' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='2.075'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807480490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb69690} &apos;form&apos; &apos;()Ljava/lang/invoke/MethodTypeForm;&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000248074805e0: mov    0x8(%rdx),%r10d
  0x00000248074805e4: shl    $0x3,%r10
  0x00000248074805e8: cmp    %rax,%r10
  0x00000248074805eb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074805f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074805fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807480600: mov    %eax,-0x6000(%rsp)
  0x0000024807480607: push   %rbp
  0x0000024807480608: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodType::form@0 (line 126)

  0x000002480748060c: mov    0x14(%rdx),%eax
  0x000002480748060f: shl    $0x3,%rax          ;*getfield form
                                                ; - java.lang.invoke.MethodType::form@1 (line 126)

  0x0000024807480613: add    $0x30,%rsp
  0x0000024807480617: pop    %rbp
  0x0000024807480618: test   %eax,-0x1ed051e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748061e: ret    
  0x000002480748061f: nop
  0x0000024807480620: nop
  0x0000024807480621: mov    0x308(%r15),%rax
  0x0000024807480628: movabs $0x0,%r10
  0x0000024807480632: mov    %r10,0x308(%r15)
  0x0000024807480639: movabs $0x0,%r10
  0x0000024807480643: mov    %r10,0x310(%r15)
  0x000002480748064a: add    $0x30,%rsp
  0x000002480748064e: pop    %rbp
  0x000002480748064f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807480654: hlt    
  0x0000024807480655: hlt    
  0x0000024807480656: hlt    
  0x0000024807480657: hlt    
  0x0000024807480658: hlt    
  0x0000024807480659: hlt    
  0x000002480748065a: hlt    
  0x000002480748065b: hlt    
  0x000002480748065c: hlt    
  0x000002480748065d: hlt    
  0x000002480748065e: hlt    
  0x000002480748065f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807480660: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807480665: mov    %rsp,-0x28(%rsp)
  0x000002480748066a: sub    $0x80,%rsp
  0x0000024807480671: mov    %rax,0x78(%rsp)
  0x0000024807480676: mov    %rcx,0x70(%rsp)
  0x000002480748067b: mov    %rdx,0x68(%rsp)
  0x0000024807480680: mov    %rbx,0x60(%rsp)
  0x0000024807480685: mov    %rbp,0x50(%rsp)
  0x000002480748068a: mov    %rsi,0x48(%rsp)
  0x000002480748068f: mov    %rdi,0x40(%rsp)
  0x0000024807480694: mov    %r8,0x38(%rsp)
  0x0000024807480699: mov    %r9,0x30(%rsp)
  0x000002480748069e: mov    %r10,0x28(%rsp)
  0x00000248074806a3: mov    %r11,0x20(%rsp)
  0x00000248074806a8: mov    %r12,0x18(%rsp)
  0x00000248074806ad: mov    %r13,0x10(%rsp)
  0x00000248074806b2: mov    %r14,0x8(%rsp)
  0x00000248074806b7: mov    %r15,(%rsp)
  0x00000248074806bb: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074806c5: movabs $0x24807480665,%rdx  ;   {internal_word}
  0x00000248074806cf: mov    %rsp,%r8
  0x00000248074806d2: and    $0xfffffffffffffff0,%rsp
  0x00000248074806d6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074806e0: call   *%r10
  0x00000248074806e3: hlt    
[Deopt Handler Code]
  0x00000248074806e4: movabs $0x248074806e4,%r10  ;   {section_word}
  0x00000248074806ee: push   %r10
  0x00000248074806f0: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074806f5: hlt    
  0x00000248074806f6: hlt    
  0x00000248074806f7: hlt    
<nmethod compile_id='173' compiler='C1' level='1' entry='0x00000248074805e0' size='712' address='0x0000024807480490' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/invoke/MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='271' iicount='271' stamp='2.079'/>
<writer thread='27436'/>
<task_queued compile_id='176' method='java/lang/invoke/MethodType checkPtype (Ljava/lang/Class;)V' bytes='19' count='768' iicount='768' level='3' stamp='2.079' comment='tiered' hot_count='768'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807482250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe1a638} &apos;type&apos; &apos;()Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$Name&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000248074823a0: mov    0x8(%rdx),%r10d
  0x00000248074823a4: shl    $0x3,%r10
  0x00000248074823a8: cmp    %rax,%r10
  0x00000248074823ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074823b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074823bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074823c0: mov    %eax,-0x6000(%rsp)
  0x00000248074823c7: push   %rbp
  0x00000248074823c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$Name::type@0 (line 1419)

  0x00000248074823cc: mov    0x10(%rdx),%eax
  0x00000248074823cf: shl    $0x3,%rax          ;*getfield type
                                                ; - java.lang.invoke.LambdaForm$Name::type@1 (line 1419)

  0x00000248074823d3: add    $0x30,%rsp
  0x00000248074823d7: pop    %rbp
  0x00000248074823d8: test   %eax,-0x1ed22de(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074823de: ret    
  0x00000248074823df: nop
  0x00000248074823e0: nop
  0x00000248074823e1: mov    0x308(%r15),%rax
  0x00000248074823e8: movabs $0x0,%r10
  0x00000248074823f2: mov    %r10,0x308(%r15)
  0x00000248074823f9: movabs $0x0,%r10
  0x0000024807482403: mov    %r10,0x310(%r15)
  0x000002480748240a: add    $0x30,%rsp
  0x000002480748240e: pop    %rbp
  0x000002480748240f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807482414: hlt    
  0x0000024807482415: hlt    
  0x0000024807482416: hlt    
  0x0000024807482417: hlt    
  0x0000024807482418: hlt    
  0x0000024807482419: hlt    
  0x000002480748241a: hlt    
  0x000002480748241b: hlt    
  0x000002480748241c: hlt    
  0x000002480748241d: hlt    
  0x000002480748241e: hlt    
  0x000002480748241f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807482420: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807482425: mov    %rsp,-0x28(%rsp)
  0x000002480748242a: sub    $0x80,%rsp
  0x0000024807482431: mov    %rax,0x78(%rsp)
  0x0000024807482436: mov    %rcx,0x70(%rsp)
  0x000002480748243b: mov    %rdx,0x68(%rsp)
  0x0000024807482440: mov    %rbx,0x60(%rsp)
  0x0000024807482445: mov    %rbp,0x50(%rsp)
  0x000002480748244a: mov    %rsi,0x48(%rsp)
  0x000002480748244f: mov    %rdi,0x40(%rsp)
  0x0000024807482454: mov    %r8,0x38(%rsp)
  0x0000024807482459: mov    %r9,0x30(%rsp)
  0x000002480748245e: mov    %r10,0x28(%rsp)
  0x0000024807482463: mov    %r11,0x20(%rsp)
  0x0000024807482468: mov    %r12,0x18(%rsp)
  0x000002480748246d: mov    %r13,0x10(%rsp)
  0x0000024807482472: mov    %r14,0x8(%rsp)
  0x0000024807482477: mov    %r15,(%rsp)
  0x000002480748247b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807482485: movabs $0x24807482425,%rdx  ;   {internal_word}
  0x000002480748248f: mov    %rsp,%r8
  0x0000024807482492: and    $0xfffffffffffffff0,%rsp
  0x0000024807482496: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074824a0: call   *%r10
  0x00000248074824a3: hlt    
[Deopt Handler Code]
  0x00000248074824a4: movabs $0x248074824a4,%r10  ;   {section_word}
  0x00000248074824ae: push   %r10
  0x00000248074824b0: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074824b5: hlt    
  0x00000248074824b6: hlt    
  0x00000248074824b7: hlt    
<nmethod compile_id='121' compiler='C1' level='1' entry='0x00000248074823a0' size='712' address='0x0000024807482250' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/invoke/LambdaForm$Name type ()Ljava/lang/invoke/LambdaForm$BasicType;' bytes='5' count='369' iicount='369' stamp='2.082'/>
<writer thread='27436'/>
<task_queued compile_id='177' method='java/lang/invoke/MethodType checkSlotCount (I)V' bytes='33' count='640' iicount='640' level='3' stamp='2.082' comment='tiered' hot_count='640'/>
<writer thread='19792'/>
Decoding compiled method 0x0000024807482550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3f870} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000248074826a0: mov    0x8(%rdx),%r10d
  0x00000248074826a4: shl    $0x3,%r10
  0x00000248074826a8: cmp    %r10,%rax
  0x00000248074826ab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074826b1: data16 xchg %ax,%ax
  0x00000248074826b4: nopl   0x0(%rax,%rax,1)
  0x00000248074826bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000248074826c0: mov    %eax,-0x6000(%rsp)
  0x00000248074826c7: push   %rbp
  0x00000248074826c8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 240)

  0x00000248074826cc: mov    %rdx,%r10
  0x00000248074826cf: mov    %r8,%r14
  0x00000248074826d2: mov    0xc(%r8),%edx      ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x00000248074829e2
  0x00000248074826d6: mov    0xc(%r12,%rdx,8),%r8d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x00000248074829ed
  0x00000248074826db: cmp    $0xffff,%r8d
  0x00000248074826e2: jg     0x00000248074829ad  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x00000248074826e8: mov    %r10,%r9
  0x00000248074826eb: mov    0x10(%r10),%r11d   ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@30 (line 245)

  0x00000248074826ef: mov    0xc(%r12,%r11,8),%edi  ; implicit exception: dispatches to 0x00000248074829f9
  0x00000248074826f4: mov    0xc(%r10),%ecx     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@20 (line 244)

  0x00000248074826f8: mov    %r8d,%r10d
  0x00000248074826fb: add    %ecx,%r10d
  0x00000248074826fe: mov    %r8d,%ebx
  0x0000024807482701: shr    $0x8,%ebx          ;*iushr
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@59 (line 255)

  0x0000024807482704: add    $0x2,%r10d
  0x0000024807482708: movsbl %bl,%ebp           ;*i2b  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@60 (line 255)

  0x000002480748270b: cmp    %edi,%r10d
  0x000002480748270e: jle    0x000002480748275c  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@34 (line 245)

  0x0000024807482710: mov    %ebp,0x14(%rsp)
  0x0000024807482714: mov    %ebx,0x10(%rsp)
  0x0000024807482718: mov    %ecx,0xc(%rsp)
  0x000002480748271c: mov    %r9,(%rsp)
  0x0000024807482720: mov    %r14,%rbp
  0x0000024807482723: mov    %r8d,0x8(%rsp)
  0x0000024807482728: add    $0x2,%r8d          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@40 (line 246)

  0x000002480748272c: mov    %r9,%rdx
  0x000002480748272f: call   0x0000024807375ee0  ; OopMap{rbp=Oop [0]=Oop off=148}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {optimized virtual_call}
  0x0000024807482734: mov    (%rsp),%r9
  0x0000024807482738: mov    0x10(%r9),%r11d    ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x000002480748273c: test   %r11d,%r11d
  0x000002480748273f: je     0x00000248074829c5  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x0000024807482745: mov    %rbp,%r14
  0x0000024807482748: mov    0xc(%rbp),%edx
  0x000002480748274b: mov    0x8(%rsp),%r8d
  0x0000024807482750: mov    0xc(%rsp),%ecx
  0x0000024807482754: mov    0x10(%rsp),%ebx
  0x0000024807482758: mov    0x14(%rsp),%ebp    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000002480748275c: mov    0xc(%r12,%r11,8),%edi  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x0000024807482761: mov    %ecx,%r10d
  0x0000024807482764: inc    %r10d              ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@53 (line 255)

  0x0000024807482767: cmp    %edi,%ecx
  0x0000024807482769: jae    0x000002480748288e
  0x000002480748276f: lea    (%r12,%r11,8),%rax
  0x0000024807482773: mov    %bl,0x10(%rax,%rcx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x0000024807482777: mov    %ecx,%ebx
  0x0000024807482779: add    $0x2,%ebx          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000002480748277c: cmp    %edi,%r10d
  0x000002480748277f: jae    0x00000248074828b5
  0x0000024807482785: movslq %ecx,%r10
  0x0000024807482788: mov    %r8b,0x11(%rax,%r10,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x000002480748278d: test   %r8d,%r8d
  0x0000024807482790: jle    0x000002480748287b  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000024807482796: mov    0xc(%r12,%rdx,8),%esi  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ; implicit exception: dispatches to 0x00000248074828e1
  0x000002480748279b: test   %esi,%esi
  0x000002480748279d: jbe    0x00000248074828e1
  0x00000248074827a3: mov    %r8d,%r10d
  0x00000248074827a6: dec    %r10d
  0x00000248074827a9: cmp    %esi,%r10d
  0x00000248074827ac: jae    0x00000248074828e1
  0x00000248074827b2: cmp    %edi,%ebx
  0x00000248074827b4: jae    0x00000248074828e1
  0x00000248074827ba: movslq %edi,%r10
  0x00000248074827bd: movslq %ebx,%rdi
  0x00000248074827c0: movslq %r8d,%rbp
  0x00000248074827c3: add    %rbp,%rdi
  0x00000248074827c6: dec    %rdi
  0x00000248074827c9: cmp    %r10,%rdi
  0x00000248074827cc: jae    0x00000248074828e1
  0x00000248074827d2: lea    (%r12,%rdx,8),%r13
  0x00000248074827d6: mov    $0x1,%r10d
  0x00000248074827dc: cmp    %r10d,%r8d
  0x00000248074827df: mov    %r8d,%edx
  0x00000248074827e2: cmovg  %r10d,%edx
  0x00000248074827e6: xor    %r10d,%r10d        ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x00000248074827e9: mov    %r10d,%ebx
  0x00000248074827ec: add    %ecx,%ebx          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x00000248074827ee: mov    %ebx,%edi
  0x00000248074827f0: add    $0x2,%edi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x00000248074827f3: test   %r10d,%r10d
  0x00000248074827f6: jl     0x0000024807482901  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x00000248074827fc: cmp    %esi,%r10d
  0x00000248074827ff: jge    0x0000024807482955  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807482805: movzwl 0x10(%r13,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000002480748280b: cmp    $0x1,%ebp
  0x000002480748280e: jl     0x000002480748292d  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000024807482814: cmp    $0x7f,%ebp
  0x0000024807482817: jg     0x0000024807482985  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000002480748281d: movslq %ebx,%rdi
  0x0000024807482820: mov    %bpl,0x12(%rax,%rdi,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000024807482825: inc    %r10d              ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000024807482828: cmp    %edx,%r10d
  0x000002480748282b: jl     0x00000248074827e9  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000002480748282d: cmp    %r8d,%r10d
  0x0000024807482830: jge    0x0000024807482878
  0x0000024807482832: xchg   %ax,%ax            ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000024807482834: mov    %r10d,%ebx
  0x0000024807482837: add    %ecx,%ebx          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000024807482839: mov    %ebx,%edi
  0x000002480748283b: add    $0x2,%edi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000002480748283e: test   %r10d,%r10d
  0x0000024807482841: jl     0x0000024807482901  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807482847: cmp    %esi,%r10d
  0x000002480748284a: jge    0x0000024807482955  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807482850: movzwl 0x10(%r13,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807482856: cmp    $0x1,%ebp
  0x0000024807482859: jl     0x000002480748292d  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000002480748285f: cmp    $0x7f,%ebp
  0x0000024807482862: jg     0x0000024807482985  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000024807482868: movslq %ebx,%rdi
  0x000002480748286b: mov    %bpl,0x12(%rax,%rdi,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000024807482870: inc    %r10d              ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000024807482873: cmp    %r8d,%r10d
  0x0000024807482876: jl     0x0000024807482834
  0x0000024807482878: add    $0x3,%ebx          ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000002480748287b: mov    %ebx,0xc(%r9)      ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@137 (line 266)

  0x000002480748287f: mov    %r9,%rax
  0x0000024807482882: add    $0x40,%rsp
  0x0000024807482886: pop    %rbp
  0x0000024807482887: test   %eax,-0x1ed288d(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x000002480748288d: ret    
  0x000002480748288e: mov    $0xffffffe4,%edx
  0x0000024807482893: mov    %ecx,(%rsp)
  0x0000024807482896: mov    %r9,0x8(%rsp)
  0x000002480748289b: mov    %r14,0x10(%rsp)
  0x00000248074828a0: mov    %r8d,0x4(%rsp)
  0x00000248074828a5: mov    %r10d,0x18(%rsp)
  0x00000248074828aa: mov    %r11d,0x20(%rsp)
  0x00000248074828af: call   0x00000248073754e0  ; OopMap{[8]=Oop [16]=Oop [32]=NarrowOop off=532}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x00000248074828b4: int3                      ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x00000248074828b5: movsbl %r8b,%ebp          ;*i2b  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@69 (line 256)

  0x00000248074828b9: mov    $0xffffffe4,%edx
  0x00000248074828be: mov    %ebx,(%rsp)
  0x00000248074828c1: mov    %r9,0x8(%rsp)
  0x00000248074828c6: mov    %r14,0x10(%rsp)
  0x00000248074828cb: mov    %r8d,0x4(%rsp)
  0x00000248074828d0: mov    %r11d,0x1c(%rsp)
  0x00000248074828d5: mov    %r10d,0x20(%rsp)
  0x00000248074828da: nop
  0x00000248074828db: call   0x00000248073754e0  ; OopMap{[8]=Oop [16]=Oop [28]=NarrowOop off=576}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x00000248074828e0: int3   
  0x00000248074828e1: mov    $0xffffff86,%edx
  0x00000248074828e6: mov    %ebx,%ebp
  0x00000248074828e8: mov    %r9,(%rsp)
  0x00000248074828ec: mov    %r14,0x8(%rsp)
  0x00000248074828f1: mov    %r8d,0x10(%rsp)
  0x00000248074828f6: mov    %r11d,0x14(%rsp)
  0x00000248074828fb: call   0x00000248073754e0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop off=608}
                                                ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)
                                                ;   {runtime_call}
  0x0000024807482900: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807482901: mov    $0xffffff65,%edx
  0x0000024807482906: mov    %edi,%ebp
  0x0000024807482908: mov    %r10d,0x4(%rsp)
  0x000002480748290d: mov    %r10d,0x8(%rsp)
  0x0000024807482912: mov    %r9,0x10(%rsp)
  0x0000024807482917: mov    %r8d,0xc(%rsp)
  0x000002480748291c: mov    %r11d,0x20(%rsp)
  0x0000024807482921: mov    %r14,0x28(%rsp)
  0x0000024807482926: nop
  0x0000024807482927: call   0x00000248073754e0  ; OopMap{[16]=Oop [32]=NarrowOop [40]=Oop off=652}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000002480748292c: int3                      ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000002480748292d: mov    $0xffffff65,%edx
  0x0000024807482932: mov    %edi,(%rsp)
  0x0000024807482935: mov    %r10d,0x4(%rsp)
  0x000002480748293a: mov    %r9,0x8(%rsp)
  0x000002480748293f: mov    %r14,0x10(%rsp)
  0x0000024807482944: mov    %r8d,0x18(%rsp)
  0x0000024807482949: mov    %r11d,0x1c(%rsp)
  0x000002480748294e: nop
  0x000002480748294f: call   0x00000248073754e0  ; OopMap{[8]=Oop [16]=Oop [28]=NarrowOop off=692}
                                                ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)
                                                ;   {runtime_call}
  0x0000024807482954: int3                      ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000024807482955: mov    $0xffffff65,%edx
  0x000002480748295a: mov    %edi,%ebp
  0x000002480748295c: mov    %r10d,0x4(%rsp)
  0x0000024807482961: mov    %r10d,0x8(%rsp)
  0x0000024807482966: mov    %r9,0x10(%rsp)
  0x000002480748296b: mov    %r8d,0xc(%rsp)
  0x0000024807482970: mov    %r11d,0x20(%rsp)
  0x0000024807482975: mov    %r14,0x28(%rsp)
  0x000002480748297a: mov    %esi,0x24(%rsp)
  0x000002480748297e: nop
  0x000002480748297f: call   0x00000248073754e0  ; OopMap{[16]=Oop [32]=NarrowOop [40]=Oop off=740}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x0000024807482984: int3                      ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000024807482985: mov    $0xffffff65,%edx
  0x000002480748298a: mov    %edi,(%rsp)
  0x000002480748298d: mov    %r10d,0x4(%rsp)
  0x0000024807482992: mov    %r9,0x8(%rsp)
  0x0000024807482997: mov    %r14,0x10(%rsp)
  0x000002480748299c: mov    %r8d,0x18(%rsp)
  0x00000248074829a1: mov    %r11d,0x1c(%rsp)
  0x00000248074829a6: nop
  0x00000248074829a7: call   0x00000248073754e0  ; OopMap{[8]=Oop [16]=Oop [28]=NarrowOop off=780}
                                                ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)
                                                ;   {runtime_call}
  0x00000248074829ac: int3                      ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x00000248074829ad: mov    $0xffffff65,%edx
  0x00000248074829b2: mov    %r10,%rbp
  0x00000248074829b5: mov    %r14,(%rsp)
  0x00000248074829b9: mov    %r8d,0xc(%rsp)
  0x00000248074829be: nop
  0x00000248074829bf: call   0x00000248073754e0  ; OopMap{rbp=Oop [0]=Oop off=804}
                                                ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)
                                                ;   {runtime_call}
  0x00000248074829c4: int3                      ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x00000248074829c5: mov    $0xfffffff6,%edx
  0x00000248074829ca: mov    0xc(%rsp),%ebp
  0x00000248074829ce: nop
  0x00000248074829cf: call   0x00000248073754e0  ; OopMap{off=820}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x00000248074829d4: int3                      ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)

  0x00000248074829d5: mov    %rax,%rdx
  0x00000248074829d8: add    $0x40,%rsp
  0x00000248074829dc: pop    %rbp
  0x00000248074829dd: jmp    0x00000248074351e0  ;   {runtime_call}
  0x00000248074829e2: mov    $0xfffffff6,%edx
  0x00000248074829e7: call   0x00000248073754e0  ; OopMap{off=844}
                                                ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x00000248074829ec: int3                      ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x00000248074829ed: mov    $0xfffffff6,%edx
  0x00000248074829f2: nop
  0x00000248074829f3: call   0x00000248073754e0  ; OopMap{off=856}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x00000248074829f8: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x00000248074829f9: mov    $0xfffffff6,%edx
  0x00000248074829fe: nop
  0x00000248074829ff: call   0x00000248073754e0  ; OopMap{off=868}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call}
  0x0000024807482a04: int3                      ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)

  0x0000024807482a05: hlt    
  0x0000024807482a06: hlt    
  0x0000024807482a07: hlt    
  0x0000024807482a08: hlt    
  0x0000024807482a09: hlt    
  0x0000024807482a0a: hlt    
  0x0000024807482a0b: hlt    
  0x0000024807482a0c: hlt    
  0x0000024807482a0d: hlt    
  0x0000024807482a0e: hlt    
  0x0000024807482a0f: hlt    
  0x0000024807482a10: hlt    
  0x0000024807482a11: hlt    
  0x0000024807482a12: hlt    
  0x0000024807482a13: hlt    
  0x0000024807482a14: hlt    
  0x0000024807482a15: hlt    
  0x0000024807482a16: hlt    
  0x0000024807482a17: hlt    
  0x0000024807482a18: hlt    
  0x0000024807482a19: hlt    
  0x0000024807482a1a: hlt    
  0x0000024807482a1b: hlt    
  0x0000024807482a1c: hlt    
  0x0000024807482a1d: hlt    
  0x0000024807482a1e: hlt    
  0x0000024807482a1f: hlt    
[Stub Code]
  0x0000024807482a20: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000024807482a2a: jmp    0x0000024807482a2a  ;   {runtime_call}
[Exception Handler]
  0x0000024807482a2f: jmp    0x000002480742efe0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000024807482a34: call   0x0000024807482a39
  0x0000024807482a39: subq   $0x5,(%rsp)
  0x0000024807482a3e: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807482a43: hlt    
  0x0000024807482a44: hlt    
  0x0000024807482a45: hlt    
  0x0000024807482a46: hlt    
  0x0000024807482a47: hlt    
<nmethod compile_id='172' compiler='C2' level='4' entry='0x00000248074826a0' size='3024' address='0x0000024807482550' relocation_offset='288' insts_offset='336' stub_offset='1232' scopes_data_offset='1296' scopes_pcs_offset='1832' dependencies_offset='2952' handler_table_offset='2960' nul_chk_table_offset='2984' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='953' backedge_count='30714' iicount='953' stamp='2.101'/>
<make_not_entrant thread='19792' compile_id='61' compiler='C1' level='3' stamp='2.101'/>
<writer thread='27436'/>
<task_queued compile_id='178' method='java/lang/reflect/Modifier isStatic (I)Z' bytes='13' count='640' iicount='640' level='3' stamp='2.101' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747fb90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb69998} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Class&apos;
  #           [sp+0x70]  (sp of caller)
  0x000002480747fd20: mov    %eax,-0x6000(%rsp)
  0x000002480747fd27: push   %rbp
  0x000002480747fd28: sub    $0x60,%rsp
  0x000002480747fd2c: movabs $0x2481fed4f30,%rsi  ;   {metadata(method data for {method} {0x000002481fb69998} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480747fd36: mov    0xdc(%rsi),%edi
  0x000002480747fd3c: add    $0x8,%edi
  0x000002480747fd3f: mov    %edi,0xdc(%rsi)
  0x000002480747fd45: movabs $0x2481fb69990,%rsi  ;   {metadata({method} {0x000002481fb69998} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480747fd4f: and    $0x1ff8,%edi
  0x000002480747fd55: cmp    $0x0,%edi
  0x000002480747fd58: je     0x000002480747ff6e  ;*aload_0
                                                ; - java.lang.invoke.MethodType::checkPtype@0 (line 166)

  0x000002480747fd5e: movabs $0x2481fed4f30,%rsi  ;   {metadata(method data for {method} {0x000002481fb69998} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480747fd68: addq   $0x1,0x108(%rsi)
  0x000002480747fd70: movabs $0x2481feac4c8,%rsi  ;   {metadata(method data for {method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000002480747fd7a: mov    0xdc(%rsi),%edi
  0x000002480747fd80: add    $0x8,%edi
  0x000002480747fd83: mov    %edi,0xdc(%rsi)
  0x000002480747fd89: movabs $0x2481fc49910,%rsi  ;   {metadata({method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000002480747fd93: and    $0x7ffff8,%edi
  0x000002480747fd99: cmp    $0x0,%edi
  0x000002480747fd9c: je     0x000002480747ff85
  0x000002480747fda2: cmp    $0x0,%rdx
  0x000002480747fda6: movabs $0x2481feac4c8,%rsi  ;   {metadata(method data for {method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000002480747fdb0: movabs $0x108,%rdi
  0x000002480747fdba: jne    0x000002480747fdca
  0x000002480747fdc0: movabs $0x118,%rdi
  0x000002480747fdca: mov    (%rsi,%rdi,1),%rax
  0x000002480747fdce: lea    0x1(%rax),%rax
  0x000002480747fdd2: mov    %rax,(%rsi,%rdi,1)
  0x000002480747fdd6: je     0x000002480747feee  ;*ifnonnull
                                                ; - java.util.Objects::requireNonNull@1 (line 202)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 166)

  0x000002480747fddc: movabs $0x76b700350,%r10  ;   {oop(a &apos;java/lang/Class&apos; = void)}
  0x000002480747fde6: cmp    %r10,%rdx
  0x000002480747fde9: movabs $0x2481fed4f30,%rdx  ;   {metadata(method data for {method} {0x000002481fb69998} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480747fdf3: movabs $0x118,%rsi
  0x000002480747fdfd: jne    0x000002480747fe0d
  0x000002480747fe03: movabs $0x128,%rsi
  0x000002480747fe0d: mov    (%rdx,%rsi,1),%rdi
  0x000002480747fe11: lea    0x1(%rdi),%rdi
  0x000002480747fe15: mov    %rdi,(%rdx,%rsi,1)
  0x000002480747fe19: je     0x000002480747fe2b  ;*if_acmpne
                                                ; - java.lang.invoke.MethodType::checkPtype@9 (line 167)

  0x000002480747fe1f: add    $0x60,%rsp
  0x000002480747fe23: pop    %rbp
  0x000002480747fe24: test   %eax,-0x1ecfd2a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747fe2a: ret                       ;*return
                                                ; - java.lang.invoke.MethodType::checkPtype@18 (line 169)

  0x000002480747fe2b: movabs $0x2481fed4f30,%rdx  ;   {metadata(method data for {method} {0x000002481fb69998} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480747fe35: addq   $0x1,0x138(%rdx)
  0x000002480747fe3d: movabs $0x2481fedb010,%rdx  ;   {metadata(method data for {method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x000002480747fe47: mov    0xdc(%rdx),%esi
  0x000002480747fe4d: add    $0x8,%esi
  0x000002480747fe50: mov    %esi,0xdc(%rdx)
  0x000002480747fe56: movabs $0x2481fdb4fa0,%rdx  ;   {metadata({method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x000002480747fe60: and    $0x7ffff8,%esi
  0x000002480747fe66: cmp    $0x0,%esi
  0x000002480747fe69: je     0x000002480747ff9c
  0x000002480747fe6f: nop
  0x000002480747fe70: jmp    0x000002480747ffc2  ;   {no_reloc}
  0x000002480747fe75: add    %al,(%rax)
  0x000002480747fe77: add    %al,(%rax)
  0x000002480747fe79: add    %cl,-0x75(%rcx)
  0x000002480747fe7c: rex.RXB (bad) 
  0x000002480747fe7e: lea    0x20(%rax),%rdi
  0x000002480747fe82: cmp    0x70(%r15),%rdi
  0x000002480747fe86: ja     0x000002480747ffcc
  0x000002480747fe8c: mov    %rdi,0x60(%r15)
  0x000002480747fe90: mov    0xa8(%rdx),%rcx
  0x000002480747fe97: mov    %rcx,(%rax)
  0x000002480747fe9a: mov    %rdx,%rcx
  0x000002480747fe9d: shr    $0x3,%rcx
  0x000002480747fea1: mov    %ecx,0x8(%rax)
  0x000002480747fea4: xor    %rcx,%rcx
  0x000002480747fea7: mov    %ecx,0xc(%rax)
  0x000002480747feaa: xor    %rcx,%rcx
  0x000002480747fead: mov    %rcx,0x10(%rax)
  0x000002480747feb1: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 168)

  0x000002480747feb5: mov    %rax,%r8
  0x000002480747feb8: movabs $0x2481fedb010,%rdx  ;   {metadata(method data for {method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x000002480747fec2: addq   $0x1,0x108(%rdx)
  0x000002480747feca: movabs $0x76bd5be30,%r8   ;   {oop(&quot;parameter type cannot be void&quot;)}
  0x000002480747fed4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 168)

  0x000002480747fed7: mov    %rax,0x38(%rsp)
  0x000002480747fedc: nop
  0x000002480747fedd: nop
  0x000002480747fede: nop
  0x000002480747fedf: call   0x0000024807375ee0  ; OopMap{[56]=Oop off=452}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 168)
                                                ;   {optimized virtual_call}
  0x000002480747fee4: mov    0x38(%rsp),%rax
  0x000002480747fee9: jmp    0x000002480748002a  ;*athrow
                                                ; - java.lang.invoke.MethodType::checkPtype@17 (line 168)

  0x000002480747feee: mov    %rdx,0x48(%rsp)
  0x000002480747fef3: nopl   0x0(%rax,%rax,1)
  0x000002480747fef8: jmp    0x000002480747ffe8  ;   {no_reloc}
  0x000002480747fefd: add    %al,(%rax)
  0x000002480747feff: add    %al,(%rax)
  0x000002480747ff01: add    %cl,-0x75(%rcx)
  0x000002480747ff04: rex.RXB (bad) 
  0x000002480747ff06: lea    0x20(%rax),%rdi
  0x000002480747ff0a: cmp    0x70(%r15),%rdi
  0x000002480747ff0e: ja     0x000002480747fff2
  0x000002480747ff14: mov    %rdi,0x60(%r15)
  0x000002480747ff18: mov    0xa8(%rdx),%rcx
  0x000002480747ff1f: mov    %rcx,(%rax)
  0x000002480747ff22: mov    %rdx,%rcx
  0x000002480747ff25: shr    $0x3,%rcx
  0x000002480747ff29: mov    %ecx,0x8(%rax)
  0x000002480747ff2c: xor    %rcx,%rcx
  0x000002480747ff2f: mov    %ecx,0xc(%rax)
  0x000002480747ff32: xor    %rcx,%rcx
  0x000002480747ff35: mov    %rcx,0x10(%rax)
  0x000002480747ff39: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 166)

  0x000002480747ff3d: mov    %rax,%rdx
  0x000002480747ff40: movabs $0x2481feac4c8,%rsi  ;   {metadata(method data for {method} {0x000002481fc49918} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000002480747ff4a: addq   $0x1,0x128(%rsi)
  0x000002480747ff52: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.util.Objects::requireNonNull@8 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 166)

  0x000002480747ff55: mov    %rax,0x40(%rsp)
  0x000002480747ff5a: nop
  0x000002480747ff5b: nop
  0x000002480747ff5c: nop
  0x000002480747ff5d: nop
  0x000002480747ff5e: nop
  0x000002480747ff5f: call   0x0000024807375ee0  ; OopMap{[72]=Oop [64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Objects::requireNonNull@8 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 166)
                                                ;   {optimized virtual_call}
  0x000002480747ff64: mov    0x40(%rsp),%rax
  0x000002480747ff69: jmp    0x000002480748002a
  0x000002480747ff6e: mov    %rsi,0x8(%rsp)
  0x000002480747ff73: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747ff7b: call   0x0000024807433da0  ; OopMap{rdx=Oop off=608}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::checkPtype@-1 (line 166)
                                                ;   {runtime_call}
  0x000002480747ff80: jmp    0x000002480747fd5e
  0x000002480747ff85: mov    %rsi,0x8(%rsp)
  0x000002480747ff8a: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747ff92: call   0x0000024807433da0  ; OopMap{rdx=Oop off=631}
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 202)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 166)
                                                ;   {runtime_call}
  0x000002480747ff97: jmp    0x000002480747fda2
  0x000002480747ff9c: mov    %rdx,0x8(%rsp)
  0x000002480747ffa1: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747ffa9: call   0x0000024807433da0  ; OopMap{off=654}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 168)
                                                ;   {runtime_call}
  0x000002480747ffae: jmp    0x000002480747fe6f
  0x000002480747ffb3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480747ffbd: mov    $0xa050f00,%eax
  0x000002480747ffc2: call   0x0000024807432b60  ; OopMap{off=679}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 168)
                                                ;   {runtime_call}
  0x000002480747ffc7: jmp    0x000002480747fe70
  0x000002480747ffcc: mov    %rdx,%rdx
  0x000002480747ffcf: call   0x000002480742f900  ; OopMap{off=692}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 168)
                                                ;   {runtime_call}
  0x000002480747ffd4: jmp    0x000002480747feb5
  0x000002480747ffd9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480747ffe3: mov    $0xa050f00,%eax
  0x000002480747ffe8: call   0x0000024807432b60  ; OopMap{[72]=Oop off=717}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 166)
                                                ;   {runtime_call}
  0x000002480747ffed: jmp    0x000002480747fef8
  0x000002480747fff2: mov    %rdx,%rdx
  0x000002480747fff5: call   0x000002480742f900  ; OopMap{[72]=Oop off=730}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 166)
                                                ;   {runtime_call}
  0x000002480747fffa: jmp    0x000002480747ff3d
  0x000002480747ffff: nop
  0x0000024807480000: nop
  0x0000024807480001: mov    0x308(%r15),%rax
  0x0000024807480008: movabs $0x0,%r10
  0x0000024807480012: mov    %r10,0x308(%r15)
  0x0000024807480019: movabs $0x0,%r10
  0x0000024807480023: mov    %r10,0x310(%r15)
  0x000002480748002a: add    $0x60,%rsp
  0x000002480748002e: pop    %rbp
  0x000002480748002f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807480034: hlt    
  0x0000024807480035: hlt    
  0x0000024807480036: hlt    
  0x0000024807480037: hlt    
  0x0000024807480038: hlt    
  0x0000024807480039: hlt    
  0x000002480748003a: hlt    
  0x000002480748003b: hlt    
  0x000002480748003c: hlt    
  0x000002480748003d: hlt    
  0x000002480748003e: hlt    
  0x000002480748003f: hlt    
[Stub Code]
  0x0000024807480040: nop                       ;   {no_reloc}
  0x0000024807480041: nop
  0x0000024807480042: nop
  0x0000024807480043: nop
  0x0000024807480044: nop
  0x0000024807480045: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748004f: jmp    0x000002480748004f  ;   {runtime_call}
  0x0000024807480054: nop
  0x0000024807480055: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748005f: jmp    0x000002480748005f  ;   {runtime_call}
[Exception Handler]
  0x0000024807480064: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807480069: mov    %rsp,-0x28(%rsp)
  0x000002480748006e: sub    $0x80,%rsp
  0x0000024807480075: mov    %rax,0x78(%rsp)
  0x000002480748007a: mov    %rcx,0x70(%rsp)
  0x000002480748007f: mov    %rdx,0x68(%rsp)
  0x0000024807480084: mov    %rbx,0x60(%rsp)
  0x0000024807480089: mov    %rbp,0x50(%rsp)
  0x000002480748008e: mov    %rsi,0x48(%rsp)
  0x0000024807480093: mov    %rdi,0x40(%rsp)
  0x0000024807480098: mov    %r8,0x38(%rsp)
  0x000002480748009d: mov    %r9,0x30(%rsp)
  0x00000248074800a2: mov    %r10,0x28(%rsp)
  0x00000248074800a7: mov    %r11,0x20(%rsp)
  0x00000248074800ac: mov    %r12,0x18(%rsp)
  0x00000248074800b1: mov    %r13,0x10(%rsp)
  0x00000248074800b6: mov    %r14,0x8(%rsp)
  0x00000248074800bb: mov    %r15,(%rsp)
  0x00000248074800bf: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074800c9: movabs $0x24807480069,%rdx  ;   {internal_word}
  0x00000248074800d3: mov    %rsp,%r8
  0x00000248074800d6: and    $0xfffffffffffffff0,%rsp
  0x00000248074800da: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074800e4: call   *%r10
  0x00000248074800e7: hlt    
[Deopt Handler Code]
  0x00000248074800e8: movabs $0x248074800e8,%r10  ;   {section_word}
  0x00000248074800f2: push   %r10
  0x00000248074800f4: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074800f9: hlt    
  0x00000248074800fa: hlt    
  0x00000248074800fb: hlt    
  0x00000248074800fc: hlt    
  0x00000248074800fd: hlt    
  0x00000248074800fe: hlt    
  0x00000248074800ff: hlt    
<nmethod compile_id='176' compiler='C1' level='3' entry='0x000002480747fd20' size='1904' address='0x000002480747fb90' relocation_offset='288' insts_offset='400' stub_offset='1200' scopes_data_offset='1424' scopes_pcs_offset='1576' dependencies_offset='1896' oops_offset='1392' method='java/lang/invoke/MethodType checkPtype (Ljava/lang/Class;)V' bytes='19' count='775' iicount='775' stamp='2.112'/>
Decoding compiled method 0x0000024807481450:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;
  # parm0:    rdx       = int
  #           [sp+0x90]  (sp of caller)
  0x0000024807481620: mov    %eax,-0x6000(%rsp)
  0x0000024807481627: push   %rbp
  0x0000024807481628: sub    $0x80,%rsp
  0x000002480748162f: movabs $0x2481fed2778,%rsi  ;   {metadata(method data for {method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807481639: mov    0xdc(%rsi),%edi
  0x000002480748163f: add    $0x8,%edi
  0x0000024807481642: mov    %edi,0xdc(%rsi)
  0x0000024807481648: movabs $0x2481fb69b18,%rsi  ;   {metadata({method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807481652: and    $0x1ff8,%edi
  0x0000024807481658: cmp    $0x0,%edi
  0x000002480748165b: je     0x0000024807481c4e  ;*iload_0
                                                ; - java.lang.invoke.MethodType::checkSlotCount@0 (line 185)

  0x0000024807481661: mov    %rdx,%rsi
  0x0000024807481664: and    $0xff,%esi
  0x000002480748166a: cmp    %edx,%esi
  0x000002480748166c: movabs $0x2481fed2778,%rsi  ;   {metadata(method data for {method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807481676: movabs $0x108,%rdi
  0x0000024807481680: je     0x0000024807481690
  0x0000024807481686: movabs $0x118,%rdi
  0x0000024807481690: mov    (%rsi,%rdi,1),%rax
  0x0000024807481694: lea    0x1(%rax),%rax
  0x0000024807481698: mov    %rax,(%rsi,%rdi,1)
  0x000002480748169c: jne    0x00000248074816b1  ;*if_icmpeq
                                                ; - java.lang.invoke.MethodType::checkSlotCount@6 (line 185)

  0x00000248074816a2: add    $0x80,%rsp
  0x00000248074816a9: pop    %rbp
  0x00000248074816aa: test   %eax,-0x1ed15b0(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074816b0: ret                       ;*return
                                                ; - java.lang.invoke.MethodType::checkSlotCount@32 (line 187)

  0x00000248074816b1: mov    %edx,0x58(%rsp)
  0x00000248074816b5: movabs $0x7c000dd08,%rdx  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x00000248074816bf: mov    0x60(%r15),%rax
  0x00000248074816c3: lea    0x18(%rax),%rdi
  0x00000248074816c7: cmp    0x70(%r15),%rdi
  0x00000248074816cb: ja     0x0000024807481c65
  0x00000248074816d1: mov    %rdi,0x60(%r15)
  0x00000248074816d5: mov    0xa8(%rdx),%rcx
  0x00000248074816dc: mov    %rcx,(%rax)
  0x00000248074816df: mov    %rdx,%rcx
  0x00000248074816e2: shr    $0x3,%rcx
  0x00000248074816e6: mov    %ecx,0x8(%rax)
  0x00000248074816e9: xor    %rcx,%rcx
  0x00000248074816ec: mov    %ecx,0xc(%rax)
  0x00000248074816ef: xor    %rcx,%rcx
  0x00000248074816f2: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.invoke.MethodType::checkSlotCount@9 (line 186)

  0x00000248074816f6: mov    %rax,%rbx
  0x00000248074816f9: movabs $0x2481fed2778,%rdx  ;   {metadata(method data for {method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807481703: addq   $0x1,0x128(%rdx)
  0x000002480748170b: movabs $0x2481fd6d330,%rbx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807481715: mov    0xdc(%rbx),%edx
  0x000002480748171b: add    $0x8,%edx
  0x000002480748171e: mov    %edx,0xdc(%rbx)
  0x0000024807481724: movabs $0x2481fb79208,%rbx  ;   {metadata({method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480748172e: and    $0x7ffff8,%edx
  0x0000024807481734: cmp    $0x0,%edx
  0x0000024807481737: je     0x0000024807481c72
  0x000002480748173d: mov    %rax,%rbx
  0x0000024807481740: movabs $0x2481fd6d330,%rdx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480748174a: addq   $0x1,0x108(%rdx)
  0x0000024807481752: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480748175c: mov    0xdc(%rbx),%edx
  0x0000024807481762: add    $0x8,%edx
  0x0000024807481765: mov    %edx,0xdc(%rbx)
  0x000002480748176b: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807481775: and    $0x7ffff8,%edx
  0x000002480748177b: cmp    $0x0,%edx
  0x000002480748177e: je     0x0000024807481c89
  0x0000024807481784: mov    %rax,%rbx
  0x0000024807481787: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807481791: addq   $0x1,0x108(%rdx)
  0x0000024807481799: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000248074817a3: mov    0xdc(%rbx),%edx
  0x00000248074817a9: add    $0x8,%edx
  0x00000248074817ac: mov    %edx,0xdc(%rbx)
  0x00000248074817b2: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000248074817bc: and    $0x7ffff8,%edx
  0x00000248074817c2: cmp    $0x0,%edx
  0x00000248074817c5: je     0x0000024807481ca0
  0x00000248074817cb: mov    $0x10,%ebx
  0x00000248074817d0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000248074817da: mov    %rax,%r11
  0x00000248074817dd: movslq %ebx,%rbx
  0x00000248074817e0: mov    %rbx,%rdi
  0x00000248074817e3: cmp    $0xffffff,%rbx
  0x00000248074817ea: ja     0x0000024807481cb7
  0x00000248074817f0: movabs $0x17,%rsi
  0x00000248074817fa: lea    (%rsi,%rbx,2),%rsi
  0x00000248074817fe: and    $0xfffffffffffffff8,%rsi
  0x0000024807481802: mov    0x60(%r15),%rax
  0x0000024807481806: lea    (%rax,%rsi,1),%rsi
  0x000002480748180a: cmp    0x70(%r15),%rsi
  0x000002480748180e: ja     0x0000024807481cb7
  0x0000024807481814: mov    %rsi,0x60(%r15)
  0x0000024807481818: sub    %rax,%rsi
  0x000002480748181b: movq   $0x1,(%rax)
  0x0000024807481822: mov    %rdx,%rcx
  0x0000024807481825: shr    $0x3,%rcx
  0x0000024807481829: mov    %ecx,0x8(%rax)
  0x000002480748182c: mov    %ebx,0xc(%rax)
  0x000002480748182f: sub    $0x10,%rsi
  0x0000024807481833: je     0x000002480748184a
  0x0000024807481839: xor    %rbx,%rbx
  0x000002480748183c: shr    $0x3,%rsi
  0x0000024807481840: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807481845: dec    %rsi
  0x0000024807481848: jne    0x0000024807481840  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 186)

  0x000002480748184a: mov    %rax,%r10
  0x000002480748184d: shr    $0x3,%r10
  0x0000024807481851: mov    %r10d,0x10(%r11)
  0x0000024807481855: mov    %r11,%rax
  0x0000024807481858: shr    $0x9,%rax
  0x000002480748185c: movabs $0x248130de000,%r8
  0x0000024807481866: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 186)

  0x000002480748186b: mov    %r11,%rax
  0x000002480748186e: movabs $0x2481fed2778,%r8  ;   {metadata(method data for {method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807481878: mov    0x8(%rax),%eax
  0x000002480748187b: shl    $0x3,%rax
  0x000002480748187f: cmp    0x140(%r8),%rax
  0x0000024807481886: jne    0x0000024807481895
  0x0000024807481888: addq   $0x1,0x148(%r8)
  0x0000024807481890: jmp    0x00000248074818fb
  0x0000024807481895: cmp    0x150(%r8),%rax
  0x000002480748189c: jne    0x00000248074818ab
  0x000002480748189e: addq   $0x1,0x158(%r8)
  0x00000248074818a6: jmp    0x00000248074818fb
  0x00000248074818ab: cmpq   $0x0,0x140(%r8)
  0x00000248074818b6: jne    0x00000248074818cf
  0x00000248074818b8: mov    %rax,0x140(%r8)
  0x00000248074818bf: movq   $0x1,0x148(%r8)
  0x00000248074818ca: jmp    0x00000248074818fb
  0x00000248074818cf: cmpq   $0x0,0x150(%r8)
  0x00000248074818da: jne    0x00000248074818f3
  0x00000248074818dc: mov    %rax,0x150(%r8)
  0x00000248074818e3: movq   $0x1,0x158(%r8)
  0x00000248074818ee: jmp    0x00000248074818fb
  0x00000248074818f3: addq   $0x1,0x138(%r8)
  0x00000248074818fb: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807481905: mov    0xdc(%r8),%edx
  0x000002480748190c: add    $0x8,%edx
  0x000002480748190f: mov    %edx,0xdc(%r8)
  0x0000024807481916: movabs $0x2481fb79520,%r8  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807481920: and    $0x7ffff8,%edx
  0x0000024807481926: cmp    $0x0,%edx
  0x0000024807481929: je     0x0000024807481cc1
  0x000002480748192f: mov    %r11,%rax
  0x0000024807481932: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480748193c: addq   $0x1,0x108(%r8)
  0x0000024807481944: movabs $0x76bd5be98,%r8   ;   {oop(&quot;bad parameter count &quot;)}
  0x000002480748194e: mov    %r11,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 186)

  0x0000024807481951: mov    %r11,0x50(%rsp)
  0x0000024807481956: nop
  0x0000024807481957: call   0x0000024807375ee0  ; OopMap{[80]=Oop off=828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 186)
                                                ;   {optimized virtual_call}
  0x000002480748195c: mov    0x50(%rsp),%rax
  0x0000024807481961: movabs $0x2481fed2778,%r8  ;   {metadata(method data for {method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480748196b: mov    0x8(%rax),%eax
  0x000002480748196e: shl    $0x3,%rax
  0x0000024807481972: cmp    0x170(%r8),%rax
  0x0000024807481979: jne    0x0000024807481988
  0x000002480748197b: addq   $0x1,0x178(%r8)
  0x0000024807481983: jmp    0x00000248074819ee
  0x0000024807481988: cmp    0x180(%r8),%rax
  0x000002480748198f: jne    0x000002480748199e
  0x0000024807481991: addq   $0x1,0x188(%r8)
  0x0000024807481999: jmp    0x00000248074819ee
  0x000002480748199e: cmpq   $0x0,0x170(%r8)
  0x00000248074819a9: jne    0x00000248074819c2
  0x00000248074819ab: mov    %rax,0x170(%r8)
  0x00000248074819b2: movq   $0x1,0x178(%r8)
  0x00000248074819bd: jmp    0x00000248074819ee
  0x00000248074819c2: cmpq   $0x0,0x180(%r8)
  0x00000248074819cd: jne    0x00000248074819e6
  0x00000248074819cf: mov    %rax,0x180(%r8)
  0x00000248074819d6: movq   $0x1,0x188(%r8)
  0x00000248074819e1: jmp    0x00000248074819ee
  0x00000248074819e6: addq   $0x1,0x168(%r8)
  0x00000248074819ee: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000248074819f8: mov    0xdc(%r8),%edx
  0x00000248074819ff: add    $0x8,%edx
  0x0000024807481a02: mov    %edx,0xdc(%r8)
  0x0000024807481a09: movabs $0x2481fb799e0,%r8  ;   {metadata({method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807481a13: and    $0x7ffff8,%edx
  0x0000024807481a19: cmp    $0x0,%edx
  0x0000024807481a1c: je     0x0000024807481cd8
  0x0000024807481a22: mov    0x50(%rsp),%rax
  0x0000024807481a27: movabs $0x2481fe59ee0,%r8  ;   {metadata(method data for {method} {0x000002481fb799e8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807481a31: addq   $0x1,0x108(%r8)
  0x0000024807481a39: mov    0x58(%rsp),%r8d
  0x0000024807481a3e: mov    0x50(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 186)

  0x0000024807481a43: nop
  0x0000024807481a44: nop
  0x0000024807481a45: nop
  0x0000024807481a46: nop
  0x0000024807481a47: call   0x0000024807375ee0  ; OopMap{[80]=Oop off=1068}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 186)
                                                ;   {optimized virtual_call}
  0x0000024807481a4c: mov    0x50(%rsp),%rax
  0x0000024807481a51: movabs $0x2481fed2778,%rdx  ;   {metadata(method data for {method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807481a5b: mov    0x8(%rax),%eax
  0x0000024807481a5e: shl    $0x3,%rax
  0x0000024807481a62: cmp    0x1a0(%rdx),%rax
  0x0000024807481a69: jne    0x0000024807481a78
  0x0000024807481a6b: addq   $0x1,0x1a8(%rdx)
  0x0000024807481a73: jmp    0x0000024807481ade
  0x0000024807481a78: cmp    0x1b0(%rdx),%rax
  0x0000024807481a7f: jne    0x0000024807481a8e
  0x0000024807481a81: addq   $0x1,0x1b8(%rdx)
  0x0000024807481a89: jmp    0x0000024807481ade
  0x0000024807481a8e: cmpq   $0x0,0x1a0(%rdx)
  0x0000024807481a99: jne    0x0000024807481ab2
  0x0000024807481a9b: mov    %rax,0x1a0(%rdx)
  0x0000024807481aa2: movq   $0x1,0x1a8(%rdx)
  0x0000024807481aad: jmp    0x0000024807481ade
  0x0000024807481ab2: cmpq   $0x0,0x1b0(%rdx)
  0x0000024807481abd: jne    0x0000024807481ad6
  0x0000024807481abf: mov    %rax,0x1b0(%rdx)
  0x0000024807481ac6: movq   $0x1,0x1b8(%rdx)
  0x0000024807481ad1: jmp    0x0000024807481ade
  0x0000024807481ad6: addq   $0x1,0x198(%rdx)
  0x0000024807481ade: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807481ae8: mov    0xdc(%rdx),%esi
  0x0000024807481aee: add    $0x8,%esi
  0x0000024807481af1: mov    %esi,0xdc(%rdx)
  0x0000024807481af7: movabs $0x2481fb7a8d0,%rdx  ;   {metadata({method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807481b01: and    $0x7ffff8,%esi
  0x0000024807481b07: cmp    $0x0,%esi
  0x0000024807481b0a: je     0x0000024807481cef
  0x0000024807481b10: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000024807481b1a: mov    0x60(%r15),%rax
  0x0000024807481b1e: lea    0x18(%rax),%rdi
  0x0000024807481b22: cmp    0x70(%r15),%rdi
  0x0000024807481b26: ja     0x0000024807481d06
  0x0000024807481b2c: mov    %rdi,0x60(%r15)
  0x0000024807481b30: mov    0xa8(%rdx),%rcx
  0x0000024807481b37: mov    %rcx,(%rax)
  0x0000024807481b3a: mov    %rdx,%rcx
  0x0000024807481b3d: shr    $0x3,%rcx
  0x0000024807481b41: mov    %ecx,0x8(%rax)
  0x0000024807481b44: xor    %rcx,%rcx
  0x0000024807481b47: mov    %ecx,0xc(%rax)
  0x0000024807481b4a: xor    %rcx,%rcx
  0x0000024807481b4d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 186)

  0x0000024807481b51: mov    0x50(%rsp),%r8
  0x0000024807481b56: mov    0x10(%r8),%r9d
  0x0000024807481b5a: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 186)

  0x0000024807481b5e: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 186)

  0x0000024807481b62: mov    %rax,%r8
  0x0000024807481b65: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807481b6f: addq   $0x1,0x108(%rdx)
  0x0000024807481b77: mov    %r9,%r8
  0x0000024807481b7a: mov    $0x0,%r9d
  0x0000024807481b80: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 186)

  0x0000024807481b83: mov    %rax,0x60(%rsp)
  0x0000024807481b88: nop
  0x0000024807481b89: nop
  0x0000024807481b8a: nop
  0x0000024807481b8b: nop
  0x0000024807481b8c: nop
  0x0000024807481b8d: nop
  0x0000024807481b8e: nop
  0x0000024807481b8f: call   0x0000024807375ee0  ; OopMap{[96]=Oop off=1396}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 186)
                                                ;   {optimized virtual_call}
  0x0000024807481b94: movabs $0x2481fed2778,%rdx  ;   {metadata(method data for {method} {0x000002481fb69b20} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807481b9e: addq   $0x1,0x1c8(%rdx)
  0x0000024807481ba6: movabs $0x2481fedb010,%rdx  ;   {metadata(method data for {method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x0000024807481bb0: mov    0xdc(%rdx),%esi
  0x0000024807481bb6: add    $0x8,%esi
  0x0000024807481bb9: mov    %esi,0xdc(%rdx)
  0x0000024807481bbf: movabs $0x2481fdb4fa0,%rdx  ;   {metadata({method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x0000024807481bc9: and    $0x7ffff8,%esi
  0x0000024807481bcf: cmp    $0x0,%esi
  0x0000024807481bd2: je     0x0000024807481d13
  0x0000024807481bd8: jmp    0x0000024807481d39  ;   {no_reloc}
  0x0000024807481bdd: add    %al,(%rax)
  0x0000024807481bdf: add    %al,(%rax)
  0x0000024807481be1: add    %cl,-0x75(%rcx)
  0x0000024807481be4: rex.RXB (bad) 
  0x0000024807481be6: lea    0x20(%rax),%rdi
  0x0000024807481bea: cmp    0x70(%r15),%rdi
  0x0000024807481bee: ja     0x0000024807481d43
  0x0000024807481bf4: mov    %rdi,0x60(%r15)
  0x0000024807481bf8: mov    0xa8(%rdx),%rcx
  0x0000024807481bff: mov    %rcx,(%rax)
  0x0000024807481c02: mov    %rdx,%rcx
  0x0000024807481c05: shr    $0x3,%rcx
  0x0000024807481c09: mov    %ecx,0x8(%rax)
  0x0000024807481c0c: xor    %rcx,%rcx
  0x0000024807481c0f: mov    %ecx,0xc(%rax)
  0x0000024807481c12: xor    %rcx,%rcx
  0x0000024807481c15: mov    %rcx,0x10(%rax)
  0x0000024807481c19: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 186)

  0x0000024807481c1d: mov    %rax,%r8
  0x0000024807481c20: movabs $0x2481fedb010,%rdx  ;   {metadata(method data for {method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x0000024807481c2a: addq   $0x1,0x108(%rdx)
  0x0000024807481c32: mov    0x60(%rsp),%r8
  0x0000024807481c37: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 186)

  0x0000024807481c3a: mov    %rax,0x68(%rsp)
  0x0000024807481c3f: call   0x0000024807375ee0  ; OopMap{[104]=Oop off=1572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 186)
                                                ;   {optimized virtual_call}
  0x0000024807481c44: mov    0x68(%rsp),%rax
  0x0000024807481c49: jmp    0x0000024807481d7b
  0x0000024807481c4e: mov    %rsi,0x8(%rsp)
  0x0000024807481c53: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481c5b: call   0x0000024807433da0  ; OopMap{off=1600}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::checkSlotCount@-1 (line 185)
                                                ;   {runtime_call}
  0x0000024807481c60: jmp    0x0000024807481661
  0x0000024807481c65: mov    %rdx,%rdx
  0x0000024807481c68: call   0x000002480742f900  ; OopMap{off=1613}
                                                ;*new  ; - java.lang.invoke.MethodType::checkSlotCount@9 (line 186)
                                                ;   {runtime_call}
  0x0000024807481c6d: jmp    0x00000248074816f6
  0x0000024807481c72: mov    %rbx,0x8(%rsp)
  0x0000024807481c77: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481c7f: call   0x0000024807433da0  ; OopMap{rax=Oop off=1636}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 186)
                                                ;   {runtime_call}
  0x0000024807481c84: jmp    0x000002480748173d
  0x0000024807481c89: mov    %rbx,0x8(%rsp)
  0x0000024807481c8e: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481c96: call   0x0000024807433da0  ; OopMap{rax=Oop off=1659}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 186)
                                                ;   {runtime_call}
  0x0000024807481c9b: jmp    0x0000024807481784
  0x0000024807481ca0: mov    %rbx,0x8(%rsp)
  0x0000024807481ca5: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481cad: call   0x0000024807433da0  ; OopMap{rax=Oop off=1682}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 186)
                                                ;   {runtime_call}
  0x0000024807481cb2: jmp    0x00000248074817cb
  0x0000024807481cb7: call   0x0000024807430280  ; OopMap{r11=Oop off=1692}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 186)
                                                ;   {runtime_call}
  0x0000024807481cbc: jmp    0x000002480748184a
  0x0000024807481cc1: mov    %r8,0x8(%rsp)
  0x0000024807481cc6: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481cce: call   0x0000024807433da0  ; OopMap{r11=Oop off=1715}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 186)
                                                ;   {runtime_call}
  0x0000024807481cd3: jmp    0x000002480748192f
  0x0000024807481cd8: mov    %r8,0x8(%rsp)
  0x0000024807481cdd: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481ce5: call   0x0000024807433da0  ; OopMap{[80]=Oop off=1738}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 186)
                                                ;   {runtime_call}
  0x0000024807481cea: jmp    0x0000024807481a22
  0x0000024807481cef: mov    %rdx,0x8(%rsp)
  0x0000024807481cf4: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481cfc: call   0x0000024807433da0  ; OopMap{[80]=Oop off=1761}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 186)
                                                ;   {runtime_call}
  0x0000024807481d01: jmp    0x0000024807481b10
  0x0000024807481d06: mov    %rdx,%rdx
  0x0000024807481d09: call   0x000002480742f900  ; OopMap{[80]=Oop off=1774}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 186)
                                                ;   {runtime_call}
  0x0000024807481d0e: jmp    0x0000024807481b51
  0x0000024807481d13: mov    %rdx,0x8(%rsp)
  0x0000024807481d18: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481d20: call   0x0000024807433da0  ; OopMap{[96]=Oop off=1797}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 186)
                                                ;   {runtime_call}
  0x0000024807481d25: jmp    0x0000024807481bd8
  0x0000024807481d2a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807481d34: mov    $0xa050f00,%eax
  0x0000024807481d39: call   0x0000024807432b60  ; OopMap{[96]=Oop off=1822}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 186)
                                                ;   {runtime_call}
  0x0000024807481d3e: jmp    0x0000024807481bd8
  0x0000024807481d43: mov    %rdx,%rdx
  0x0000024807481d46: call   0x000002480742f900  ; OopMap{[96]=Oop off=1835}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 186)
                                                ;   {runtime_call}
  0x0000024807481d4b: jmp    0x0000024807481c1d
  0x0000024807481d50: nop
  0x0000024807481d51: nop
  0x0000024807481d52: mov    0x308(%r15),%rax
  0x0000024807481d59: movabs $0x0,%r10
  0x0000024807481d63: mov    %r10,0x308(%r15)
  0x0000024807481d6a: movabs $0x0,%r10
  0x0000024807481d74: mov    %r10,0x310(%r15)
  0x0000024807481d7b: add    $0x80,%rsp
  0x0000024807481d82: pop    %rbp
  0x0000024807481d83: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807481d88: hlt    
  0x0000024807481d89: hlt    
  0x0000024807481d8a: hlt    
  0x0000024807481d8b: hlt    
  0x0000024807481d8c: hlt    
  0x0000024807481d8d: hlt    
  0x0000024807481d8e: hlt    
  0x0000024807481d8f: hlt    
  0x0000024807481d90: hlt    
  0x0000024807481d91: hlt    
  0x0000024807481d92: hlt    
  0x0000024807481d93: hlt    
  0x0000024807481d94: hlt    
  0x0000024807481d95: hlt    
  0x0000024807481d96: hlt    
  0x0000024807481d97: hlt    
  0x0000024807481d98: hlt    
  0x0000024807481d99: hlt    
  0x0000024807481d9a: hlt    
  0x0000024807481d9b: hlt    
  0x0000024807481d9c: hlt    
  0x0000024807481d9d: hlt    
  0x0000024807481d9e: hlt    
  0x0000024807481d9f: hlt    
[Stub Code]
  0x0000024807481da0: nop                       ;   {no_reloc}
  0x0000024807481da1: nop
  0x0000024807481da2: nop
  0x0000024807481da3: nop
  0x0000024807481da4: nop
  0x0000024807481da5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807481daf: jmp    0x0000024807481daf  ;   {runtime_call}
  0x0000024807481db4: nop
  0x0000024807481db5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807481dbf: jmp    0x0000024807481dbf  ;   {runtime_call}
  0x0000024807481dc4: nop
  0x0000024807481dc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807481dcf: jmp    0x0000024807481dcf  ;   {runtime_call}
  0x0000024807481dd4: nop
  0x0000024807481dd5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807481ddf: jmp    0x0000024807481ddf  ;   {runtime_call}
[Exception Handler]
  0x0000024807481de4: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807481de9: mov    %rsp,-0x28(%rsp)
  0x0000024807481dee: sub    $0x80,%rsp
  0x0000024807481df5: mov    %rax,0x78(%rsp)
  0x0000024807481dfa: mov    %rcx,0x70(%rsp)
  0x0000024807481dff: mov    %rdx,0x68(%rsp)
  0x0000024807481e04: mov    %rbx,0x60(%rsp)
  0x0000024807481e09: mov    %rbp,0x50(%rsp)
  0x0000024807481e0e: mov    %rsi,0x48(%rsp)
  0x0000024807481e13: mov    %rdi,0x40(%rsp)
  0x0000024807481e18: mov    %r8,0x38(%rsp)
  0x0000024807481e1d: mov    %r9,0x30(%rsp)
  0x0000024807481e22: mov    %r10,0x28(%rsp)
  0x0000024807481e27: mov    %r11,0x20(%rsp)
  0x0000024807481e2c: mov    %r12,0x18(%rsp)
  0x0000024807481e31: mov    %r13,0x10(%rsp)
  0x0000024807481e36: mov    %r14,0x8(%rsp)
  0x0000024807481e3b: mov    %r15,(%rsp)
  0x0000024807481e3f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807481e49: movabs $0x24807481de9,%rdx  ;   {internal_word}
  0x0000024807481e53: mov    %rsp,%r8
  0x0000024807481e56: and    $0xfffffffffffffff0,%rsp
  0x0000024807481e5a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807481e64: call   *%r10
  0x0000024807481e67: hlt    
[Deopt Handler Code]
  0x0000024807481e68: movabs $0x24807481e68,%r10  ;   {section_word}
  0x0000024807481e72: push   %r10
  0x0000024807481e74: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807481e79: hlt    
  0x0000024807481e7a: hlt    
  0x0000024807481e7b: hlt    
  0x0000024807481e7c: hlt    
  0x0000024807481e7d: hlt    
  0x0000024807481e7e: hlt    
  0x0000024807481e7f: hlt    
<nmethod compile_id='177' compiler='C1' level='3' entry='0x0000024807481620' size='3568' address='0x0000024807481450' relocation_offset='288' insts_offset='464' stub_offset='2384' scopes_data_offset='2680' scopes_pcs_offset='3032' dependencies_offset='3560' oops_offset='2608' method='java/lang/invoke/MethodType checkSlotCount (I)V' bytes='33' count='654' iicount='654' stamp='2.132'/>
<writer thread='27436'/>
<task_queued compile_id='179' method='java/lang/invoke/MemberName isStatic ()Z' bytes='8' count='640' iicount='640' level='3' stamp='2.132' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807480fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb5a3d0} &apos;isStatic&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807481140: mov    0x8(%rdx),%r10d
  0x0000024807481144: shl    $0x3,%r10
  0x0000024807481148: cmp    %rax,%r10
  0x000002480748114b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807481151: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480748115c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807481160: mov    %eax,-0x6000(%rsp)
  0x0000024807481167: push   %rbp
  0x0000024807481168: sub    $0x30,%rsp
  0x000002480748116c: movabs $0x2481fed4168,%rax  ;   {metadata(method data for {method} {0x000002481fb5a3d0} &apos;isStatic&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807481176: mov    0xdc(%rax),%esi
  0x000002480748117c: add    $0x8,%esi
  0x000002480748117f: mov    %esi,0xdc(%rax)
  0x0000024807481185: movabs $0x2481fb5a3c8,%rax  ;   {metadata({method} {0x000002481fb5a3d0} &apos;isStatic&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480748118f: and    $0x1ff8,%esi
  0x0000024807481195: cmp    $0x0,%esi
  0x0000024807481198: je     0x0000024807481252  ;*aload_0
                                                ; - java.lang.invoke.MemberName::isStatic@0 (line 367)

  0x000002480748119e: mov    0xc(%rdx),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::isStatic@1 (line 367)

  0x00000248074811a1: movabs $0x2481fed4168,%rsi  ;   {metadata(method data for {method} {0x000002481fb5a3d0} &apos;isStatic&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074811ab: addq   $0x1,0x108(%rsi)
  0x00000248074811b3: movabs $0x2481fed3c50,%rsi  ;   {metadata(method data for {method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;)}
  0x00000248074811bd: mov    0xdc(%rsi),%edi
  0x00000248074811c3: add    $0x8,%edi
  0x00000248074811c6: mov    %edi,0xdc(%rsi)
  0x00000248074811cc: movabs $0x2481fc11878,%rsi  ;   {metadata({method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;)}
  0x00000248074811d6: and    $0x7ffff8,%edi
  0x00000248074811dc: cmp    $0x0,%edi
  0x00000248074811df: je     0x0000024807481269
  0x00000248074811e5: and    $0x8,%eax
  0x00000248074811e8: cmp    $0x0,%eax
  0x00000248074811eb: movabs $0x2481fed3c50,%rax  ;   {metadata(method data for {method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;)}
  0x00000248074811f5: movabs $0x108,%rsi
  0x00000248074811ff: je     0x000002480748120f
  0x0000024807481205: movabs $0x118,%rsi
  0x000002480748120f: mov    (%rax,%rsi,1),%rdi
  0x0000024807481213: lea    0x1(%rdi),%rdi
  0x0000024807481217: mov    %rdi,(%rax,%rsi,1)
  0x000002480748121b: je     0x000002480748123b  ;*ifeq
                                                ; - java.lang.reflect.Modifier::isStatic@4 (line 104)
                                                ; - java.lang.invoke.MemberName::isStatic@4 (line 367)

  0x0000024807481221: movabs $0x2481fed3c50,%rax  ;   {metadata(method data for {method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;)}
  0x000002480748122b: incl   0x128(%rax)
  0x0000024807481231: mov    $0x1,%eax
  0x0000024807481236: jmp    0x0000024807481240  ;*goto
                                                ; - java.lang.reflect.Modifier::isStatic@8 (line 104)
                                                ; - java.lang.invoke.MemberName::isStatic@4 (line 367)

  0x000002480748123b: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.reflect.Modifier::isStatic@12 (line 104)
                                                ; - java.lang.invoke.MemberName::isStatic@4 (line 367)

  0x0000024807481240: and    $0x1,%eax
  0x0000024807481243: and    $0x1,%eax
  0x0000024807481246: add    $0x30,%rsp
  0x000002480748124a: pop    %rbp
  0x000002480748124b: test   %eax,-0x1ed1151(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807481251: ret    
  0x0000024807481252: mov    %rax,0x8(%rsp)
  0x0000024807481257: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748125f: call   0x0000024807433da0  ; OopMap{rdx=Oop off=292}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isStatic@-1 (line 367)
                                                ;   {runtime_call}
  0x0000024807481264: jmp    0x000002480748119e
  0x0000024807481269: mov    %rsi,0x8(%rsp)
  0x000002480748126e: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807481276: call   0x0000024807433da0  ; OopMap{off=315}
                                                ;*synchronization entry
                                                ; - java.lang.reflect.Modifier::isStatic@-1 (line 104)
                                                ; - java.lang.invoke.MemberName::isStatic@4 (line 367)
                                                ;   {runtime_call}
  0x000002480748127b: jmp    0x00000248074811e5
  0x0000024807481280: nop
  0x0000024807481281: nop
  0x0000024807481282: mov    0x308(%r15),%rax
  0x0000024807481289: movabs $0x0,%r10
  0x0000024807481293: mov    %r10,0x308(%r15)
  0x000002480748129a: movabs $0x0,%r10
  0x00000248074812a4: mov    %r10,0x310(%r15)
  0x00000248074812ab: add    $0x30,%rsp
  0x00000248074812af: pop    %rbp
  0x00000248074812b0: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074812b5: hlt    
  0x00000248074812b6: hlt    
  0x00000248074812b7: hlt    
  0x00000248074812b8: hlt    
  0x00000248074812b9: hlt    
  0x00000248074812ba: hlt    
  0x00000248074812bb: hlt    
  0x00000248074812bc: hlt    
  0x00000248074812bd: hlt    
  0x00000248074812be: hlt    
  0x00000248074812bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000248074812c0: call   0x0000024807431320  ;   {no_reloc}
  0x00000248074812c5: mov    %rsp,-0x28(%rsp)
  0x00000248074812ca: sub    $0x80,%rsp
  0x00000248074812d1: mov    %rax,0x78(%rsp)
  0x00000248074812d6: mov    %rcx,0x70(%rsp)
  0x00000248074812db: mov    %rdx,0x68(%rsp)
  0x00000248074812e0: mov    %rbx,0x60(%rsp)
  0x00000248074812e5: mov    %rbp,0x50(%rsp)
  0x00000248074812ea: mov    %rsi,0x48(%rsp)
  0x00000248074812ef: mov    %rdi,0x40(%rsp)
  0x00000248074812f4: mov    %r8,0x38(%rsp)
  0x00000248074812f9: mov    %r9,0x30(%rsp)
  0x00000248074812fe: mov    %r10,0x28(%rsp)
  0x0000024807481303: mov    %r11,0x20(%rsp)
  0x0000024807481308: mov    %r12,0x18(%rsp)
  0x000002480748130d: mov    %r13,0x10(%rsp)
  0x0000024807481312: mov    %r14,0x8(%rsp)
  0x0000024807481317: mov    %r15,(%rsp)
  0x000002480748131b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807481325: movabs $0x248074812c5,%rdx  ;   {internal_word}
  0x000002480748132f: mov    %rsp,%r8
  0x0000024807481332: and    $0xfffffffffffffff0,%rsp
  0x0000024807481336: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807481340: call   *%r10
  0x0000024807481343: hlt    
[Deopt Handler Code]
  0x0000024807481344: movabs $0x24807481344,%r10  ;   {section_word}
  0x000002480748134e: push   %r10
  0x0000024807481350: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807481355: hlt    
  0x0000024807481356: hlt    
  0x0000024807481357: hlt    
<nmethod compile_id='179' compiler='C1' level='3' entry='0x0000024807481140' size='1136' address='0x0000024807480fd0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='920' scopes_pcs_offset='984' dependencies_offset='1128' method='java/lang/invoke/MemberName isStatic ()Z' bytes='8' count='643' iicount='643' stamp='2.140'/>
<writer thread='27436'/>
<task_queued compile_id='180' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1536' iicount='1536' level='1' stamp='2.140' comment='tiered' hot_count='1536'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807480c10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000024807480d60: mov    %eax,-0x6000(%rsp)
  0x0000024807480d67: push   %rbp
  0x0000024807480d68: sub    $0x30,%rsp
  0x0000024807480d6c: movabs $0x2481fed3c50,%rax  ;   {metadata(method data for {method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;)}
  0x0000024807480d76: mov    0xdc(%rax),%esi
  0x0000024807480d7c: add    $0x8,%esi
  0x0000024807480d7f: mov    %esi,0xdc(%rax)
  0x0000024807480d85: movabs $0x2481fc11878,%rax  ;   {metadata({method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;)}
  0x0000024807480d8f: and    $0x1ff8,%esi
  0x0000024807480d95: cmp    $0x0,%esi
  0x0000024807480d98: je     0x0000024807480e08  ;*iload_0
                                                ; - java.lang.reflect.Modifier::isStatic@0 (line 104)

  0x0000024807480d9e: and    $0x8,%edx
  0x0000024807480da1: cmp    $0x0,%edx
  0x0000024807480da4: movabs $0x2481fed3c50,%rax  ;   {metadata(method data for {method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;)}
  0x0000024807480dae: movabs $0x108,%rsi
  0x0000024807480db8: je     0x0000024807480dc8
  0x0000024807480dbe: movabs $0x118,%rsi
  0x0000024807480dc8: mov    (%rax,%rsi,1),%rdi
  0x0000024807480dcc: lea    0x1(%rdi),%rdi
  0x0000024807480dd0: mov    %rdi,(%rax,%rsi,1)
  0x0000024807480dd4: je     0x0000024807480df4  ;*ifeq
                                                ; - java.lang.reflect.Modifier::isStatic@4 (line 104)

  0x0000024807480dda: movabs $0x2481fed3c50,%rax  ;   {metadata(method data for {method} {0x000002481fc11880} &apos;isStatic&apos; &apos;(I)Z&apos; in &apos;java/lang/reflect/Modifier&apos;)}
  0x0000024807480de4: incl   0x128(%rax)
  0x0000024807480dea: mov    $0x1,%eax
  0x0000024807480def: jmp    0x0000024807480df9  ;*goto
                                                ; - java.lang.reflect.Modifier::isStatic@8 (line 104)

  0x0000024807480df4: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.reflect.Modifier::isStatic@12 (line 104)

  0x0000024807480df9: and    $0x1,%eax
  0x0000024807480dfc: add    $0x30,%rsp
  0x0000024807480e00: pop    %rbp
  0x0000024807480e01: test   %eax,-0x1ed0d07(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807480e07: ret    
  0x0000024807480e08: mov    %rax,0x8(%rsp)
  0x0000024807480e0d: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807480e15: call   0x0000024807433da0  ; OopMap{off=186}
                                                ;*synchronization entry
                                                ; - java.lang.reflect.Modifier::isStatic@-1 (line 104)
                                                ;   {runtime_call}
  0x0000024807480e1a: jmp    0x0000024807480d9e
  0x0000024807480e1c: nop
  0x0000024807480e1d: nop
  0x0000024807480e1e: mov    0x308(%r15),%rax
  0x0000024807480e25: movabs $0x0,%r10
  0x0000024807480e2f: mov    %r10,0x308(%r15)
  0x0000024807480e36: movabs $0x0,%r10
  0x0000024807480e40: mov    %r10,0x310(%r15)
  0x0000024807480e47: add    $0x30,%rsp
  0x0000024807480e4b: pop    %rbp
  0x0000024807480e4c: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807480e51: hlt    
  0x0000024807480e52: hlt    
  0x0000024807480e53: hlt    
  0x0000024807480e54: hlt    
  0x0000024807480e55: hlt    
  0x0000024807480e56: hlt    
  0x0000024807480e57: hlt    
  0x0000024807480e58: hlt    
  0x0000024807480e59: hlt    
  0x0000024807480e5a: hlt    
  0x0000024807480e5b: hlt    
  0x0000024807480e5c: hlt    
  0x0000024807480e5d: hlt    
  0x0000024807480e5e: hlt    
  0x0000024807480e5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807480e60: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807480e65: mov    %rsp,-0x28(%rsp)
  0x0000024807480e6a: sub    $0x80,%rsp
  0x0000024807480e71: mov    %rax,0x78(%rsp)
  0x0000024807480e76: mov    %rcx,0x70(%rsp)
  0x0000024807480e7b: mov    %rdx,0x68(%rsp)
  0x0000024807480e80: mov    %rbx,0x60(%rsp)
  0x0000024807480e85: mov    %rbp,0x50(%rsp)
  0x0000024807480e8a: mov    %rsi,0x48(%rsp)
  0x0000024807480e8f: mov    %rdi,0x40(%rsp)
  0x0000024807480e94: mov    %r8,0x38(%rsp)
  0x0000024807480e99: mov    %r9,0x30(%rsp)
  0x0000024807480e9e: mov    %r10,0x28(%rsp)
  0x0000024807480ea3: mov    %r11,0x20(%rsp)
  0x0000024807480ea8: mov    %r12,0x18(%rsp)
  0x0000024807480ead: mov    %r13,0x10(%rsp)
  0x0000024807480eb2: mov    %r14,0x8(%rsp)
  0x0000024807480eb7: mov    %r15,(%rsp)
  0x0000024807480ebb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807480ec5: movabs $0x24807480e65,%rdx  ;   {internal_word}
  0x0000024807480ecf: mov    %rsp,%r8
  0x0000024807480ed2: and    $0xfffffffffffffff0,%rsp
  0x0000024807480ed6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807480ee0: call   *%r10
  0x0000024807480ee3: hlt    
[Deopt Handler Code]
  0x0000024807480ee4: movabs $0x24807480ee4,%r10  ;   {section_word}
  0x0000024807480eee: push   %r10
  0x0000024807480ef0: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807480ef5: hlt    
  0x0000024807480ef6: hlt    
  0x0000024807480ef7: hlt    
<nmethod compile_id='178' compiler='C1' level='3' entry='0x0000024807480d60' size='912' address='0x0000024807480c10' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='752' scopes_pcs_offset='792' dependencies_offset='904' method='java/lang/reflect/Modifier isStatic (I)Z' bytes='13' count='646' iicount='646' stamp='2.146'/>
Decoding compiled method 0x0000024807480950:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807480aa0: mov    %eax,-0x6000(%rsp)
  0x0000024807480aa7: push   %rbp
  0x0000024807480aa8: sub    $0x30,%rsp
  0x0000024807480aac: movabs $0x76b700c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000024807480ab6: mov    0x74(%rax),%eax
  0x0000024807480ab9: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 336)

  0x0000024807480abd: add    $0x30,%rsp
  0x0000024807480ac1: pop    %rbp
  0x0000024807480ac2: test   %eax,-0x1ed09c8(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807480ac8: ret    
  0x0000024807480ac9: nop
  0x0000024807480aca: nop
  0x0000024807480acb: mov    0x308(%r15),%rax
  0x0000024807480ad2: movabs $0x0,%r10
  0x0000024807480adc: mov    %r10,0x308(%r15)
  0x0000024807480ae3: movabs $0x0,%r10
  0x0000024807480aed: mov    %r10,0x310(%r15)
  0x0000024807480af4: add    $0x30,%rsp
  0x0000024807480af8: pop    %rbp
  0x0000024807480af9: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807480afe: hlt    
  0x0000024807480aff: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807480b00: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807480b05: mov    %rsp,-0x28(%rsp)
  0x0000024807480b0a: sub    $0x80,%rsp
  0x0000024807480b11: mov    %rax,0x78(%rsp)
  0x0000024807480b16: mov    %rcx,0x70(%rsp)
  0x0000024807480b1b: mov    %rdx,0x68(%rsp)
  0x0000024807480b20: mov    %rbx,0x60(%rsp)
  0x0000024807480b25: mov    %rbp,0x50(%rsp)
  0x0000024807480b2a: mov    %rsi,0x48(%rsp)
  0x0000024807480b2f: mov    %rdi,0x40(%rsp)
  0x0000024807480b34: mov    %r8,0x38(%rsp)
  0x0000024807480b39: mov    %r9,0x30(%rsp)
  0x0000024807480b3e: mov    %r10,0x28(%rsp)
  0x0000024807480b43: mov    %r11,0x20(%rsp)
  0x0000024807480b48: mov    %r12,0x18(%rsp)
  0x0000024807480b4d: mov    %r13,0x10(%rsp)
  0x0000024807480b52: mov    %r14,0x8(%rsp)
  0x0000024807480b57: mov    %r15,(%rsp)
  0x0000024807480b5b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807480b65: movabs $0x24807480b05,%rdx  ;   {internal_word}
  0x0000024807480b6f: mov    %rsp,%r8
  0x0000024807480b72: and    $0xfffffffffffffff0,%rsp
  0x0000024807480b76: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807480b80: call   *%r10
  0x0000024807480b83: hlt    
[Deopt Handler Code]
  0x0000024807480b84: movabs $0x24807480b84,%r10  ;   {section_word}
  0x0000024807480b8e: push   %r10
  0x0000024807480b90: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807480b95: hlt    
  0x0000024807480b96: hlt    
  0x0000024807480b97: hlt    
<nmethod compile_id='180' compiler='C1' level='1' entry='0x0000024807480aa0' size='656' address='0x0000024807480950' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='600' dependencies_offset='648' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1541' iicount='1541' stamp='2.148'/>
<make_not_entrant thread='26148' compile_id='20' compiler='C1' level='3' stamp='2.148'/>
<writer thread='27436'/>
<task_queued compile_id='181' method='java/lang/invoke/MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='233' count='768' iicount='768' level='3' stamp='2.148' comment='tiered' hot_count='768'/>
Decoding compiled method 0x0000024807480790:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fee6088} &apos;linkToStatic&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx       = int
  # parm1:    r8:r8     = &apos;java/lang/Object&apos;
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00000248074808c0: mov    0x18(%rdi),%rbx
  0x00000248074808c4: test   %rbx,%rbx
  0x00000248074808c7: je     0x00000248074808d0
  0x00000248074808cd: jmp    *0x40(%rbx)
  0x00000248074808d0: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x00000248074808d5: hlt    
  0x00000248074808d6: hlt    
  0x00000248074808d7: hlt    
<nmethod compile_id='182' compile_kind='c2n' level='0' entry='0x00000248074808c0' size='328' address='0x0000024807480790' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='2.149'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807483150:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Class&apos;
  # parm1:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00000248074833a0: mov    %eax,-0x6000(%rsp)
  0x00000248074833a7: push   %rbp
  0x00000248074833a8: sub    $0x60,%rsp
  0x00000248074833ac: mov    %rdx,0x50(%rsp)
  0x00000248074833b1: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074833bb: mov    0xdc(%rsi),%edi
  0x00000248074833c1: add    $0x8,%edi
  0x00000248074833c4: mov    %edi,0xdc(%rsi)
  0x00000248074833ca: movabs $0x2481fdef498,%rsi  ;   {metadata({method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074833d4: and    $0x1ff8,%edi
  0x00000248074833da: cmp    $0x0,%edi
  0x00000248074833dd: je     0x0000024807483dac  ;*aload_0
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@0 (line 357)

  0x00000248074833e3: movabs $0x76b7006f8,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Object&apos;)}
  0x00000248074833ed: cmp    %rsi,%rdx
  0x00000248074833f0: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074833fa: movabs $0x108,%rdi
  0x0000024807483404: jne    0x0000024807483414
  0x000002480748340a: movabs $0x118,%rdi
  0x0000024807483414: mov    (%rsi,%rdi,1),%rbx
  0x0000024807483418: lea    0x1(%rbx),%rbx
  0x000002480748341c: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807483420: je     0x0000024807483d86  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@3 (line 357)

  0x0000024807483426: mov    %r8d,0x48(%rsp)
  0x000002480748342b: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000024807483dc3
  0x000002480748342e: mov    %rdx,%rsi
  0x0000024807483431: movabs $0x2481fed6be0,%rdi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000002480748343b: mov    0x8(%rsi),%esi
  0x000002480748343e: shl    $0x3,%rsi
  0x0000024807483442: cmp    0x148(%rdi),%rsi
  0x0000024807483449: jne    0x0000024807483458
  0x000002480748344b: addq   $0x1,0x150(%rdi)
  0x0000024807483453: jmp    0x00000248074834be
  0x0000024807483458: cmp    0x158(%rdi),%rsi
  0x000002480748345f: jne    0x000002480748346e
  0x0000024807483461: addq   $0x1,0x160(%rdi)
  0x0000024807483469: jmp    0x00000248074834be
  0x000002480748346e: cmpq   $0x0,0x148(%rdi)
  0x0000024807483479: jne    0x0000024807483492
  0x000002480748347b: mov    %rsi,0x148(%rdi)
  0x0000024807483482: movq   $0x1,0x150(%rdi)
  0x000002480748348d: jmp    0x00000248074834be
  0x0000024807483492: cmpq   $0x0,0x158(%rdi)
  0x000002480748349d: jne    0x00000248074834b6
  0x000002480748349f: mov    %rsi,0x158(%rdi)
  0x00000248074834a6: movq   $0x1,0x160(%rdi)
  0x00000248074834b1: jmp    0x00000248074834be
  0x00000248074834b6: addq   $0x1,0x140(%rdi)
  0x00000248074834be: mov    %rdx,%rsi
  0x00000248074834c1: mov    %rsi,%rdx          ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 359)

  0x00000248074834c4: nop
  0x00000248074834c5: nop
  0x00000248074834c6: nop
  0x00000248074834c7: call   0x0000024807375ee0  ; OopMap{[80]=Oop off=300}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 359)
                                                ;   {optimized virtual_call}
  0x00000248074834cc: cmp    $0x0,%eax
  0x00000248074834cf: movabs $0x2481fed6be0,%rdx  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074834d9: movabs $0x170,%rsi
  0x00000248074834e3: jne    0x00000248074834f3
  0x00000248074834e9: movabs $0x180,%rsi
  0x00000248074834f3: mov    (%rdx,%rsi,1),%rdi
  0x00000248074834f7: lea    0x1(%rdi),%rdi
  0x00000248074834fb: mov    %rdi,(%rdx,%rsi,1)
  0x00000248074834ff: mov    0x48(%rsp),%r8d
  0x0000024807483504: jne    0x00000248074837c0  ;*ifne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@13 (line 359)

  0x000002480748350a: cmp    $0x1,%r8d
  0x000002480748350e: je     0x0000024807483d70
  0x0000024807483514: cmp    $0x3,%r8d
  0x0000024807483518: je     0x000002480748352d
  0x000002480748351e: cmp    $0x6,%r8d
  0x0000024807483522: je     0x0000024807483d70
  0x0000024807483528: jmp    0x0000024807483d4f  ;*lookupswitch
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@17 (line 360)

  0x000002480748352d: movabs $0x2481fed6be0,%rdx  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483537: addq   $0x1,0x1e0(%rdx)
  0x000002480748353f: movabs $0x2481fee60e8,%rdx  ;   {metadata(method data for {method} {0x000002481fe010a0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483549: mov    0xdc(%rdx),%esi
  0x000002480748354f: add    $0x8,%esi
  0x0000024807483552: mov    %esi,0xdc(%rdx)
  0x0000024807483558: movabs $0x2481fe01098,%rdx  ;   {metadata({method} {0x000002481fe010a0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483562: and    $0x7ffff8,%esi
  0x0000024807483568: cmp    $0x0,%esi
  0x000002480748356b: je     0x0000024807483dc8
  0x0000024807483571: movabs $0x2481fee60e8,%rdx  ;   {metadata(method data for {method} {0x000002481fe010a0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000002480748357b: addq   $0x1,0x108(%rdx)
  0x0000024807483583: movabs $0x2481fee62a0,%rdx  ;   {metadata(method data for {method} {0x000002481fe008f8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000002480748358d: mov    0xdc(%rdx),%esi
  0x0000024807483593: add    $0x8,%esi
  0x0000024807483596: mov    %esi,0xdc(%rdx)
  0x000002480748359c: movabs $0x2481fe008f0,%rdx  ;   {metadata({method} {0x000002481fe008f8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000248074835a6: and    $0x7ffff8,%esi
  0x00000248074835ac: cmp    $0x0,%esi
  0x00000248074835af: je     0x0000024807483ddf
  0x00000248074835b5: movabs $0x2481fee62a0,%rdx  ;   {metadata(method data for {method} {0x000002481fe008f8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000248074835bf: addq   $0x1,0x108(%rdx)
  0x00000248074835c7: mov    0x50(%rsp),%rdx    ;*invokestatic hashWrap
                                                ; - sun.invoke.util.Wrapper::findWrapperType@4 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x00000248074835cc: nop
  0x00000248074835cd: nop
  0x00000248074835ce: nop
  0x00000248074835cf: call   0x0000024807376360  ; OopMap{[80]=Oop off=564}
                                                ;*invokestatic hashWrap
                                                ; - sun.invoke.util.Wrapper::findWrapperType@4 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {static_call}
  0x00000248074835d4: movabs $0x76bc2a460,%rdx  ;   {oop(a &apos;sun/invoke/util/Wrapper&apos;[16] )}
  0x00000248074835de: movslq %eax,%r8
  0x00000248074835e1: cmp    0xc(%rdx),%eax     ; implicit exception: dispatches to 0x0000024807483df6
  0x00000248074835e4: jae    0x0000024807483e00
  0x00000248074835ea: mov    0x10(%rdx,%r8,4),%edx
  0x00000248074835ef: shl    $0x3,%rdx          ;*aaload
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x00000248074835f3: cmp    $0x0,%rdx
  0x00000248074835f7: movabs $0x2481fee62a0,%r8  ;   {metadata(method data for {method} {0x000002481fe008f8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483601: movabs $0x118,%rsi
  0x000002480748360b: je     0x000002480748361b
  0x0000024807483611: movabs $0x128,%rsi
  0x000002480748361b: mov    (%r8,%rsi,1),%rdi
  0x000002480748361f: lea    0x1(%rdi),%rdi
  0x0000024807483623: mov    %rdi,(%r8,%rsi,1)
  0x0000024807483627: mov    0x50(%rsp),%rsi
  0x000002480748362c: je     0x0000024807483673  ;*ifnull
                                                ; - sun.invoke.util.Wrapper::findWrapperType@10 (line 271)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x0000024807483632: mov    0x1c(%rdx),%r8d    ; implicit exception: dispatches to 0x0000024807483e09
  0x0000024807483636: shl    $0x3,%r8           ;*getfield wrapperType
                                                ; - sun.invoke.util.Wrapper::findWrapperType@14 (line 271)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000002480748363a: cmp    %rsi,%r8
  0x000002480748363d: movabs $0x2481fee62a0,%r8  ;   {metadata(method data for {method} {0x000002481fe008f8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483647: movabs $0x138,%rdi
  0x0000024807483651: jne    0x0000024807483661
  0x0000024807483657: movabs $0x148,%rdi
  0x0000024807483661: mov    (%r8,%rdi,1),%rbx
  0x0000024807483665: lea    0x1(%rbx),%rbx
  0x0000024807483669: mov    %rbx,(%r8,%rdi,1)
  0x000002480748366d: je     0x000002480748367d  ;*if_acmpne
                                                ; - sun.invoke.util.Wrapper::findWrapperType@18 (line 271)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x0000024807483673: movabs $0x0,%rdx          ;*astore_1
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@4 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {oop(NULL)}
  0x000002480748367d: cmp    $0x0,%rdx
  0x0000024807483681: movabs $0x2481fee60e8,%r8  ;   {metadata(method data for {method} {0x000002481fe010a0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000002480748368b: movabs $0x118,%rdi
  0x0000024807483695: je     0x00000248074836a5
  0x000002480748369b: movabs $0x128,%rdi
  0x00000248074836a5: mov    (%r8,%rdi,1),%rbx
  0x00000248074836a9: lea    0x1(%rbx),%rbx
  0x00000248074836ad: mov    %rbx,(%r8,%rdi,1)
  0x00000248074836b1: je     0x0000024807483771  ;*ifnull
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@6 (line 382)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x00000248074836b7: cmp    (%rdx),%rax        ;*invokevirtual primitiveType
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ; implicit exception: dispatches to 0x0000024807483e0e
  0x00000248074836ba: mov    %rdx,%r8
  0x00000248074836bd: movabs $0x2481fee60e8,%rdi  ;   {metadata(method data for {method} {0x000002481fe010a0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000248074836c7: mov    0x8(%r8),%r8d
  0x00000248074836cb: shl    $0x3,%r8
  0x00000248074836cf: cmp    0x140(%rdi),%r8
  0x00000248074836d6: jne    0x00000248074836e5
  0x00000248074836d8: addq   $0x1,0x148(%rdi)
  0x00000248074836e0: jmp    0x000002480748374b
  0x00000248074836e5: cmp    0x150(%rdi),%r8
  0x00000248074836ec: jne    0x00000248074836fb
  0x00000248074836ee: addq   $0x1,0x158(%rdi)
  0x00000248074836f6: jmp    0x000002480748374b
  0x00000248074836fb: cmpq   $0x0,0x140(%rdi)
  0x0000024807483706: jne    0x000002480748371f
  0x0000024807483708: mov    %r8,0x140(%rdi)
  0x000002480748370f: movq   $0x1,0x148(%rdi)
  0x000002480748371a: jmp    0x000002480748374b
  0x000002480748371f: cmpq   $0x0,0x150(%rdi)
  0x000002480748372a: jne    0x0000024807483743
  0x000002480748372c: mov    %r8,0x150(%rdi)
  0x0000024807483733: movq   $0x1,0x158(%rdi)
  0x000002480748373e: jmp    0x000002480748374b
  0x0000024807483743: addq   $0x1,0x138(%rdi)
  0x000002480748374b: mov    0x20(%rdx),%edx
  0x000002480748374e: shl    $0x3,%rdx          ;*getfield primitiveType
                                                ; - sun.invoke.util.Wrapper::primitiveType@1 (line 340)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x0000024807483752: movabs $0x2481fee60e8,%r8  ;   {metadata(method data for {method} {0x000002481fe010a0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000002480748375c: addq   $0x1,0x168(%r8)
  0x0000024807483764: mov    %rsi,%r8           ;*invokestatic forceType
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@14 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x0000024807483767: call   0x0000024807376360  ; OopMap{[80]=Oop off=972}
                                                ;*invokestatic forceType
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@14 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {static_call}
  0x000002480748376c: jmp    0x0000024807483776
  0x0000024807483771: mov    0x50(%rsp),%rax    ;*astore_2
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@56 (line 362)

  0x0000024807483776: mov    0x50(%rsp),%rdx
  0x000002480748377b: cmp    %rdx,%rax
  0x000002480748377e: movabs $0x2481fed6be0,%rdx  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483788: movabs $0x1f0,%rsi
  0x0000024807483792: je     0x00000248074837a2
  0x0000024807483798: movabs $0x200,%rsi
  0x00000248074837a2: mov    (%rdx,%rsi,1),%rdi
  0x00000248074837a6: lea    0x1(%rdi),%rdi
  0x00000248074837aa: mov    %rdi,(%rdx,%rsi,1)
  0x00000248074837ae: je     0x0000024807483d4f  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@59 (line 363)

  0x00000248074837b4: add    $0x60,%rsp
  0x00000248074837b8: pop    %rbp
  0x00000248074837b9: test   %eax,-0x1ed36bf(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074837bf: ret    
  0x00000248074837c0: mov    0x50(%rsp),%rdx
  0x00000248074837c5: movabs $0x76b700350,%r10  ;   {oop(a &apos;java/lang/Class&apos; = void)}
  0x00000248074837cf: cmp    %r10,%rdx
  0x00000248074837d2: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074837dc: movabs $0x228,%rdi
  0x00000248074837e6: jne    0x00000248074837f6
  0x00000248074837ec: movabs $0x238,%rdi
  0x00000248074837f6: mov    (%rsi,%rdi,1),%rbx
  0x00000248074837fa: lea    0x1(%rbx),%rbx
  0x00000248074837fe: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807483802: jne    0x0000024807483821  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@74 (line 369)

  0x0000024807483808: cmp    $0x2,%r8d
  0x000002480748380c: je     0x0000024807483d39
  0x0000024807483812: cmp    $0x6,%r8d
  0x0000024807483816: je     0x0000024807483d23
  0x000002480748381c: jmp    0x0000024807483d0e  ;*lookupswitch
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@78 (line 371)

  0x0000024807483821: cmp    $0x2,%r8d
  0x0000024807483825: je     0x0000024807483a70
  0x000002480748382b: cmp    $0x4,%r8d
  0x000002480748382f: je     0x00000248074839a2
  0x0000024807483835: cmp    $0x5,%r8d
  0x0000024807483839: je     0x000002480748395a
  0x000002480748383f: cmp    $0x6,%r8d
  0x0000024807483843: jne    0x0000024807483d96  ;*tableswitch
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@115 (line 379)

  0x0000024807483849: movabs $0x76b700010,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x0000024807483853: cmp    %rsi,%rdx
  0x0000024807483856: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483860: movabs $0x3a0,%rdi
  0x000002480748386a: je     0x000002480748387a
  0x0000024807483870: movabs $0x3b0,%rdi
  0x000002480748387a: mov    (%rsi,%rdi,1),%rbx
  0x000002480748387e: lea    0x1(%rbx),%rbx
  0x0000024807483882: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807483886: je     0x0000024807483ce2  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@201 (line 393)

  0x000002480748388c: movabs $0x76b700280,%r10  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x0000024807483896: cmp    %r10,%rdx
  0x0000024807483899: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074838a3: movabs $0x3c0,%rdi
  0x00000248074838ad: je     0x00000248074838bd
  0x00000248074838b3: movabs $0x3d0,%rdi
  0x00000248074838bd: mov    (%rsi,%rdi,1),%rbx
  0x00000248074838c1: lea    0x1(%rbx),%rbx
  0x00000248074838c5: mov    %rbx,(%rsi,%rdi,1)
  0x00000248074838c9: je     0x0000024807483ce2  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@208 (line 393)

  0x00000248074838cf: movabs $0x76b700078,%r10  ;   {oop(a &apos;java/lang/Class&apos; = float)}
  0x00000248074838d9: cmp    %r10,%rdx
  0x00000248074838dc: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074838e6: movabs $0x3e0,%rdi
  0x00000248074838f0: je     0x0000024807483900
  0x00000248074838f6: movabs $0x3f0,%rdi
  0x0000024807483900: mov    (%rsi,%rdi,1),%rbx
  0x0000024807483904: lea    0x1(%rbx),%rbx
  0x0000024807483908: mov    %rbx,(%rsi,%rdi,1)
  0x000002480748390c: je     0x0000024807483ce2  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@215 (line 393)

  0x0000024807483912: movabs $0x76b7000e0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = double)}
  0x000002480748391c: cmp    %r10,%rdx
  0x000002480748391f: movabs $0x2481fed6be0,%rdx  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483929: movabs $0x400,%rsi
  0x0000024807483933: jne    0x0000024807483943
  0x0000024807483939: movabs $0x410,%rsi
  0x0000024807483943: mov    (%rdx,%rsi,1),%rdi
  0x0000024807483947: lea    0x1(%rdi),%rdi
  0x000002480748394b: mov    %rdi,(%rdx,%rsi,1)
  0x000002480748394f: jne    0x0000024807483cf8
  0x0000024807483955: jmp    0x0000024807483ce2  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@222 (line 393)

  0x000002480748395a: movabs $0x76b700280,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x0000024807483964: cmp    %rsi,%rdx
  0x0000024807483967: movabs $0x2481fed6be0,%rdx  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483971: movabs $0x380,%rsi
  0x000002480748397b: jne    0x000002480748398b
  0x0000024807483981: movabs $0x390,%rsi
  0x000002480748398b: mov    (%rdx,%rsi,1),%rdi
  0x000002480748398f: lea    0x1(%rdi),%rdi
  0x0000024807483993: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807483997: jne    0x0000024807483ccc
  0x000002480748399d: jmp    0x0000024807483cb6  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@188 (line 389)

  0x00000248074839a2: movabs $0x76b700010,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x00000248074839ac: cmp    %rsi,%rdx
  0x00000248074839af: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074839b9: movabs $0x320,%rdi
  0x00000248074839c3: je     0x00000248074839d3
  0x00000248074839c9: movabs $0x330,%rdi
  0x00000248074839d3: mov    (%rsi,%rdi,1),%rbx
  0x00000248074839d7: lea    0x1(%rbx),%rbx
  0x00000248074839db: mov    %rbx,(%rsi,%rdi,1)
  0x00000248074839df: je     0x0000024807483ca0  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@157 (line 383)

  0x00000248074839e5: movabs $0x76b700280,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x00000248074839ef: cmp    %rsi,%rdx
  0x00000248074839f2: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x00000248074839fc: movabs $0x340,%rdi
  0x0000024807483a06: jne    0x0000024807483a16
  0x0000024807483a0c: movabs $0x350,%rdi
  0x0000024807483a16: mov    (%rsi,%rdi,1),%rbx
  0x0000024807483a1a: lea    0x1(%rbx),%rbx
  0x0000024807483a1e: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807483a22: je     0x0000024807483ca0  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@164 (line 383)

  0x0000024807483a28: movabs $0x76b7000e0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = double)}
  0x0000024807483a32: cmp    %r10,%rdx
  0x0000024807483a35: movabs $0x2481fed6be0,%rdx  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483a3f: movabs $0x360,%rsi
  0x0000024807483a49: jne    0x0000024807483a59
  0x0000024807483a4f: movabs $0x370,%rsi
  0x0000024807483a59: mov    (%rdx,%rsi,1),%rdi
  0x0000024807483a5d: lea    0x1(%rdi),%rdi
  0x0000024807483a61: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807483a65: jne    0x0000024807483c8a
  0x0000024807483a6b: jmp    0x0000024807483c74  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@173 (line 385)

  0x0000024807483a70: movabs $0x2481fed6be0,%rsi  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483a7a: addq   $0x1,0x310(%rsi)
  0x0000024807483a82: movabs $0x2481fee6cf8,%rsi  ;   {metadata(method data for {method} {0x000002481fe00ff8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483a8c: mov    0xdc(%rsi),%edi
  0x0000024807483a92: add    $0x8,%edi
  0x0000024807483a95: mov    %edi,0xdc(%rsi)
  0x0000024807483a9b: movabs $0x2481fe00ff0,%rsi  ;   {metadata({method} {0x000002481fe00ff8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483aa5: and    $0x7ffff8,%edi
  0x0000024807483aab: cmp    $0x0,%edi
  0x0000024807483aae: je     0x0000024807483e13
  0x0000024807483ab4: mov    %rdx,%rsi
  0x0000024807483ab7: movabs $0x2481fee6cf8,%rdi  ;   {metadata(method data for {method} {0x000002481fe00ff8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483ac1: mov    0x8(%rsi),%esi
  0x0000024807483ac4: shl    $0x3,%rsi
  0x0000024807483ac8: cmp    0x110(%rdi),%rsi
  0x0000024807483acf: jne    0x0000024807483ade
  0x0000024807483ad1: addq   $0x1,0x118(%rdi)
  0x0000024807483ad9: jmp    0x0000024807483b44
  0x0000024807483ade: cmp    0x120(%rdi),%rsi
  0x0000024807483ae5: jne    0x0000024807483af4
  0x0000024807483ae7: addq   $0x1,0x128(%rdi)
  0x0000024807483aef: jmp    0x0000024807483b44
  0x0000024807483af4: cmpq   $0x0,0x110(%rdi)
  0x0000024807483aff: jne    0x0000024807483b18
  0x0000024807483b01: mov    %rsi,0x110(%rdi)
  0x0000024807483b08: movq   $0x1,0x118(%rdi)
  0x0000024807483b13: jmp    0x0000024807483b44
  0x0000024807483b18: cmpq   $0x0,0x120(%rdi)
  0x0000024807483b23: jne    0x0000024807483b3c
  0x0000024807483b25: mov    %rsi,0x120(%rdi)
  0x0000024807483b2c: movq   $0x1,0x128(%rdi)
  0x0000024807483b37: jmp    0x0000024807483b44
  0x0000024807483b3c: addq   $0x1,0x108(%rdi)
  0x0000024807483b44: mov    %rdx,%rsi
  0x0000024807483b47: mov    %rsi,%rdx          ;*invokevirtual isPrimitive
                                                ; - sun.invoke.util.Wrapper::asWrapperType@1 (line 371)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)

  0x0000024807483b4a: nop
  0x0000024807483b4b: nop
  0x0000024807483b4c: nop
  0x0000024807483b4d: nop
  0x0000024807483b4e: nop
  0x0000024807483b4f: call   0x0000024807375ee0  ; OopMap{[80]=Oop off=1972}
                                                ;*invokevirtual isPrimitive
                                                ; - sun.invoke.util.Wrapper::asWrapperType@1 (line 371)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {optimized virtual_call}
  0x0000024807483b54: cmp    $0x0,%eax
  0x0000024807483b57: movabs $0x2481fee6cf8,%rdx  ;   {metadata(method data for {method} {0x000002481fe00ff8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483b61: movabs $0x138,%rsi
  0x0000024807483b6b: je     0x0000024807483b7b
  0x0000024807483b71: movabs $0x148,%rsi
  0x0000024807483b7b: mov    (%rdx,%rsi,1),%rdi
  0x0000024807483b7f: lea    0x1(%rdi),%rdi
  0x0000024807483b83: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807483b87: je     0x0000024807483c60  ;*ifeq
                                                ; - sun.invoke.util.Wrapper::asWrapperType@4 (line 371)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)

  0x0000024807483b8d: movabs $0x2481fee6cf8,%rdx  ;   {metadata(method data for {method} {0x000002481fe00ff8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483b97: addq   $0x1,0x158(%rdx)
  0x0000024807483b9f: mov    0x50(%rsp),%rdx    ;*invokestatic forPrimitiveType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@8 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)

  0x0000024807483ba4: nop
  0x0000024807483ba5: nop
  0x0000024807483ba6: nop
  0x0000024807483ba7: call   0x0000024807376360  ; OopMap{[80]=Oop off=2060}
                                                ;*invokestatic forPrimitiveType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@8 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {static_call}
  0x0000024807483bac: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000024807483e2a
  0x0000024807483baf: mov    %rax,%r8
  0x0000024807483bb2: movabs $0x2481fee6cf8,%rdx  ;   {metadata(method data for {method} {0x000002481fe00ff8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000024807483bbc: mov    0x8(%r8),%r8d
  0x0000024807483bc0: shl    $0x3,%r8
  0x0000024807483bc4: cmp    0x170(%rdx),%r8
  0x0000024807483bcb: jne    0x0000024807483bda
  0x0000024807483bcd: addq   $0x1,0x178(%rdx)
  0x0000024807483bd5: jmp    0x0000024807483c40
  0x0000024807483bda: cmp    0x180(%rdx),%r8
  0x0000024807483be1: jne    0x0000024807483bf0
  0x0000024807483be3: addq   $0x1,0x188(%rdx)
  0x0000024807483beb: jmp    0x0000024807483c40
  0x0000024807483bf0: cmpq   $0x0,0x170(%rdx)
  0x0000024807483bfb: jne    0x0000024807483c14
  0x0000024807483bfd: mov    %r8,0x170(%rdx)
  0x0000024807483c04: movq   $0x1,0x178(%rdx)
  0x0000024807483c0f: jmp    0x0000024807483c40
  0x0000024807483c14: cmpq   $0x0,0x180(%rdx)
  0x0000024807483c1f: jne    0x0000024807483c38
  0x0000024807483c21: mov    %r8,0x180(%rdx)
  0x0000024807483c28: movq   $0x1,0x188(%rdx)
  0x0000024807483c33: jmp    0x0000024807483c40
  0x0000024807483c38: addq   $0x1,0x168(%rdx)
  0x0000024807483c40: mov    0x50(%rsp),%r8
  0x0000024807483c45: mov    %rax,%rdx          ;*invokevirtual wrapperType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)

  0x0000024807483c48: nop
  0x0000024807483c49: nop
  0x0000024807483c4a: nop
  0x0000024807483c4b: nop
  0x0000024807483c4c: nop
  0x0000024807483c4d: nop
  0x0000024807483c4e: nop
  0x0000024807483c4f: call   0x0000024807375ee0  ; OopMap{off=2228}
                                                ;*invokevirtual wrapperType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {optimized virtual_call}
  0x0000024807483c54: add    $0x60,%rsp
  0x0000024807483c58: pop    %rbp
  0x0000024807483c59: test   %eax,-0x1ed3b5f(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483c5f: ret    
  0x0000024807483c60: mov    0x50(%rsp),%rdx
  0x0000024807483c65: mov    %rdx,%rax
  0x0000024807483c68: add    $0x60,%rsp
  0x0000024807483c6c: pop    %rbp
  0x0000024807483c6d: test   %eax,-0x1ed3b73(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483c73: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@152 (line 381)

  0x0000024807483c74: movabs $0x76b700280,%rax  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x0000024807483c7e: add    $0x60,%rsp
  0x0000024807483c82: pop    %rbp
  0x0000024807483c83: test   %eax,-0x1ed3b89(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483c89: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@179 (line 386)

  0x0000024807483c8a: movabs $0x76b700010,%rax  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x0000024807483c94: add    $0x60,%rsp
  0x0000024807483c98: pop    %rbp
  0x0000024807483c99: test   %eax,-0x1ed3b9f(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483c9f: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@183 (line 387)

  0x0000024807483ca0: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000024807483caa: add    $0x60,%rsp
  0x0000024807483cae: pop    %rbp
  0x0000024807483caf: test   %eax,-0x1ed3bb5(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483cb5: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@168 (line 384)

  0x0000024807483cb6: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000024807483cc0: add    $0x60,%rsp
  0x0000024807483cc4: pop    %rbp
  0x0000024807483cc5: test   %eax,-0x1ed3bcb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483ccb: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@192 (line 390)

  0x0000024807483ccc: movabs $0x76b700280,%rax  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x0000024807483cd6: add    $0x60,%rsp
  0x0000024807483cda: pop    %rbp
  0x0000024807483cdb: test   %eax,-0x1ed3be1(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483ce1: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@196 (line 391)

  0x0000024807483ce2: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000024807483cec: add    $0x60,%rsp
  0x0000024807483cf0: pop    %rbp
  0x0000024807483cf1: test   %eax,-0x1ed3bf7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483cf7: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@226 (line 395)

  0x0000024807483cf8: movabs $0x76b700010,%rax  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x0000024807483d02: add    $0x60,%rsp
  0x0000024807483d06: pop    %rbp
  0x0000024807483d07: test   %eax,-0x1ed3c0d(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483d0d: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@230 (line 397)

  0x0000024807483d0e: movabs $0x2481fed6be0,%rax  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483d18: incl   0x288(%rax)
  0x0000024807483d1e: jmp    0x0000024807483d96  ;*goto
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@111 (line 375)

  0x0000024807483d23: movabs $0x76b700010,%rax  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x0000024807483d2d: add    $0x60,%rsp
  0x0000024807483d31: pop    %rbp
  0x0000024807483d32: test   %eax,-0x1ed3c38(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483d38: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@107 (line 373)

  0x0000024807483d39: movabs $0x76bac6e48,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Void&apos;)}
  0x0000024807483d43: add    $0x60,%rsp
  0x0000024807483d47: pop    %rbp
  0x0000024807483d48: test   %eax,-0x1ed3c4e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483d4e: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@110 (line 375)

  0x0000024807483d4f: movabs $0x2481fed6be0,%rax  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483d59: incl   0x210(%rax)
  0x0000024807483d5f: jmp    0x0000024807483d96  ;*goto
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@67 (line 367)

  0x0000024807483d64: add    $0x60,%rsp
  0x0000024807483d68: pop    %rbp
  0x0000024807483d69: test   %eax,-0x1ed3c6f(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483d6f: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@63 (line 363)

  0x0000024807483d70: movabs $0x76b7006f8,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Object&apos;)}
  0x0000024807483d7a: add    $0x60,%rsp
  0x0000024807483d7e: pop    %rbp
  0x0000024807483d7f: test   %eax,-0x1ed3c85(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483d85: ret                       ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@66 (line 367)

  0x0000024807483d86: movabs $0x2481fed6be0,%rax  ;   {metadata(method data for {method} {0x000002481fdef4a0} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x0000024807483d90: incl   0x128(%rax)        ;*goto
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@6 (line 357)

  0x0000024807483d96: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000024807483da0: add    $0x60,%rsp
  0x0000024807483da4: pop    %rbp
  0x0000024807483da5: test   %eax,-0x1ed3cab(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807483dab: ret    
  0x0000024807483dac: mov    %rsi,0x8(%rsp)
  0x0000024807483db1: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807483db9: call   0x0000024807433da0  ; OopMap{rdx=Oop [80]=Oop off=2590}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@-1 (line 357)
                                                ;   {runtime_call}
  0x0000024807483dbe: jmp    0x00000248074833e3
  0x0000024807483dc3: call   0x000002480742f100  ; OopMap{rdx=Oop [80]=Oop off=2600}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 359)
                                                ;   {runtime_call}
  0x0000024807483dc8: mov    %rdx,0x8(%rsp)
  0x0000024807483dcd: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807483dd5: call   0x0000024807433da0  ; OopMap{[80]=Oop off=2618}
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@-1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x0000024807483dda: jmp    0x0000024807483571
  0x0000024807483ddf: mov    %rdx,0x8(%rsp)
  0x0000024807483de4: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807483dec: call   0x0000024807433da0  ; OopMap{[80]=Oop off=2641}
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::findWrapperType@-1 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x0000024807483df1: jmp    0x00000248074835b5
  0x0000024807483df6: call   0x000002480742f100  ; OopMap{[80]=Oop rdx=Oop off=2651}
                                                ;*aaload
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x0000024807483dfb: call   0x000002480742f100  ; OopMap{[80]=Oop rdx=Oop off=2656}
                                                ;*aaload
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x0000024807483e00: mov    %rax,(%rsp)
  0x0000024807483e04: call   0x000002480742e800  ; OopMap{[80]=Oop rdx=Oop off=2665}
                                                ;*aaload
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x0000024807483e09: call   0x000002480742f100  ; OopMap{rsi=Oop [80]=Oop rdx=Oop off=2670}
                                                ;*getfield wrapperType
                                                ; - sun.invoke.util.Wrapper::findWrapperType@14 (line 271)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x0000024807483e0e: call   0x000002480742f100  ; OopMap{rsi=Oop [80]=Oop rdx=Oop off=2675}
                                                ;*invokevirtual primitiveType
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x0000024807483e13: mov    %rsi,0x8(%rsp)
  0x0000024807483e18: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807483e20: call   0x0000024807433da0  ; OopMap{rdx=Oop [80]=Oop off=2693}
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::asWrapperType@-1 (line 371)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {runtime_call}
  0x0000024807483e25: jmp    0x0000024807483ab4
  0x0000024807483e2a: call   0x000002480742f100  ; OopMap{[80]=Oop rax=Oop off=2703}
                                                ;*invokevirtual wrapperType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {runtime_call}
  0x0000024807483e2f: nop
  0x0000024807483e30: nop
  0x0000024807483e31: mov    0x308(%r15),%rax
  0x0000024807483e38: movabs $0x0,%r10
  0x0000024807483e42: mov    %r10,0x308(%r15)
  0x0000024807483e49: movabs $0x0,%r10
  0x0000024807483e53: mov    %r10,0x310(%r15)
  0x0000024807483e5a: add    $0x60,%rsp
  0x0000024807483e5e: pop    %rbp
  0x0000024807483e5f: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807483e64: hlt    
  0x0000024807483e65: hlt    
  0x0000024807483e66: hlt    
  0x0000024807483e67: hlt    
  0x0000024807483e68: hlt    
  0x0000024807483e69: hlt    
  0x0000024807483e6a: hlt    
  0x0000024807483e6b: hlt    
  0x0000024807483e6c: hlt    
  0x0000024807483e6d: hlt    
  0x0000024807483e6e: hlt    
  0x0000024807483e6f: hlt    
  0x0000024807483e70: hlt    
  0x0000024807483e71: hlt    
  0x0000024807483e72: hlt    
  0x0000024807483e73: hlt    
  0x0000024807483e74: hlt    
  0x0000024807483e75: hlt    
  0x0000024807483e76: hlt    
  0x0000024807483e77: hlt    
  0x0000024807483e78: hlt    
  0x0000024807483e79: hlt    
  0x0000024807483e7a: hlt    
  0x0000024807483e7b: hlt    
  0x0000024807483e7c: hlt    
  0x0000024807483e7d: hlt    
  0x0000024807483e7e: hlt    
  0x0000024807483e7f: hlt    
[Stub Code]
  0x0000024807483e80: nop                       ;   {no_reloc}
  0x0000024807483e81: nop
  0x0000024807483e82: nop
  0x0000024807483e83: nop
  0x0000024807483e84: nop
  0x0000024807483e85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807483e8f: jmp    0x0000024807483e8f  ;   {runtime_call}
  0x0000024807483e94: nop
  0x0000024807483e95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807483e9f: jmp    0x0000024807483e9f  ;   {runtime_call}
  0x0000024807483ea4: nop
  0x0000024807483ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807483eaf: jmp    0x0000024807483eaf  ;   {runtime_call}
  0x0000024807483eb4: nop
  0x0000024807483eb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807483ebf: jmp    0x0000024807483ebf  ;   {runtime_call}
  0x0000024807483ec4: nop
  0x0000024807483ec5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807483ecf: jmp    0x0000024807483ecf  ;   {runtime_call}
  0x0000024807483ed4: nop
  0x0000024807483ed5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807483edf: jmp    0x0000024807483edf  ;   {runtime_call}
[Exception Handler]
  0x0000024807483ee4: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807483ee9: mov    %rsp,-0x28(%rsp)
  0x0000024807483eee: sub    $0x80,%rsp
  0x0000024807483ef5: mov    %rax,0x78(%rsp)
  0x0000024807483efa: mov    %rcx,0x70(%rsp)
  0x0000024807483eff: mov    %rdx,0x68(%rsp)
  0x0000024807483f04: mov    %rbx,0x60(%rsp)
  0x0000024807483f09: mov    %rbp,0x50(%rsp)
  0x0000024807483f0e: mov    %rsi,0x48(%rsp)
  0x0000024807483f13: mov    %rdi,0x40(%rsp)
  0x0000024807483f18: mov    %r8,0x38(%rsp)
  0x0000024807483f1d: mov    %r9,0x30(%rsp)
  0x0000024807483f22: mov    %r10,0x28(%rsp)
  0x0000024807483f27: mov    %r11,0x20(%rsp)
  0x0000024807483f2c: mov    %r12,0x18(%rsp)
  0x0000024807483f31: mov    %r13,0x10(%rsp)
  0x0000024807483f36: mov    %r14,0x8(%rsp)
  0x0000024807483f3b: mov    %r15,(%rsp)
  0x0000024807483f3f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807483f49: movabs $0x24807483ee9,%rdx  ;   {internal_word}
  0x0000024807483f53: mov    %rsp,%r8
  0x0000024807483f56: and    $0xfffffffffffffff0,%rsp
  0x0000024807483f5a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807483f64: call   *%r10
  0x0000024807483f67: hlt    
[Deopt Handler Code]
  0x0000024807483f68: movabs $0x24807483f68,%r10  ;   {section_word}
  0x0000024807483f72: push   %r10
  0x0000024807483f74: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807483f79: hlt    
  0x0000024807483f7a: hlt    
  0x0000024807483f7b: hlt    
  0x0000024807483f7c: hlt    
  0x0000024807483f7d: hlt    
  0x0000024807483f7e: hlt    
  0x0000024807483f7f: hlt    
<nmethod compile_id='181' compiler='C1' level='3' entry='0x00000248074833a0' size='5328' address='0x0000024807483150' relocation_offset='288' insts_offset='592' stub_offset='3376' scopes_data_offset='3680' scopes_pcs_offset='4208' dependencies_offset='5264' nul_chk_table_offset='5272' oops_offset='3632' method='java/lang/invoke/MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='233' count='770' iicount='770' stamp='2.176'/>
<writer thread='27436'/>
<task_queued compile_id='183' method='java/lang/invoke/MethodType$ConcurrentWeakInternSet expungeStaleElements ()V' bytes='27' count='640' iicount='640' level='3' stamp='2.176' comment='tiered' hot_count='640'/>
<task_queued compile_id='184' method='jdk/internal/org/objectweb/asm/ByteVector put12 (II)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='64' count='640' iicount='640' level='3' stamp='2.177' comment='tiered' hot_count='640'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480747f0d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;
  #           [sp+0x70]  (sp of caller)
  0x000002480747f260: mov    0x8(%rdx),%r10d
  0x000002480747f264: shl    $0x3,%r10
  0x000002480747f268: cmp    %rax,%r10
  0x000002480747f26b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480747f271: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480747f27c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480747f280: mov    %eax,-0x6000(%rsp)
  0x000002480747f287: push   %rbp
  0x000002480747f288: sub    $0x60,%rsp
  0x000002480747f28c: mov    %rdx,0x30(%rsp)
  0x000002480747f291: movabs $0x2481fed9c18,%rax  ;   {metadata(method data for {method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x000002480747f29b: mov    0xdc(%rax),%esi
  0x000002480747f2a1: add    $0x8,%esi
  0x000002480747f2a4: mov    %esi,0xdc(%rax)
  0x000002480747f2aa: movabs $0x2481fdecc48,%rax  ;   {metadata({method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x000002480747f2b4: and    $0x1ff8,%esi
  0x000002480747f2ba: cmp    $0x0,%esi
  0x000002480747f2bd: je     0x000002480747f6b1  ;*aload_0
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@0 (line 1254)

  0x000002480747f2c3: nopl   0x0(%rax,%rax,1)
  0x000002480747f2c8: mov    0x10(%rdx),%esi
  0x000002480747f2cb: shl    $0x3,%rsi          ;*getfield stale
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@1 (line 1254)

  0x000002480747f2cf: cmp    (%rsi),%rax        ;*invokevirtual poll
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)
                                                ; implicit exception: dispatches to 0x000002480747f6c8
  0x000002480747f2d2: mov    %rsi,%rax
  0x000002480747f2d5: movabs $0x2481fed9c18,%rdi  ;   {metadata(method data for {method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x000002480747f2df: mov    0x8(%rax),%eax
  0x000002480747f2e2: shl    $0x3,%rax
  0x000002480747f2e6: cmp    0x110(%rdi),%rax
  0x000002480747f2ed: jne    0x000002480747f2fc
  0x000002480747f2ef: addq   $0x1,0x118(%rdi)
  0x000002480747f2f7: jmp    0x000002480747f362
  0x000002480747f2fc: cmp    0x120(%rdi),%rax
  0x000002480747f303: jne    0x000002480747f312
  0x000002480747f305: addq   $0x1,0x128(%rdi)
  0x000002480747f30d: jmp    0x000002480747f362
  0x000002480747f312: cmpq   $0x0,0x110(%rdi)
  0x000002480747f31d: jne    0x000002480747f336
  0x000002480747f31f: mov    %rax,0x110(%rdi)
  0x000002480747f326: movq   $0x1,0x118(%rdi)
  0x000002480747f331: jmp    0x000002480747f362
  0x000002480747f336: cmpq   $0x0,0x120(%rdi)
  0x000002480747f341: jne    0x000002480747f35a
  0x000002480747f343: mov    %rax,0x120(%rdi)
  0x000002480747f34a: movq   $0x1,0x128(%rdi)
  0x000002480747f355: jmp    0x000002480747f362
  0x000002480747f35a: addq   $0x1,0x108(%rdi)
  0x000002480747f362: movabs $0x2481fe12350,%rax  ;   {metadata(method data for {method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000002480747f36c: mov    0xdc(%rax),%edi
  0x000002480747f372: add    $0x8,%edi
  0x000002480747f375: mov    %edi,0xdc(%rax)
  0x000002480747f37b: movabs $0x2481fb2b7b0,%rax  ;   {metadata({method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000002480747f385: and    $0x7ffff8,%edi
  0x000002480747f38b: cmp    $0x0,%edi
  0x000002480747f38e: je     0x000002480747f6cd
  0x000002480747f394: mov    0x18(%rsi),%eax
  0x000002480747f397: shl    $0x3,%rax          ;*getfield head
                                                ; - java.lang.ref.ReferenceQueue::poll@1 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)

  0x000002480747f39b: cmp    $0x0,%rax
  0x000002480747f39f: movabs $0x2481fe12350,%rax  ;   {metadata(method data for {method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000002480747f3a9: movabs $0x108,%rdi
  0x000002480747f3b3: jne    0x000002480747f3c3
  0x000002480747f3b9: movabs $0x118,%rdi
  0x000002480747f3c3: mov    (%rax,%rdi,1),%rbx
  0x000002480747f3c7: lea    0x1(%rbx),%rbx
  0x000002480747f3cb: mov    %rbx,(%rax,%rdi,1)
  0x000002480747f3cf: jne    0x000002480747f3e4  ;*ifnonnull
                                                ; - java.lang.ref.ReferenceQueue::poll@4 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)

  0x000002480747f3d5: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000002480747f3df: jmp    0x000002480747f50b  ;*dup
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@7 (line 1254)

  0x000002480747f3e4: mov    0xc(%rsi),%edi
  0x000002480747f3e7: shl    $0x3,%rdi          ;*getfield lock
                                                ; - java.lang.ref.ReferenceQueue::poll@10 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)

  0x000002480747f3eb: lea    0x40(%rsp),%rbx
  0x000002480747f3f0: mov    %rdi,0x8(%rbx)
  0x000002480747f3f4: mov    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480747f6e4
  0x000002480747f3f7: mov    %rax,%rcx
  0x000002480747f3fa: and    $0x7,%rcx
  0x000002480747f3fe: cmp    $0x5,%rcx
  0x000002480747f402: jne    0x000002480747f489
  0x000002480747f408: mov    0x8(%rdi),%ecx
  0x000002480747f40b: shl    $0x3,%rcx
  0x000002480747f40f: mov    0xa8(%rcx),%rcx
  0x000002480747f416: or     %r15,%rcx
  0x000002480747f419: xor    %rax,%rcx
  0x000002480747f41c: and    $0xffffffffffffff87,%rcx
  0x000002480747f420: je     0x000002480747f4b1
  0x000002480747f426: test   $0x7,%rcx
  0x000002480747f42d: jne    0x000002480747f476
  0x000002480747f42f: test   $0x300,%rcx
  0x000002480747f436: jne    0x000002480747f455
  0x000002480747f438: and    $0x37f,%rax
  0x000002480747f43f: mov    %rax,%rcx
  0x000002480747f442: or     %r15,%rcx
  0x000002480747f445: lock cmpxchg %rcx,(%rdi)
  0x000002480747f44a: jne    0x000002480747f6e9
  0x000002480747f450: jmp    0x000002480747f4b1
  0x000002480747f455: mov    0x8(%rdi),%ecx
  0x000002480747f458: shl    $0x3,%rcx
  0x000002480747f45c: mov    0xa8(%rcx),%rcx
  0x000002480747f463: or     %r15,%rcx
  0x000002480747f466: lock cmpxchg %rcx,(%rdi)
  0x000002480747f46b: jne    0x000002480747f6e9
  0x000002480747f471: jmp    0x000002480747f4b1
  0x000002480747f476: mov    0x8(%rdi),%ecx
  0x000002480747f479: shl    $0x3,%rcx
  0x000002480747f47d: mov    0xa8(%rcx),%rcx
  0x000002480747f484: lock cmpxchg %rcx,(%rdi)
  0x000002480747f489: mov    (%rdi),%rax
  0x000002480747f48c: or     $0x1,%rax
  0x000002480747f490: mov    %rax,(%rbx)
  0x000002480747f493: lock cmpxchg %rbx,(%rdi)
  0x000002480747f498: je     0x000002480747f4b1
  0x000002480747f49e: sub    %rsp,%rax
  0x000002480747f4a1: and    $0xfffffffffffff007,%rax
  0x000002480747f4a8: mov    %rax,(%rbx)
  0x000002480747f4ab: jne    0x000002480747f6e9  ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)

  0x000002480747f4b1: mov    %rdi,0x38(%rsp)
  0x000002480747f4b6: mov    %rsi,%rbx
  0x000002480747f4b9: movabs $0x2481fe12350,%rax  ;   {metadata(method data for {method} {0x000002481fb2b7b8} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000002480747f4c3: addq   $0x1,0x128(%rax)
  0x000002480747f4cb: mov    %rsi,%rdx          ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)

  0x000002480747f4ce: nop
  0x000002480747f4cf: call   0x0000024807375ee0  ; OopMap{[56]=Oop [48]=Oop [72]=Oop off=628}
                                                ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)
                                                ;   {optimized virtual_call}
  0x000002480747f4d4: mov    %rax,%r8           ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)

  0x000002480747f4d7: lea    0x40(%rsp),%rax
  0x000002480747f4dc: mov    0x8(%rax),%rsi
  0x000002480747f4e0: mov    (%rsi),%rdx
  0x000002480747f4e3: and    $0x7,%rdx
  0x000002480747f4e7: cmp    $0x5,%rdx
  0x000002480747f4eb: je     0x000002480747f508
  0x000002480747f4f1: mov    (%rax),%rdx
  0x000002480747f4f4: test   %rdx,%rdx
  0x000002480747f4f7: je     0x000002480747f508
  0x000002480747f4fd: lock cmpxchg %rdx,(%rsi)
  0x000002480747f502: jne    0x000002480747f6fc  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@21 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)

  0x000002480747f508: mov    %r8,%rsi           ;*dup  ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@7 (line 1254)

  0x000002480747f50b: cmp    $0x0,%rsi
  0x000002480747f50f: movabs $0x2481fed9c18,%r8  ;   {metadata(method data for {method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x000002480747f519: movabs $0x138,%rdx
  0x000002480747f523: je     0x000002480747f533
  0x000002480747f529: movabs $0x148,%rdx
  0x000002480747f533: mov    (%r8,%rdx,1),%rdi
  0x000002480747f537: lea    0x1(%rdi),%rdi
  0x000002480747f53b: mov    %rdi,(%r8,%rdx,1)
  0x000002480747f53f: je     0x000002480747f64e  ;*ifnull
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@9 (line 1254)

  0x000002480747f545: mov    0x30(%rsp),%rdx
  0x000002480747f54a: mov    0xc(%rdx),%edi
  0x000002480747f54d: shl    $0x3,%rdi          ;*getfield map
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@13 (line 1255)

  0x000002480747f551: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480747f70f
  0x000002480747f554: mov    %rdi,%r8
  0x000002480747f557: movabs $0x2481fed9c18,%rbx  ;   {metadata(method data for {method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x000002480747f561: mov    0x8(%r8),%r8d
  0x000002480747f565: shl    $0x3,%r8
  0x000002480747f569: cmp    0x160(%rbx),%r8
  0x000002480747f570: jne    0x000002480747f57f
  0x000002480747f572: addq   $0x1,0x168(%rbx)
  0x000002480747f57a: jmp    0x000002480747f5e5
  0x000002480747f57f: cmp    0x170(%rbx),%r8
  0x000002480747f586: jne    0x000002480747f595
  0x000002480747f588: addq   $0x1,0x178(%rbx)
  0x000002480747f590: jmp    0x000002480747f5e5
  0x000002480747f595: cmpq   $0x0,0x160(%rbx)
  0x000002480747f5a0: jne    0x000002480747f5b9
  0x000002480747f5a2: mov    %r8,0x160(%rbx)
  0x000002480747f5a9: movq   $0x1,0x168(%rbx)
  0x000002480747f5b4: jmp    0x000002480747f5e5
  0x000002480747f5b9: cmpq   $0x0,0x170(%rbx)
  0x000002480747f5c4: jne    0x000002480747f5dd
  0x000002480747f5c6: mov    %r8,0x170(%rbx)
  0x000002480747f5cd: movq   $0x1,0x178(%rbx)
  0x000002480747f5d8: jmp    0x000002480747f5e5
  0x000002480747f5dd: addq   $0x1,0x158(%rbx)
  0x000002480747f5e5: mov    %rsi,%r8
  0x000002480747f5e8: mov    %rdi,%rdx          ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1255)

  0x000002480747f5eb: nop
  0x000002480747f5ec: nop
  0x000002480747f5ed: movabs $0xffffffffffffffff,%rax
  0x000002480747f5f7: call   0x0000024807376120  ; OopMap{[48]=Oop off=924}
                                                ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1255)
                                                ;   {virtual_call}
  0x000002480747f5fc: movabs $0x2481fed9c18,%rax  ;   {metadata(method data for {method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x000002480747f606: mov    0xe0(%rax),%esi
  0x000002480747f60c: add    $0x8,%esi
  0x000002480747f60f: mov    %esi,0xe0(%rax)
  0x000002480747f615: movabs $0x2481fdecc48,%rax  ;   {metadata({method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x000002480747f61f: and    $0xfff8,%esi
  0x000002480747f625: cmp    $0x0,%esi
  0x000002480747f628: je     0x000002480747f714  ; OopMap{[48]=Oop off=974}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1255)

  0x000002480747f62e: test   %eax,-0x1ecf534(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480747f634: movabs $0x2481fed9c18,%rax  ;   {metadata(method data for {method} {0x000002481fdecc50} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x000002480747f63e: incl   0x188(%rax)
  0x000002480747f644: mov    0x30(%rsp),%rdx
  0x000002480747f649: jmp    0x000002480747f2c8  ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1255)

  0x000002480747f64e: add    $0x60,%rsp
  0x000002480747f652: pop    %rbp
  0x000002480747f653: test   %eax,-0x1ecf559(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480747f659: ret                       ;*return
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@26 (line 1257)

  0x000002480747f65a: mov    0x308(%r15),%rax
  0x000002480747f661: xor    %r10,%r10
  0x000002480747f664: mov    %r10,0x308(%r15)
  0x000002480747f66b: xor    %r10,%r10
  0x000002480747f66e: mov    %r10,0x310(%r15)
  0x000002480747f675: mov    %rax,%rsi
  0x000002480747f678: lea    0x40(%rsp),%rax
  0x000002480747f67d: mov    0x8(%rax),%rbx
  0x000002480747f681: mov    (%rbx),%rdi
  0x000002480747f684: and    $0x7,%rdi
  0x000002480747f688: cmp    $0x5,%rdi
  0x000002480747f68c: je     0x000002480747f6a9
  0x000002480747f692: mov    (%rax),%rdi
  0x000002480747f695: test   %rdi,%rdi
  0x000002480747f698: je     0x000002480747f6a9
  0x000002480747f69e: lock cmpxchg %rdi,(%rbx)
  0x000002480747f6a3: jne    0x000002480747f72b  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@25 (line 110)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)

  0x000002480747f6a9: mov    %rsi,%rax
  0x000002480747f6ac: jmp    0x000002480747f769
  0x000002480747f6b1: mov    %rax,0x8(%rsp)
  0x000002480747f6b6: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747f6be: call   0x0000024807433da0  ; OopMap{rdx=Oop [48]=Oop off=1123}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@-1 (line 1254)
                                                ;   {runtime_call}
  0x000002480747f6c3: jmp    0x000002480747f2c3
  0x000002480747f6c8: call   0x000002480742f100  ; OopMap{rdx=Oop [48]=Oop rsi=Oop off=1133}
                                                ;*invokevirtual poll
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)
                                                ;   {runtime_call}
  0x000002480747f6cd: mov    %rax,0x8(%rsp)
  0x000002480747f6d2: movq   $0xffffffffffffffff,(%rsp)
  0x000002480747f6da: call   0x0000024807433da0  ; OopMap{rdx=Oop [48]=Oop rsi=Oop off=1151}
                                                ;*synchronization entry
                                                ; - java.lang.ref.ReferenceQueue::poll@-1 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)
                                                ;   {runtime_call}
  0x000002480747f6df: jmp    0x000002480747f394
  0x000002480747f6e4: call   0x000002480742f100  ; OopMap{rdx=Oop [48]=Oop rsi=Oop rdi=Oop off=1161}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)
                                                ;   {runtime_call}
  0x000002480747f6e9: mov    %rdi,0x8(%rsp)
  0x000002480747f6ee: mov    %rbx,(%rsp)
  0x000002480747f6f2: call   0x0000024807431ea0  ; OopMap{rdx=Oop [48]=Oop rsi=Oop rdi=Oop [72]=Oop off=1175}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1254)
                                                ;   {runtime_call}
  0x000002480747f6f7: jmp    0x000002480747f4b1
  0x000002480747f6fc: lea    0x40(%rsp),%rax
  0x000002480747f701: mov    %rax,(%rsp)
  0x000002480747f705: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480747f70a: jmp    0x000002480747f508
  0x000002480747f70f: call   0x000002480742f100  ; OopMap{rsi=Oop rdx=Oop [48]=Oop rdi=Oop off=1204}
                                                ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1255)
                                                ;   {runtime_call}
  0x000002480747f714: mov    %rax,0x8(%rsp)
  0x000002480747f719: movq   $0x17,(%rsp)
  0x000002480747f721: call   0x0000024807433da0  ; OopMap{[48]=Oop off=1222}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1255)
                                                ;   {runtime_call}
  0x000002480747f726: jmp    0x000002480747f62e
  0x000002480747f72b: lea    0x40(%rsp),%rax
  0x000002480747f730: mov    %rax,(%rsp)
  0x000002480747f734: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480747f739: jmp    0x000002480747f6a9
  0x000002480747f73e: nop
  0x000002480747f73f: nop
  0x000002480747f740: mov    0x308(%r15),%rax
  0x000002480747f747: movabs $0x0,%r10
  0x000002480747f751: mov    %r10,0x308(%r15)
  0x000002480747f758: movabs $0x0,%r10
  0x000002480747f762: mov    %r10,0x310(%r15)
  0x000002480747f769: add    $0x60,%rsp
  0x000002480747f76d: pop    %rbp
  0x000002480747f76e: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480747f773: hlt    
  0x000002480747f774: hlt    
  0x000002480747f775: hlt    
  0x000002480747f776: hlt    
  0x000002480747f777: hlt    
  0x000002480747f778: hlt    
  0x000002480747f779: hlt    
  0x000002480747f77a: hlt    
  0x000002480747f77b: hlt    
  0x000002480747f77c: hlt    
  0x000002480747f77d: hlt    
  0x000002480747f77e: hlt    
  0x000002480747f77f: hlt    
[Stub Code]
  0x000002480747f780: nop                       ;   {no_reloc}
  0x000002480747f781: nop
  0x000002480747f782: nop
  0x000002480747f783: nop
  0x000002480747f784: nop
  0x000002480747f785: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747f78f: jmp    0x000002480747f78f  ;   {runtime_call}
  0x000002480747f794: nop
  0x000002480747f795: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480747f79f: jmp    0x000002480747f79f  ;   {runtime_call}
[Exception Handler]
  0x000002480747f7a4: call   0x0000024807431320  ;   {runtime_call}
  0x000002480747f7a9: mov    %rsp,-0x28(%rsp)
  0x000002480747f7ae: sub    $0x80,%rsp
  0x000002480747f7b5: mov    %rax,0x78(%rsp)
  0x000002480747f7ba: mov    %rcx,0x70(%rsp)
  0x000002480747f7bf: mov    %rdx,0x68(%rsp)
  0x000002480747f7c4: mov    %rbx,0x60(%rsp)
  0x000002480747f7c9: mov    %rbp,0x50(%rsp)
  0x000002480747f7ce: mov    %rsi,0x48(%rsp)
  0x000002480747f7d3: mov    %rdi,0x40(%rsp)
  0x000002480747f7d8: mov    %r8,0x38(%rsp)
  0x000002480747f7dd: mov    %r9,0x30(%rsp)
  0x000002480747f7e2: mov    %r10,0x28(%rsp)
  0x000002480747f7e7: mov    %r11,0x20(%rsp)
  0x000002480747f7ec: mov    %r12,0x18(%rsp)
  0x000002480747f7f1: mov    %r13,0x10(%rsp)
  0x000002480747f7f6: mov    %r14,0x8(%rsp)
  0x000002480747f7fb: mov    %r15,(%rsp)
  0x000002480747f7ff: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480747f809: movabs $0x2480747f7a9,%rdx  ;   {internal_word}
  0x000002480747f813: mov    %rsp,%r8
  0x000002480747f816: and    $0xfffffffffffffff0,%rsp
  0x000002480747f81a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480747f824: call   *%r10
  0x000002480747f827: hlt    
[Deopt Handler Code]
  0x000002480747f828: movabs $0x2480747f828,%r10  ;   {section_word}
  0x000002480747f832: push   %r10
  0x000002480747f834: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480747f839: hlt    
  0x000002480747f83a: hlt    
  0x000002480747f83b: hlt    
  0x000002480747f83c: hlt    
  0x000002480747f83d: hlt    
  0x000002480747f83e: hlt    
  0x000002480747f83f: hlt    
<nmethod compile_id='183' compiler='C1' level='3' entry='0x000002480747f260' size='2688' address='0x000002480747f0d0' relocation_offset='288' insts_offset='400' stub_offset='1712' scopes_data_offset='1920' scopes_pcs_offset='2144' dependencies_offset='2624' handler_table_offset='2632' nul_chk_table_offset='2656' method='java/lang/invoke/MethodType$ConcurrentWeakInternSet expungeStaleElements ()V' bytes='27' count='646' iicount='646' stamp='2.191'/>
<writer thread='27436'/>
Decoding compiled method 0x000002480747ef50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fee7378} &apos;invokeBasic&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rdx:rdx   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000002480747f080: mov    0x14(%rdx),%ebx
  0x000002480747f083: shl    $0x3,%rbx
  0x000002480747f087: mov    0x28(%rbx),%ebx
  0x000002480747f08a: shl    $0x3,%rbx
  0x000002480747f08e: mov    0x18(%rbx),%rbx
  0x000002480747f092: test   %rbx,%rbx
  0x000002480747f095: je     0x000002480747f09e
  0x000002480747f09b: jmp    *0x40(%rbx)
  0x000002480747f09e: jmp    0x0000024807334fe0  ;   {runtime_call}
  0x000002480747f0a3: hlt    
  0x000002480747f0a4: hlt    
  0x000002480747f0a5: hlt    
  0x000002480747f0a6: hlt    
  0x000002480747f0a7: hlt    
<nmethod compile_id='185' compile_kind='c2n' level='0' entry='0x000002480747f080' size='344' address='0x000002480747ef50' relocation_offset='288' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='2.192'/>
<task_queued compile_id='186' method='java/lang/invoke/MemberName isConstructor ()Z' bytes='7' count='640' iicount='640' level='3' stamp='2.192' comment='tiered' hot_count='640'/>
Decoding compiled method 0x0000024807484650:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000002481fee7490} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm4:    rsi:rsi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000024807484780: cmp    (%rdx),%rax
  0x0000024807484783: mov    0x18(%rsi),%rbx
  0x0000024807484787: test   %rbx,%rbx
  0x000002480748478a: je     0x0000024807484793
  0x0000024807484790: jmp    *0x40(%rbx)
  0x0000024807484793: jmp    0x0000024807334fe0  ;   {runtime_call}
<nmethod compile_id='187' compile_kind='c2n' level='0' entry='0x0000024807484780' size='328' address='0x0000024807484650' relocation_offset='288' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='2.194'/>
<writer thread='26148'/>
Decoding compiled method 0x00000248074847d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3f530} &apos;put12&apos; &apos;(II)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000024807484940: mov    0x8(%rdx),%r10d
  0x0000024807484944: shl    $0x3,%r10
  0x0000024807484948: cmp    %rax,%r10
  0x000002480748494b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807484951: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480748495c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807484960: mov    %eax,-0x6000(%rsp)
  0x0000024807484967: push   %rbp
  0x0000024807484968: sub    $0x50,%rsp
  0x000002480748496c: movabs $0x2481fed6460,%rsi  ;   {metadata(method data for {method} {0x000002481fe3f530} &apos;put12&apos; &apos;(II)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807484976: mov    0xdc(%rsi),%edi
  0x000002480748497c: add    $0x8,%edi
  0x000002480748497f: mov    %edi,0xdc(%rsi)
  0x0000024807484985: movabs $0x2481fe3f528,%rsi  ;   {metadata({method} {0x000002481fe3f530} &apos;put12&apos; &apos;(II)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000002480748498f: and    $0x1ff8,%edi
  0x0000024807484995: cmp    $0x0,%edi
  0x0000024807484998: je     0x0000024807484a92  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@0 (line 169)

  0x000002480748499e: mov    0xc(%rdx),%esi     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@1 (line 169)

  0x00000248074849a1: mov    0x10(%rdx),%edi
  0x00000248074849a4: shl    $0x3,%rdi          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@9 (line 170)

  0x00000248074849a8: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@12 (line 170)
                                                ; implicit exception: dispatches to 0x0000024807484aa9
  0x00000248074849ab: mov    %rsi,%rbx
  0x00000248074849ae: add    $0x3,%ebx
  0x00000248074849b1: cmp    %edi,%ebx
  0x00000248074849b3: movabs $0x2481fed6460,%rdi  ;   {metadata(method data for {method} {0x000002481fe3f530} &apos;put12&apos; &apos;(II)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000248074849bd: movabs $0x108,%rbx
  0x00000248074849c7: jle    0x00000248074849d7
  0x00000248074849cd: movabs $0x118,%rbx
  0x00000248074849d7: mov    (%rdi,%rbx,1),%rax
  0x00000248074849db: lea    0x1(%rax),%rax
  0x00000248074849df: mov    %rax,(%rdi,%rbx,1)
  0x00000248074849e3: jle    0x0000024807484a37  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@13 (line 170)

  0x00000248074849e9: mov    %esi,0x34(%rsp)
  0x00000248074849ed: mov    %r9d,0x38(%rsp)
  0x00000248074849f2: mov    %r8d,0x30(%rsp)
  0x00000248074849f7: mov    %rdx,%rdi
  0x00000248074849fa: movabs $0x2481fed6460,%rbx  ;   {metadata(method data for {method} {0x000002481fe3f530} &apos;put12&apos; &apos;(II)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000024807484a04: addq   $0x1,0x128(%rbx)
  0x0000024807484a0c: mov    $0x3,%r8d
  0x0000024807484a12: mov    %rdx,%rbx
  0x0000024807484a15: mov    %rbx,%rdx          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@18 (line 171)

  0x0000024807484a18: mov    %rbx,0x28(%rsp)
  0x0000024807484a1d: nop
  0x0000024807484a1e: nop
  0x0000024807484a1f: call   0x0000024807375ee0  ; OopMap{[40]=Oop off=228}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@18 (line 171)
                                                ;   {optimized virtual_call}
  0x0000024807484a24: mov    0x34(%rsp),%esi
  0x0000024807484a28: mov    0x38(%rsp),%r9d
  0x0000024807484a2d: mov    0x30(%rsp),%r8d
  0x0000024807484a32: mov    0x28(%rsp),%rdx
  0x0000024807484a37: mov    0x10(%rdx),%eax
  0x0000024807484a3a: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@22 (line 173)

  0x0000024807484a3e: movslq %esi,%rdi
  0x0000024807484a41: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000024807484aae
  0x0000024807484a44: jae    0x0000024807484ab8
  0x0000024807484a4a: mov    %r8b,0x10(%rax,%rdi,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@35 (line 174)

  0x0000024807484a4f: inc    %esi
  0x0000024807484a51: mov    %r9,%rdi
  0x0000024807484a54: shr    $0x8,%edi
  0x0000024807484a57: movslq %esi,%rbx
  0x0000024807484a5a: cmp    0xc(%rax),%esi
  0x0000024807484a5d: jae    0x0000024807484ac1
  0x0000024807484a63: mov    %dil,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@47 (line 175)

  0x0000024807484a68: inc    %esi
  0x0000024807484a6a: mov    %rsi,%rdi
  0x0000024807484a6d: inc    %edi
  0x0000024807484a6f: movslq %esi,%rbx
  0x0000024807484a72: cmp    0xc(%rax),%esi
  0x0000024807484a75: jae    0x0000024807484aca
  0x0000024807484a7b: mov    %r9b,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@56 (line 176)

  0x0000024807484a80: mov    %edi,0xc(%rdx)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@59 (line 177)

  0x0000024807484a83: mov    %rdx,%rax
  0x0000024807484a86: add    $0x50,%rsp
  0x0000024807484a8a: pop    %rbp
  0x0000024807484a8b: test   %eax,-0x1ed4991(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807484a91: ret    
  0x0000024807484a92: mov    %rsi,0x8(%rsp)
  0x0000024807484a97: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807484a9f: call   0x0000024807433da0  ; OopMap{rdx=Oop off=356}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@-1 (line 169)
                                                ;   {runtime_call}
  0x0000024807484aa4: jmp    0x000002480748499e
  0x0000024807484aa9: call   0x000002480742f100  ; OopMap{rdx=Oop off=366}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@12 (line 170)
                                                ;   {runtime_call}
  0x0000024807484aae: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=371}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@35 (line 174)
                                                ;   {runtime_call}
  0x0000024807484ab3: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=376}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@35 (line 174)
                                                ;   {runtime_call}
  0x0000024807484ab8: mov    %rsi,(%rsp)
  0x0000024807484abc: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=385}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@35 (line 174)
                                                ;   {runtime_call}
  0x0000024807484ac1: mov    %rsi,(%rsp)
  0x0000024807484ac5: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=394}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@47 (line 175)
                                                ;   {runtime_call}
  0x0000024807484aca: mov    %rsi,(%rsp)
  0x0000024807484ace: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=403}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@56 (line 176)
                                                ;   {runtime_call}
  0x0000024807484ad3: nop
  0x0000024807484ad4: nop
  0x0000024807484ad5: mov    0x308(%r15),%rax
  0x0000024807484adc: movabs $0x0,%r10
  0x0000024807484ae6: mov    %r10,0x308(%r15)
  0x0000024807484aed: movabs $0x0,%r10
  0x0000024807484af7: mov    %r10,0x310(%r15)
  0x0000024807484afe: add    $0x50,%rsp
  0x0000024807484b02: pop    %rbp
  0x0000024807484b03: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807484b08: hlt    
  0x0000024807484b09: hlt    
  0x0000024807484b0a: hlt    
  0x0000024807484b0b: hlt    
  0x0000024807484b0c: hlt    
  0x0000024807484b0d: hlt    
  0x0000024807484b0e: hlt    
  0x0000024807484b0f: hlt    
  0x0000024807484b10: hlt    
  0x0000024807484b11: hlt    
  0x0000024807484b12: hlt    
  0x0000024807484b13: hlt    
  0x0000024807484b14: hlt    
  0x0000024807484b15: hlt    
  0x0000024807484b16: hlt    
  0x0000024807484b17: hlt    
  0x0000024807484b18: hlt    
  0x0000024807484b19: hlt    
  0x0000024807484b1a: hlt    
  0x0000024807484b1b: hlt    
  0x0000024807484b1c: hlt    
  0x0000024807484b1d: hlt    
  0x0000024807484b1e: hlt    
  0x0000024807484b1f: hlt    
[Stub Code]
  0x0000024807484b20: nop                       ;   {no_reloc}
  0x0000024807484b21: nop
  0x0000024807484b22: nop
  0x0000024807484b23: nop
  0x0000024807484b24: nop
  0x0000024807484b25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807484b2f: jmp    0x0000024807484b2f  ;   {runtime_call}
[Exception Handler]
  0x0000024807484b34: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807484b39: mov    %rsp,-0x28(%rsp)
  0x0000024807484b3e: sub    $0x80,%rsp
  0x0000024807484b45: mov    %rax,0x78(%rsp)
  0x0000024807484b4a: mov    %rcx,0x70(%rsp)
  0x0000024807484b4f: mov    %rdx,0x68(%rsp)
  0x0000024807484b54: mov    %rbx,0x60(%rsp)
  0x0000024807484b59: mov    %rbp,0x50(%rsp)
  0x0000024807484b5e: mov    %rsi,0x48(%rsp)
  0x0000024807484b63: mov    %rdi,0x40(%rsp)
  0x0000024807484b68: mov    %r8,0x38(%rsp)
  0x0000024807484b6d: mov    %r9,0x30(%rsp)
  0x0000024807484b72: mov    %r10,0x28(%rsp)
  0x0000024807484b77: mov    %r11,0x20(%rsp)
  0x0000024807484b7c: mov    %r12,0x18(%rsp)
  0x0000024807484b81: mov    %r13,0x10(%rsp)
  0x0000024807484b86: mov    %r14,0x8(%rsp)
  0x0000024807484b8b: mov    %r15,(%rsp)
  0x0000024807484b8f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807484b99: movabs $0x24807484b39,%rdx  ;   {internal_word}
  0x0000024807484ba3: mov    %rsp,%r8
  0x0000024807484ba6: and    $0xfffffffffffffff0,%rsp
  0x0000024807484baa: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807484bb4: call   *%r10
  0x0000024807484bb7: hlt    
[Deopt Handler Code]
  0x0000024807484bb8: movabs $0x24807484bb8,%r10  ;   {section_word}
  0x0000024807484bc2: push   %r10
  0x0000024807484bc4: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807484bc9: hlt    
  0x0000024807484bca: hlt    
  0x0000024807484bcb: hlt    
  0x0000024807484bcc: hlt    
  0x0000024807484bcd: hlt    
  0x0000024807484bce: hlt    
  0x0000024807484bcf: hlt    
<nmethod compile_id='184' compiler='C1' level='3' entry='0x0000024807484940' size='1560' address='0x00000248074847d0' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1040' scopes_pcs_offset='1184' dependencies_offset='1520' nul_chk_table_offset='1528' method='jdk/internal/org/objectweb/asm/ByteVector put12 (II)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='64' count='655' iicount='655' stamp='2.201'/>
<writer thread='27436'/>
<task_queued compile_id='188' method='java/lang/invoke/MemberName getMethodType ()Ljava/lang/invoke/MethodType;' bytes='208' count='768' iicount='768' level='3' stamp='2.201' comment='tiered' hot_count='768'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807484e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb5acd0} &apos;isConstructor&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000024807484f80: mov    0x8(%rdx),%r10d
  0x0000024807484f84: shl    $0x3,%r10
  0x0000024807484f88: cmp    %rax,%r10
  0x0000024807484f8b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807484f91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807484f9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807484fa0: mov    %eax,-0x6000(%rsp)
  0x0000024807484fa7: push   %rbp
  0x0000024807484fa8: sub    $0x60,%rsp
  0x0000024807484fac: movabs $0x2481fed7048,%rax  ;   {metadata(method data for {method} {0x000002481fb5acd0} &apos;isConstructor&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807484fb6: mov    0xdc(%rax),%esi
  0x0000024807484fbc: add    $0x8,%esi
  0x0000024807484fbf: mov    %esi,0xdc(%rax)
  0x0000024807484fc5: movabs $0x2481fb5acc8,%rax  ;   {metadata({method} {0x000002481fb5acd0} &apos;isConstructor&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807484fcf: and    $0x1ff8,%esi
  0x0000024807484fd5: cmp    $0x0,%esi
  0x0000024807484fd8: je     0x00000248074850e5  ;*aload_0
                                                ; - java.lang.invoke.MemberName::isConstructor@0 (line 455)

  0x0000024807484fde: mov    %rdx,%rax
  0x0000024807484fe1: movabs $0x2481fed7048,%rsi  ;   {metadata(method data for {method} {0x000002481fb5acd0} &apos;isConstructor&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807484feb: addq   $0x1,0x108(%rsi)
  0x0000024807484ff3: movabs $0x2481feae4a0,%rax  ;   {metadata(method data for {method} {0x000002481fb5a0f8} &apos;testAllFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807484ffd: mov    0xdc(%rax),%esi
  0x0000024807485003: add    $0x8,%esi
  0x0000024807485006: mov    %esi,0xdc(%rax)
  0x000002480748500c: movabs $0x2481fb5a0f0,%rax  ;   {metadata({method} {0x000002481fb5a0f8} &apos;testAllFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807485016: and    $0x7ffff8,%esi
  0x000002480748501c: cmp    $0x0,%esi
  0x000002480748501f: je     0x00000248074850fc
  0x0000024807485025: mov    %rdx,%rax
  0x0000024807485028: movabs $0x2481feae4a0,%rsi  ;   {metadata(method data for {method} {0x000002481fb5a0f8} &apos;testAllFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807485032: addq   $0x1,0x108(%rsi)
  0x000002480748503a: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807485044: mov    0xdc(%rax),%esi
  0x000002480748504a: add    $0x8,%esi
  0x000002480748504d: mov    %esi,0xdc(%rax)
  0x0000024807485053: movabs $0x2481fb5a058,%rax  ;   {metadata({method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480748505d: and    $0x7ffff8,%esi
  0x0000024807485063: cmp    $0x0,%esi
  0x0000024807485066: je     0x0000024807485113
  0x000002480748506c: mov    0xc(%rdx),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)

  0x000002480748506f: and    $0x20000,%eax
  0x0000024807485075: cmp    $0x20000,%eax
  0x000002480748507b: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807485085: movabs $0x108,%rsi
  0x000002480748508f: jne    0x000002480748509f
  0x0000024807485095: movabs $0x118,%rsi
  0x000002480748509f: mov    (%rax,%rsi,1),%rdi
  0x00000248074850a3: lea    0x1(%rdi),%rdi
  0x00000248074850a7: mov    %rdi,(%rax,%rsi,1)
  0x00000248074850ab: jne    0x00000248074850cb  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)

  0x00000248074850b1: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074850bb: incl   0x128(%rax)
  0x00000248074850c1: mov    $0x1,%eax
  0x00000248074850c6: jmp    0x00000248074850d0  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)

  0x00000248074850cb: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)

  0x00000248074850d0: and    $0x1,%eax
  0x00000248074850d3: and    $0x1,%eax
  0x00000248074850d6: and    $0x1,%eax
  0x00000248074850d9: add    $0x60,%rsp
  0x00000248074850dd: pop    %rbp
  0x00000248074850de: test   %eax,-0x1ed4fe4(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074850e4: ret    
  0x00000248074850e5: mov    %rax,0x8(%rsp)
  0x00000248074850ea: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074850f2: call   0x0000024807433da0  ; OopMap{rdx=Oop off=375}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isConstructor@-1 (line 455)
                                                ;   {runtime_call}
  0x00000248074850f7: jmp    0x0000024807484fde
  0x00000248074850fc: mov    %rax,0x8(%rsp)
  0x0000024807485101: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807485109: call   0x0000024807433da0  ; OopMap{rdx=Oop off=398}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAllFlags@-1 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)
                                                ;   {runtime_call}
  0x000002480748510e: jmp    0x0000024807485025
  0x0000024807485113: mov    %rax,0x8(%rsp)
  0x0000024807485118: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807485120: call   0x0000024807433da0  ; OopMap{rdx=Oop off=421}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)
                                                ;   {runtime_call}
  0x0000024807485125: jmp    0x000002480748506c
  0x000002480748512a: nop
  0x000002480748512b: nop
  0x000002480748512c: mov    0x308(%r15),%rax
  0x0000024807485133: movabs $0x0,%r10
  0x000002480748513d: mov    %r10,0x308(%r15)
  0x0000024807485144: movabs $0x0,%r10
  0x000002480748514e: mov    %r10,0x310(%r15)
  0x0000024807485155: add    $0x60,%rsp
  0x0000024807485159: pop    %rbp
  0x000002480748515a: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480748515f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807485160: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807485165: mov    %rsp,-0x28(%rsp)
  0x000002480748516a: sub    $0x80,%rsp
  0x0000024807485171: mov    %rax,0x78(%rsp)
  0x0000024807485176: mov    %rcx,0x70(%rsp)
  0x000002480748517b: mov    %rdx,0x68(%rsp)
  0x0000024807485180: mov    %rbx,0x60(%rsp)
  0x0000024807485185: mov    %rbp,0x50(%rsp)
  0x000002480748518a: mov    %rsi,0x48(%rsp)
  0x000002480748518f: mov    %rdi,0x40(%rsp)
  0x0000024807485194: mov    %r8,0x38(%rsp)
  0x0000024807485199: mov    %r9,0x30(%rsp)
  0x000002480748519e: mov    %r10,0x28(%rsp)
  0x00000248074851a3: mov    %r11,0x20(%rsp)
  0x00000248074851a8: mov    %r12,0x18(%rsp)
  0x00000248074851ad: mov    %r13,0x10(%rsp)
  0x00000248074851b2: mov    %r14,0x8(%rsp)
  0x00000248074851b7: mov    %r15,(%rsp)
  0x00000248074851bb: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074851c5: movabs $0x24807485165,%rdx  ;   {internal_word}
  0x00000248074851cf: mov    %rsp,%r8
  0x00000248074851d2: and    $0xfffffffffffffff0,%rsp
  0x00000248074851d6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074851e0: call   *%r10
  0x00000248074851e3: hlt    
[Deopt Handler Code]
  0x00000248074851e4: movabs $0x248074851e4,%r10  ;   {section_word}
  0x00000248074851ee: push   %r10
  0x00000248074851f0: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074851f5: hlt    
  0x00000248074851f6: hlt    
  0x00000248074851f7: hlt    
<nmethod compile_id='186' compiler='C1' level='3' entry='0x0000024807484f80' size='1296' address='0x0000024807484e10' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1024' scopes_pcs_offset='1128' dependencies_offset='1288' method='java/lang/invoke/MemberName isConstructor ()Z' bytes='7' count='652' iicount='652' stamp='2.207'/>
<writer thread='27436'/>
<task_queued compile_id='189' method='java/lang/invoke/MethodType hashCode ()I' bytes='53' count='662' backedge_count='2608' iicount='662' level='3' stamp='2.207' comment='tiered' hot_count='662'/>
<task_queued compile_id='190' method='jdk/internal/org/objectweb/asm/Frame execute (IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' bytes='2252' count='640' iicount='640' level='3' stamp='2.207' comment='tiered' hot_count='640'/>
<task_queued compile_id='191' method='java/lang/invoke/LambdaForm arity ()I' bytes='5' count='128' iicount='128' level='1' stamp='2.207' comment='tiered' hot_count='128'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807485350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000248074854e0: mov    0x8(%rdx),%r10d
  0x00000248074854e4: shl    $0x3,%r10
  0x00000248074854e8: cmp    %rax,%r10
  0x00000248074854eb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x00000248074854f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000248074854fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807485500: mov    %eax,-0x6000(%rsp)
  0x0000024807485507: push   %rbp
  0x0000024807485508: sub    $0x50,%rsp
  0x000002480748550c: movabs $0x2481feae020,%rsi  ;   {metadata(method data for {method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807485516: mov    0xdc(%rsi),%edi
  0x000002480748551c: add    $0x8,%edi
  0x000002480748551f: mov    %edi,0xdc(%rsi)
  0x0000024807485525: movabs $0x2481fb6b980,%rsi  ;   {metadata({method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480748552f: and    $0x1ff8,%edi
  0x0000024807485535: cmp    $0x0,%edi
  0x0000024807485538: je     0x0000024807485770  ;*bipush
                                                ; - java.lang.invoke.MethodType::hashCode@0 (line 776)

  0x000002480748553e: mov    0xc(%rdx),%esi
  0x0000024807485541: shl    $0x3,%rsi          ;*getfield rtype
                                                ; - java.lang.invoke.MethodType::hashCode@3 (line 776)

  0x0000024807485545: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807485787
  0x0000024807485548: mov    %rsi,%rdi
  0x000002480748554b: movabs $0x2481feae020,%rbx  ;   {metadata(method data for {method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807485555: mov    0x8(%rdi),%edi
  0x0000024807485558: shl    $0x3,%rdi
  0x000002480748555c: cmp    0x110(%rbx),%rdi
  0x0000024807485563: jne    0x0000024807485572
  0x0000024807485565: addq   $0x1,0x118(%rbx)
  0x000002480748556d: jmp    0x00000248074855d8
  0x0000024807485572: cmp    0x120(%rbx),%rdi
  0x0000024807485579: jne    0x0000024807485588
  0x000002480748557b: addq   $0x1,0x128(%rbx)
  0x0000024807485583: jmp    0x00000248074855d8
  0x0000024807485588: cmpq   $0x0,0x110(%rbx)
  0x0000024807485593: jne    0x00000248074855ac
  0x0000024807485595: mov    %rdi,0x110(%rbx)
  0x000002480748559c: movq   $0x1,0x118(%rbx)
  0x00000248074855a7: jmp    0x00000248074855d8
  0x00000248074855ac: cmpq   $0x0,0x120(%rbx)
  0x00000248074855b7: jne    0x00000248074855d0
  0x00000248074855b9: mov    %rdi,0x120(%rbx)
  0x00000248074855c0: movq   $0x1,0x128(%rbx)
  0x00000248074855cb: jmp    0x00000248074855d8
  0x00000248074855d0: addq   $0x1,0x108(%rbx)
  0x00000248074855d8: mov    %rdx,0x20(%rsp)
  0x00000248074855dd: mov    %rsi,%rdx          ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 776)

  0x00000248074855e0: nop
  0x00000248074855e1: nop
  0x00000248074855e2: nop
  0x00000248074855e3: nop
  0x00000248074855e4: nop
  0x00000248074855e5: nop
  0x00000248074855e6: nop
  0x00000248074855e7: call   0x0000024807375ee0  ; OopMap{[32]=Oop off=268}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 776)
                                                ;   {optimized virtual_call}
  0x00000248074855ec: add    $0x1f,%eax
  0x00000248074855ef: mov    0x20(%rsp),%rdx
  0x00000248074855f4: mov    0x10(%rdx),%esi
  0x00000248074855f7: shl    $0x3,%rsi          ;*getfield ptypes
                                                ; - java.lang.invoke.MethodType::hashCode@12 (line 777)

  0x00000248074855fb: mov    %rsi,0x38(%rsp)
  0x0000024807485600: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.invoke.MethodType::hashCode@17 (line 777)
                                                ; implicit exception: dispatches to 0x000002480748578c
  0x0000024807485603: mov    %edi,0x30(%rsp)
  0x0000024807485607: mov    $0x0,%ebx
  0x000002480748560c: jmp    0x000002480748572c  ;*iload
                                                ; - java.lang.invoke.MethodType::hashCode@22 (line 777)

  0x0000024807485611: nopl   0x0(%rax)
  0x0000024807485618: movslq %ebx,%rdx
  0x000002480748561b: mov    0x10(%rsi,%rdx,4),%edx
  0x000002480748561f: shl    $0x3,%rdx          ;*aaload
                                                ; - java.lang.invoke.MethodType::hashCode@31 (line 777)

  0x0000024807485623: cmp    (%rdx),%rax        ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 778)
                                                ; implicit exception: dispatches to 0x0000024807485791
  0x0000024807485626: mov    %rdx,%rcx
  0x0000024807485629: movabs $0x2481feae020,%r8  ;   {metadata(method data for {method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807485633: mov    0x8(%rcx),%ecx
  0x0000024807485636: shl    $0x3,%rcx
  0x000002480748563a: cmp    0x160(%r8),%rcx
  0x0000024807485641: jne    0x0000024807485650
  0x0000024807485643: addq   $0x1,0x168(%r8)
  0x000002480748564b: jmp    0x00000248074856b6
  0x0000024807485650: cmp    0x170(%r8),%rcx
  0x0000024807485657: jne    0x0000024807485666
  0x0000024807485659: addq   $0x1,0x178(%r8)
  0x0000024807485661: jmp    0x00000248074856b6
  0x0000024807485666: cmpq   $0x0,0x160(%r8)
  0x0000024807485671: jne    0x000002480748568a
  0x0000024807485673: mov    %rcx,0x160(%r8)
  0x000002480748567a: movq   $0x1,0x168(%r8)
  0x0000024807485685: jmp    0x00000248074856b6
  0x000002480748568a: cmpq   $0x0,0x170(%r8)
  0x0000024807485695: jne    0x00000248074856ae
  0x0000024807485697: mov    %rcx,0x170(%r8)
  0x000002480748569e: movq   $0x1,0x178(%r8)
  0x00000248074856a9: jmp    0x00000248074856b6
  0x00000248074856ae: addq   $0x1,0x158(%r8)
  0x00000248074856b6: mov    %rax,%rcx
  0x00000248074856b9: shl    $0x5,%eax
  0x00000248074856bc: sub    %ecx,%eax
  0x00000248074856be: mov    %ebx,0x2c(%rsp)
  0x00000248074856c2: mov    %eax,0x28(%rsp)
  0x00000248074856c6: nop
  0x00000248074856c7: call   0x0000024807375ee0  ; OopMap{[56]=Oop off=492}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 778)
                                                ;   {optimized virtual_call}
  0x00000248074856cc: mov    0x28(%rsp),%esi
  0x00000248074856d0: add    %eax,%esi
  0x00000248074856d2: mov    0x2c(%rsp),%ebx
  0x00000248074856d6: inc    %ebx
  0x00000248074856d8: movabs $0x2481feae020,%rax  ;   {metadata(method data for {method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00000248074856e2: mov    0xe0(%rax),%edi
  0x00000248074856e8: add    $0x8,%edi
  0x00000248074856eb: mov    %edi,0xe0(%rax)
  0x00000248074856f1: movabs $0x2481fb6b980,%rax  ;   {metadata({method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00000248074856fb: and    $0xfff8,%edi
  0x0000024807485701: cmp    $0x0,%edi
  0x0000024807485704: je     0x0000024807485796  ; OopMap{[56]=Oop off=554}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 777)

  0x000002480748570a: test   %eax,-0x1ed5610(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807485710: movabs $0x2481feae020,%rax  ;   {metadata(method data for {method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000002480748571a: incl   0x188(%rax)
  0x0000024807485720: mov    %rsi,%rax          ;*goto
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 777)

  0x0000024807485723: mov    0x30(%rsp),%edi
  0x0000024807485727: mov    0x38(%rsp),%rsi
  0x000002480748572c: cmp    %edi,%ebx
  0x000002480748572e: movabs $0x2481feae020,%rdx  ;   {metadata(method data for {method} {0x000002481fb6b988} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807485738: movabs $0x138,%rcx
  0x0000024807485742: jge    0x0000024807485752
  0x0000024807485748: movabs $0x148,%rcx
  0x0000024807485752: mov    (%rdx,%rcx,1),%r8
  0x0000024807485756: lea    0x1(%r8),%r8
  0x000002480748575a: mov    %r8,(%rdx,%rcx,1)
  0x000002480748575e: jl     0x0000024807485618  ;*if_icmpge
                                                ; - java.lang.invoke.MethodType::hashCode@25 (line 777)

  0x0000024807485764: add    $0x50,%rsp
  0x0000024807485768: pop    %rbp
  0x0000024807485769: test   %eax,-0x1ed566f(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748576f: ret    
  0x0000024807485770: mov    %rsi,0x8(%rsp)
  0x0000024807485775: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748577d: call   0x0000024807433da0  ; OopMap{rdx=Oop off=674}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::hashCode@-1 (line 776)
                                                ;   {runtime_call}
  0x0000024807485782: jmp    0x000002480748553e
  0x0000024807485787: call   0x000002480742f100  ; OopMap{rdx=Oop rsi=Oop off=684}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 776)
                                                ;   {runtime_call}
  0x000002480748578c: call   0x000002480742f100  ; OopMap{rsi=Oop [56]=Oop off=689}
                                                ;*arraylength
                                                ; - java.lang.invoke.MethodType::hashCode@17 (line 777)
                                                ;   {runtime_call}
  0x0000024807485791: call   0x000002480742f100  ; OopMap{rsi=Oop [56]=Oop rdx=Oop off=694}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 778)
                                                ;   {runtime_call}
  0x0000024807485796: mov    %rax,0x8(%rsp)
  0x000002480748579b: movq   $0x30,(%rsp)
  0x00000248074857a3: call   0x0000024807433da0  ; OopMap{[56]=Oop off=712}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 777)
                                                ;   {runtime_call}
  0x00000248074857a8: jmp    0x000002480748570a
  0x00000248074857ad: nop
  0x00000248074857ae: nop
  0x00000248074857af: mov    0x308(%r15),%rax
  0x00000248074857b6: movabs $0x0,%r10
  0x00000248074857c0: mov    %r10,0x308(%r15)
  0x00000248074857c7: movabs $0x0,%r10
  0x00000248074857d1: mov    %r10,0x310(%r15)
  0x00000248074857d8: add    $0x50,%rsp
  0x00000248074857dc: pop    %rbp
  0x00000248074857dd: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074857e2: hlt    
  0x00000248074857e3: hlt    
  0x00000248074857e4: hlt    
  0x00000248074857e5: hlt    
  0x00000248074857e6: hlt    
  0x00000248074857e7: hlt    
  0x00000248074857e8: hlt    
  0x00000248074857e9: hlt    
  0x00000248074857ea: hlt    
  0x00000248074857eb: hlt    
  0x00000248074857ec: hlt    
  0x00000248074857ed: hlt    
  0x00000248074857ee: hlt    
  0x00000248074857ef: hlt    
  0x00000248074857f0: hlt    
  0x00000248074857f1: hlt    
  0x00000248074857f2: hlt    
  0x00000248074857f3: hlt    
  0x00000248074857f4: hlt    
  0x00000248074857f5: hlt    
  0x00000248074857f6: hlt    
  0x00000248074857f7: hlt    
  0x00000248074857f8: hlt    
  0x00000248074857f9: hlt    
  0x00000248074857fa: hlt    
  0x00000248074857fb: hlt    
  0x00000248074857fc: hlt    
  0x00000248074857fd: hlt    
  0x00000248074857fe: hlt    
  0x00000248074857ff: hlt    
[Stub Code]
  0x0000024807485800: nop                       ;   {no_reloc}
  0x0000024807485801: nop
  0x0000024807485802: nop
  0x0000024807485803: nop
  0x0000024807485804: nop
  0x0000024807485805: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748580f: jmp    0x000002480748580f  ;   {runtime_call}
  0x0000024807485814: nop
  0x0000024807485815: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748581f: jmp    0x000002480748581f  ;   {runtime_call}
[Exception Handler]
  0x0000024807485824: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807485829: mov    %rsp,-0x28(%rsp)
  0x000002480748582e: sub    $0x80,%rsp
  0x0000024807485835: mov    %rax,0x78(%rsp)
  0x000002480748583a: mov    %rcx,0x70(%rsp)
  0x000002480748583f: mov    %rdx,0x68(%rsp)
  0x0000024807485844: mov    %rbx,0x60(%rsp)
  0x0000024807485849: mov    %rbp,0x50(%rsp)
  0x000002480748584e: mov    %rsi,0x48(%rsp)
  0x0000024807485853: mov    %rdi,0x40(%rsp)
  0x0000024807485858: mov    %r8,0x38(%rsp)
  0x000002480748585d: mov    %r9,0x30(%rsp)
  0x0000024807485862: mov    %r10,0x28(%rsp)
  0x0000024807485867: mov    %r11,0x20(%rsp)
  0x000002480748586c: mov    %r12,0x18(%rsp)
  0x0000024807485871: mov    %r13,0x10(%rsp)
  0x0000024807485876: mov    %r14,0x8(%rsp)
  0x000002480748587b: mov    %r15,(%rsp)
  0x000002480748587f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807485889: movabs $0x24807485829,%rdx  ;   {internal_word}
  0x0000024807485893: mov    %rsp,%r8
  0x0000024807485896: and    $0xfffffffffffffff0,%rsp
  0x000002480748589a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074858a4: call   *%r10
  0x00000248074858a7: hlt    
[Deopt Handler Code]
  0x00000248074858a8: movabs $0x248074858a8,%r10  ;   {section_word}
  0x00000248074858b2: push   %r10
  0x00000248074858b4: jmp    0x0000024807377340  ;   {runtime_call}
  0x00000248074858b9: hlt    
  0x00000248074858ba: hlt    
  0x00000248074858bb: hlt    
  0x00000248074858bc: hlt    
  0x00000248074858bd: hlt    
  0x00000248074858be: hlt    
  0x00000248074858bf: hlt    
<nmethod compile_id='189' compiler='C1' level='3' entry='0x00000248074854e0' size='1944' address='0x0000024807485350' relocation_offset='288' insts_offset='400' stub_offset='1200' scopes_data_offset='1400' scopes_pcs_offset='1584' dependencies_offset='1904' nul_chk_table_offset='1912' method='java/lang/invoke/MethodType hashCode ()I' bytes='53' count='668' backedge_count='2616' iicount='668' stamp='2.215'/>
<writer thread='27436'/>
<task_queued compile_id='192' method='java/lang/invoke/MemberName getMethodOrFieldType ()Ljava/lang/invoke/MethodType;' bytes='72' count='640' iicount='640' level='3' stamp='2.216' comment='tiered' hot_count='640'/>
<task_queued compile_id='193' method='jdk/internal/org/objectweb/asm/Frame push (I)V' bytes='110' count='640' iicount='640' level='3' stamp='2.219' comment='tiered' hot_count='640'/>
<task_queued compile_id='194' method='jdk/internal/org/objectweb/asm/Item isEqualTo (Ljdk/internal/org/objectweb/asm/Item;)Z' bytes='354' count='720' iicount='720' level='3' stamp='2.219' comment='tiered' hot_count='720'/>
<task_queued compile_id='195' method='jdk/internal/org/objectweb/asm/ClassWriter addType (Ljava/lang/String;)I' bytes='39' count='716' iicount='716' level='3' stamp='2.227' comment='tiered' hot_count='716'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807485d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/Frame&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # parm3:    rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  #           [sp+0x1f0]  (sp of caller)
  0x0000024807486ac0: mov    0x8(%rdx),%r10d
  0x0000024807486ac4: shl    $0x3,%r10
  0x0000024807486ac8: cmp    %rax,%r10
  0x0000024807486acb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807486ad1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807486adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807486ae0: mov    %eax,-0x6000(%rsp)
  0x0000024807486ae7: push   %rbp
  0x0000024807486ae8: sub    $0x1e0,%rsp
  0x0000024807486aef: mov    %rdx,0xf0(%rsp)
  0x0000024807486af7: mov    %r8d,0x104(%rsp)
  0x0000024807486aff: mov    %r9d,0xf8(%rsp)
  0x0000024807486b07: mov    %rdi,0x110(%rsp)
  0x0000024807486b0f: mov    %rsi,0x108(%rsp)
  0x0000024807486b17: movabs $0x2481fed7178,%rbx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807486b21: mov    0xdc(%rbx),%eax
  0x0000024807486b27: add    $0x8,%eax
  0x0000024807486b2a: mov    %eax,0xdc(%rbx)
  0x0000024807486b30: movabs $0x2481fe52450,%rbx  ;   {metadata({method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807486b3a: and    $0x1ff8,%eax
  0x0000024807486b40: cmp    $0x0,%eax
  0x0000024807486b43: je     0x000002480748b231  ;*iload_1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@0 (line 880)

  0x0000024807486b49: cmp    $0x0,%r8d
  0x0000024807486b4d: je     0x000002480748a2bc
  0x0000024807486b53: cmp    $0x1,%r8d
  0x0000024807486b57: je     0x000002480748b06c
  0x0000024807486b5d: cmp    $0x2,%r8d
  0x0000024807486b61: jl     0x0000024807486b71
  0x0000024807486b67: cmp    $0x8,%r8d
  0x0000024807486b6b: jle    0x000002480748995c
  0x0000024807486b71: cmp    $0x9,%r8d
  0x0000024807486b75: je     0x00000248074899ac
  0x0000024807486b7b: cmp    $0xa,%r8d
  0x0000024807486b7f: je     0x00000248074899ac
  0x0000024807486b85: cmp    $0xb,%r8d
  0x0000024807486b89: jl     0x0000024807486b99
  0x0000024807486b8f: cmp    $0xd,%r8d
  0x0000024807486b93: jle    0x0000024807489a2c
  0x0000024807486b99: cmp    $0xe,%r8d
  0x0000024807486b9d: je     0x0000024807489a7c
  0x0000024807486ba3: cmp    $0xf,%r8d
  0x0000024807486ba7: je     0x0000024807489a7c
  0x0000024807486bad: cmp    $0x10,%r8d
  0x0000024807486bb1: je     0x000002480748995c
  0x0000024807486bb7: cmp    $0x11,%r8d
  0x0000024807486bbb: je     0x000002480748995c
  0x0000024807486bc1: cmp    $0x12,%r8d
  0x0000024807486bc5: je     0x0000024807488f69
  0x0000024807486bcb: cmp    $0x15,%r8d
  0x0000024807486bcf: je     0x000002480748995c
  0x0000024807486bd5: cmp    $0x16,%r8d
  0x0000024807486bd9: je     0x00000248074899ac
  0x0000024807486bdf: cmp    $0x17,%r8d
  0x0000024807486be3: je     0x0000024807489a2c
  0x0000024807486be9: cmp    $0x18,%r8d
  0x0000024807486bed: je     0x0000024807489a7c
  0x0000024807486bf3: cmp    $0x19,%r8d
  0x0000024807486bf7: je     0x000002480748afec
  0x0000024807486bfd: cmp    $0x2e,%r8d
  0x0000024807486c01: je     0x0000024807489afc
  0x0000024807486c07: cmp    $0x2f,%r8d
  0x0000024807486c0b: je     0x000002480748a03c
  0x0000024807486c11: cmp    $0x30,%r8d
  0x0000024807486c15: je     0x000002480748af6c
  0x0000024807486c1b: cmp    $0x31,%r8d
  0x0000024807486c1f: je     0x0000024807489e2c
  0x0000024807486c25: cmp    $0x32,%r8d
  0x0000024807486c29: je     0x000002480748aec4
  0x0000024807486c2f: cmp    $0x33,%r8d
  0x0000024807486c33: jl     0x0000024807486c43
  0x0000024807486c39: cmp    $0x35,%r8d
  0x0000024807486c3d: jle    0x0000024807489afc
  0x0000024807486c43: cmp    $0x36,%r8d
  0x0000024807486c47: je     0x0000024807487316
  0x0000024807486c4d: cmp    $0x37,%r8d
  0x0000024807486c51: je     0x0000024807487114
  0x0000024807486c57: cmp    $0x38,%r8d
  0x0000024807486c5b: je     0x0000024807487316
  0x0000024807486c61: cmp    $0x39,%r8d
  0x0000024807486c65: je     0x0000024807487114
  0x0000024807486c6b: cmp    $0x3a,%r8d
  0x0000024807486c6f: je     0x0000024807487316
  0x0000024807486c75: cmp    $0x4f,%r8d
  0x0000024807486c79: je     0x0000024807489bcc
  0x0000024807486c7f: cmp    $0x50,%r8d
  0x0000024807486c83: je     0x0000024807489b7c
  0x0000024807486c89: cmp    $0x51,%r8d
  0x0000024807486c8d: je     0x0000024807489bcc
  0x0000024807486c93: cmp    $0x52,%r8d
  0x0000024807486c97: je     0x0000024807489b7c
  0x0000024807486c9d: cmp    $0x53,%r8d
  0x0000024807486ca1: jl     0x0000024807486cb1
  0x0000024807486ca7: cmp    $0x56,%r8d
  0x0000024807486cab: jle    0x0000024807489bcc
  0x0000024807486cb1: cmp    $0x57,%r8d
  0x0000024807486cb5: je     0x000002480748a35c
  0x0000024807486cbb: cmp    $0x58,%r8d
  0x0000024807486cbf: je     0x000002480748a26c
  0x0000024807486cc5: cmp    $0x59,%r8d
  0x0000024807486cc9: je     0x000002480748ae13
  0x0000024807486ccf: cmp    $0x5a,%r8d
  0x0000024807486cd3: je     0x000002480748ad03
  0x0000024807486cd9: cmp    $0x5b,%r8d
  0x0000024807486cdd: je     0x000002480748ab93
  0x0000024807486ce3: cmp    $0x5c,%r8d
  0x0000024807486ce7: je     0x000002480748aa53
  0x0000024807486ced: cmp    $0x5d,%r8d
  0x0000024807486cf1: je     0x000002480748a8b3
  0x0000024807486cf7: cmp    $0x5e,%r8d
  0x0000024807486cfb: je     0x000002480748a6b3
  0x0000024807486d01: cmp    $0x5f,%r8d
  0x0000024807486d05: je     0x000002480748a5d3
  0x0000024807486d0b: cmp    $0x60,%r8d
  0x0000024807486d0f: je     0x000002480748a16c
  0x0000024807486d15: cmp    $0x61,%r8d
  0x0000024807486d19: je     0x0000024807489d7c
  0x0000024807486d1f: cmp    $0x62,%r8d
  0x0000024807486d23: je     0x000002480748a0ec
  0x0000024807486d29: cmp    $0x63,%r8d
  0x0000024807486d2d: je     0x0000024807489c1c
  0x0000024807486d33: cmp    $0x64,%r8d
  0x0000024807486d37: je     0x000002480748a16c
  0x0000024807486d3d: cmp    $0x65,%r8d
  0x0000024807486d41: je     0x0000024807489d7c
  0x0000024807486d47: cmp    $0x66,%r8d
  0x0000024807486d4b: je     0x000002480748a0ec
  0x0000024807486d51: cmp    $0x67,%r8d
  0x0000024807486d55: je     0x0000024807489c1c
  0x0000024807486d5b: cmp    $0x68,%r8d
  0x0000024807486d5f: je     0x000002480748a16c
  0x0000024807486d65: cmp    $0x69,%r8d
  0x0000024807486d69: je     0x0000024807489d7c
  0x0000024807486d6f: cmp    $0x6a,%r8d
  0x0000024807486d73: je     0x000002480748a0ec
  0x0000024807486d79: cmp    $0x6b,%r8d
  0x0000024807486d7d: je     0x0000024807489c1c
  0x0000024807486d83: cmp    $0x6c,%r8d
  0x0000024807486d87: je     0x000002480748a16c
  0x0000024807486d8d: cmp    $0x6d,%r8d
  0x0000024807486d91: je     0x0000024807489d7c
  0x0000024807486d97: cmp    $0x6e,%r8d
  0x0000024807486d9b: je     0x000002480748a0ec
  0x0000024807486da1: cmp    $0x6f,%r8d
  0x0000024807486da5: je     0x0000024807489c1c
  0x0000024807486dab: cmp    $0x70,%r8d
  0x0000024807486daf: je     0x000002480748a16c
  0x0000024807486db5: cmp    $0x71,%r8d
  0x0000024807486db9: je     0x0000024807489d7c
  0x0000024807486dbf: cmp    $0x72,%r8d
  0x0000024807486dc3: je     0x000002480748a0ec
  0x0000024807486dc9: cmp    $0x73,%r8d
  0x0000024807486dcd: je     0x0000024807489c1c
  0x0000024807486dd3: cmp    $0x74,%r8d
  0x0000024807486dd7: jl     0x0000024807486de7
  0x0000024807486ddd: cmp    $0x77,%r8d
  0x0000024807486de1: jle    0x000002480748a2bc
  0x0000024807486de7: cmp    $0x78,%r8d
  0x0000024807486deb: je     0x000002480748a16c
  0x0000024807486df1: cmp    $0x79,%r8d
  0x0000024807486df5: je     0x0000024807489ccc
  0x0000024807486dfb: cmp    $0x7a,%r8d
  0x0000024807486dff: je     0x000002480748a16c
  0x0000024807486e05: cmp    $0x7b,%r8d
  0x0000024807486e09: je     0x0000024807489ccc
  0x0000024807486e0f: cmp    $0x7c,%r8d
  0x0000024807486e13: je     0x000002480748a16c
  0x0000024807486e19: cmp    $0x7d,%r8d
  0x0000024807486e1d: je     0x0000024807489ccc
  0x0000024807486e23: cmp    $0x7e,%r8d
  0x0000024807486e27: je     0x000002480748a16c
  0x0000024807486e2d: cmp    $0x7f,%r8d
  0x0000024807486e31: je     0x0000024807489d7c
  0x0000024807486e37: cmp    $0x80,%r8d
  0x0000024807486e3e: je     0x000002480748a16c
  0x0000024807486e44: cmp    $0x81,%r8d
  0x0000024807486e4b: je     0x0000024807489d7c
  0x0000024807486e51: cmp    $0x82,%r8d
  0x0000024807486e58: je     0x000002480748a16c
  0x0000024807486e5e: cmp    $0x83,%r8d
  0x0000024807486e65: je     0x0000024807489d7c
  0x0000024807486e6b: cmp    $0x84,%r8d
  0x0000024807486e72: je     0x000002480748a584
  0x0000024807486e78: cmp    $0x85,%r8d
  0x0000024807486e7f: je     0x0000024807489edc
  0x0000024807486e85: cmp    $0x86,%r8d
  0x0000024807486e8c: je     0x000002480748a504
  0x0000024807486e92: cmp    $0x87,%r8d
  0x0000024807486e99: je     0x0000024807489f8c
  0x0000024807486e9f: cmp    $0x88,%r8d
  0x0000024807486ea6: je     0x000002480748a16c
  0x0000024807486eac: cmp    $0x89,%r8d
  0x0000024807486eb3: je     0x000002480748a0ec
  0x0000024807486eb9: cmp    $0x8a,%r8d
  0x0000024807486ec0: je     0x0000024807489e2c
  0x0000024807486ec6: cmp    $0x8b,%r8d
  0x0000024807486ecd: je     0x000002480748a2dc
  0x0000024807486ed3: cmp    $0x8c,%r8d
  0x0000024807486eda: je     0x0000024807489edc
  0x0000024807486ee0: cmp    $0x8d,%r8d
  0x0000024807486ee7: je     0x0000024807489f8c
  0x0000024807486eed: cmp    $0x8e,%r8d
  0x0000024807486ef4: je     0x000002480748a16c
  0x0000024807486efa: cmp    $0x8f,%r8d
  0x0000024807486f01: je     0x000002480748a03c
  0x0000024807486f07: cmp    $0x90,%r8d
  0x0000024807486f0e: je     0x000002480748a0ec
  0x0000024807486f14: cmp    $0x91,%r8d
  0x0000024807486f1b: jl     0x0000024807486f2e
  0x0000024807486f21: cmp    $0x93,%r8d
  0x0000024807486f28: jle    0x000002480748a2bc
  0x0000024807486f2e: cmp    $0x94,%r8d         ;   {no_reloc}
  0x0000024807486f35: je     0x000002480748a1ec
  0x0000024807486f3b: cmp    $0x95,%r8d
  0x0000024807486f42: je     0x000002480748a16c
  0x0000024807486f48: cmp    $0x96,%r8d
  0x0000024807486f4f: je     0x000002480748a16c
  0x0000024807486f55: cmp    $0x97,%r8d
  0x0000024807486f5c: je     0x000002480748a1ec
  0x0000024807486f62: cmp    $0x98,%r8d
  0x0000024807486f69: je     0x000002480748a1ec
  0x0000024807486f6f: cmp    $0x99,%r8d
  0x0000024807486f76: jl     0x0000024807486f89
  0x0000024807486f7c: cmp    $0x9e,%r8d
  0x0000024807486f83: jle    0x000002480748a35c
  0x0000024807486f89: cmp    $0x9f,%r8d
  0x0000024807486f90: jl     0x0000024807486fa3
  0x0000024807486f96: cmp    $0xa6,%r8d
  0x0000024807486f9d: jle    0x000002480748a26c
  0x0000024807486fa3: cmp    $0xa7,%r8d
  0x0000024807486faa: je     0x000002480748a2bc
  0x0000024807486fb0: cmp    $0xa8,%r8d
  0x0000024807486fb7: je     0x000002480748b1a9
  0x0000024807486fbd: cmp    $0xa9,%r8d
  0x0000024807486fc4: je     0x000002480748b1a9
  0x0000024807486fca: cmp    $0xaa,%r8d
  0x0000024807486fd1: jl     0x0000024807486fe4
  0x0000024807486fd7: cmp    $0xac,%r8d
  0x0000024807486fde: jle    0x000002480748a35c
  0x0000024807486fe4: cmp    $0xad,%r8d
  0x0000024807486feb: je     0x000002480748a26c
  0x0000024807486ff1: cmp    $0xae,%r8d
  0x0000024807486ff8: je     0x000002480748a35c
  0x0000024807486ffe: cmp    $0xaf,%r8d
  0x0000024807487005: je     0x000002480748a26c
  0x000002480748700b: cmp    $0xb0,%r8d
  0x0000024807487012: je     0x000002480748a35c
  0x0000024807487018: cmp    $0xb1,%r8d
  0x000002480748701f: je     0x000002480748a2bc
  0x0000024807487025: cmp    $0xb2,%r8d
  0x000002480748702c: je     0x0000024807488dd1
  0x0000024807487032: cmp    $0xb3,%r8d
  0x0000024807487039: je     0x000002480748a4b4
  0x000002480748703f: cmp    $0xb4,%r8d
  0x0000024807487046: je     0x0000024807488bf9
  0x000002480748704c: cmp    $0xb5,%r8d
  0x0000024807487053: je     0x000002480748a43c
  0x0000024807487059: cmp    $0xb6,%r8d
  0x0000024807487060: jl     0x0000024807487073
  0x0000024807487066: cmp    $0xb9,%r8d
  0x000002480748706d: jle    0x00000248074874b8
  0x0000024807487073: cmp    $0xba,%r8d
  0x000002480748707a: je     0x0000024807488a1f
  0x0000024807487080: cmp    $0xbb,%r8d
  0x0000024807487087: je     0x000002480748a3ac
  0x000002480748708d: cmp    $0xbc,%r8d
  0x0000024807487094: je     0x00000248074889a1
  0x000002480748709a: cmp    $0xbd,%r8d
  0x00000248074870a1: je     0x0000024807487e31
  0x00000248074870a7: cmp    $0xbe,%r8d
  0x00000248074870ae: je     0x000002480748a2dc
  0x00000248074870b4: cmp    $0xbf,%r8d
  0x00000248074870bb: je     0x000002480748a35c
  0x00000248074870c1: cmp    $0xc0,%r8d
  0x00000248074870c8: je     0x0000024807487ae3
  0x00000248074870ce: cmp    $0xc1,%r8d
  0x00000248074870d5: je     0x000002480748a2dc
  0x00000248074870db: cmp    $0xc2,%r8d
  0x00000248074870e2: je     0x000002480748a35c
  0x00000248074870e8: cmp    $0xc3,%r8d
  0x00000248074870ef: je     0x000002480748a35c
  0x00000248074870f5: cmp    $0xc6,%r8d
  0x00000248074870fc: je     0x000002480748a35c
  0x0000024807487102: cmp    $0xc7,%r8d
  0x0000024807487109: je     0x000002480748a35c
  0x000002480748710f: jmp    0x0000024807487901  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1 (line 880)

  0x0000024807487114: mov    %rdx,%r8
  0x0000024807487117: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487121: addq   $0x1,0x1448(%rsi)
  0x0000024807487129: mov    $0x1,%r8d
  0x000002480748712f: mov    %rdx,%rsi
  0x0000024807487132: mov    %rsi,%rdx          ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1246 (line 1003)

  0x0000024807487135: nop
  0x0000024807487136: nop
  0x0000024807487137: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=1660}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1246 (line 1003)
                                                ;   {optimized virtual_call}
  0x000002480748713c: mov    0xf0(%rsp),%rdx
  0x0000024807487144: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748714e: addq   $0x1,0x1458(%rsi)
  0x0000024807487156: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1250 (line 1004)

  0x000002480748715e: nop
  0x000002480748715f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=1700}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1250 (line 1004)
                                                ;   {optimized virtual_call}
  0x0000024807487164: mov    0xf0(%rsp),%rdx
  0x000002480748716c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487176: addq   $0x1,0x1468(%r8)
  0x000002480748717e: mov    0xf8(%rsp),%r8d
  0x0000024807487186: mov    %rax,%r9
  0x0000024807487189: mov    0xf0(%rsp),%rdx    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1259 (line 1005)

  0x0000024807487191: nop
  0x0000024807487192: nop
  0x0000024807487193: nop
  0x0000024807487194: nop
  0x0000024807487195: nop
  0x0000024807487196: nop
  0x0000024807487197: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=1756}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1259 (line 1005)
                                                ;   {optimized virtual_call}
  0x000002480748719c: mov    0xf0(%rsp),%rdx
  0x00000248074871a4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074871ae: addq   $0x1,0x1478(%r8)
  0x00000248074871b6: mov    0xf8(%rsp),%r9d
  0x00000248074871be: inc    %r9d
  0x00000248074871c1: mov    %r9,%r8
  0x00000248074871c4: mov    $0x1000000,%r9d
  0x00000248074871ca: mov    0xf0(%rsp),%rdx    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1268 (line 1006)

  0x00000248074871d2: nop
  0x00000248074871d3: nop
  0x00000248074871d4: nop
  0x00000248074871d5: nop
  0x00000248074871d6: nop
  0x00000248074871d7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=1820}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1268 (line 1006)
                                                ;   {optimized virtual_call}
  0x00000248074871dc: mov    0xf8(%rsp),%r9d
  0x00000248074871e4: cmp    $0x0,%r9d
  0x00000248074871e8: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074871f2: movabs $0x1488,%rdx
  0x00000248074871fc: jle    0x000002480748720c
  0x0000024807487202: movabs $0x1498,%rdx
  0x000002480748720c: mov    (%r8,%rdx,1),%rsi
  0x0000024807487210: lea    0x1(%rsi),%rsi
  0x0000024807487214: mov    %rsi,(%r8,%rdx,1)
  0x0000024807487218: jle    0x000002480748b0ac  ;*ifle
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1272 (line 1007)

  0x000002480748721e: mov    %r9,%rsi
  0x0000024807487221: dec    %esi
  0x0000024807487223: mov    0xf0(%rsp),%rdx
  0x000002480748722b: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487235: addq   $0x1,0x14a8(%r8)
  0x000002480748723d: mov    %rsi,%r8
  0x0000024807487240: mov    0xf0(%rsp),%rdx    ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1279 (line 1008)

  0x0000024807487248: mov    %esi,0xfc(%rsp)
  0x000002480748724f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=1940}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1279 (line 1008)
                                                ;   {optimized virtual_call}
  0x0000024807487254: cmp    $0x1000004,%eax
  0x000002480748725a: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487264: movabs $0x14b8,%rsi
  0x000002480748726e: je     0x000002480748727e
  0x0000024807487274: movabs $0x14c8,%rsi
  0x000002480748727e: mov    (%rdx,%rsi,1),%rdi
  0x0000024807487282: lea    0x1(%rdi),%rdi
  0x0000024807487286: mov    %rdi,(%rdx,%rsi,1)
  0x000002480748728a: je     0x0000024807489904  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1288 (line 1010)

  0x0000024807487290: cmp    $0x1000003,%eax
  0x0000024807487296: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074872a0: movabs $0x14d8,%rsi
  0x00000248074872aa: jne    0x00000248074872ba
  0x00000248074872b0: movabs $0x14e8,%rsi
  0x00000248074872ba: mov    (%rdx,%rsi,1),%rdi
  0x00000248074872be: lea    0x1(%rdi),%rdi
  0x00000248074872c2: mov    %rdi,(%rdx,%rsi,1)
  0x00000248074872c6: je     0x0000024807489904  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1295 (line 1010)

  0x00000248074872cc: mov    %rax,%rdx
  0x00000248074872cf: and    $0xf000000,%edx
  0x00000248074872d5: cmp    $0x1000000,%edx
  0x00000248074872db: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074872e5: movabs $0x1520,%rsi
  0x00000248074872ef: je     0x00000248074872ff
  0x00000248074872f5: movabs $0x1530,%rsi
  0x00000248074872ff: mov    (%rdx,%rsi,1),%rdi
  0x0000024807487303: lea    0x1(%rdi),%rdi
  0x0000024807487307: mov    %rdi,(%rdx,%rsi,1)
  0x000002480748730b: je     0x000002480748b0ac
  0x0000024807487311: jmp    0x00000248074898ac  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1317 (line 1012)

  0x0000024807487316: mov    0xf0(%rsp),%rdx
  0x000002480748731e: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487328: addq   $0x1,0x1348(%rsi)
  0x0000024807487330: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1168 (line 989)

  0x0000024807487338: nop
  0x0000024807487339: nop
  0x000002480748733a: nop
  0x000002480748733b: nop
  0x000002480748733c: nop
  0x000002480748733d: nop
  0x000002480748733e: nop
  0x000002480748733f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=2180}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1168 (line 989)
                                                ;   {optimized virtual_call}
  0x0000024807487344: mov    0xf0(%rsp),%rdx
  0x000002480748734c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487356: addq   $0x1,0x1358(%r8)
  0x000002480748735e: mov    0xf8(%rsp),%r8d
  0x0000024807487366: mov    %rax,%r9
  0x0000024807487369: mov    0xf0(%rsp),%rdx    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1177 (line 990)

  0x0000024807487371: nop
  0x0000024807487372: nop
  0x0000024807487373: nop
  0x0000024807487374: nop
  0x0000024807487375: nop
  0x0000024807487376: nop
  0x0000024807487377: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=2236}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1177 (line 990)
                                                ;   {optimized virtual_call}
  0x000002480748737c: mov    0xf8(%rsp),%r9d
  0x0000024807487384: cmp    $0x0,%r9d
  0x0000024807487388: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487392: movabs $0x1368,%rdx
  0x000002480748739c: jle    0x00000248074873ac
  0x00000248074873a2: movabs $0x1378,%rdx
  0x00000248074873ac: mov    (%r8,%rdx,1),%rsi
  0x00000248074873b0: lea    0x1(%rsi),%rsi
  0x00000248074873b4: mov    %rsi,(%r8,%rdx,1)
  0x00000248074873b8: jle    0x000002480748b0ac  ;*ifle
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1181 (line 991)

  0x00000248074873be: mov    %r9,%rsi
  0x00000248074873c1: dec    %esi
  0x00000248074873c3: mov    0xf0(%rsp),%rdx
  0x00000248074873cb: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074873d5: addq   $0x1,0x1388(%r8)
  0x00000248074873dd: mov    %rsi,%r8
  0x00000248074873e0: mov    0xf0(%rsp),%rdx    ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1188 (line 992)

  0x00000248074873e8: mov    %esi,0x100(%rsp)
  0x00000248074873ef: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=2356}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1188 (line 992)
                                                ;   {optimized virtual_call}
  0x00000248074873f4: cmp    $0x1000004,%eax
  0x00000248074873fa: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487404: movabs $0x1398,%rdx
  0x000002480748740e: je     0x000002480748741e
  0x0000024807487414: movabs $0x13a8,%rdx
  0x000002480748741e: mov    (%r8,%rdx,1),%rsi
  0x0000024807487422: lea    0x1(%rsi),%rsi
  0x0000024807487426: mov    %rsi,(%r8,%rdx,1)
  0x000002480748742a: je     0x0000024807489854  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1197 (line 994)

  0x0000024807487430: cmp    $0x1000003,%eax
  0x0000024807487436: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487440: movabs $0x13b8,%rdx
  0x000002480748744a: jne    0x000002480748745a
  0x0000024807487450: movabs $0x13c8,%rdx
  0x000002480748745a: mov    (%r8,%rdx,1),%rsi
  0x000002480748745e: lea    0x1(%rsi),%rsi
  0x0000024807487462: mov    %rsi,(%r8,%rdx,1)
  0x0000024807487466: je     0x0000024807489854  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1204 (line 994)

  0x000002480748746c: mov    %rax,%r8
  0x000002480748746f: and    $0xf000000,%r8d
  0x0000024807487476: cmp    $0x1000000,%r8d
  0x000002480748747d: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487487: movabs $0x1400,%rdx
  0x0000024807487491: je     0x00000248074874a1
  0x0000024807487497: movabs $0x1410,%rdx
  0x00000248074874a1: mov    (%r8,%rdx,1),%rsi
  0x00000248074874a5: lea    0x1(%rsi),%rsi
  0x00000248074874a9: mov    %rsi,(%r8,%rdx,1)
  0x00000248074874ad: je     0x000002480748b0ac
  0x00000248074874b3: jmp    0x00000248074897fc  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1226 (line 996)

  0x00000248074874b8: mov    0x2c(%rsi),%edx    ; implicit exception: dispatches to 0x000002480748b248
  0x00000248074874bb: shl    $0x3,%rdx          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1899 (line 1227)

  0x00000248074874bf: mov    0xf0(%rsp),%rbx
  0x00000248074874c7: movabs $0x2481fed7178,%rax  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074874d1: addq   $0x1,0x1cd8(%rax)
  0x00000248074874d9: mov    %rdx,%r8
  0x00000248074874dc: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1902 (line 1227)

  0x00000248074874e4: nop
  0x00000248074874e5: nop
  0x00000248074874e6: nop
  0x00000248074874e7: call   0x0000024807375ee0  ; OopMap{[240]=Oop [272]=Oop [264]=Oop off=2604}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1902 (line 1227)
                                                ;   {optimized virtual_call}
  0x00000248074874ec: mov    0x104(%rsp),%r8d
  0x00000248074874f4: cmp    $0xb8,%r8d
  0x00000248074874fb: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487505: movabs $0x1ce8,%rsi
  0x000002480748750f: je     0x000002480748751f
  0x0000024807487515: movabs $0x1cf8,%rsi
  0x000002480748751f: mov    (%rdx,%rsi,1),%rdi
  0x0000024807487523: lea    0x1(%rdi),%rdi
  0x0000024807487527: mov    %rdi,(%rdx,%rsi,1)
  0x000002480748752b: jne    0x000002480748753e  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1909 (line 1228)

  0x0000024807487531: mov    0x108(%rsp),%rsi
  0x0000024807487539: jmp    0x0000024807487764  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1945 (line 1235)

  0x000002480748753e: mov    0xf0(%rsp),%rdx
  0x0000024807487546: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487550: addq   $0x1,0x1d08(%rsi)
  0x0000024807487558: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1913 (line 1229)

  0x0000024807487560: nop
  0x0000024807487561: nop
  0x0000024807487562: nop
  0x0000024807487563: nop
  0x0000024807487564: nop
  0x0000024807487565: nop
  0x0000024807487566: nop
  0x0000024807487567: call   0x0000024807375ee0  ; OopMap{[240]=Oop [272]=Oop [264]=Oop off=2732}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1913 (line 1229)
                                                ;   {optimized virtual_call}
  0x000002480748756c: mov    0x104(%rsp),%r8d
  0x0000024807487574: cmp    $0xb7,%r8d
  0x000002480748757b: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487585: movabs $0x1d18,%rdx
  0x000002480748758f: jne    0x000002480748759f
  0x0000024807487595: movabs $0x1d28,%rdx
  0x000002480748759f: mov    (%r8,%rdx,1),%rsi
  0x00000248074875a3: lea    0x1(%rsi),%rsi
  0x00000248074875a7: mov    %rsi,(%r8,%rdx,1)
  0x00000248074875ab: mov    0x108(%rsp),%rsi
  0x00000248074875b3: jne    0x0000024807487764  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1922 (line 1230)

  0x00000248074875b9: mov    0x28(%rsi),%r8d
  0x00000248074875bd: shl    $0x3,%r8           ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1927 (line 1230)

  0x00000248074875c1: cmp    (%r8),%rax         ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ; implicit exception: dispatches to 0x000002480748b24d
  0x00000248074875c4: mov    %r8,%rdx
  0x00000248074875c7: movabs $0x2481fed7178,%rdi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074875d1: mov    0x8(%rdx),%edx
  0x00000248074875d4: shl    $0x3,%rdx
  0x00000248074875d8: cmp    0x1d40(%rdi),%rdx
  0x00000248074875df: jne    0x00000248074875ee
  0x00000248074875e1: addq   $0x1,0x1d48(%rdi)
  0x00000248074875e9: jmp    0x0000024807487654
  0x00000248074875ee: cmp    0x1d50(%rdi),%rdx
  0x00000248074875f5: jne    0x0000024807487604
  0x00000248074875f7: addq   $0x1,0x1d58(%rdi)
  0x00000248074875ff: jmp    0x0000024807487654
  0x0000024807487604: cmpq   $0x0,0x1d40(%rdi)
  0x000002480748760f: jne    0x0000024807487628
  0x0000024807487611: mov    %rdx,0x1d40(%rdi)
  0x0000024807487618: movq   $0x1,0x1d48(%rdi)
  0x0000024807487623: jmp    0x0000024807487654
  0x0000024807487628: cmpq   $0x0,0x1d50(%rdi)
  0x0000024807487633: jne    0x000002480748764c
  0x0000024807487635: mov    %rdx,0x1d50(%rdi)
  0x000002480748763c: movq   $0x1,0x1d58(%rdi)
  0x0000024807487647: jmp    0x0000024807487654
  0x000002480748764c: addq   $0x1,0x1d38(%rdi)
  0x0000024807487654: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480748765e: mov    0xdc(%rdx),%edi
  0x0000024807487664: add    $0x8,%edi
  0x0000024807487667: mov    %edi,0xdc(%rdx)
  0x000002480748766d: movabs $0x2481fb03db0,%rdx  ;   {metadata({method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487677: and    $0x7ffff8,%edi
  0x000002480748767d: cmp    $0x0,%edi
  0x0000024807487680: je     0x000002480748b252
  0x0000024807487686: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487690: incl   0x118(%rdx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x0000024807487696: mov    0xc(%r8),%r8d
  0x000002480748769a: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000002480748769e: mov    0xc(%r8),%edx      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ; implicit exception: dispatches to 0x000002480748b269
  0x00000248074876a2: cmp    $0x0,%edx
  0x00000248074876a5: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000248074876af: movabs $0x128,%rdi
  0x00000248074876b9: jg     0x00000248074876c9
  0x00000248074876bf: movabs $0x138,%rdi
  0x00000248074876c9: mov    (%rdx,%rdi,1),%rbx
  0x00000248074876cd: lea    0x1(%rbx),%rbx
  0x00000248074876d1: mov    %rbx,(%rdx,%rdi,1)
  0x00000248074876d5: jle    0x000002480748b159  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x00000248074876db: cmpl   $0x0,0xc(%r8)
  0x00000248074876e3: jbe    0x000002480748b26e
  0x00000248074876e9: movzwl 0x10(%r8),%r8d     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x00000248074876ee: and    $0xffff,%r8d
  0x00000248074876f5: cmp    $0x3c,%r8d
  0x00000248074876f9: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487703: movabs $0x1d68,%rdx
  0x000002480748770d: jne    0x000002480748771d
  0x0000024807487713: movabs $0x1d78,%rdx
  0x000002480748771d: mov    (%r8,%rdx,1),%rdi
  0x0000024807487721: lea    0x1(%rdi),%rdi
  0x0000024807487725: mov    %rdi,(%r8,%rdx,1)
  0x0000024807487729: jne    0x0000024807487764  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1936 (line 1231)

  0x000002480748772f: mov    0xf0(%rsp),%rdx
  0x0000024807487737: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487741: addq   $0x1,0x1d88(%r8)
  0x0000024807487749: mov    %rax,%r8
  0x000002480748774c: mov    0xf0(%rsp),%rdx    ;*invokespecial init
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1942 (line 1232)

  0x0000024807487754: nop
  0x0000024807487755: nop
  0x0000024807487756: nop
  0x0000024807487757: call   0x0000024807375ee0  ; OopMap{[240]=Oop [272]=Oop [264]=Oop off=3228}
                                                ;*invokespecial init
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1942 (line 1232)
                                                ;   {optimized virtual_call}
  0x000002480748775c: mov    0x108(%rsp),%rsi
  0x0000024807487764: mov    0x2c(%rsi),%r8d
  0x0000024807487768: shl    $0x3,%r8           ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1949 (line 1235)

  0x000002480748776c: mov    0xf0(%rsp),%rdx
  0x0000024807487774: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748777e: addq   $0x1,0x1d98(%rsi)
  0x0000024807487786: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487790: mov    0xdc(%rdx),%esi
  0x0000024807487796: add    $0x8,%esi
  0x0000024807487799: mov    %esi,0xdc(%rdx)
  0x000002480748779f: movabs $0x2481fe511f0,%rdx  ;   {metadata({method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074877a9: and    $0x7ffff8,%esi
  0x00000248074877af: cmp    $0x0,%esi
  0x00000248074877b2: je     0x000002480748b27b
  0x00000248074877b8: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074877c2: addq   $0x1,0x108(%rdx)
  0x00000248074877ca: mov    0x110(%rsp),%rdx   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x00000248074877d2: nop
  0x00000248074877d3: nop
  0x00000248074877d4: nop
  0x00000248074877d5: nop
  0x00000248074877d6: nop
  0x00000248074877d7: call   0x0000024807376360  ; OopMap{[240]=Oop off=3356}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)
                                                ;   {static_call}
  0x00000248074877dc: cmp    $0x0,%eax
  0x00000248074877df: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074877e9: movabs $0x118,%rdx
  0x00000248074877f3: je     0x0000024807487803
  0x00000248074877f9: movabs $0x128,%rdx
  0x0000024807487803: mov    (%r8,%rdx,1),%rsi
  0x0000024807487807: lea    0x1(%rsi),%rsi
  0x000002480748780b: mov    %rsi,(%r8,%rdx,1)
  0x000002480748780f: je     0x00000248074897dc  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x0000024807487815: mov    0xf0(%rsp),%rdx
  0x000002480748781d: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487827: addq   $0x1,0x138(%r8)
  0x000002480748782f: mov    %rax,%r8
  0x0000024807487832: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000002480748783a: mov    %eax,0x118(%rsp)
  0x0000024807487841: nop
  0x0000024807487842: nop
  0x0000024807487843: nop
  0x0000024807487844: nop
  0x0000024807487845: nop
  0x0000024807487846: nop
  0x0000024807487847: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=3468}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)
                                                ;   {optimized virtual_call}
  0x000002480748784c: mov    0x118(%rsp),%eax
  0x0000024807487853: cmp    $0x1000004,%eax
  0x0000024807487859: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487863: movabs $0x148,%rdx
  0x000002480748786d: je     0x000002480748787d
  0x0000024807487873: movabs $0x158,%rdx
  0x000002480748787d: mov    (%r8,%rdx,1),%rsi
  0x0000024807487881: lea    0x1(%rsi),%rsi
  0x0000024807487885: mov    %rsi,(%r8,%rdx,1)
  0x0000024807487889: je     0x00000248074878cb  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000002480748788f: cmp    $0x1000003,%eax
  0x0000024807487895: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748789f: movabs $0x168,%rdx
  0x00000248074878a9: jne    0x00000248074878b9
  0x00000248074878af: movabs $0x178,%rdx
  0x00000248074878b9: mov    (%r8,%rdx,1),%rsi
  0x00000248074878bd: lea    0x1(%rsi),%rsi
  0x00000248074878c1: mov    %rsi,(%r8,%rdx,1)
  0x00000248074878c5: jne    0x00000248074897dc  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x00000248074878cb: mov    0xf0(%rsp),%rdx
  0x00000248074878d3: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074878dd: addq   $0x1,0x188(%r8)
  0x00000248074878e5: mov    $0x1000000,%r8d
  0x00000248074878eb: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x00000248074878f3: nop
  0x00000248074878f4: nop
  0x00000248074878f5: nop
  0x00000248074878f6: nop
  0x00000248074878f7: call   0x0000024807375ee0  ; OopMap{off=3644}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)
                                                ;   {optimized virtual_call}
  0x00000248074878fc: jmp    0x00000248074897dc  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x0000024807487901: mov    0xf0(%rsp),%rdx
  0x0000024807487909: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487913: addq   $0x1,0x2290(%r8)
  0x000002480748791b: mov    0xf8(%rsp),%r8d
  0x0000024807487923: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2238 (line 1294)

  0x000002480748792b: nop
  0x000002480748792c: nop
  0x000002480748792d: nop
  0x000002480748792e: nop
  0x000002480748792f: call   0x0000024807375ee0  ; OopMap{[272]=Oop [240]=Oop [264]=Oop off=3700}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2238 (line 1294)
                                                ;   {optimized virtual_call}
  0x0000024807487934: mov    0x108(%rsp),%rsi
  0x000002480748793c: mov    0x24(%rsi),%r8d    ; implicit exception: dispatches to 0x000002480748b292
  0x0000024807487940: shl    $0x3,%r8           ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2245 (line 1295)

  0x0000024807487944: mov    0xf0(%rsp),%rdx
  0x000002480748794c: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487956: addq   $0x1,0x22a0(%rsi)
  0x000002480748795e: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487968: mov    0xdc(%rdx),%esi
  0x000002480748796e: add    $0x8,%esi
  0x0000024807487971: mov    %esi,0xdc(%rdx)
  0x0000024807487977: movabs $0x2481fe511f0,%rdx  ;   {metadata({method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487981: and    $0x7ffff8,%esi
  0x0000024807487987: cmp    $0x0,%esi
  0x000002480748798a: je     0x000002480748b297
  0x0000024807487990: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748799a: addq   $0x1,0x108(%rdx)
  0x00000248074879a2: mov    0x110(%rsp),%rdx   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x00000248074879aa: nop
  0x00000248074879ab: nop
  0x00000248074879ac: nop
  0x00000248074879ad: nop
  0x00000248074879ae: nop
  0x00000248074879af: call   0x0000024807376360  ; OopMap{[240]=Oop off=3828}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)
                                                ;   {static_call}
  0x00000248074879b4: cmp    $0x0,%eax
  0x00000248074879b7: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074879c1: movabs $0x118,%rdx
  0x00000248074879cb: je     0x00000248074879db
  0x00000248074879d1: movabs $0x128,%rdx
  0x00000248074879db: mov    (%r8,%rdx,1),%rsi
  0x00000248074879df: lea    0x1(%rsi),%rsi
  0x00000248074879e3: mov    %rsi,(%r8,%rdx,1)
  0x00000248074879e7: je     0x000002480748b0ac  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x00000248074879ed: mov    0xf0(%rsp),%rdx
  0x00000248074879f5: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074879ff: addq   $0x1,0x138(%r8)
  0x0000024807487a07: mov    %rax,%r8
  0x0000024807487a0a: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x0000024807487a12: mov    %eax,0x11c(%rsp)
  0x0000024807487a19: nop
  0x0000024807487a1a: nop
  0x0000024807487a1b: nop
  0x0000024807487a1c: nop
  0x0000024807487a1d: nop
  0x0000024807487a1e: nop
  0x0000024807487a1f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=3940}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)
                                                ;   {optimized virtual_call}
  0x0000024807487a24: mov    0x11c(%rsp),%eax
  0x0000024807487a2b: cmp    $0x1000004,%eax
  0x0000024807487a31: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487a3b: movabs $0x148,%rdx
  0x0000024807487a45: je     0x0000024807487a55
  0x0000024807487a4b: movabs $0x158,%rdx
  0x0000024807487a55: mov    (%r8,%rdx,1),%rsi
  0x0000024807487a59: lea    0x1(%rsi),%rsi
  0x0000024807487a5d: mov    %rsi,(%r8,%rdx,1)
  0x0000024807487a61: je     0x0000024807487aa3  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x0000024807487a67: cmp    $0x1000003,%eax
  0x0000024807487a6d: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487a77: movabs $0x168,%rdx
  0x0000024807487a81: jne    0x0000024807487a91
  0x0000024807487a87: movabs $0x178,%rdx
  0x0000024807487a91: mov    (%r8,%rdx,1),%rsi
  0x0000024807487a95: lea    0x1(%rsi),%rsi
  0x0000024807487a99: mov    %rsi,(%r8,%rdx,1)
  0x0000024807487a9d: jne    0x000002480748b0ac  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x0000024807487aa3: mov    0xf0(%rsp),%rdx
  0x0000024807487aab: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487ab5: addq   $0x1,0x188(%r8)
  0x0000024807487abd: mov    $0x1000000,%r8d
  0x0000024807487ac3: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x0000024807487acb: nop
  0x0000024807487acc: nop
  0x0000024807487acd: nop
  0x0000024807487ace: nop
  0x0000024807487acf: call   0x0000024807375ee0  ; OopMap{off=4116}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)
                                                ;   {optimized virtual_call}
  0x0000024807487ad4: add    $0x1e0,%rsp
  0x0000024807487adb: pop    %rbp
  0x0000024807487adc: test   %eax,-0x1ed79e2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807487ae2: ret    
  0x0000024807487ae3: mov    0x24(%rsi),%esi    ; implicit exception: dispatches to 0x000002480748b2ae
  0x0000024807487ae6: shl    $0x3,%rsi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2189 (line 1284)

  0x0000024807487aea: mov    %rsi,0x120(%rsp)
  0x0000024807487af2: mov    0xf0(%rsp),%rdx
  0x0000024807487afa: movabs $0x2481fed7178,%rdi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487b04: addq   $0x1,0x21b0(%rdi)
  0x0000024807487b0c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2195 (line 1285)

  0x0000024807487b14: nop
  0x0000024807487b15: nop
  0x0000024807487b16: nop
  0x0000024807487b17: call   0x0000024807375ee0  ; OopMap{[272]=Oop [240]=Oop [288]=Oop off=4188}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2195 (line 1285)
                                                ;   {optimized virtual_call}
  0x0000024807487b1c: mov    0x120(%rsp),%rsi
  0x0000024807487b24: cmp    (%rsi),%rax        ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ; implicit exception: dispatches to 0x000002480748b2b3
  0x0000024807487b27: mov    %rsi,%rdx
  0x0000024807487b2a: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487b34: mov    0x8(%rdx),%edx
  0x0000024807487b37: shl    $0x3,%rdx
  0x0000024807487b3b: cmp    0x21c8(%r8),%rdx
  0x0000024807487b42: jne    0x0000024807487b51
  0x0000024807487b44: addq   $0x1,0x21d0(%r8)
  0x0000024807487b4c: jmp    0x0000024807487bb7
  0x0000024807487b51: cmp    0x21d8(%r8),%rdx
  0x0000024807487b58: jne    0x0000024807487b67
  0x0000024807487b5a: addq   $0x1,0x21e0(%r8)
  0x0000024807487b62: jmp    0x0000024807487bb7
  0x0000024807487b67: cmpq   $0x0,0x21c8(%r8)
  0x0000024807487b72: jne    0x0000024807487b8b
  0x0000024807487b74: mov    %rdx,0x21c8(%r8)
  0x0000024807487b7b: movq   $0x1,0x21d0(%r8)
  0x0000024807487b86: jmp    0x0000024807487bb7
  0x0000024807487b8b: cmpq   $0x0,0x21d8(%r8)
  0x0000024807487b96: jne    0x0000024807487baf
  0x0000024807487b98: mov    %rdx,0x21d8(%r8)
  0x0000024807487b9f: movq   $0x1,0x21e0(%r8)
  0x0000024807487baa: jmp    0x0000024807487bb7
  0x0000024807487baf: addq   $0x1,0x21c0(%r8)
  0x0000024807487bb7: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487bc1: mov    0xdc(%rdx),%r8d
  0x0000024807487bc8: add    $0x8,%r8d
  0x0000024807487bcc: mov    %r8d,0xdc(%rdx)
  0x0000024807487bd3: movabs $0x2481fb03db0,%rdx  ;   {metadata({method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487bdd: and    $0x7ffff8,%r8d
  0x0000024807487be4: cmp    $0x0,%r8d
  0x0000024807487be8: je     0x000002480748b2b8
  0x0000024807487bee: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487bf8: incl   0x118(%rdx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x0000024807487bfe: mov    0xc(%rsi),%edx
  0x0000024807487c01: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x0000024807487c05: mov    0xc(%rdx),%r8d     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ; implicit exception: dispatches to 0x000002480748b2cf
  0x0000024807487c09: cmp    $0x0,%r8d
  0x0000024807487c0d: movabs $0x2481fc35c48,%r8  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487c17: movabs $0x128,%rdi
  0x0000024807487c21: jg     0x0000024807487c31
  0x0000024807487c27: movabs $0x138,%rdi
  0x0000024807487c31: mov    (%r8,%rdi,1),%rbx
  0x0000024807487c35: lea    0x1(%rbx),%rbx
  0x0000024807487c39: mov    %rbx,(%r8,%rdi,1)
  0x0000024807487c3d: jle    0x000002480748b109  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x0000024807487c43: cmpl   $0x0,0xc(%rdx)
  0x0000024807487c4a: jbe    0x000002480748b2d4
  0x0000024807487c50: movzwl 0x10(%rdx),%edx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x0000024807487c54: and    $0xffff,%edx
  0x0000024807487c5a: cmp    $0x5b,%edx
  0x0000024807487c5d: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487c67: movabs $0x21f0,%r8
  0x0000024807487c71: jne    0x0000024807487c81
  0x0000024807487c77: movabs $0x2200,%r8
  0x0000024807487c81: mov    (%rdx,%r8,1),%rdi
  0x0000024807487c85: lea    0x1(%rdi),%rdi
  0x0000024807487c89: mov    %rdi,(%rdx,%r8,1)
  0x0000024807487c8d: jne    0x000002480748975c  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2207 (line 1286)

  0x0000024807487c93: mov    0xf0(%rsp),%rdx
  0x0000024807487c9b: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487ca5: addq   $0x1,0x2210(%r8)
  0x0000024807487cad: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487cb7: mov    0xdc(%rdx),%r8d
  0x0000024807487cbe: add    $0x8,%r8d
  0x0000024807487cc2: mov    %r8d,0xdc(%rdx)
  0x0000024807487cc9: movabs $0x2481fe511f0,%rdx  ;   {metadata({method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487cd3: and    $0x7ffff8,%r8d
  0x0000024807487cda: cmp    $0x0,%r8d
  0x0000024807487cde: je     0x000002480748b2e1
  0x0000024807487ce4: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487cee: addq   $0x1,0x108(%rdx)
  0x0000024807487cf6: mov    0x110(%rsp),%rdx
  0x0000024807487cfe: mov    %rsi,%r8           ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x0000024807487d01: nop
  0x0000024807487d02: nop
  0x0000024807487d03: nop
  0x0000024807487d04: nop
  0x0000024807487d05: nop
  0x0000024807487d06: nop
  0x0000024807487d07: call   0x0000024807376360  ; OopMap{[240]=Oop off=4684}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)
                                                ;   {static_call}
  0x0000024807487d0c: cmp    $0x0,%eax
  0x0000024807487d0f: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487d19: movabs $0x118,%rdx
  0x0000024807487d23: je     0x0000024807487d33
  0x0000024807487d29: movabs $0x128,%rdx
  0x0000024807487d33: mov    (%r8,%rdx,1),%rsi
  0x0000024807487d37: lea    0x1(%rsi),%rsi
  0x0000024807487d3b: mov    %rsi,(%r8,%rdx,1)
  0x0000024807487d3f: je     0x000002480748973c  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x0000024807487d45: mov    0xf0(%rsp),%rdx
  0x0000024807487d4d: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487d57: addq   $0x1,0x138(%r8)
  0x0000024807487d5f: mov    %rax,%r8
  0x0000024807487d62: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x0000024807487d6a: mov    %eax,0x128(%rsp)
  0x0000024807487d71: nop
  0x0000024807487d72: nop
  0x0000024807487d73: nop
  0x0000024807487d74: nop
  0x0000024807487d75: nop
  0x0000024807487d76: nop
  0x0000024807487d77: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=4796}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)
                                                ;   {optimized virtual_call}
  0x0000024807487d7c: mov    0x128(%rsp),%eax
  0x0000024807487d83: cmp    $0x1000004,%eax
  0x0000024807487d89: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487d93: movabs $0x148,%rdx
  0x0000024807487d9d: je     0x0000024807487dad
  0x0000024807487da3: movabs $0x158,%rdx
  0x0000024807487dad: mov    (%r8,%rdx,1),%rsi
  0x0000024807487db1: lea    0x1(%rsi),%rsi
  0x0000024807487db5: mov    %rsi,(%r8,%rdx,1)
  0x0000024807487db9: je     0x0000024807487dfb  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x0000024807487dbf: cmp    $0x1000003,%eax
  0x0000024807487dc5: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487dcf: movabs $0x168,%rdx
  0x0000024807487dd9: jne    0x0000024807487de9
  0x0000024807487ddf: movabs $0x178,%rdx
  0x0000024807487de9: mov    (%r8,%rdx,1),%rsi
  0x0000024807487ded: lea    0x1(%rsi),%rsi
  0x0000024807487df1: mov    %rsi,(%r8,%rdx,1)
  0x0000024807487df5: jne    0x000002480748973c  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x0000024807487dfb: mov    0xf0(%rsp),%rdx
  0x0000024807487e03: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487e0d: addq   $0x1,0x188(%r8)
  0x0000024807487e15: mov    $0x1000000,%r8d
  0x0000024807487e1b: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x0000024807487e23: nop
  0x0000024807487e24: nop
  0x0000024807487e25: nop
  0x0000024807487e26: nop
  0x0000024807487e27: call   0x0000024807375ee0  ; OopMap{off=4972}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)
                                                ;   {optimized virtual_call}
  0x0000024807487e2c: jmp    0x000002480748973c  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x0000024807487e31: mov    0x24(%rsi),%esi    ; implicit exception: dispatches to 0x000002480748b2f8
  0x0000024807487e34: shl    $0x3,%rsi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2122 (line 1275)

  0x0000024807487e38: mov    %rsi,0x130(%rsp)
  0x0000024807487e40: mov    0xf0(%rsp),%rdx
  0x0000024807487e48: movabs $0x2481fed7178,%rdi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487e52: addq   $0x1,0x2030(%rdi)
  0x0000024807487e5a: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2128 (line 1276)

  0x0000024807487e62: nop
  0x0000024807487e63: nop
  0x0000024807487e64: nop
  0x0000024807487e65: nop
  0x0000024807487e66: nop
  0x0000024807487e67: call   0x0000024807375ee0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop off=5036}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2128 (line 1276)
                                                ;   {optimized virtual_call}
  0x0000024807487e6c: mov    0x130(%rsp),%rsi
  0x0000024807487e74: cmp    (%rsi),%rax        ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ; implicit exception: dispatches to 0x000002480748b2fd
  0x0000024807487e77: mov    %rsi,%rdx
  0x0000024807487e7a: movabs $0x2481fed7178,%rdi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487e84: mov    0x8(%rdx),%edx
  0x0000024807487e87: shl    $0x3,%rdx
  0x0000024807487e8b: cmp    0x2048(%rdi),%rdx
  0x0000024807487e92: jne    0x0000024807487ea1
  0x0000024807487e94: addq   $0x1,0x2050(%rdi)
  0x0000024807487e9c: jmp    0x0000024807487f07
  0x0000024807487ea1: cmp    0x2058(%rdi),%rdx
  0x0000024807487ea8: jne    0x0000024807487eb7
  0x0000024807487eaa: addq   $0x1,0x2060(%rdi)
  0x0000024807487eb2: jmp    0x0000024807487f07
  0x0000024807487eb7: cmpq   $0x0,0x2048(%rdi)
  0x0000024807487ec2: jne    0x0000024807487edb
  0x0000024807487ec4: mov    %rdx,0x2048(%rdi)
  0x0000024807487ecb: movq   $0x1,0x2050(%rdi)
  0x0000024807487ed6: jmp    0x0000024807487f07
  0x0000024807487edb: cmpq   $0x0,0x2058(%rdi)
  0x0000024807487ee6: jne    0x0000024807487eff
  0x0000024807487ee8: mov    %rdx,0x2058(%rdi)
  0x0000024807487eef: movq   $0x1,0x2060(%rdi)
  0x0000024807487efa: jmp    0x0000024807487f07
  0x0000024807487eff: addq   $0x1,0x2040(%rdi)
  0x0000024807487f07: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487f11: mov    0xdc(%rdx),%edi
  0x0000024807487f17: add    $0x8,%edi
  0x0000024807487f1a: mov    %edi,0xdc(%rdx)
  0x0000024807487f20: movabs $0x2481fb03db0,%rdx  ;   {metadata({method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487f2a: and    $0x7ffff8,%edi
  0x0000024807487f30: cmp    $0x0,%edi
  0x0000024807487f33: je     0x000002480748b302
  0x0000024807487f39: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487f43: incl   0x118(%rdx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x0000024807487f49: mov    0xc(%rsi),%edx
  0x0000024807487f4c: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x0000024807487f50: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ; implicit exception: dispatches to 0x000002480748b319
  0x0000024807487f53: cmp    $0x0,%edi
  0x0000024807487f56: movabs $0x2481fc35c48,%rdi  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000024807487f60: movabs $0x128,%rax
  0x0000024807487f6a: jg     0x0000024807487f7a
  0x0000024807487f70: movabs $0x138,%rax
  0x0000024807487f7a: mov    (%rdi,%rax,1),%rcx
  0x0000024807487f7e: lea    0x1(%rcx),%rcx
  0x0000024807487f82: mov    %rcx,(%rdi,%rax,1)
  0x0000024807487f86: jle    0x000002480748b0bb  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x0000024807487f8c: cmpl   $0x0,0xc(%rdx)
  0x0000024807487f93: jbe    0x000002480748b31e
  0x0000024807487f99: movzwl 0x10(%rdx),%edx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x0000024807487f9d: and    $0xffff,%edx
  0x0000024807487fa3: cmp    $0x5b,%edx
  0x0000024807487fa6: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807487fb0: movabs $0x2070,%rdi
  0x0000024807487fba: jne    0x0000024807487fca
  0x0000024807487fc0: movabs $0x2080,%rdi
  0x0000024807487fca: mov    (%rdx,%rdi,1),%rax
  0x0000024807487fce: lea    0x1(%rax),%rax
  0x0000024807487fd2: mov    %rax,(%rdx,%rdi,1)
  0x0000024807487fd6: jne    0x00000248074896a4  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2140 (line 1277)

  0x0000024807487fdc: nopl   0x0(%rax)
  0x0000024807487fe0: jmp    0x000002480748b33a  ;   {no_reloc}
  0x0000024807487fe5: add    %al,(%rax)
  0x0000024807487fe7: add    %al,(%rax)
  0x0000024807487fe9: add    %cl,-0x75(%rcx)
  0x0000024807487fec: rex.RXB (bad) 
  0x0000024807487fee: lea    0x18(%rax),%rdi
  0x0000024807487ff2: cmp    0x70(%r15),%rdi
  0x0000024807487ff6: ja     0x000002480748b344
  0x0000024807487ffc: mov    %rdi,0x60(%r15)
  0x0000024807488000: mov    0xa8(%rdx),%rcx
  0x0000024807488007: mov    %rcx,(%rax)
  0x000002480748800a: mov    %rdx,%rcx
  0x000002480748800d: shr    $0x3,%rcx
  0x0000024807488011: mov    %ecx,0x8(%rax)
  0x0000024807488014: xor    %rcx,%rcx
  0x0000024807488017: mov    %ecx,0xc(%rax)
  0x000002480748801a: xor    %rcx,%rcx
  0x000002480748801d: mov    %rcx,0x10(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@2145 (line 1278)

  0x0000024807488021: mov    %rax,0x140(%rsp)
  0x0000024807488029: mov    %rax,%rbx
  0x000002480748802c: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488036: addq   $0x1,0x2090(%rdx)
  0x000002480748803e: movabs $0x2481fd6d330,%rbx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807488048: mov    0xdc(%rbx),%edx
  0x000002480748804e: add    $0x8,%edx
  0x0000024807488051: mov    %edx,0xdc(%rbx)
  0x0000024807488057: movabs $0x2481fb79208,%rbx  ;   {metadata({method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807488061: and    $0x7ffff8,%edx
  0x0000024807488067: cmp    $0x0,%edx
  0x000002480748806a: je     0x000002480748b351
  0x0000024807488070: mov    %rax,%rbx
  0x0000024807488073: movabs $0x2481fd6d330,%rdx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480748807d: addq   $0x1,0x108(%rdx)
  0x0000024807488085: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480748808f: mov    0xdc(%rbx),%edx
  0x0000024807488095: add    $0x8,%edx
  0x0000024807488098: mov    %edx,0xdc(%rbx)
  0x000002480748809e: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074880a8: and    $0x7ffff8,%edx
  0x00000248074880ae: cmp    $0x0,%edx
  0x00000248074880b1: je     0x000002480748b368
  0x00000248074880b7: mov    %rax,%rbx
  0x00000248074880ba: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074880c4: addq   $0x1,0x108(%rdx)
  0x00000248074880cc: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000248074880d6: mov    0xdc(%rbx),%edx
  0x00000248074880dc: add    $0x8,%edx
  0x00000248074880df: mov    %edx,0xdc(%rbx)
  0x00000248074880e5: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000248074880ef: and    $0x7ffff8,%edx
  0x00000248074880f5: cmp    $0x0,%edx
  0x00000248074880f8: je     0x000002480748b37f
  0x00000248074880fe: mov    $0x10,%ebx
  0x0000024807488103: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000002480748810d: mov    %rax,%r11
  0x0000024807488110: movslq %ebx,%rbx
  0x0000024807488113: mov    %rbx,%rdi
  0x0000024807488116: cmp    $0xffffff,%rbx
  0x000002480748811d: ja     0x000002480748b396
  0x0000024807488123: movabs $0x17,%rsi
  0x000002480748812d: lea    (%rsi,%rbx,2),%rsi
  0x0000024807488131: and    $0xfffffffffffffff8,%rsi
  0x0000024807488135: mov    0x60(%r15),%rax
  0x0000024807488139: lea    (%rax,%rsi,1),%rsi
  0x000002480748813d: cmp    0x70(%r15),%rsi
  0x0000024807488141: ja     0x000002480748b396
  0x0000024807488147: mov    %rsi,0x60(%r15)
  0x000002480748814b: sub    %rax,%rsi
  0x000002480748814e: movq   $0x1,(%rax)
  0x0000024807488155: mov    %rdx,%rcx
  0x0000024807488158: shr    $0x3,%rcx
  0x000002480748815c: mov    %ecx,0x8(%rax)
  0x000002480748815f: mov    %ebx,0xc(%rax)
  0x0000024807488162: sub    $0x10,%rsi
  0x0000024807488166: je     0x000002480748817d
  0x000002480748816c: xor    %rbx,%rbx
  0x000002480748816f: shr    $0x3,%rsi
  0x0000024807488173: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807488178: dec    %rsi
  0x000002480748817b: jne    0x0000024807488173  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)

  0x000002480748817d: mov    %rax,%r10
  0x0000024807488180: shr    $0x3,%r10
  0x0000024807488184: mov    %r10d,0x10(%r11)
  0x0000024807488188: mov    %r11,%rax
  0x000002480748818b: shr    $0x9,%rax
  0x000002480748818f: movabs $0x248130de000,%r8
  0x0000024807488199: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)

  0x000002480748819e: mov    %r11,%rax
  0x00000248074881a1: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074881ab: mov    0x8(%rax),%eax
  0x00000248074881ae: shl    $0x3,%rax
  0x00000248074881b2: cmp    0x20a8(%r8),%rax
  0x00000248074881b9: jne    0x00000248074881c8
  0x00000248074881bb: addq   $0x1,0x20b0(%r8)
  0x00000248074881c3: jmp    0x000002480748822e
  0x00000248074881c8: cmp    0x20b8(%r8),%rax
  0x00000248074881cf: jne    0x00000248074881de
  0x00000248074881d1: addq   $0x1,0x20c0(%r8)
  0x00000248074881d9: jmp    0x000002480748822e
  0x00000248074881de: cmpq   $0x0,0x20a8(%r8)
  0x00000248074881e9: jne    0x0000024807488202
  0x00000248074881eb: mov    %rax,0x20a8(%r8)
  0x00000248074881f2: movq   $0x1,0x20b0(%r8)
  0x00000248074881fd: jmp    0x000002480748822e
  0x0000024807488202: cmpq   $0x0,0x20b8(%r8)
  0x000002480748820d: jne    0x0000024807488226
  0x000002480748820f: mov    %rax,0x20b8(%r8)
  0x0000024807488216: movq   $0x1,0x20c0(%r8)
  0x0000024807488221: jmp    0x000002480748822e
  0x0000024807488226: addq   $0x1,0x20a0(%r8)
  0x000002480748822e: movabs $0x2481fe99400,%r8  ;   {metadata(method data for {method} {0x000002481fb79950} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807488238: mov    0xdc(%r8),%edx
  0x000002480748823f: add    $0x8,%edx
  0x0000024807488242: mov    %edx,0xdc(%r8)
  0x0000024807488249: movabs $0x2481fb79948,%r8  ;   {metadata({method} {0x000002481fb79950} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807488253: and    $0x7ffff8,%edx
  0x0000024807488259: cmp    $0x0,%edx
  0x000002480748825c: je     0x000002480748b3a0
  0x0000024807488262: mov    %r11,%rax
  0x0000024807488265: movabs $0x2481fe99400,%r8  ;   {metadata(method data for {method} {0x000002481fb79950} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480748826f: addq   $0x1,0x108(%r8)
  0x0000024807488277: movabs $0x2481fd289f8,%r8  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807488281: mov    0xdc(%r8),%edx
  0x0000024807488288: add    $0x8,%edx
  0x000002480748828b: mov    %edx,0xdc(%r8)
  0x0000024807488292: movabs $0x2481fb768b0,%r8  ;   {metadata({method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480748829c: and    $0x7ffff8,%edx
  0x00000248074882a2: cmp    $0x0,%edx
  0x00000248074882a5: je     0x000002480748b3b7
  0x00000248074882ab: mov    0xc(%r11),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x00000248074882af: inc    %r8d
  0x00000248074882b2: mov    %r11,%rax
  0x00000248074882b5: movabs $0x2481fd289f8,%rdx  ;   {metadata(method data for {method} {0x000002481fb768b8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074882bf: addq   $0x1,0x108(%rdx)
  0x00000248074882c7: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074882d1: mov    0xdc(%rdx),%esi
  0x00000248074882d7: add    $0x8,%esi
  0x00000248074882da: mov    %esi,0xdc(%rdx)
  0x00000248074882e0: movabs $0x2481fb75778,%rdx  ;   {metadata({method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074882ea: and    $0x7ffff8,%esi
  0x00000248074882f0: cmp    $0x0,%esi
  0x00000248074882f3: je     0x000002480748b3ce
  0x00000248074882f9: mov    %r8,%rdx
  0x00000248074882fc: sub    $0x10,%edx
  0x00000248074882ff: cmp    $0x0,%edx
  0x0000024807488302: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000002480748830c: movabs $0x108,%rsi
  0x0000024807488316: jle    0x0000024807488326
  0x000002480748831c: movabs $0x118,%rsi
  0x0000024807488326: mov    (%rdx,%rsi,1),%rdi
  0x000002480748832a: lea    0x1(%rdi),%rdi
  0x000002480748832e: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807488332: jg     0x0000024807488340  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x0000024807488338: mov    %r11,%rsi
  0x000002480748833b: jmp    0x000002480748859e  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x0000024807488340: mov    0x10(%r11),%edi
  0x0000024807488344: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x0000024807488348: mov    %r11,%rax
  0x000002480748834b: movabs $0x2481fd28388,%rdx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807488355: addq   $0x1,0x128(%rdx)
  0x000002480748835d: mov    %r11,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x0000024807488360: mov    %rdi,0x138(%rsp)
  0x0000024807488368: nop
  0x0000024807488369: nop
  0x000002480748836a: nop
  0x000002480748836b: nop
  0x000002480748836c: nop
  0x000002480748836d: nop
  0x000002480748836e: nop
  0x000002480748836f: call   0x0000024807375ee0  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [312]=Oop [304]=Oop off=6324}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {optimized virtual_call}
  0x0000024807488374: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x0000024807488377: movabs $0x2481fd28388,%rbx  ;   {metadata(method data for {method} {0x000002481fb75780} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807488381: addq   $0x1,0x138(%rbx)
  0x0000024807488389: movabs $0x2481fd58e70,%rbx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000024807488393: mov    0xdc(%rbx),%edx
  0x0000024807488399: add    $0x8,%edx
  0x000002480748839c: mov    %edx,0xdc(%rbx)
  0x00000248074883a2: movabs $0x2481fc1be08,%rbx  ;   {metadata({method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000248074883ac: and    $0x7ffff8,%edx
  0x00000248074883b2: cmp    $0x0,%edx
  0x00000248074883b5: je     0x000002480748b3e5
  0x00000248074883bb: mov    %r8,%rbx
  0x00000248074883be: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000248074883c8: movslq %ebx,%rbx
  0x00000248074883cb: mov    %rbx,%rdi
  0x00000248074883ce: cmp    $0xffffff,%rbx
  0x00000248074883d5: ja     0x000002480748b3fc
  0x00000248074883db: movabs $0x17,%rsi
  0x00000248074883e5: lea    (%rsi,%rbx,2),%rsi
  0x00000248074883e9: and    $0xfffffffffffffff8,%rsi
  0x00000248074883ed: mov    0x60(%r15),%rax
  0x00000248074883f1: lea    (%rax,%rsi,1),%rsi
  0x00000248074883f5: cmp    0x70(%r15),%rsi
  0x00000248074883f9: ja     0x000002480748b3fc
  0x00000248074883ff: mov    %rsi,0x60(%r15)
  0x0000024807488403: sub    %rax,%rsi
  0x0000024807488406: movq   $0x1,(%rax)
  0x000002480748840d: mov    %rdx,%rcx
  0x0000024807488410: shr    $0x3,%rcx
  0x0000024807488414: mov    %ecx,0x8(%rax)
  0x0000024807488417: mov    %ebx,0xc(%rax)
  0x000002480748841a: sub    $0x10,%rsi
  0x000002480748841e: je     0x0000024807488435
  0x0000024807488424: xor    %rbx,%rbx
  0x0000024807488427: shr    $0x3,%rsi
  0x000002480748842b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807488430: dec    %rsi
  0x0000024807488433: jne    0x000002480748842b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x0000024807488435: mov    0x138(%rsp),%rdi
  0x000002480748843d: mov    0xc(%rdi),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ; implicit exception: dispatches to 0x000002480748b406
  0x0000024807488440: movabs $0x2481fd58e70,%r9  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000002480748844a: addq   $0x1,0x108(%r9)
  0x0000024807488452: movabs $0x2481fd13600,%r9  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000002480748845c: mov    0xdc(%r9),%esi
  0x0000024807488463: add    $0x8,%esi
  0x0000024807488466: mov    %esi,0xdc(%r9)
  0x000002480748846d: movabs $0x2481fbf7590,%r9  ;   {metadata({method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807488477: and    $0x7ffff8,%esi
  0x000002480748847d: cmp    $0x0,%esi
  0x0000024807488480: je     0x000002480748b40b
  0x0000024807488486: cmp    %r8d,%edx
  0x0000024807488489: movabs $0x2481fd13600,%r9  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807488493: movabs $0x108,%rsi
  0x000002480748849d: jg     0x00000248074884ad
  0x00000248074884a3: movabs $0x118,%rsi
  0x00000248074884ad: mov    (%r9,%rsi,1),%rbx
  0x00000248074884b1: lea    0x1(%rbx),%rbx
  0x00000248074884b5: mov    %rbx,(%r9,%rsi,1)
  0x00000248074884b9: jg     0x00000248074884d8  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x00000248074884bf: movabs $0x2481fd13600,%r8  ;   {metadata(method data for {method} {0x000002481fbf7598} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000248074884c9: incl   0x128(%r8)
  0x00000248074884d0: mov    %rdx,%rsi
  0x00000248074884d3: jmp    0x00000248074884db  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x00000248074884d8: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x00000248074884db: movabs $0x2481fd58e70,%rdx  ;   {metadata(method data for {method} {0x000002481fc1be10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000248074884e5: addq   $0x1,0x118(%rdx)
  0x00000248074884ed: mov    %rdi,%rdx
  0x00000248074884f0: mov    $0x0,%r8d
  0x00000248074884f6: mov    %rax,%r9
  0x00000248074884f9: mov    $0x0,%edi
  0x00000248074884fe: mov    %rax,0x148(%rsp)
  0x0000024807488506: lea    (%r8,%rsi,1),%rcx
  0x000002480748850a: cmp    0xc(%rdx),%ecx
  0x000002480748850d: ja     0x000002480748b422
  0x0000024807488513: lea    (%rdi,%rsi,1),%rcx
  0x0000024807488517: cmp    0xc(%r9),%ecx
  0x000002480748851b: ja     0x000002480748b422
  0x0000024807488521: test   %esi,%esi
  0x0000024807488523: jl     0x000002480748b422
  0x0000024807488529: je     0x000002480748856d
  0x000002480748852f: movslq %r8d,%r8
  0x0000024807488532: movslq %edi,%rdi
  0x0000024807488535: lea    0x10(%rdx,%r8,2),%rcx
  0x000002480748853a: lea    0x10(%r9,%rdi,2),%rdx
  0x000002480748853f: mov    %rsi,%r8
  0x0000024807488542: sub    $0x20,%rsp
  0x0000024807488546: test   $0xf,%esp
  0x000002480748854c: je     0x0000024807488564
  0x0000024807488552: sub    $0x8,%rsp
  0x0000024807488556: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000002480748855b: add    $0x8,%rsp
  0x000002480748855f: jmp    0x0000024807488569
  0x0000024807488564: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807488569: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000002480748856d: mov    0x148(%rsp),%rax
  0x0000024807488575: mov    0x140(%rsp),%rsi
  0x000002480748857d: mov    %rax,%r10
  0x0000024807488580: shr    $0x3,%r10
  0x0000024807488584: mov    %r10d,0x10(%rsi)
  0x0000024807488588: mov    %rsi,%rax
  0x000002480748858b: shr    $0x9,%rax
  0x000002480748858f: movabs $0x248130de000,%r8
  0x0000024807488599: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000002480748859e: mov    0x10(%rsi),%r8d
  0x00000248074885a2: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x00000248074885a6: mov    0xc(%rsi),%edx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x00000248074885a9: mov    %rdx,%rdi
  0x00000248074885ac: inc    %edi
  0x00000248074885ae: mov    %edi,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x00000248074885b1: mov    $0x5b,%edi
  0x00000248074885b6: movslq %edx,%rbx
  0x00000248074885b9: cmp    0xc(%r8),%edx      ; implicit exception: dispatches to 0x000002480748b431
  0x00000248074885bd: jae    0x000002480748b43b
  0x00000248074885c3: mov    %di,0x10(%r8,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x00000248074885c9: mov    %rsi,%rax
  0x00000248074885cc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074885d6: mov    0x8(%rax),%eax
  0x00000248074885d9: shl    $0x3,%rax
  0x00000248074885dd: cmp    0x20d8(%r8),%rax
  0x00000248074885e4: jne    0x00000248074885f3
  0x00000248074885e6: addq   $0x1,0x20e0(%r8)
  0x00000248074885ee: jmp    0x0000024807488659
  0x00000248074885f3: cmp    0x20e8(%r8),%rax
  0x00000248074885fa: jne    0x0000024807488609
  0x00000248074885fc: addq   $0x1,0x20f0(%r8)
  0x0000024807488604: jmp    0x0000024807488659
  0x0000024807488609: cmpq   $0x0,0x20d8(%r8)
  0x0000024807488614: jne    0x000002480748862d
  0x0000024807488616: mov    %rax,0x20d8(%r8)
  0x000002480748861d: movq   $0x1,0x20e0(%r8)
  0x0000024807488628: jmp    0x0000024807488659
  0x000002480748862d: cmpq   $0x0,0x20e8(%r8)
  0x0000024807488638: jne    0x0000024807488651
  0x000002480748863a: mov    %rax,0x20e8(%r8)
  0x0000024807488641: movq   $0x1,0x20f0(%r8)
  0x000002480748864c: jmp    0x0000024807488659
  0x0000024807488651: addq   $0x1,0x20d0(%r8)
  0x0000024807488659: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807488663: mov    0xdc(%r8),%edx
  0x000002480748866a: add    $0x8,%edx
  0x000002480748866d: mov    %edx,0xdc(%r8)
  0x0000024807488674: movabs $0x2481fb79520,%r8  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480748867e: and    $0x7ffff8,%edx
  0x0000024807488684: cmp    $0x0,%edx
  0x0000024807488687: je     0x000002480748b444
  0x000002480748868d: mov    %rsi,%rax
  0x0000024807488690: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480748869a: addq   $0x1,0x108(%r8)
  0x00000248074886a2: mov    0x130(%rsp),%r8
  0x00000248074886aa: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2159 (line 1278)

  0x00000248074886ad: nop
  0x00000248074886ae: nop
  0x00000248074886af: call   0x0000024807375ee0  ; OopMap{[272]=Oop [240]=Oop [320]=Oop off=7156}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2159 (line 1278)
                                                ;   {optimized virtual_call}
  0x00000248074886b4: mov    0x140(%rsp),%rax
  0x00000248074886bc: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074886c6: mov    0x8(%rax),%eax
  0x00000248074886c9: shl    $0x3,%rax
  0x00000248074886cd: cmp    0x2108(%rdx),%rax
  0x00000248074886d4: jne    0x00000248074886e3
  0x00000248074886d6: addq   $0x1,0x2110(%rdx)
  0x00000248074886de: jmp    0x0000024807488749
  0x00000248074886e3: cmp    0x2118(%rdx),%rax
  0x00000248074886ea: jne    0x00000248074886f9
  0x00000248074886ec: addq   $0x1,0x2120(%rdx)
  0x00000248074886f4: jmp    0x0000024807488749
  0x00000248074886f9: cmpq   $0x0,0x2108(%rdx)
  0x0000024807488704: jne    0x000002480748871d
  0x0000024807488706: mov    %rax,0x2108(%rdx)
  0x000002480748870d: movq   $0x1,0x2110(%rdx)
  0x0000024807488718: jmp    0x0000024807488749
  0x000002480748871d: cmpq   $0x0,0x2118(%rdx)
  0x0000024807488728: jne    0x0000024807488741
  0x000002480748872a: mov    %rax,0x2118(%rdx)
  0x0000024807488731: movq   $0x1,0x2120(%rdx)
  0x000002480748873c: jmp    0x0000024807488749
  0x0000024807488741: addq   $0x1,0x2100(%rdx)
  0x0000024807488749: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807488753: mov    0xdc(%rdx),%esi
  0x0000024807488759: add    $0x8,%esi
  0x000002480748875c: mov    %esi,0xdc(%rdx)
  0x0000024807488762: movabs $0x2481fb7a8d0,%rdx  ;   {metadata({method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480748876c: and    $0x7ffff8,%esi
  0x0000024807488772: cmp    $0x0,%esi
  0x0000024807488775: je     0x000002480748b45b
  0x000002480748877b: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000024807488785: mov    0x60(%r15),%rax
  0x0000024807488789: lea    0x18(%rax),%rdi
  0x000002480748878d: cmp    0x70(%r15),%rdi
  0x0000024807488791: ja     0x000002480748b472
  0x0000024807488797: mov    %rdi,0x60(%r15)
  0x000002480748879b: mov    0xa8(%rdx),%rcx
  0x00000248074887a2: mov    %rcx,(%rax)
  0x00000248074887a5: mov    %rdx,%rcx
  0x00000248074887a8: shr    $0x3,%rcx
  0x00000248074887ac: mov    %ecx,0x8(%rax)
  0x00000248074887af: xor    %rcx,%rcx
  0x00000248074887b2: mov    %ecx,0xc(%rax)
  0x00000248074887b5: xor    %rcx,%rcx
  0x00000248074887b8: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)

  0x00000248074887bc: mov    0x140(%rsp),%r8
  0x00000248074887c4: mov    0x10(%r8),%r9d
  0x00000248074887c8: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)

  0x00000248074887cc: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)

  0x00000248074887d0: mov    %rax,%r8
  0x00000248074887d3: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000248074887dd: addq   $0x1,0x108(%rdx)
  0x00000248074887e5: mov    %r9,%r8
  0x00000248074887e8: mov    $0x0,%r9d
  0x00000248074887ee: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)

  0x00000248074887f1: mov    %rax,0x150(%rsp)
  0x00000248074887f9: nop
  0x00000248074887fa: nop
  0x00000248074887fb: nop
  0x00000248074887fc: nop
  0x00000248074887fd: nop
  0x00000248074887fe: nop
  0x00000248074887ff: call   0x0000024807375ee0  ; OopMap{[272]=Oop [240]=Oop [336]=Oop off=7492}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)
                                                ;   {optimized virtual_call}
  0x0000024807488804: mov    0xf0(%rsp),%rdx
  0x000002480748880c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488816: addq   $0x1,0x2130(%r8)
  0x000002480748881e: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488828: mov    0xdc(%rdx),%r8d
  0x000002480748882f: add    $0x8,%r8d
  0x0000024807488833: mov    %r8d,0xdc(%rdx)
  0x000002480748883a: movabs $0x2481fe511f0,%rdx  ;   {metadata({method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488844: and    $0x7ffff8,%r8d
  0x000002480748884b: cmp    $0x0,%r8d
  0x000002480748884f: je     0x000002480748b47f
  0x0000024807488855: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748885f: addq   $0x1,0x108(%rdx)
  0x0000024807488867: mov    0x110(%rsp),%rdx
  0x000002480748886f: mov    0x150(%rsp),%r8    ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x0000024807488877: call   0x0000024807376360  ; OopMap{[240]=Oop off=7612}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)
                                                ;   {static_call}
  0x000002480748887c: cmp    $0x0,%eax
  0x000002480748887f: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488889: movabs $0x118,%rdx
  0x0000024807488893: je     0x00000248074888a3
  0x0000024807488899: movabs $0x128,%rdx
  0x00000248074888a3: mov    (%r8,%rdx,1),%rsi
  0x00000248074888a7: lea    0x1(%rsi),%rsi
  0x00000248074888ab: mov    %rsi,(%r8,%rdx,1)
  0x00000248074888af: je     0x0000024807489684  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x00000248074888b5: mov    0xf0(%rsp),%rdx
  0x00000248074888bd: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074888c7: addq   $0x1,0x138(%r8)
  0x00000248074888cf: mov    %rax,%r8
  0x00000248074888d2: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x00000248074888da: mov    %eax,0x12c(%rsp)
  0x00000248074888e1: nop
  0x00000248074888e2: nop
  0x00000248074888e3: nop
  0x00000248074888e4: nop
  0x00000248074888e5: nop
  0x00000248074888e6: nop
  0x00000248074888e7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=7724}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)
                                                ;   {optimized virtual_call}
  0x00000248074888ec: mov    0x12c(%rsp),%eax
  0x00000248074888f3: cmp    $0x1000004,%eax
  0x00000248074888f9: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488903: movabs $0x148,%rdx
  0x000002480748890d: je     0x000002480748891d
  0x0000024807488913: movabs $0x158,%rdx
  0x000002480748891d: mov    (%r8,%rdx,1),%rsi
  0x0000024807488921: lea    0x1(%rsi),%rsi
  0x0000024807488925: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488929: je     0x000002480748896b  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000002480748892f: cmp    $0x1000003,%eax
  0x0000024807488935: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748893f: movabs $0x168,%rdx
  0x0000024807488949: jne    0x0000024807488959
  0x000002480748894f: movabs $0x178,%rdx
  0x0000024807488959: mov    (%r8,%rdx,1),%rsi
  0x000002480748895d: lea    0x1(%rsi),%rsi
  0x0000024807488961: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488965: jne    0x0000024807489684  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000002480748896b: mov    0xf0(%rsp),%rdx
  0x0000024807488973: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748897d: addq   $0x1,0x188(%r8)
  0x0000024807488985: mov    $0x1000000,%r8d
  0x000002480748898b: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x0000024807488993: nop
  0x0000024807488994: nop
  0x0000024807488995: nop
  0x0000024807488996: nop
  0x0000024807488997: call   0x0000024807375ee0  ; OopMap{off=7900}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)
                                                ;   {optimized virtual_call}
  0x000002480748899c: jmp    0x0000024807489684  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x00000248074889a1: mov    0xf0(%rsp),%rdx
  0x00000248074889a9: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074889b3: addq   $0x1,0x1e50(%rsi)
  0x00000248074889bb: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2001 (line 1245)

  0x00000248074889c3: nop
  0x00000248074889c4: nop
  0x00000248074889c5: nop
  0x00000248074889c6: nop
  0x00000248074889c7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=7948}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2001 (line 1245)
                                                ;   {optimized virtual_call}
  0x00000248074889cc: mov    0xf8(%rsp),%r9d
  0x00000248074889d4: cmp    $0x4,%r9d
  0x00000248074889d8: je     0x0000024807489634
  0x00000248074889de: cmp    $0x5,%r9d
  0x00000248074889e2: je     0x00000248074895e4
  0x00000248074889e8: cmp    $0x6,%r9d
  0x00000248074889ec: je     0x0000024807489594
  0x00000248074889f2: cmp    $0x7,%r9d
  0x00000248074889f6: je     0x0000024807489544
  0x00000248074889fc: cmp    $0x8,%r9d
  0x0000024807488a00: je     0x00000248074894f4
  0x0000024807488a06: cmp    $0x9,%r9d
  0x0000024807488a0a: je     0x00000248074894a4
  0x0000024807488a10: cmp    $0xa,%r9d
  0x0000024807488a14: je     0x0000024807489454
  0x0000024807488a1a: jmp    0x0000024807489404  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2006 (line 1246)

  0x0000024807488a1f: mov    0x28(%rsi),%r8d    ; implicit exception: dispatches to 0x000002480748b496
  0x0000024807488a23: shl    $0x3,%r8           ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1961 (line 1238)

  0x0000024807488a27: mov    0xf0(%rsp),%rdx
  0x0000024807488a2f: movabs $0x2481fed7178,%rdi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488a39: addq   $0x1,0x1dc0(%rdi)
  0x0000024807488a41: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1964 (line 1238)

  0x0000024807488a49: nop
  0x0000024807488a4a: nop
  0x0000024807488a4b: nop
  0x0000024807488a4c: nop
  0x0000024807488a4d: nop
  0x0000024807488a4e: nop
  0x0000024807488a4f: call   0x0000024807375ee0  ; OopMap{[240]=Oop [272]=Oop [264]=Oop off=8084}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1964 (line 1238)
                                                ;   {optimized virtual_call}
  0x0000024807488a54: mov    0x108(%rsp),%rsi
  0x0000024807488a5c: mov    0x28(%rsi),%r8d
  0x0000024807488a60: shl    $0x3,%r8           ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1971 (line 1239)

  0x0000024807488a64: mov    0xf0(%rsp),%rdx
  0x0000024807488a6c: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488a76: addq   $0x1,0x1dd0(%rsi)
  0x0000024807488a7e: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488a88: mov    0xdc(%rdx),%esi
  0x0000024807488a8e: add    $0x8,%esi
  0x0000024807488a91: mov    %esi,0xdc(%rdx)
  0x0000024807488a97: movabs $0x2481fe511f0,%rdx  ;   {metadata({method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488aa1: and    $0x7ffff8,%esi
  0x0000024807488aa7: cmp    $0x0,%esi
  0x0000024807488aaa: je     0x000002480748b49b
  0x0000024807488ab0: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488aba: addq   $0x1,0x108(%rdx)
  0x0000024807488ac2: mov    0x110(%rsp),%rdx   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x0000024807488aca: nop
  0x0000024807488acb: nop
  0x0000024807488acc: nop
  0x0000024807488acd: nop
  0x0000024807488ace: nop
  0x0000024807488acf: call   0x0000024807376360  ; OopMap{[240]=Oop off=8212}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)
                                                ;   {static_call}
  0x0000024807488ad4: cmp    $0x0,%eax
  0x0000024807488ad7: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488ae1: movabs $0x118,%rdx
  0x0000024807488aeb: je     0x0000024807488afb
  0x0000024807488af1: movabs $0x128,%rdx
  0x0000024807488afb: mov    (%r8,%rdx,1),%rsi
  0x0000024807488aff: lea    0x1(%rsi),%rsi
  0x0000024807488b03: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488b07: je     0x00000248074893e4  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x0000024807488b0d: mov    0xf0(%rsp),%rdx
  0x0000024807488b15: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488b1f: addq   $0x1,0x138(%r8)
  0x0000024807488b27: mov    %rax,%r8
  0x0000024807488b2a: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x0000024807488b32: mov    %eax,0x158(%rsp)
  0x0000024807488b39: nop
  0x0000024807488b3a: nop
  0x0000024807488b3b: nop
  0x0000024807488b3c: nop
  0x0000024807488b3d: nop
  0x0000024807488b3e: nop
  0x0000024807488b3f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=8324}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)
                                                ;   {optimized virtual_call}
  0x0000024807488b44: mov    0x158(%rsp),%eax
  0x0000024807488b4b: cmp    $0x1000004,%eax
  0x0000024807488b51: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488b5b: movabs $0x148,%rdx
  0x0000024807488b65: je     0x0000024807488b75
  0x0000024807488b6b: movabs $0x158,%rdx
  0x0000024807488b75: mov    (%r8,%rdx,1),%rsi
  0x0000024807488b79: lea    0x1(%rsi),%rsi
  0x0000024807488b7d: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488b81: je     0x0000024807488bc3  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x0000024807488b87: cmp    $0x1000003,%eax
  0x0000024807488b8d: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488b97: movabs $0x168,%rdx
  0x0000024807488ba1: jne    0x0000024807488bb1
  0x0000024807488ba7: movabs $0x178,%rdx
  0x0000024807488bb1: mov    (%r8,%rdx,1),%rsi
  0x0000024807488bb5: lea    0x1(%rsi),%rsi
  0x0000024807488bb9: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488bbd: jne    0x00000248074893e4  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x0000024807488bc3: mov    0xf0(%rsp),%rdx
  0x0000024807488bcb: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488bd5: addq   $0x1,0x188(%r8)
  0x0000024807488bdd: mov    $0x1000000,%r8d
  0x0000024807488be3: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x0000024807488beb: nop
  0x0000024807488bec: nop
  0x0000024807488bed: nop
  0x0000024807488bee: nop
  0x0000024807488bef: call   0x0000024807375ee0  ; OopMap{off=8500}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)
                                                ;   {optimized virtual_call}
  0x0000024807488bf4: jmp    0x00000248074893e4  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x0000024807488bf9: mov    0xf0(%rsp),%rdx
  0x0000024807488c01: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488c0b: addq   $0x1,0x1c68(%r8)
  0x0000024807488c13: mov    $0x1,%r8d
  0x0000024807488c19: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1863 (line 1216)

  0x0000024807488c21: nop
  0x0000024807488c22: nop
  0x0000024807488c23: nop
  0x0000024807488c24: nop
  0x0000024807488c25: nop
  0x0000024807488c26: nop
  0x0000024807488c27: call   0x0000024807375ee0  ; OopMap{[272]=Oop [240]=Oop [264]=Oop off=8556}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1863 (line 1216)
                                                ;   {optimized virtual_call}
  0x0000024807488c2c: mov    0x108(%rsp),%rsi
  0x0000024807488c34: mov    0x2c(%rsi),%r8d    ; implicit exception: dispatches to 0x000002480748b4b2
  0x0000024807488c38: shl    $0x3,%r8           ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1870 (line 1217)

  0x0000024807488c3c: mov    0xf0(%rsp),%rdx
  0x0000024807488c44: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488c4e: addq   $0x1,0x1c78(%rsi)
  0x0000024807488c56: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488c60: mov    0xdc(%rdx),%esi
  0x0000024807488c66: add    $0x8,%esi
  0x0000024807488c69: mov    %esi,0xdc(%rdx)
  0x0000024807488c6f: movabs $0x2481fe511f0,%rdx  ;   {metadata({method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488c79: and    $0x7ffff8,%esi
  0x0000024807488c7f: cmp    $0x0,%esi
  0x0000024807488c82: je     0x000002480748b4b7
  0x0000024807488c88: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488c92: addq   $0x1,0x108(%rdx)
  0x0000024807488c9a: mov    0x110(%rsp),%rdx   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x0000024807488ca2: nop
  0x0000024807488ca3: nop
  0x0000024807488ca4: nop
  0x0000024807488ca5: nop
  0x0000024807488ca6: nop
  0x0000024807488ca7: call   0x0000024807376360  ; OopMap{[240]=Oop off=8684}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)
                                                ;   {static_call}
  0x0000024807488cac: cmp    $0x0,%eax
  0x0000024807488caf: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488cb9: movabs $0x118,%rdx
  0x0000024807488cc3: je     0x0000024807488cd3
  0x0000024807488cc9: movabs $0x128,%rdx
  0x0000024807488cd3: mov    (%r8,%rdx,1),%rsi
  0x0000024807488cd7: lea    0x1(%rsi),%rsi
  0x0000024807488cdb: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488cdf: je     0x00000248074893c4  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x0000024807488ce5: mov    0xf0(%rsp),%rdx
  0x0000024807488ced: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488cf7: addq   $0x1,0x138(%r8)
  0x0000024807488cff: mov    %rax,%r8
  0x0000024807488d02: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x0000024807488d0a: mov    %eax,0x15c(%rsp)
  0x0000024807488d11: nop
  0x0000024807488d12: nop
  0x0000024807488d13: nop
  0x0000024807488d14: nop
  0x0000024807488d15: nop
  0x0000024807488d16: nop
  0x0000024807488d17: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=8796}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)
                                                ;   {optimized virtual_call}
  0x0000024807488d1c: mov    0x15c(%rsp),%eax
  0x0000024807488d23: cmp    $0x1000004,%eax
  0x0000024807488d29: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488d33: movabs $0x148,%rdx
  0x0000024807488d3d: je     0x0000024807488d4d
  0x0000024807488d43: movabs $0x158,%rdx
  0x0000024807488d4d: mov    (%r8,%rdx,1),%rsi
  0x0000024807488d51: lea    0x1(%rsi),%rsi
  0x0000024807488d55: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488d59: je     0x0000024807488d9b  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x0000024807488d5f: cmp    $0x1000003,%eax
  0x0000024807488d65: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488d6f: movabs $0x168,%rdx
  0x0000024807488d79: jne    0x0000024807488d89
  0x0000024807488d7f: movabs $0x178,%rdx
  0x0000024807488d89: mov    (%r8,%rdx,1),%rsi
  0x0000024807488d8d: lea    0x1(%rsi),%rsi
  0x0000024807488d91: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488d95: jne    0x00000248074893c4  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x0000024807488d9b: mov    0xf0(%rsp),%rdx
  0x0000024807488da3: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488dad: addq   $0x1,0x188(%r8)
  0x0000024807488db5: mov    $0x1000000,%r8d
  0x0000024807488dbb: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x0000024807488dc3: nop
  0x0000024807488dc4: nop
  0x0000024807488dc5: nop
  0x0000024807488dc6: nop
  0x0000024807488dc7: call   0x0000024807375ee0  ; OopMap{off=8972}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)
                                                ;   {optimized virtual_call}
  0x0000024807488dcc: jmp    0x00000248074893c4  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x0000024807488dd1: mov    0x2c(%rsi),%r8d    ; implicit exception: dispatches to 0x000002480748b4ce
  0x0000024807488dd5: shl    $0x3,%r8           ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1840 (line 1210)

  0x0000024807488dd9: mov    0xf0(%rsp),%rdx
  0x0000024807488de1: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488deb: addq   $0x1,0x1c18(%rsi)
  0x0000024807488df3: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488dfd: mov    0xdc(%rdx),%esi
  0x0000024807488e03: add    $0x8,%esi
  0x0000024807488e06: mov    %esi,0xdc(%rdx)
  0x0000024807488e0c: movabs $0x2481fe511f0,%rdx  ;   {metadata({method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488e16: and    $0x7ffff8,%esi
  0x0000024807488e1c: cmp    $0x0,%esi
  0x0000024807488e1f: je     0x000002480748b4d3
  0x0000024807488e25: movabs $0x2481fee8ff0,%rdx  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488e2f: addq   $0x1,0x108(%rdx)
  0x0000024807488e37: mov    0x110(%rsp),%rdx   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x0000024807488e3f: call   0x0000024807376360  ; OopMap{[240]=Oop off=9092}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)
                                                ;   {static_call}
  0x0000024807488e44: cmp    $0x0,%eax
  0x0000024807488e47: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488e51: movabs $0x118,%rdx
  0x0000024807488e5b: je     0x0000024807488e6b
  0x0000024807488e61: movabs $0x128,%rdx
  0x0000024807488e6b: mov    (%r8,%rdx,1),%rsi
  0x0000024807488e6f: lea    0x1(%rsi),%rsi
  0x0000024807488e73: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488e77: je     0x00000248074893a4  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x0000024807488e7d: mov    0xf0(%rsp),%rdx
  0x0000024807488e85: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488e8f: addq   $0x1,0x138(%r8)
  0x0000024807488e97: mov    %rax,%r8
  0x0000024807488e9a: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x0000024807488ea2: mov    %eax,0x160(%rsp)
  0x0000024807488ea9: nop
  0x0000024807488eaa: nop
  0x0000024807488eab: nop
  0x0000024807488eac: nop
  0x0000024807488ead: nop
  0x0000024807488eae: nop
  0x0000024807488eaf: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=9204}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)
                                                ;   {optimized virtual_call}
  0x0000024807488eb4: mov    0x160(%rsp),%eax
  0x0000024807488ebb: cmp    $0x1000004,%eax
  0x0000024807488ec1: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488ecb: movabs $0x148,%rdx
  0x0000024807488ed5: je     0x0000024807488ee5
  0x0000024807488edb: movabs $0x158,%rdx
  0x0000024807488ee5: mov    (%r8,%rdx,1),%rsi
  0x0000024807488ee9: lea    0x1(%rsi),%rsi
  0x0000024807488eed: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488ef1: je     0x0000024807488f33  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x0000024807488ef7: cmp    $0x1000003,%eax
  0x0000024807488efd: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488f07: movabs $0x168,%rdx
  0x0000024807488f11: jne    0x0000024807488f21
  0x0000024807488f17: movabs $0x178,%rdx
  0x0000024807488f21: mov    (%r8,%rdx,1),%rsi
  0x0000024807488f25: lea    0x1(%rsi),%rsi
  0x0000024807488f29: mov    %rsi,(%r8,%rdx,1)
  0x0000024807488f2d: jne    0x00000248074893a4  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x0000024807488f33: mov    0xf0(%rsp),%rdx
  0x0000024807488f3b: movabs $0x2481fee8ff0,%r8  ;   {metadata(method data for {method} {0x000002481fe511f8} &apos;push&apos; &apos;(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488f45: addq   $0x1,0x188(%r8)
  0x0000024807488f4d: mov    $0x1000000,%r8d
  0x0000024807488f53: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x0000024807488f5b: nop
  0x0000024807488f5c: nop
  0x0000024807488f5d: nop
  0x0000024807488f5e: nop
  0x0000024807488f5f: call   0x0000024807375ee0  ; OopMap{off=9380}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)
                                                ;   {optimized virtual_call}
  0x0000024807488f64: jmp    0x00000248074893a4  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x0000024807488f69: mov    0x18(%rsi),%r8d    ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@878 (line 926)
                                                ; implicit exception: dispatches to 0x000002480748b4ea
  0x0000024807488f6d: cmp    $0x3,%r8d
  0x0000024807488f71: je     0x0000024807489354
  0x0000024807488f77: cmp    $0x4,%r8d
  0x0000024807488f7b: je     0x0000024807489304
  0x0000024807488f81: cmp    $0x5,%r8d
  0x0000024807488f85: je     0x0000024807489284
  0x0000024807488f8b: cmp    $0x6,%r8d
  0x0000024807488f8f: je     0x0000024807489204
  0x0000024807488f95: cmp    $0x7,%r8d
  0x0000024807488f99: je     0x000002480748916c
  0x0000024807488f9f: cmp    $0x8,%r8d
  0x0000024807488fa3: je     0x00000248074890e4
  0x0000024807488fa9: cmp    $0x10,%r8d
  0x0000024807488fad: je     0x000002480748904c  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@881 (line 926)

  0x0000024807488fb3: mov    0x110(%rsp),%rdi
  0x0000024807488fbb: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480748b4ef
  0x0000024807488fbe: mov    %rdi,%r8
  0x0000024807488fc1: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807488fcb: movabs $0x7c005f670,%r10  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807488fd5: mov    %r10,0x1178(%rdx)
  0x0000024807488fdc: addq   $0x1,0x1180(%rdx)
  0x0000024807488fe4: movabs $0x76bc41de8,%r8   ;   {oop(&quot;java/lang/invoke/MethodHandle&quot;)}
  0x0000024807488fee: mov    %rdi,%rdx          ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1054 (line 952)

  0x0000024807488ff1: nop
  0x0000024807488ff2: nop
  0x0000024807488ff3: nop
  0x0000024807488ff4: nop
  0x0000024807488ff5: nop
  0x0000024807488ff6: nop
  0x0000024807488ff7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=9532}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1054 (line 952)
                                                ;   {optimized virtual_call}
  0x0000024807488ffc: mov    0xf0(%rsp),%rdx
  0x0000024807489004: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748900e: addq   $0x1,0x11a0(%r8)
  0x0000024807489016: or     $0x1700000,%eax
  0x000002480748901c: mov    %rax,%r8
  0x000002480748901f: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1058 (line 952)

  0x0000024807489027: call   0x0000024807375ee0  ; OopMap{off=9580}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1058 (line 952)
                                                ;   {optimized virtual_call}
  0x000002480748902c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489036: incl   0x11b0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1061 (line 954)

  0x000002480748903d: add    $0x1e0,%rsp
  0x0000024807489044: pop    %rbp
  0x0000024807489045: test   %eax,-0x1ed8f4b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748904b: ret    
  0x000002480748904c: mov    0x110(%rsp),%rdi
  0x0000024807489054: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480748b4f4
  0x0000024807489057: mov    %rdi,%r8
  0x000002480748905a: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489064: movabs $0x7c005f670,%r10  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480748906e: mov    %r10,0x1120(%rdx)
  0x0000024807489075: addq   $0x1,0x1128(%rdx)
  0x000002480748907d: movabs $0x76bd5bee8,%r8   ;   {oop(&quot;java/lang/invoke/MethodType&quot;)}
  0x0000024807489087: mov    %rdi,%rdx          ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1038 (line 948)

  0x000002480748908a: nop
  0x000002480748908b: nop
  0x000002480748908c: nop
  0x000002480748908d: nop
  0x000002480748908e: nop
  0x000002480748908f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=9684}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1038 (line 948)
                                                ;   {optimized virtual_call}
  0x0000024807489094: mov    0xf0(%rsp),%rdx
  0x000002480748909c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074890a6: addq   $0x1,0x1148(%r8)
  0x00000248074890ae: or     $0x1700000,%eax
  0x00000248074890b4: mov    %rax,%r8
  0x00000248074890b7: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1042 (line 948)

  0x00000248074890bf: call   0x0000024807375ee0  ; OopMap{off=9732}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1042 (line 948)
                                                ;   {optimized virtual_call}
  0x00000248074890c4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074890ce: incl   0x1158(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1045 (line 949)

  0x00000248074890d5: add    $0x1e0,%rsp
  0x00000248074890dc: pop    %rbp
  0x00000248074890dd: test   %eax,-0x1ed8fe3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074890e3: ret    
  0x00000248074890e4: mov    0x110(%rsp),%rdi
  0x00000248074890ec: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480748b4f9
  0x00000248074890ef: mov    %rdi,%r8
  0x00000248074890f2: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074890fc: addq   $0x1,0x10d0(%rdx)
  0x0000024807489104: movabs $0x76bc87e48,%r8   ;   {oop(&quot;java/lang/String&quot;)}
  0x000002480748910e: mov    %rdi,%rdx          ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1022 (line 945)

  0x0000024807489111: nop
  0x0000024807489112: nop
  0x0000024807489113: nop
  0x0000024807489114: nop
  0x0000024807489115: nop
  0x0000024807489116: nop
  0x0000024807489117: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=9820}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1022 (line 945)
                                                ;   {optimized virtual_call}
  0x000002480748911c: mov    0xf0(%rsp),%rdx
  0x0000024807489124: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748912e: addq   $0x1,0x10f0(%r8)
  0x0000024807489136: or     $0x1700000,%eax
  0x000002480748913c: mov    %rax,%r8
  0x000002480748913f: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1026 (line 945)

  0x0000024807489147: call   0x0000024807375ee0  ; OopMap{off=9868}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1026 (line 945)
                                                ;   {optimized virtual_call}
  0x000002480748914c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489156: incl   0x1100(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1029 (line 946)

  0x000002480748915d: add    $0x1e0,%rsp
  0x0000024807489164: pop    %rbp
  0x0000024807489165: test   %eax,-0x1ed906b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748916b: ret    
  0x000002480748916c: mov    0x110(%rsp),%rdi
  0x0000024807489174: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480748b4fe
  0x0000024807489177: mov    %rdi,%r8
  0x000002480748917a: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489184: movabs $0x7c005f670,%r10  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480748918e: mov    %r10,0x1070(%rdx)
  0x0000024807489195: addq   $0x1,0x1078(%rdx)
  0x000002480748919d: movabs $0x76bc52628,%r8   ;   {oop(&quot;java/lang/Class&quot;)}
  0x00000248074891a7: mov    %rdi,%rdx          ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1006 (line 942)

  0x00000248074891aa: nop
  0x00000248074891ab: nop
  0x00000248074891ac: nop
  0x00000248074891ad: nop
  0x00000248074891ae: nop
  0x00000248074891af: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=9972}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1006 (line 942)
                                                ;   {optimized virtual_call}
  0x00000248074891b4: mov    0xf0(%rsp),%rdx
  0x00000248074891bc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074891c6: addq   $0x1,0x1098(%r8)
  0x00000248074891ce: or     $0x1700000,%eax
  0x00000248074891d4: mov    %rax,%r8
  0x00000248074891d7: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1010 (line 942)

  0x00000248074891df: call   0x0000024807375ee0  ; OopMap{off=10020}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1010 (line 942)
                                                ;   {optimized virtual_call}
  0x00000248074891e4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074891ee: incl   0x10a8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1013 (line 943)

  0x00000248074891f5: add    $0x1e0,%rsp
  0x00000248074891fc: pop    %rbp
  0x00000248074891fd: test   %eax,-0x1ed9103(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489203: ret    
  0x0000024807489204: mov    0xf0(%rsp),%rdx
  0x000002480748920c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489216: addq   $0x1,0x1030(%r8)
  0x000002480748921e: mov    $0x1000003,%r8d
  0x0000024807489224: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@988 (line 938)

  0x000002480748922c: nop
  0x000002480748922d: nop
  0x000002480748922e: nop
  0x000002480748922f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=10100}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@988 (line 938)
                                                ;   {optimized virtual_call}
  0x0000024807489234: mov    0xf0(%rsp),%rdx
  0x000002480748923c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489246: addq   $0x1,0x1040(%r8)
  0x000002480748924e: mov    $0x1000000,%r8d
  0x0000024807489254: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@994 (line 939)

  0x000002480748925c: nop
  0x000002480748925d: nop
  0x000002480748925e: nop
  0x000002480748925f: call   0x0000024807375ee0  ; OopMap{off=10148}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@994 (line 939)
                                                ;   {optimized virtual_call}
  0x0000024807489264: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748926e: incl   0x1050(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@997 (line 940)

  0x0000024807489275: add    $0x1e0,%rsp
  0x000002480748927c: pop    %rbp
  0x000002480748927d: test   %eax,-0x1ed9183(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489283: ret    
  0x0000024807489284: mov    0xf0(%rsp),%rdx
  0x000002480748928c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489296: addq   $0x1,0xfd0(%r8)
  0x000002480748929e: mov    $0x1000004,%r8d
  0x00000248074892a4: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@964 (line 931)

  0x00000248074892ac: nop
  0x00000248074892ad: nop
  0x00000248074892ae: nop
  0x00000248074892af: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=10228}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@964 (line 931)
                                                ;   {optimized virtual_call}
  0x00000248074892b4: mov    0xf0(%rsp),%rdx
  0x00000248074892bc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074892c6: addq   $0x1,0xfe0(%r8)
  0x00000248074892ce: mov    $0x1000000,%r8d
  0x00000248074892d4: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@970 (line 932)

  0x00000248074892dc: nop
  0x00000248074892dd: nop
  0x00000248074892de: nop
  0x00000248074892df: call   0x0000024807375ee0  ; OopMap{off=10276}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@970 (line 932)
                                                ;   {optimized virtual_call}
  0x00000248074892e4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074892ee: incl   0xff0(%r8)         ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@973 (line 933)

  0x00000248074892f5: add    $0x1e0,%rsp
  0x00000248074892fc: pop    %rbp
  0x00000248074892fd: test   %eax,-0x1ed9203(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489303: ret    
  0x0000024807489304: mov    0xf0(%rsp),%rdx
  0x000002480748930c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489316: addq   $0x1,0x1008(%r8)
  0x000002480748931e: mov    $0x1000002,%r8d
  0x0000024807489324: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@979 (line 935)

  0x000002480748932c: nop
  0x000002480748932d: nop
  0x000002480748932e: nop
  0x000002480748932f: call   0x0000024807375ee0  ; OopMap{off=10356}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@979 (line 935)
                                                ;   {optimized virtual_call}
  0x0000024807489334: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748933e: incl   0x1018(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@982 (line 936)

  0x0000024807489345: add    $0x1e0,%rsp
  0x000002480748934c: pop    %rbp
  0x000002480748934d: test   %eax,-0x1ed9253(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489353: ret    
  0x0000024807489354: mov    0xf0(%rsp),%rdx
  0x000002480748935c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489366: addq   $0x1,0xfa8(%r8)
  0x000002480748936e: mov    $0x1000001,%r8d
  0x0000024807489374: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@955 (line 928)

  0x000002480748937c: nop
  0x000002480748937d: nop
  0x000002480748937e: nop
  0x000002480748937f: call   0x0000024807375ee0  ; OopMap{off=10436}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@955 (line 928)
                                                ;   {optimized virtual_call}
  0x0000024807489384: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748938e: incl   0xfb8(%r8)         ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@958 (line 929)

  0x0000024807489395: add    $0x1e0,%rsp
  0x000002480748939c: pop    %rbp
  0x000002480748939d: test   %eax,-0x1ed92a3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074893a3: ret    
  0x00000248074893a4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074893ae: incl   0x1c28(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1846 (line 1211)

  0x00000248074893b5: add    $0x1e0,%rsp
  0x00000248074893bc: pop    %rbp
  0x00000248074893bd: test   %eax,-0x1ed92c3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074893c3: ret    
  0x00000248074893c4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074893ce: incl   0x1c88(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1876 (line 1218)

  0x00000248074893d5: add    $0x1e0,%rsp
  0x00000248074893dc: pop    %rbp
  0x00000248074893dd: test   %eax,-0x1ed92e3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074893e3: ret    
  0x00000248074893e4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074893ee: incl   0x1de0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1977 (line 1240)

  0x00000248074893f5: add    $0x1e0,%rsp
  0x00000248074893fc: pop    %rbp
  0x00000248074893fd: test   %eax,-0x1ed9303(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489403: ret    
  0x0000024807489404: mov    0xf0(%rsp),%rdx
  0x000002480748940c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489416: addq   $0x1,0x2008(%r8)
  0x000002480748941e: mov    $0x11000004,%r8d
  0x0000024807489424: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2114 (line 1270)

  0x000002480748942c: nop
  0x000002480748942d: nop
  0x000002480748942e: nop
  0x000002480748942f: call   0x0000024807375ee0  ; OopMap{off=10612}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2114 (line 1270)
                                                ;   {optimized virtual_call}
  0x0000024807489434: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748943e: incl   0x2018(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2117 (line 1271)

  0x0000024807489445: add    $0x1e0,%rsp
  0x000002480748944c: pop    %rbp
  0x000002480748944d: test   %eax,-0x1ed9353(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489453: ret    
  0x0000024807489454: mov    0xf0(%rsp),%rdx
  0x000002480748945c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489466: addq   $0x1,0x1f90(%r8)
  0x000002480748946e: mov    $0x11000001,%r8d
  0x0000024807489474: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2087 (line 1260)

  0x000002480748947c: nop
  0x000002480748947d: nop
  0x000002480748947e: nop
  0x000002480748947f: call   0x0000024807375ee0  ; OopMap{off=10692}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2087 (line 1260)
                                                ;   {optimized virtual_call}
  0x0000024807489484: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748948e: incl   0x1fa0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2090 (line 1261)

  0x0000024807489495: add    $0x1e0,%rsp
  0x000002480748949c: pop    %rbp
  0x000002480748949d: test   %eax,-0x1ed93a3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074894a3: ret    
  0x00000248074894a4: mov    0xf0(%rsp),%rdx
  0x00000248074894ac: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074894b6: addq   $0x1,0x1f68(%r8)
  0x00000248074894be: mov    $0x1100000c,%r8d
  0x00000248074894c4: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2078 (line 1257)

  0x00000248074894cc: nop
  0x00000248074894cd: nop
  0x00000248074894ce: nop
  0x00000248074894cf: call   0x0000024807375ee0  ; OopMap{off=10772}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2078 (line 1257)
                                                ;   {optimized virtual_call}
  0x00000248074894d4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074894de: incl   0x1f78(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2081 (line 1258)

  0x00000248074894e5: add    $0x1e0,%rsp
  0x00000248074894ec: pop    %rbp
  0x00000248074894ed: test   %eax,-0x1ed93f3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074894f3: ret    
  0x00000248074894f4: mov    0xf0(%rsp),%rdx
  0x00000248074894fc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489506: addq   $0x1,0x1f40(%r8)
  0x000002480748950e: mov    $0x1100000a,%r8d
  0x0000024807489514: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2069 (line 1254)

  0x000002480748951c: nop
  0x000002480748951d: nop
  0x000002480748951e: nop
  0x000002480748951f: call   0x0000024807375ee0  ; OopMap{off=10852}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2069 (line 1254)
                                                ;   {optimized virtual_call}
  0x0000024807489524: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748952e: incl   0x1f50(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2072 (line 1255)

  0x0000024807489535: add    $0x1e0,%rsp
  0x000002480748953c: pop    %rbp
  0x000002480748953d: test   %eax,-0x1ed9443(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489543: ret    
  0x0000024807489544: mov    0xf0(%rsp),%rdx
  0x000002480748954c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489556: addq   $0x1,0x1fe0(%r8)
  0x000002480748955e: mov    $0x11000003,%r8d
  0x0000024807489564: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2105 (line 1266)

  0x000002480748956c: nop
  0x000002480748956d: nop
  0x000002480748956e: nop
  0x000002480748956f: call   0x0000024807375ee0  ; OopMap{off=10932}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2105 (line 1266)
                                                ;   {optimized virtual_call}
  0x0000024807489574: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748957e: incl   0x1ff0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2108 (line 1267)

  0x0000024807489585: add    $0x1e0,%rsp
  0x000002480748958c: pop    %rbp
  0x000002480748958d: test   %eax,-0x1ed9493(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489593: ret    
  0x0000024807489594: mov    0xf0(%rsp),%rdx
  0x000002480748959c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074895a6: addq   $0x1,0x1fb8(%r8)
  0x00000248074895ae: mov    $0x11000002,%r8d
  0x00000248074895b4: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2096 (line 1263)

  0x00000248074895bc: nop
  0x00000248074895bd: nop
  0x00000248074895be: nop
  0x00000248074895bf: call   0x0000024807375ee0  ; OopMap{off=11012}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2096 (line 1263)
                                                ;   {optimized virtual_call}
  0x00000248074895c4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074895ce: incl   0x1fc8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2099 (line 1264)

  0x00000248074895d5: add    $0x1e0,%rsp
  0x00000248074895dc: pop    %rbp
  0x00000248074895dd: test   %eax,-0x1ed94e3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074895e3: ret    
  0x00000248074895e4: mov    0xf0(%rsp),%rdx
  0x00000248074895ec: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074895f6: addq   $0x1,0x1f18(%r8)
  0x00000248074895fe: mov    $0x1100000b,%r8d
  0x0000024807489604: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2060 (line 1251)

  0x000002480748960c: nop
  0x000002480748960d: nop
  0x000002480748960e: nop
  0x000002480748960f: call   0x0000024807375ee0  ; OopMap{off=11092}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2060 (line 1251)
                                                ;   {optimized virtual_call}
  0x0000024807489614: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748961e: incl   0x1f28(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2063 (line 1252)

  0x0000024807489625: add    $0x1e0,%rsp
  0x000002480748962c: pop    %rbp
  0x000002480748962d: test   %eax,-0x1ed9533(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489633: ret    
  0x0000024807489634: mov    0xf0(%rsp),%rdx
  0x000002480748963c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489646: addq   $0x1,0x1ef0(%r8)
  0x000002480748964e: mov    $0x11000009,%r8d
  0x0000024807489654: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2051 (line 1248)

  0x000002480748965c: nop
  0x000002480748965d: nop
  0x000002480748965e: nop
  0x000002480748965f: call   0x0000024807375ee0  ; OopMap{off=11172}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2051 (line 1248)
                                                ;   {optimized virtual_call}
  0x0000024807489664: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748966e: incl   0x1f00(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2054 (line 1249)

  0x0000024807489675: add    $0x1e0,%rsp
  0x000002480748967c: pop    %rbp
  0x000002480748967d: test   %eax,-0x1ed9583(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489683: ret    
  0x0000024807489684: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748968e: incl   0x2140(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2168 (line 1278)

  0x0000024807489695: add    $0x1e0,%rsp
  0x000002480748969c: pop    %rbp
  0x000002480748969d: test   %eax,-0x1ed95a3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074896a3: ret    
  0x00000248074896a4: mov    0x110(%rsp),%rdi
  0x00000248074896ac: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480748b503
  0x00000248074896af: mov    %rdi,%r8
  0x00000248074896b2: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074896bc: movabs $0x7c005f670,%r10  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074896c6: mov    %r10,0x2160(%rdx)
  0x00000248074896cd: addq   $0x1,0x2168(%rdx)
  0x00000248074896d5: mov    0x130(%rsp),%r8
  0x00000248074896dd: mov    %rdi,%rdx          ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2177 (line 1280)

  0x00000248074896e0: nop
  0x00000248074896e1: nop
  0x00000248074896e2: nop
  0x00000248074896e3: nop
  0x00000248074896e4: nop
  0x00000248074896e5: nop
  0x00000248074896e6: nop
  0x00000248074896e7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=11308}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2177 (line 1280)
                                                ;   {optimized virtual_call}
  0x00000248074896ec: mov    0xf0(%rsp),%rdx
  0x00000248074896f4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074896fe: addq   $0x1,0x2188(%r8)
  0x0000024807489706: or     $0x11700000,%eax
  0x000002480748970c: mov    %rax,%r8
  0x000002480748970f: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2181 (line 1280)

  0x0000024807489717: call   0x0000024807375ee0  ; OopMap{off=11356}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2181 (line 1280)
                                                ;   {optimized virtual_call}
  0x000002480748971c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489726: incl   0x2198(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2184 (line 1282)

  0x000002480748972d: add    $0x1e0,%rsp
  0x0000024807489734: pop    %rbp
  0x0000024807489735: test   %eax,-0x1ed963b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748973b: ret    
  0x000002480748973c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489746: incl   0x2220(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2217 (line 1287)

  0x000002480748974d: add    $0x1e0,%rsp
  0x0000024807489754: pop    %rbp
  0x0000024807489755: test   %eax,-0x1ed965b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748975b: ret    
  0x000002480748975c: mov    0x110(%rsp),%rdi
  0x0000024807489764: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480748b508
  0x0000024807489767: mov    %rdi,%r8
  0x000002480748976a: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489774: addq   $0x1,0x2248(%rdx)
  0x000002480748977c: mov    %rsi,%r8
  0x000002480748977f: mov    %rdi,%rdx          ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2226 (line 1289)

  0x0000024807489782: nop
  0x0000024807489783: nop
  0x0000024807489784: nop
  0x0000024807489785: nop
  0x0000024807489786: nop
  0x0000024807489787: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=11468}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2226 (line 1289)
                                                ;   {optimized virtual_call}
  0x000002480748978c: mov    0xf0(%rsp),%rdx
  0x0000024807489794: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748979e: addq   $0x1,0x2268(%r8)
  0x00000248074897a6: or     $0x1700000,%eax
  0x00000248074897ac: mov    %rax,%r8
  0x00000248074897af: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2230 (line 1289)

  0x00000248074897b7: call   0x0000024807375ee0  ; OopMap{off=11516}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2230 (line 1289)
                                                ;   {optimized virtual_call}
  0x00000248074897bc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074897c6: incl   0x2278(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2233 (line 1291)

  0x00000248074897cd: add    $0x1e0,%rsp
  0x00000248074897d4: pop    %rbp
  0x00000248074897d5: test   %eax,-0x1ed96db(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074897db: ret    
  0x00000248074897dc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074897e6: incl   0x1da8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1955 (line 1236)

  0x00000248074897ed: add    $0x1e0,%rsp
  0x00000248074897f4: pop    %rbp
  0x00000248074897f5: test   %eax,-0x1ed96fb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074897fb: ret    
  0x00000248074897fc: mov    0xf0(%rsp),%rdx
  0x0000024807489804: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748980e: addq   $0x1,0x1420(%r8)
  0x0000024807489816: or     $0x800000,%eax
  0x000002480748981c: mov    0x100(%rsp),%r8d
  0x0000024807489824: mov    %rax,%r9
  0x0000024807489827: mov    0xf0(%rsp),%rdx    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1238 (line 997)

  0x000002480748982f: call   0x0000024807375ee0  ; OopMap{off=11636}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1238 (line 997)
                                                ;   {optimized virtual_call}
  0x0000024807489834: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748983e: incl   0x1430(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1241 (line 997)

  0x0000024807489845: add    $0x1e0,%rsp
  0x000002480748984c: pop    %rbp
  0x000002480748984d: test   %eax,-0x1ed9753(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489853: ret    
  0x0000024807489854: mov    0x100(%rsp),%esi
  0x000002480748985b: mov    0xf0(%rsp),%rdx
  0x0000024807489863: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748986d: addq   $0x1,0x13d8(%r8)
  0x0000024807489875: mov    %rsi,%r8
  0x0000024807489878: mov    $0x1000000,%r9d
  0x000002480748987e: mov    0xf0(%rsp),%rdx    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1213 (line 995)

  0x0000024807489886: nop
  0x0000024807489887: call   0x0000024807375ee0  ; OopMap{off=11724}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1213 (line 995)
                                                ;   {optimized virtual_call}
  0x000002480748988c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489896: incl   0x13e8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1216 (line 995)

  0x000002480748989d: add    $0x1e0,%rsp
  0x00000248074898a4: pop    %rbp
  0x00000248074898a5: test   %eax,-0x1ed97ab(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074898ab: ret    
  0x00000248074898ac: mov    0xf0(%rsp),%rdx
  0x00000248074898b4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074898be: addq   $0x1,0x1540(%r8)
  0x00000248074898c6: or     $0x800000,%eax
  0x00000248074898cc: mov    0xfc(%rsp),%r8d
  0x00000248074898d4: mov    %rax,%r9
  0x00000248074898d7: mov    0xf0(%rsp),%rdx    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1329 (line 1013)

  0x00000248074898df: call   0x0000024807375ee0  ; OopMap{off=11812}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1329 (line 1013)
                                                ;   {optimized virtual_call}
  0x00000248074898e4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074898ee: incl   0x1550(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1332 (line 1013)

  0x00000248074898f5: add    $0x1e0,%rsp
  0x00000248074898fc: pop    %rbp
  0x00000248074898fd: test   %eax,-0x1ed9803(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489903: ret    
  0x0000024807489904: mov    0xfc(%rsp),%esi
  0x000002480748990b: mov    0xf0(%rsp),%rdx
  0x0000024807489913: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748991d: addq   $0x1,0x14f8(%r8)
  0x0000024807489925: mov    %rsi,%r8
  0x0000024807489928: mov    $0x1000000,%r9d
  0x000002480748992e: mov    0xf0(%rsp),%rdx    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1304 (line 1011)

  0x0000024807489936: nop
  0x0000024807489937: call   0x0000024807375ee0  ; OopMap{off=11900}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1304 (line 1011)
                                                ;   {optimized virtual_call}
  0x000002480748993c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489946: incl   0x1508(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1307 (line 1011)

  0x000002480748994d: add    $0x1e0,%rsp
  0x0000024807489954: pop    %rbp
  0x0000024807489955: test   %eax,-0x1ed985b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748995b: ret    
  0x000002480748995c: mov    0xf0(%rsp),%rdx
  0x0000024807489964: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748996e: addq   $0x1,0xde8(%r8)
  0x0000024807489976: mov    $0x1000001,%r8d
  0x000002480748997c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@831 (line 905)

  0x0000024807489984: nop
  0x0000024807489985: nop
  0x0000024807489986: nop
  0x0000024807489987: call   0x0000024807375ee0  ; OopMap{off=11980}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@831 (line 905)
                                                ;   {optimized virtual_call}
  0x000002480748998c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489996: incl   0xdf8(%r8)         ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@834 (line 906)

  0x000002480748999d: add    $0x1e0,%rsp
  0x00000248074899a4: pop    %rbp
  0x00000248074899a5: test   %eax,-0x1ed98ab(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074899ab: ret    
  0x00000248074899ac: mov    0xf0(%rsp),%rdx
  0x00000248074899b4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074899be: addq   $0x1,0xe10(%r8)
  0x00000248074899c6: mov    $0x1000004,%r8d
  0x00000248074899cc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@840 (line 910)

  0x00000248074899d4: nop
  0x00000248074899d5: nop
  0x00000248074899d6: nop
  0x00000248074899d7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=12060}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@840 (line 910)
                                                ;   {optimized virtual_call}
  0x00000248074899dc: mov    0xf0(%rsp),%rdx
  0x00000248074899e4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x00000248074899ee: addq   $0x1,0xe20(%r8)
  0x00000248074899f6: mov    $0x1000000,%r8d
  0x00000248074899fc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@846 (line 911)

  0x0000024807489a04: nop
  0x0000024807489a05: nop
  0x0000024807489a06: nop
  0x0000024807489a07: call   0x0000024807375ee0  ; OopMap{off=12108}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@846 (line 911)
                                                ;   {optimized virtual_call}
  0x0000024807489a0c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489a16: incl   0xe30(%r8)         ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@849 (line 912)

  0x0000024807489a1d: add    $0x1e0,%rsp
  0x0000024807489a24: pop    %rbp
  0x0000024807489a25: test   %eax,-0x1ed992b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489a2b: ret    
  0x0000024807489a2c: mov    0xf0(%rsp),%rdx
  0x0000024807489a34: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489a3e: addq   $0x1,0xe48(%r8)
  0x0000024807489a46: mov    $0x1000002,%r8d
  0x0000024807489a4c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@855 (line 917)

  0x0000024807489a54: nop
  0x0000024807489a55: nop
  0x0000024807489a56: nop
  0x0000024807489a57: call   0x0000024807375ee0  ; OopMap{off=12188}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@855 (line 917)
                                                ;   {optimized virtual_call}
  0x0000024807489a5c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489a66: incl   0xe58(%r8)         ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@858 (line 918)

  0x0000024807489a6d: add    $0x1e0,%rsp
  0x0000024807489a74: pop    %rbp
  0x0000024807489a75: test   %eax,-0x1ed997b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489a7b: ret    
  0x0000024807489a7c: mov    0xf0(%rsp),%rdx
  0x0000024807489a84: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489a8e: addq   $0x1,0xe70(%r8)
  0x0000024807489a96: mov    $0x1000003,%r8d
  0x0000024807489a9c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@864 (line 922)

  0x0000024807489aa4: nop
  0x0000024807489aa5: nop
  0x0000024807489aa6: nop
  0x0000024807489aa7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=12268}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@864 (line 922)
                                                ;   {optimized virtual_call}
  0x0000024807489aac: mov    0xf0(%rsp),%rdx
  0x0000024807489ab4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489abe: addq   $0x1,0xe80(%r8)
  0x0000024807489ac6: mov    $0x1000000,%r8d
  0x0000024807489acc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@870 (line 923)

  0x0000024807489ad4: nop
  0x0000024807489ad5: nop
  0x0000024807489ad6: nop
  0x0000024807489ad7: call   0x0000024807375ee0  ; OopMap{off=12316}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@870 (line 923)
                                                ;   {optimized virtual_call}
  0x0000024807489adc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489ae6: incl   0xe90(%r8)         ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@873 (line 924)

  0x0000024807489aed: add    $0x1e0,%rsp
  0x0000024807489af4: pop    %rbp
  0x0000024807489af5: test   %eax,-0x1ed99fb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489afb: ret    
  0x0000024807489afc: mov    0xf0(%rsp),%rdx
  0x0000024807489b04: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489b0e: addq   $0x1,0x1200(%r8)
  0x0000024807489b16: mov    $0x2,%r8d
  0x0000024807489b1c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1078 (line 962)

  0x0000024807489b24: nop
  0x0000024807489b25: nop
  0x0000024807489b26: nop
  0x0000024807489b27: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=12396}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1078 (line 962)
                                                ;   {optimized virtual_call}
  0x0000024807489b2c: mov    0xf0(%rsp),%rdx
  0x0000024807489b34: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489b3e: addq   $0x1,0x1210(%r8)
  0x0000024807489b46: mov    $0x1000001,%r8d
  0x0000024807489b4c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1084 (line 963)

  0x0000024807489b54: nop
  0x0000024807489b55: nop
  0x0000024807489b56: nop
  0x0000024807489b57: call   0x0000024807375ee0  ; OopMap{off=12444}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1084 (line 963)
                                                ;   {optimized virtual_call}
  0x0000024807489b5c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489b66: incl   0x1220(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1087 (line 964)

  0x0000024807489b6d: add    $0x1e0,%rsp
  0x0000024807489b74: pop    %rbp
  0x0000024807489b75: test   %eax,-0x1ed9a7b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489b7b: ret    
  0x0000024807489b7c: mov    0xf0(%rsp),%rdx
  0x0000024807489b84: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489b8e: addq   $0x1,0x1590(%r8)
  0x0000024807489b96: mov    $0x4,%r8d
  0x0000024807489b9c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1345 (line 1027)

  0x0000024807489ba4: nop
  0x0000024807489ba5: nop
  0x0000024807489ba6: nop
  0x0000024807489ba7: call   0x0000024807375ee0  ; OopMap{off=12524}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1345 (line 1027)
                                                ;   {optimized virtual_call}
  0x0000024807489bac: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489bb6: incl   0x15a0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1348 (line 1028)

  0x0000024807489bbd: add    $0x1e0,%rsp
  0x0000024807489bc4: pop    %rbp
  0x0000024807489bc5: test   %eax,-0x1ed9acb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489bcb: ret    
  0x0000024807489bcc: mov    0xf0(%rsp),%rdx
  0x0000024807489bd4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489bde: addq   $0x1,0x1568(%r8)
  0x0000024807489be6: mov    $0x3,%r8d
  0x0000024807489bec: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1337 (line 1023)

  0x0000024807489bf4: nop
  0x0000024807489bf5: nop
  0x0000024807489bf6: nop
  0x0000024807489bf7: call   0x0000024807375ee0  ; OopMap{off=12604}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1337 (line 1023)
                                                ;   {optimized virtual_call}
  0x0000024807489bfc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489c06: incl   0x1578(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1340 (line 1024)

  0x0000024807489c0d: add    $0x1e0,%rsp
  0x0000024807489c14: pop    %rbp
  0x0000024807489c15: test   %eax,-0x1ed9b1b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489c1b: ret    
  0x0000024807489c1c: mov    0xf0(%rsp),%rdx
  0x0000024807489c24: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489c2e: addq   $0x1,0x1a18(%r8)
  0x0000024807489c36: mov    $0x4,%r8d
  0x0000024807489c3c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1696 (line 1163)

  0x0000024807489c44: nop
  0x0000024807489c45: nop
  0x0000024807489c46: nop
  0x0000024807489c47: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=12684}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1696 (line 1163)
                                                ;   {optimized virtual_call}
  0x0000024807489c4c: mov    0xf0(%rsp),%rdx
  0x0000024807489c54: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489c5e: addq   $0x1,0x1a28(%r8)
  0x0000024807489c66: mov    $0x1000003,%r8d
  0x0000024807489c6c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1702 (line 1164)

  0x0000024807489c74: nop
  0x0000024807489c75: nop
  0x0000024807489c76: nop
  0x0000024807489c77: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=12732}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1702 (line 1164)
                                                ;   {optimized virtual_call}
  0x0000024807489c7c: mov    0xf0(%rsp),%rdx
  0x0000024807489c84: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489c8e: addq   $0x1,0x1a38(%r8)
  0x0000024807489c96: mov    $0x1000000,%r8d
  0x0000024807489c9c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1708 (line 1165)

  0x0000024807489ca4: nop
  0x0000024807489ca5: nop
  0x0000024807489ca6: nop
  0x0000024807489ca7: call   0x0000024807375ee0  ; OopMap{off=12780}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1708 (line 1165)
                                                ;   {optimized virtual_call}
  0x0000024807489cac: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489cb6: incl   0x1a48(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1711 (line 1166)

  0x0000024807489cbd: add    $0x1e0,%rsp
  0x0000024807489cc4: pop    %rbp
  0x0000024807489cc5: test   %eax,-0x1ed9bcb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489ccb: ret    
  0x0000024807489ccc: mov    0xf0(%rsp),%rdx
  0x0000024807489cd4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489cde: addq   $0x1,0x1a60(%r8)
  0x0000024807489ce6: mov    $0x3,%r8d
  0x0000024807489cec: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1716 (line 1170)

  0x0000024807489cf4: nop
  0x0000024807489cf5: nop
  0x0000024807489cf6: nop
  0x0000024807489cf7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=12860}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1716 (line 1170)
                                                ;   {optimized virtual_call}
  0x0000024807489cfc: mov    0xf0(%rsp),%rdx
  0x0000024807489d04: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489d0e: addq   $0x1,0x1a70(%r8)
  0x0000024807489d16: mov    $0x1000004,%r8d
  0x0000024807489d1c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1722 (line 1171)

  0x0000024807489d24: nop
  0x0000024807489d25: nop
  0x0000024807489d26: nop
  0x0000024807489d27: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=12908}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1722 (line 1171)
                                                ;   {optimized virtual_call}
  0x0000024807489d2c: mov    0xf0(%rsp),%rdx
  0x0000024807489d34: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489d3e: addq   $0x1,0x1a80(%r8)
  0x0000024807489d46: mov    $0x1000000,%r8d
  0x0000024807489d4c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1728 (line 1172)

  0x0000024807489d54: nop
  0x0000024807489d55: nop
  0x0000024807489d56: nop
  0x0000024807489d57: call   0x0000024807375ee0  ; OopMap{off=12956}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1728 (line 1172)
                                                ;   {optimized virtual_call}
  0x0000024807489d5c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489d66: incl   0x1a90(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1731 (line 1173)

  0x0000024807489d6d: add    $0x1e0,%rsp
  0x0000024807489d74: pop    %rbp
  0x0000024807489d75: test   %eax,-0x1ed9c7b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489d7b: ret    
  0x0000024807489d7c: mov    0xf0(%rsp),%rdx
  0x0000024807489d84: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489d8e: addq   $0x1,0x1998(%r8)
  0x0000024807489d96: mov    $0x4,%r8d
  0x0000024807489d9c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1662 (line 1144)

  0x0000024807489da4: nop
  0x0000024807489da5: nop
  0x0000024807489da6: nop
  0x0000024807489da7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13036}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1662 (line 1144)
                                                ;   {optimized virtual_call}
  0x0000024807489dac: mov    0xf0(%rsp),%rdx
  0x0000024807489db4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489dbe: addq   $0x1,0x19a8(%r8)
  0x0000024807489dc6: mov    $0x1000004,%r8d
  0x0000024807489dcc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1668 (line 1145)

  0x0000024807489dd4: nop
  0x0000024807489dd5: nop
  0x0000024807489dd6: nop
  0x0000024807489dd7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13084}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1668 (line 1145)
                                                ;   {optimized virtual_call}
  0x0000024807489ddc: mov    0xf0(%rsp),%rdx
  0x0000024807489de4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489dee: addq   $0x1,0x19b8(%r8)
  0x0000024807489df6: mov    $0x1000000,%r8d
  0x0000024807489dfc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1674 (line 1146)

  0x0000024807489e04: nop
  0x0000024807489e05: nop
  0x0000024807489e06: nop
  0x0000024807489e07: call   0x0000024807375ee0  ; OopMap{off=13132}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1674 (line 1146)
                                                ;   {optimized virtual_call}
  0x0000024807489e0c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489e16: incl   0x19c8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1677 (line 1147)

  0x0000024807489e1d: add    $0x1e0,%rsp
  0x0000024807489e24: pop    %rbp
  0x0000024807489e25: test   %eax,-0x1ed9d2b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489e2b: ret    
  0x0000024807489e2c: mov    0xf0(%rsp),%rdx
  0x0000024807489e34: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489e3e: addq   $0x1,0x12b8(%r8)
  0x0000024807489e46: mov    $0x2,%r8d
  0x0000024807489e4c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1126 (line 977)

  0x0000024807489e54: nop
  0x0000024807489e55: nop
  0x0000024807489e56: nop
  0x0000024807489e57: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13212}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1126 (line 977)
                                                ;   {optimized virtual_call}
  0x0000024807489e5c: mov    0xf0(%rsp),%rdx
  0x0000024807489e64: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489e6e: addq   $0x1,0x12c8(%r8)
  0x0000024807489e76: mov    $0x1000003,%r8d
  0x0000024807489e7c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1132 (line 978)

  0x0000024807489e84: nop
  0x0000024807489e85: nop
  0x0000024807489e86: nop
  0x0000024807489e87: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13260}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1132 (line 978)
                                                ;   {optimized virtual_call}
  0x0000024807489e8c: mov    0xf0(%rsp),%rdx
  0x0000024807489e94: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489e9e: addq   $0x1,0x12d8(%r8)
  0x0000024807489ea6: mov    $0x1000000,%r8d
  0x0000024807489eac: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1138 (line 979)

  0x0000024807489eb4: nop
  0x0000024807489eb5: nop
  0x0000024807489eb6: nop
  0x0000024807489eb7: call   0x0000024807375ee0  ; OopMap{off=13308}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1138 (line 979)
                                                ;   {optimized virtual_call}
  0x0000024807489ebc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489ec6: incl   0x12e8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1141 (line 980)

  0x0000024807489ecd: add    $0x1e0,%rsp
  0x0000024807489ed4: pop    %rbp
  0x0000024807489ed5: test   %eax,-0x1ed9ddb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489edb: ret    
  0x0000024807489edc: mov    0xf0(%rsp),%rdx
  0x0000024807489ee4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489eee: addq   $0x1,0x1ad0(%r8)
  0x0000024807489ef6: mov    $0x1,%r8d
  0x0000024807489efc: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1746 (line 1179)

  0x0000024807489f04: nop
  0x0000024807489f05: nop
  0x0000024807489f06: nop
  0x0000024807489f07: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13388}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1746 (line 1179)
                                                ;   {optimized virtual_call}
  0x0000024807489f0c: mov    0xf0(%rsp),%rdx
  0x0000024807489f14: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489f1e: addq   $0x1,0x1ae0(%r8)
  0x0000024807489f26: mov    $0x1000004,%r8d
  0x0000024807489f2c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1752 (line 1180)

  0x0000024807489f34: nop
  0x0000024807489f35: nop
  0x0000024807489f36: nop
  0x0000024807489f37: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13436}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1752 (line 1180)
                                                ;   {optimized virtual_call}
  0x0000024807489f3c: mov    0xf0(%rsp),%rdx
  0x0000024807489f44: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489f4e: addq   $0x1,0x1af0(%r8)
  0x0000024807489f56: mov    $0x1000000,%r8d
  0x0000024807489f5c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1758 (line 1181)

  0x0000024807489f64: nop
  0x0000024807489f65: nop
  0x0000024807489f66: nop
  0x0000024807489f67: call   0x0000024807375ee0  ; OopMap{off=13484}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1758 (line 1181)
                                                ;   {optimized virtual_call}
  0x0000024807489f6c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489f76: incl   0x1b00(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1761 (line 1182)

  0x0000024807489f7d: add    $0x1e0,%rsp
  0x0000024807489f84: pop    %rbp
  0x0000024807489f85: test   %eax,-0x1ed9e8b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807489f8b: ret    
  0x0000024807489f8c: mov    0xf0(%rsp),%rdx
  0x0000024807489f94: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489f9e: addq   $0x1,0x1b50(%r8)
  0x0000024807489fa6: mov    $0x1,%r8d
  0x0000024807489fac: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1780 (line 1189)

  0x0000024807489fb4: nop
  0x0000024807489fb5: nop
  0x0000024807489fb6: nop
  0x0000024807489fb7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13564}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1780 (line 1189)
                                                ;   {optimized virtual_call}
  0x0000024807489fbc: mov    0xf0(%rsp),%rdx
  0x0000024807489fc4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489fce: addq   $0x1,0x1b60(%r8)
  0x0000024807489fd6: mov    $0x1000003,%r8d
  0x0000024807489fdc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1786 (line 1190)

  0x0000024807489fe4: nop
  0x0000024807489fe5: nop
  0x0000024807489fe6: nop
  0x0000024807489fe7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13612}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1786 (line 1190)
                                                ;   {optimized virtual_call}
  0x0000024807489fec: mov    0xf0(%rsp),%rdx
  0x0000024807489ff4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807489ffe: addq   $0x1,0x1b70(%r8)
  0x000002480748a006: mov    $0x1000000,%r8d
  0x000002480748a00c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1792 (line 1191)

  0x000002480748a014: nop
  0x000002480748a015: nop
  0x000002480748a016: nop
  0x000002480748a017: call   0x0000024807375ee0  ; OopMap{off=13660}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1792 (line 1191)
                                                ;   {optimized virtual_call}
  0x000002480748a01c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a026: incl   0x1b80(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1795 (line 1192)

  0x000002480748a02d: add    $0x1e0,%rsp
  0x000002480748a034: pop    %rbp
  0x000002480748a035: test   %eax,-0x1ed9f3b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a03b: ret    
  0x000002480748a03c: mov    0xf0(%rsp),%rdx
  0x000002480748a044: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a04e: addq   $0x1,0x1238(%r8)
  0x000002480748a056: mov    $0x2,%r8d
  0x000002480748a05c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1092 (line 967)

  0x000002480748a064: nop
  0x000002480748a065: nop
  0x000002480748a066: nop
  0x000002480748a067: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13740}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1092 (line 967)
                                                ;   {optimized virtual_call}
  0x000002480748a06c: mov    0xf0(%rsp),%rdx
  0x000002480748a074: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a07e: addq   $0x1,0x1248(%r8)
  0x000002480748a086: mov    $0x1000004,%r8d
  0x000002480748a08c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1098 (line 968)

  0x000002480748a094: nop
  0x000002480748a095: nop
  0x000002480748a096: nop
  0x000002480748a097: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13788}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1098 (line 968)
                                                ;   {optimized virtual_call}
  0x000002480748a09c: mov    0xf0(%rsp),%rdx
  0x000002480748a0a4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a0ae: addq   $0x1,0x1258(%r8)
  0x000002480748a0b6: mov    $0x1000000,%r8d
  0x000002480748a0bc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1104 (line 969)

  0x000002480748a0c4: nop
  0x000002480748a0c5: nop
  0x000002480748a0c6: nop
  0x000002480748a0c7: call   0x0000024807375ee0  ; OopMap{off=13836}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1104 (line 969)
                                                ;   {optimized virtual_call}
  0x000002480748a0cc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a0d6: incl   0x1268(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1107 (line 970)

  0x000002480748a0dd: add    $0x1e0,%rsp
  0x000002480748a0e4: pop    %rbp
  0x000002480748a0e5: test   %eax,-0x1ed9feb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a0eb: ret    
  0x000002480748a0ec: mov    0xf0(%rsp),%rdx
  0x000002480748a0f4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a0fe: addq   $0x1,0x19e0(%r8)
  0x000002480748a106: mov    $0x2,%r8d
  0x000002480748a10c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1682 (line 1155)

  0x000002480748a114: nop
  0x000002480748a115: nop
  0x000002480748a116: nop
  0x000002480748a117: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=13916}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1682 (line 1155)
                                                ;   {optimized virtual_call}
  0x000002480748a11c: mov    0xf0(%rsp),%rdx
  0x000002480748a124: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a12e: addq   $0x1,0x19f0(%r8)
  0x000002480748a136: mov    $0x1000002,%r8d
  0x000002480748a13c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1688 (line 1156)

  0x000002480748a144: nop
  0x000002480748a145: nop
  0x000002480748a146: nop
  0x000002480748a147: call   0x0000024807375ee0  ; OopMap{off=13964}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1688 (line 1156)
                                                ;   {optimized virtual_call}
  0x000002480748a14c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a156: incl   0x1a00(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1691 (line 1157)

  0x000002480748a15d: add    $0x1e0,%rsp
  0x000002480748a164: pop    %rbp
  0x000002480748a165: test   %eax,-0x1eda06b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a16b: ret    
  0x000002480748a16c: mov    0xf0(%rsp),%rdx
  0x000002480748a174: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a17e: addq   $0x1,0x1960(%r8)
  0x000002480748a186: mov    $0x2,%r8d
  0x000002480748a18c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1648 (line 1133)

  0x000002480748a194: nop
  0x000002480748a195: nop
  0x000002480748a196: nop
  0x000002480748a197: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=14044}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1648 (line 1133)
                                                ;   {optimized virtual_call}
  0x000002480748a19c: mov    0xf0(%rsp),%rdx
  0x000002480748a1a4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a1ae: addq   $0x1,0x1970(%r8)
  0x000002480748a1b6: mov    $0x1000001,%r8d
  0x000002480748a1bc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1654 (line 1134)

  0x000002480748a1c4: nop
  0x000002480748a1c5: nop
  0x000002480748a1c6: nop
  0x000002480748a1c7: call   0x0000024807375ee0  ; OopMap{off=14092}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1654 (line 1134)
                                                ;   {optimized virtual_call}
  0x000002480748a1cc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a1d6: incl   0x1980(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1657 (line 1135)

  0x000002480748a1dd: add    $0x1e0,%rsp
  0x000002480748a1e4: pop    %rbp
  0x000002480748a1e5: test   %eax,-0x1eda0eb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a1eb: ret    
  0x000002480748a1ec: mov    0xf0(%rsp),%rdx
  0x000002480748a1f4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a1fe: addq   $0x1,0x1bd0(%r8)
  0x000002480748a206: mov    $0x4,%r8d
  0x000002480748a20c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1814 (line 1202)

  0x000002480748a214: nop
  0x000002480748a215: nop
  0x000002480748a216: nop
  0x000002480748a217: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=14172}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1814 (line 1202)
                                                ;   {optimized virtual_call}
  0x000002480748a21c: mov    0xf0(%rsp),%rdx
  0x000002480748a224: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a22e: addq   $0x1,0x1be0(%r8)
  0x000002480748a236: mov    $0x1000001,%r8d
  0x000002480748a23c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1820 (line 1203)

  0x000002480748a244: nop
  0x000002480748a245: nop
  0x000002480748a246: nop
  0x000002480748a247: call   0x0000024807375ee0  ; OopMap{off=14220}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1820 (line 1203)
                                                ;   {optimized virtual_call}
  0x000002480748a24c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a256: incl   0x1bf0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1823 (line 1204)

  0x000002480748a25d: add    $0x1e0,%rsp
  0x000002480748a264: pop    %rbp
  0x000002480748a265: test   %eax,-0x1eda16b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a26b: ret    
  0x000002480748a26c: mov    0xf0(%rsp),%rdx
  0x000002480748a274: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a27e: addq   $0x1,0x15e0(%r8)
  0x000002480748a286: mov    $0x2,%r8d
  0x000002480748a28c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1361 (line 1059)

  0x000002480748a294: nop
  0x000002480748a295: nop
  0x000002480748a296: nop
  0x000002480748a297: call   0x0000024807375ee0  ; OopMap{off=14300}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1361 (line 1059)
                                                ;   {optimized virtual_call}
  0x000002480748a29c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a2a6: incl   0x15f0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1364 (line 1060)

  0x000002480748a2ad: add    $0x1e0,%rsp
  0x000002480748a2b4: pop    %rbp
  0x000002480748a2b5: test   %eax,-0x1eda1bb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a2bb: ret    
  0x000002480748a2bc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a2c6: incl   0xda8(%r8)         ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@816 (line 891)

  0x000002480748a2cd: add    $0x1e0,%rsp
  0x000002480748a2d4: pop    %rbp
  0x000002480748a2d5: test   %eax,-0x1eda1db(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a2db: ret    
  0x000002480748a2dc: mov    0xf0(%rsp),%rdx
  0x000002480748a2e4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a2ee: addq   $0x1,0x1b98(%r8)
  0x000002480748a2f6: mov    $0x1,%r8d
  0x000002480748a2fc: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1800 (line 1196)

  0x000002480748a304: nop
  0x000002480748a305: nop
  0x000002480748a306: nop
  0x000002480748a307: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=14412}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1800 (line 1196)
                                                ;   {optimized virtual_call}
  0x000002480748a30c: mov    0xf0(%rsp),%rdx
  0x000002480748a314: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a31e: addq   $0x1,0x1ba8(%r8)
  0x000002480748a326: mov    $0x1000001,%r8d
  0x000002480748a32c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1806 (line 1197)

  0x000002480748a334: nop
  0x000002480748a335: nop
  0x000002480748a336: nop
  0x000002480748a337: call   0x0000024807375ee0  ; OopMap{off=14460}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1806 (line 1197)
                                                ;   {optimized virtual_call}
  0x000002480748a33c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a346: incl   0x1bb8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1809 (line 1198)

  0x000002480748a34d: add    $0x1e0,%rsp
  0x000002480748a354: pop    %rbp
  0x000002480748a355: test   %eax,-0x1eda25b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a35b: ret    
  0x000002480748a35c: mov    0xf0(%rsp),%rdx
  0x000002480748a364: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a36e: addq   $0x1,0x15b8(%r8)
  0x000002480748a376: mov    $0x1,%r8d
  0x000002480748a37c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1353 (line 1046)

  0x000002480748a384: nop
  0x000002480748a385: nop
  0x000002480748a386: nop
  0x000002480748a387: call   0x0000024807375ee0  ; OopMap{off=14540}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1353 (line 1046)
                                                ;   {optimized virtual_call}
  0x000002480748a38c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a396: incl   0x15c8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1356 (line 1047)

  0x000002480748a39d: add    $0x1e0,%rsp
  0x000002480748a3a4: pop    %rbp
  0x000002480748a3a5: test   %eax,-0x1eda2ab(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a3ab: ret    
  0x000002480748a3ac: mov    0x24(%rsi),%r8d    ; implicit exception: dispatches to 0x000002480748b50d
  0x000002480748a3b0: shl    $0x3,%r8           ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1986 (line 1242)

  0x000002480748a3b4: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000002480748b512
  0x000002480748a3b7: mov    %rdi,%rdx
  0x000002480748a3ba: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a3c4: movabs $0x7c005f670,%r10  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480748a3ce: mov    %r10,0x1e00(%rsi)
  0x000002480748a3d5: addq   $0x1,0x1e08(%rsi)
  0x000002480748a3dd: mov    %rdi,%rdx          ;*invokevirtual addUninitializedType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1990 (line 1242)

  0x000002480748a3e0: nop
  0x000002480748a3e1: nop
  0x000002480748a3e2: nop
  0x000002480748a3e3: nop
  0x000002480748a3e4: nop
  0x000002480748a3e5: nop
  0x000002480748a3e6: nop
  0x000002480748a3e7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=14636}
                                                ;*invokevirtual addUninitializedType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1990 (line 1242)
                                                ;   {optimized virtual_call}
  0x000002480748a3ec: mov    0xf0(%rsp),%rdx
  0x000002480748a3f4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a3fe: addq   $0x1,0x1e28(%r8)
  0x000002480748a406: or     $0x1800000,%eax
  0x000002480748a40c: mov    %rax,%r8
  0x000002480748a40f: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1994 (line 1242)

  0x000002480748a417: call   0x0000024807375ee0  ; OopMap{off=14684}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1994 (line 1242)
                                                ;   {optimized virtual_call}
  0x000002480748a41c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a426: incl   0x1e38(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1997 (line 1243)

  0x000002480748a42d: add    $0x1e0,%rsp
  0x000002480748a434: pop    %rbp
  0x000002480748a435: test   %eax,-0x1eda33b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a43b: ret    
  0x000002480748a43c: mov    0x2c(%rsi),%r8d    ; implicit exception: dispatches to 0x000002480748b517
  0x000002480748a440: shl    $0x3,%r8           ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1882 (line 1220)

  0x000002480748a444: mov    0xf0(%rsp),%rdx
  0x000002480748a44c: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a456: addq   $0x1,0x1ca0(%rsi)
  0x000002480748a45e: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1885 (line 1220)

  0x000002480748a466: nop
  0x000002480748a467: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=14764}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1885 (line 1220)
                                                ;   {optimized virtual_call}
  0x000002480748a46c: mov    0xf0(%rsp),%rdx
  0x000002480748a474: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a47e: addq   $0x1,0x1cb0(%rsi)
  0x000002480748a486: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1889 (line 1221)

  0x000002480748a48e: nop
  0x000002480748a48f: call   0x0000024807375ee0  ; OopMap{off=14804}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1889 (line 1221)
                                                ;   {optimized virtual_call}
  0x000002480748a494: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a49e: incl   0x1cc0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1893 (line 1222)

  0x000002480748a4a5: add    $0x1e0,%rsp
  0x000002480748a4ac: pop    %rbp
  0x000002480748a4ad: test   %eax,-0x1eda3b3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a4b3: ret    
  0x000002480748a4b4: mov    0x2c(%rsi),%r8d    ; implicit exception: dispatches to 0x000002480748b51c
  0x000002480748a4b8: shl    $0x3,%r8           ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1852 (line 1213)

  0x000002480748a4bc: mov    0xf0(%rsp),%rdx
  0x000002480748a4c4: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a4ce: addq   $0x1,0x1c40(%rsi)
  0x000002480748a4d6: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1855 (line 1213)

  0x000002480748a4de: nop
  0x000002480748a4df: call   0x0000024807375ee0  ; OopMap{off=14884}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1855 (line 1213)
                                                ;   {optimized virtual_call}
  0x000002480748a4e4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a4ee: incl   0x1c50(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1858 (line 1214)

  0x000002480748a4f5: add    $0x1e0,%rsp
  0x000002480748a4fc: pop    %rbp
  0x000002480748a4fd: test   %eax,-0x1eda403(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a503: ret    
  0x000002480748a504: mov    0xf0(%rsp),%rdx
  0x000002480748a50c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a516: addq   $0x1,0x1b18(%r8)
  0x000002480748a51e: mov    $0x1,%r8d
  0x000002480748a524: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1766 (line 1184)

  0x000002480748a52c: nop
  0x000002480748a52d: nop
  0x000002480748a52e: nop
  0x000002480748a52f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=14964}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1766 (line 1184)
                                                ;   {optimized virtual_call}
  0x000002480748a534: mov    0xf0(%rsp),%rdx
  0x000002480748a53c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a546: addq   $0x1,0x1b28(%r8)
  0x000002480748a54e: mov    $0x1000002,%r8d
  0x000002480748a554: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1772 (line 1185)

  0x000002480748a55c: nop
  0x000002480748a55d: nop
  0x000002480748a55e: nop
  0x000002480748a55f: call   0x0000024807375ee0  ; OopMap{off=15012}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1772 (line 1185)
                                                ;   {optimized virtual_call}
  0x000002480748a564: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a56e: incl   0x1b38(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1775 (line 1186)

  0x000002480748a575: add    $0x1e0,%rsp
  0x000002480748a57c: pop    %rbp
  0x000002480748a57d: test   %eax,-0x1eda483(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a583: ret    
  0x000002480748a584: mov    0xf0(%rsp),%rdx
  0x000002480748a58c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a596: addq   $0x1,0x1aa8(%r8)
  0x000002480748a59e: mov    %r9,%r8
  0x000002480748a5a1: mov    $0x1000001,%r9d
  0x000002480748a5a7: mov    0xf0(%rsp),%rdx    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1738 (line 1175)

  0x000002480748a5af: call   0x0000024807375ee0  ; OopMap{off=15092}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1738 (line 1175)
                                                ;   {optimized virtual_call}
  0x000002480748a5b4: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a5be: incl   0x1ab8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1741 (line 1176)

  0x000002480748a5c4: add    $0x1e0,%rsp
  0x000002480748a5cb: pop    %rbp
  0x000002480748a5cc: test   %eax,-0x1eda4d2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a5d2: ret    
  0x000002480748a5d3: mov    0xf0(%rsp),%rdx
  0x000002480748a5db: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a5e5: addq   $0x1,0x1908(%rsi)
  0x000002480748a5ed: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1620 (line 1113)

  0x000002480748a5f5: nop
  0x000002480748a5f6: nop
  0x000002480748a5f7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15164}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1620 (line 1113)
                                                ;   {optimized virtual_call}
  0x000002480748a5fc: mov    0xf0(%rsp),%rdx
  0x000002480748a604: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a60e: addq   $0x1,0x1918(%rsi)
  0x000002480748a616: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1626 (line 1114)

  0x000002480748a61e: mov    %eax,0x164(%rsp)
  0x000002480748a625: nop
  0x000002480748a626: nop
  0x000002480748a627: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15212}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1626 (line 1114)
                                                ;   {optimized virtual_call}
  0x000002480748a62c: mov    0xf0(%rsp),%rdx
  0x000002480748a634: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a63e: addq   $0x1,0x1928(%r8)
  0x000002480748a646: mov    0x164(%rsp),%r8d
  0x000002480748a64e: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1634 (line 1115)

  0x000002480748a656: mov    %eax,0x168(%rsp)
  0x000002480748a65d: nop
  0x000002480748a65e: nop
  0x000002480748a65f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15268}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1634 (line 1115)
                                                ;   {optimized virtual_call}
  0x000002480748a664: mov    0xf0(%rsp),%rdx
  0x000002480748a66c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a676: addq   $0x1,0x1938(%r8)
  0x000002480748a67e: mov    0x168(%rsp),%r8d
  0x000002480748a686: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1640 (line 1116)

  0x000002480748a68e: nop
  0x000002480748a68f: call   0x0000024807375ee0  ; OopMap{off=15316}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1640 (line 1116)
                                                ;   {optimized virtual_call}
  0x000002480748a694: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a69e: incl   0x1948(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1643 (line 1117)

  0x000002480748a6a4: add    $0x1e0,%rsp
  0x000002480748a6ab: pop    %rbp
  0x000002480748a6ac: test   %eax,-0x1eda5b2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a6b2: ret    
  0x000002480748a6b3: mov    0xf0(%rsp),%rdx
  0x000002480748a6bb: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a6c5: addq   $0x1,0x1850(%rsi)
  0x000002480748a6cd: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1557 (line 1101)

  0x000002480748a6d5: nop
  0x000002480748a6d6: nop
  0x000002480748a6d7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15388}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1557 (line 1101)
                                                ;   {optimized virtual_call}
  0x000002480748a6dc: mov    0xf0(%rsp),%rdx
  0x000002480748a6e4: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a6ee: addq   $0x1,0x1860(%rsi)
  0x000002480748a6f6: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1563 (line 1102)

  0x000002480748a6fe: mov    %eax,0x16c(%rsp)
  0x000002480748a705: nop
  0x000002480748a706: nop
  0x000002480748a707: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15436}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1563 (line 1102)
                                                ;   {optimized virtual_call}
  0x000002480748a70c: mov    0xf0(%rsp),%rdx
  0x000002480748a714: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a71e: addq   $0x1,0x1870(%rsi)
  0x000002480748a726: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1569 (line 1103)

  0x000002480748a72e: mov    %eax,0x170(%rsp)
  0x000002480748a735: nop
  0x000002480748a736: nop
  0x000002480748a737: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15484}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1569 (line 1103)
                                                ;   {optimized virtual_call}
  0x000002480748a73c: mov    0xf0(%rsp),%rdx
  0x000002480748a744: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a74e: addq   $0x1,0x1880(%rsi)
  0x000002480748a756: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1575 (line 1104)

  0x000002480748a75e: mov    %eax,0x174(%rsp)
  0x000002480748a765: nop
  0x000002480748a766: nop
  0x000002480748a767: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15532}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1575 (line 1104)
                                                ;   {optimized virtual_call}
  0x000002480748a76c: mov    0xf0(%rsp),%rdx
  0x000002480748a774: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a77e: addq   $0x1,0x1890(%r8)
  0x000002480748a786: mov    0x170(%rsp),%r8d
  0x000002480748a78e: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1583 (line 1105)

  0x000002480748a796: mov    %eax,0x178(%rsp)
  0x000002480748a79d: nop
  0x000002480748a79e: nop
  0x000002480748a79f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15588}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1583 (line 1105)
                                                ;   {optimized virtual_call}
  0x000002480748a7a4: mov    0xf0(%rsp),%rdx
  0x000002480748a7ac: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a7b6: addq   $0x1,0x18a0(%r8)
  0x000002480748a7be: mov    0x16c(%rsp),%r8d
  0x000002480748a7c6: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1589 (line 1106)

  0x000002480748a7ce: nop
  0x000002480748a7cf: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15636}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1589 (line 1106)
                                                ;   {optimized virtual_call}
  0x000002480748a7d4: mov    0xf0(%rsp),%rdx
  0x000002480748a7dc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a7e6: addq   $0x1,0x18b0(%r8)
  0x000002480748a7ee: mov    0x178(%rsp),%r8d
  0x000002480748a7f6: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1595 (line 1107)

  0x000002480748a7fe: nop
  0x000002480748a7ff: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15684}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1595 (line 1107)
                                                ;   {optimized virtual_call}
  0x000002480748a804: mov    0xf0(%rsp),%rdx
  0x000002480748a80c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a816: addq   $0x1,0x18c0(%r8)
  0x000002480748a81e: mov    0x174(%rsp),%r8d
  0x000002480748a826: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1601 (line 1108)

  0x000002480748a82e: nop
  0x000002480748a82f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15732}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1601 (line 1108)
                                                ;   {optimized virtual_call}
  0x000002480748a834: mov    0xf0(%rsp),%rdx
  0x000002480748a83c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a846: addq   $0x1,0x18d0(%r8)
  0x000002480748a84e: mov    0x170(%rsp),%r8d
  0x000002480748a856: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1607 (line 1109)

  0x000002480748a85e: nop
  0x000002480748a85f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15780}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1607 (line 1109)
                                                ;   {optimized virtual_call}
  0x000002480748a864: mov    0xf0(%rsp),%rdx
  0x000002480748a86c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a876: addq   $0x1,0x18e0(%r8)
  0x000002480748a87e: mov    0x16c(%rsp),%r8d
  0x000002480748a886: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1613 (line 1110)

  0x000002480748a88e: nop
  0x000002480748a88f: call   0x0000024807375ee0  ; OopMap{off=15828}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1613 (line 1110)
                                                ;   {optimized virtual_call}
  0x000002480748a894: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a89e: incl   0x18f0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1616 (line 1111)

  0x000002480748a8a4: add    $0x1e0,%rsp
  0x000002480748a8ab: pop    %rbp
  0x000002480748a8ac: test   %eax,-0x1eda7b2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748a8b2: ret    
  0x000002480748a8b3: mov    0xf0(%rsp),%rdx
  0x000002480748a8bb: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a8c5: addq   $0x1,0x17b8(%rsi)
  0x000002480748a8cd: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1506 (line 1091)

  0x000002480748a8d5: nop
  0x000002480748a8d6: nop
  0x000002480748a8d7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15900}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1506 (line 1091)
                                                ;   {optimized virtual_call}
  0x000002480748a8dc: mov    0xf0(%rsp),%rdx
  0x000002480748a8e4: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a8ee: addq   $0x1,0x17c8(%rsi)
  0x000002480748a8f6: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1512 (line 1092)

  0x000002480748a8fe: mov    %eax,0x17c(%rsp)
  0x000002480748a905: nop
  0x000002480748a906: nop
  0x000002480748a907: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15948}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1512 (line 1092)
                                                ;   {optimized virtual_call}
  0x000002480748a90c: mov    0xf0(%rsp),%rdx
  0x000002480748a914: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a91e: addq   $0x1,0x17d8(%rsi)
  0x000002480748a926: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1518 (line 1093)

  0x000002480748a92e: mov    %eax,0x180(%rsp)
  0x000002480748a935: nop
  0x000002480748a936: nop
  0x000002480748a937: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=15996}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1518 (line 1093)
                                                ;   {optimized virtual_call}
  0x000002480748a93c: mov    0xf0(%rsp),%rdx
  0x000002480748a944: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a94e: addq   $0x1,0x17e8(%r8)
  0x000002480748a956: mov    0x180(%rsp),%r8d
  0x000002480748a95e: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1526 (line 1094)

  0x000002480748a966: mov    %eax,0x184(%rsp)
  0x000002480748a96d: nop
  0x000002480748a96e: nop
  0x000002480748a96f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16052}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1526 (line 1094)
                                                ;   {optimized virtual_call}
  0x000002480748a974: mov    0xf0(%rsp),%rdx
  0x000002480748a97c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a986: addq   $0x1,0x17f8(%r8)
  0x000002480748a98e: mov    0x17c(%rsp),%r8d
  0x000002480748a996: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1532 (line 1095)

  0x000002480748a99e: nop
  0x000002480748a99f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16100}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1532 (line 1095)
                                                ;   {optimized virtual_call}
  0x000002480748a9a4: mov    0xf0(%rsp),%rdx
  0x000002480748a9ac: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a9b6: addq   $0x1,0x1808(%r8)
  0x000002480748a9be: mov    0x184(%rsp),%r8d
  0x000002480748a9c6: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1538 (line 1096)

  0x000002480748a9ce: nop
  0x000002480748a9cf: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16148}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1538 (line 1096)
                                                ;   {optimized virtual_call}
  0x000002480748a9d4: mov    0xf0(%rsp),%rdx
  0x000002480748a9dc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748a9e6: addq   $0x1,0x1818(%r8)
  0x000002480748a9ee: mov    0x180(%rsp),%r8d
  0x000002480748a9f6: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1544 (line 1097)

  0x000002480748a9fe: nop
  0x000002480748a9ff: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16196}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1544 (line 1097)
                                                ;   {optimized virtual_call}
  0x000002480748aa04: mov    0xf0(%rsp),%rdx
  0x000002480748aa0c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aa16: addq   $0x1,0x1828(%r8)
  0x000002480748aa1e: mov    0x17c(%rsp),%r8d
  0x000002480748aa26: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1550 (line 1098)

  0x000002480748aa2e: nop
  0x000002480748aa2f: call   0x0000024807375ee0  ; OopMap{off=16244}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1550 (line 1098)
                                                ;   {optimized virtual_call}
  0x000002480748aa34: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aa3e: incl   0x1838(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1553 (line 1099)

  0x000002480748aa44: add    $0x1e0,%rsp
  0x000002480748aa4b: pop    %rbp
  0x000002480748aa4c: test   %eax,-0x1eda952(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748aa52: ret    
  0x000002480748aa53: mov    0xf0(%rsp),%rdx
  0x000002480748aa5b: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aa65: addq   $0x1,0x1740(%rsi)
  0x000002480748aa6d: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1467 (line 1083)

  0x000002480748aa75: nop
  0x000002480748aa76: nop
  0x000002480748aa77: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16316}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1467 (line 1083)
                                                ;   {optimized virtual_call}
  0x000002480748aa7c: mov    0xf0(%rsp),%rdx
  0x000002480748aa84: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aa8e: addq   $0x1,0x1750(%rsi)
  0x000002480748aa96: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1473 (line 1084)

  0x000002480748aa9e: mov    %eax,0x188(%rsp)
  0x000002480748aaa5: nop
  0x000002480748aaa6: nop
  0x000002480748aaa7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16364}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1473 (line 1084)
                                                ;   {optimized virtual_call}
  0x000002480748aaac: mov    0xf0(%rsp),%rdx
  0x000002480748aab4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aabe: addq   $0x1,0x1760(%r8)
  0x000002480748aac6: mov    %rax,%r8
  0x000002480748aac9: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1481 (line 1085)

  0x000002480748aad1: mov    %eax,0x18c(%rsp)
  0x000002480748aad8: nop
  0x000002480748aad9: nop
  0x000002480748aada: nop
  0x000002480748aadb: nop
  0x000002480748aadc: nop
  0x000002480748aadd: nop
  0x000002480748aade: nop
  0x000002480748aadf: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16420}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1481 (line 1085)
                                                ;   {optimized virtual_call}
  0x000002480748aae4: mov    0xf0(%rsp),%rdx
  0x000002480748aaec: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aaf6: addq   $0x1,0x1770(%r8)
  0x000002480748aafe: mov    0x188(%rsp),%r8d
  0x000002480748ab06: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1487 (line 1086)

  0x000002480748ab0e: nop
  0x000002480748ab0f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16468}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1487 (line 1086)
                                                ;   {optimized virtual_call}
  0x000002480748ab14: mov    0xf0(%rsp),%rdx
  0x000002480748ab1c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ab26: addq   $0x1,0x1780(%r8)
  0x000002480748ab2e: mov    0x18c(%rsp),%r8d
  0x000002480748ab36: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1493 (line 1087)

  0x000002480748ab3e: nop
  0x000002480748ab3f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16516}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1493 (line 1087)
                                                ;   {optimized virtual_call}
  0x000002480748ab44: mov    0xf0(%rsp),%rdx
  0x000002480748ab4c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ab56: addq   $0x1,0x1790(%r8)
  0x000002480748ab5e: mov    0x188(%rsp),%r8d
  0x000002480748ab66: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1499 (line 1088)

  0x000002480748ab6e: nop
  0x000002480748ab6f: call   0x0000024807375ee0  ; OopMap{off=16564}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1499 (line 1088)
                                                ;   {optimized virtual_call}
  0x000002480748ab74: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ab7e: incl   0x17a0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1502 (line 1089)

  0x000002480748ab84: add    $0x1e0,%rsp
  0x000002480748ab8b: pop    %rbp
  0x000002480748ab8c: test   %eax,-0x1edaa92(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748ab92: ret    
  0x000002480748ab93: mov    0xf0(%rsp),%rdx
  0x000002480748ab9b: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aba5: addq   $0x1,0x16b8(%rsi)
  0x000002480748abad: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1422 (line 1074)

  0x000002480748abb5: nop
  0x000002480748abb6: nop
  0x000002480748abb7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16636}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1422 (line 1074)
                                                ;   {optimized virtual_call}
  0x000002480748abbc: mov    0xf0(%rsp),%rdx
  0x000002480748abc4: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748abce: addq   $0x1,0x16c8(%rsi)
  0x000002480748abd6: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1428 (line 1075)

  0x000002480748abde: mov    %eax,0x190(%rsp)
  0x000002480748abe5: nop
  0x000002480748abe6: nop
  0x000002480748abe7: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16684}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1428 (line 1075)
                                                ;   {optimized virtual_call}
  0x000002480748abec: mov    0xf0(%rsp),%rdx
  0x000002480748abf4: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748abfe: addq   $0x1,0x16d8(%rsi)
  0x000002480748ac06: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1434 (line 1076)

  0x000002480748ac0e: mov    %eax,0x194(%rsp)
  0x000002480748ac15: nop
  0x000002480748ac16: nop
  0x000002480748ac17: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16732}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1434 (line 1076)
                                                ;   {optimized virtual_call}
  0x000002480748ac1c: mov    0xf0(%rsp),%rdx
  0x000002480748ac24: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ac2e: addq   $0x1,0x16e8(%r8)
  0x000002480748ac36: mov    0x190(%rsp),%r8d
  0x000002480748ac3e: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1442 (line 1077)

  0x000002480748ac46: mov    %eax,0x198(%rsp)
  0x000002480748ac4d: nop
  0x000002480748ac4e: nop
  0x000002480748ac4f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16788}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1442 (line 1077)
                                                ;   {optimized virtual_call}
  0x000002480748ac54: mov    0xf0(%rsp),%rdx
  0x000002480748ac5c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ac66: addq   $0x1,0x16f8(%r8)
  0x000002480748ac6e: mov    0x198(%rsp),%r8d
  0x000002480748ac76: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1448 (line 1078)

  0x000002480748ac7e: nop
  0x000002480748ac7f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16836}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1448 (line 1078)
                                                ;   {optimized virtual_call}
  0x000002480748ac84: mov    0xf0(%rsp),%rdx
  0x000002480748ac8c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ac96: addq   $0x1,0x1708(%r8)
  0x000002480748ac9e: mov    0x194(%rsp),%r8d
  0x000002480748aca6: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1454 (line 1079)

  0x000002480748acae: nop
  0x000002480748acaf: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=16884}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1454 (line 1079)
                                                ;   {optimized virtual_call}
  0x000002480748acb4: mov    0xf0(%rsp),%rdx
  0x000002480748acbc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748acc6: addq   $0x1,0x1718(%r8)
  0x000002480748acce: mov    0x190(%rsp),%r8d
  0x000002480748acd6: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1460 (line 1080)

  0x000002480748acde: nop
  0x000002480748acdf: call   0x0000024807375ee0  ; OopMap{off=16932}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1460 (line 1080)
                                                ;   {optimized virtual_call}
  0x000002480748ace4: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748acee: incl   0x1728(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1463 (line 1081)

  0x000002480748acf4: add    $0x1e0,%rsp
  0x000002480748acfb: pop    %rbp
  0x000002480748acfc: test   %eax,-0x1edac02(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748ad02: ret    
  0x000002480748ad03: mov    0xf0(%rsp),%rdx
  0x000002480748ad0b: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ad15: addq   $0x1,0x1650(%rsi)
  0x000002480748ad1d: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1389 (line 1067)

  0x000002480748ad25: nop
  0x000002480748ad26: nop
  0x000002480748ad27: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17004}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1389 (line 1067)
                                                ;   {optimized virtual_call}
  0x000002480748ad2c: mov    0xf0(%rsp),%rdx
  0x000002480748ad34: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ad3e: addq   $0x1,0x1660(%rsi)
  0x000002480748ad46: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1395 (line 1068)

  0x000002480748ad4e: mov    %eax,0x19c(%rsp)
  0x000002480748ad55: nop
  0x000002480748ad56: nop
  0x000002480748ad57: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17052}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1395 (line 1068)
                                                ;   {optimized virtual_call}
  0x000002480748ad5c: mov    0xf0(%rsp),%rdx
  0x000002480748ad64: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ad6e: addq   $0x1,0x1670(%r8)
  0x000002480748ad76: mov    0x19c(%rsp),%r8d
  0x000002480748ad7e: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1403 (line 1069)

  0x000002480748ad86: mov    %eax,0x1a0(%rsp)
  0x000002480748ad8d: nop
  0x000002480748ad8e: nop
  0x000002480748ad8f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17108}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1403 (line 1069)
                                                ;   {optimized virtual_call}
  0x000002480748ad94: mov    0xf0(%rsp),%rdx
  0x000002480748ad9c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ada6: addq   $0x1,0x1680(%r8)
  0x000002480748adae: mov    0x1a0(%rsp),%r8d
  0x000002480748adb6: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1409 (line 1070)

  0x000002480748adbe: nop
  0x000002480748adbf: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17156}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1409 (line 1070)
                                                ;   {optimized virtual_call}
  0x000002480748adc4: mov    0xf0(%rsp),%rdx
  0x000002480748adcc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748add6: addq   $0x1,0x1690(%r8)
  0x000002480748adde: mov    0x19c(%rsp),%r8d
  0x000002480748ade6: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1415 (line 1071)

  0x000002480748adee: nop
  0x000002480748adef: call   0x0000024807375ee0  ; OopMap{off=17204}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1415 (line 1071)
                                                ;   {optimized virtual_call}
  0x000002480748adf4: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748adfe: incl   0x16a0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1418 (line 1072)

  0x000002480748ae04: add    $0x1e0,%rsp
  0x000002480748ae0b: pop    %rbp
  0x000002480748ae0c: test   %eax,-0x1edad12(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748ae12: ret    
  0x000002480748ae13: mov    0xf0(%rsp),%rdx
  0x000002480748ae1b: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ae25: addq   $0x1,0x1608(%rsi)
  0x000002480748ae2d: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1368 (line 1062)

  0x000002480748ae35: nop
  0x000002480748ae36: nop
  0x000002480748ae37: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17276}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1368 (line 1062)
                                                ;   {optimized virtual_call}
  0x000002480748ae3c: mov    0xf0(%rsp),%rdx
  0x000002480748ae44: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ae4e: addq   $0x1,0x1618(%r8)
  0x000002480748ae56: mov    %rax,%r8
  0x000002480748ae59: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1376 (line 1063)

  0x000002480748ae61: mov    %eax,0x1a4(%rsp)
  0x000002480748ae68: nop
  0x000002480748ae69: nop
  0x000002480748ae6a: nop
  0x000002480748ae6b: nop
  0x000002480748ae6c: nop
  0x000002480748ae6d: nop
  0x000002480748ae6e: nop
  0x000002480748ae6f: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17332}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1376 (line 1063)
                                                ;   {optimized virtual_call}
  0x000002480748ae74: mov    0xf0(%rsp),%rdx
  0x000002480748ae7c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748ae86: addq   $0x1,0x1628(%r8)
  0x000002480748ae8e: mov    0x1a4(%rsp),%r8d
  0x000002480748ae96: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1382 (line 1064)

  0x000002480748ae9e: nop
  0x000002480748ae9f: call   0x0000024807375ee0  ; OopMap{off=17380}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1382 (line 1064)
                                                ;   {optimized virtual_call}
  0x000002480748aea4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aeae: incl   0x1638(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1385 (line 1065)

  0x000002480748aeb5: add    $0x1e0,%rsp
  0x000002480748aebc: pop    %rbp
  0x000002480748aebd: test   %eax,-0x1edadc3(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748aec3: ret    
  0x000002480748aec4: mov    0xf0(%rsp),%rdx
  0x000002480748aecc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748aed6: addq   $0x1,0x1300(%r8)
  0x000002480748aede: mov    $0x1,%r8d
  0x000002480748aee4: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1146 (line 982)

  0x000002480748aeec: nop
  0x000002480748aeed: nop
  0x000002480748aeee: nop
  0x000002480748aeef: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17460}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1146 (line 982)
                                                ;   {optimized virtual_call}
  0x000002480748aef4: mov    0xf0(%rsp),%rdx
  0x000002480748aefc: movabs $0x2481fed7178,%rsi  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748af06: addq   $0x1,0x1310(%rsi)
  0x000002480748af0e: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1150 (line 983)

  0x000002480748af16: nop
  0x000002480748af17: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17500}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1150 (line 983)
                                                ;   {optimized virtual_call}
  0x000002480748af1c: mov    0xf0(%rsp),%rdx
  0x000002480748af24: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748af2e: addq   $0x1,0x1320(%r8)
  0x000002480748af36: sub    $0x10000000,%eax
  0x000002480748af3c: mov    %rax,%r8
  0x000002480748af3f: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1161 (line 984)

  0x000002480748af47: call   0x0000024807375ee0  ; OopMap{off=17548}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1161 (line 984)
                                                ;   {optimized virtual_call}
  0x000002480748af4c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748af56: incl   0x1330(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1164 (line 985)

  0x000002480748af5d: add    $0x1e0,%rsp
  0x000002480748af64: pop    %rbp
  0x000002480748af65: test   %eax,-0x1edae6b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748af6b: ret    
  0x000002480748af6c: mov    0xf0(%rsp),%rdx
  0x000002480748af74: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748af7e: addq   $0x1,0x1280(%r8)
  0x000002480748af86: mov    $0x2,%r8d
  0x000002480748af8c: mov    0xf0(%rsp),%rdx    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1112 (line 972)

  0x000002480748af94: nop
  0x000002480748af95: nop
  0x000002480748af96: nop
  0x000002480748af97: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17628}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1112 (line 972)
                                                ;   {optimized virtual_call}
  0x000002480748af9c: mov    0xf0(%rsp),%rdx
  0x000002480748afa4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748afae: addq   $0x1,0x1290(%r8)
  0x000002480748afb6: mov    $0x1000002,%r8d
  0x000002480748afbc: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1118 (line 973)

  0x000002480748afc4: nop
  0x000002480748afc5: nop
  0x000002480748afc6: nop
  0x000002480748afc7: call   0x0000024807375ee0  ; OopMap{off=17676}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1118 (line 973)
                                                ;   {optimized virtual_call}
  0x000002480748afcc: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748afd6: incl   0x12a0(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1121 (line 974)

  0x000002480748afdd: add    $0x1e0,%rsp
  0x000002480748afe4: pop    %rbp
  0x000002480748afe5: test   %eax,-0x1edaeeb(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748afeb: ret    
  0x000002480748afec: mov    0xf0(%rsp),%rdx
  0x000002480748aff4: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748affe: addq   $0x1,0x11c8(%r8)
  0x000002480748b006: mov    %r9,%r8
  0x000002480748b009: mov    0xf0(%rsp),%rdx    ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1067 (line 956)

  0x000002480748b011: nop
  0x000002480748b012: nop
  0x000002480748b013: nop
  0x000002480748b014: nop
  0x000002480748b015: nop
  0x000002480748b016: nop
  0x000002480748b017: call   0x0000024807375ee0  ; OopMap{[240]=Oop off=17756}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1067 (line 956)
                                                ;   {optimized virtual_call}
  0x000002480748b01c: mov    0xf0(%rsp),%rdx
  0x000002480748b024: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748b02e: addq   $0x1,0x11d8(%r8)
  0x000002480748b036: mov    %rax,%r8
  0x000002480748b039: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1070 (line 956)

  0x000002480748b041: nop
  0x000002480748b042: nop
  0x000002480748b043: nop
  0x000002480748b044: nop
  0x000002480748b045: nop
  0x000002480748b046: nop
  0x000002480748b047: call   0x0000024807375ee0  ; OopMap{off=17804}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1070 (line 956)
                                                ;   {optimized virtual_call}
  0x000002480748b04c: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748b056: incl   0x11e8(%r8)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1073 (line 957)

  0x000002480748b05d: add    $0x1e0,%rsp
  0x000002480748b064: pop    %rbp
  0x000002480748b065: test   %eax,-0x1edaf6b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748b06b: ret    
  0x000002480748b06c: mov    0xf0(%rsp),%rdx
  0x000002480748b074: movabs $0x2481fed7178,%r8  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748b07e: addq   $0x1,0xdc0(%r8)
  0x000002480748b086: mov    $0x1000005,%r8d
  0x000002480748b08c: mov    0xf0(%rsp),%rdx    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@822 (line 893)

  0x000002480748b094: nop
  0x000002480748b095: nop
  0x000002480748b096: nop
  0x000002480748b097: call   0x0000024807375ee0  ; OopMap{off=17884}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@822 (line 893)
                                                ;   {optimized virtual_call}
  0x000002480748b09c: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748b0a6: incl   0xdd0(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@825 (line 894)

  0x000002480748b0ac: add    $0x1e0,%rsp
  0x000002480748b0b3: pop    %rbp
  0x000002480748b0b4: test   %eax,-0x1edafba(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480748b0ba: ret                       ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2251 (line 1298)

  0x000002480748b0bb: nopl   0x0(%rax,%rax,1)
  0x000002480748b0c0: jmp    0x000002480748b530  ;   {no_reloc}
  0x000002480748b0c5: add    %al,(%rax)
  0x000002480748b0c7: add    %al,(%rax)
  0x000002480748b0c9: add    %ch,%cl
  0x000002480748b0cb: imul   $0x0,(%rax,%rax,1),%eax  ;*new
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000002480748b0cf: mov    %rax,%r8
  0x000002480748b0d2: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480748b0dc: addq   $0x1,0x148(%rdx)
  0x000002480748b0e4: mov    $0x0,%r8d
  0x000002480748b0ea: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000002480748b0ed: mov    %rax,0x1a8(%rsp)
  0x000002480748b0f5: nop
  0x000002480748b0f6: nop
  0x000002480748b0f7: call   0x0000024807375ee0  ; OopMap{[240]=Oop [272]=Oop [424]=Oop [304]=Oop off=17980}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {optimized virtual_call}
  0x000002480748b0fc: mov    0x1a8(%rsp),%rax
  0x000002480748b104: jmp    0x000002480748b5e4  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000002480748b109: nopl   0x0(%rax)
  0x000002480748b110: jmp    0x000002480748b556  ;   {no_reloc}
  0x000002480748b115: add    %al,(%rax)
  0x000002480748b117: add    %al,(%rax)
  0x000002480748b119: add    %ch,%cl
  0x000002480748b11b: rex.B add $0x0,%al
  0x000002480748b11e: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000002480748b122: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480748b12c: addq   $0x1,0x148(%rdx)
  0x000002480748b134: mov    $0x0,%r8d
  0x000002480748b13a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000002480748b13d: mov    %rax,0x1b0(%rsp)
  0x000002480748b145: nop
  0x000002480748b146: nop
  0x000002480748b147: call   0x0000024807375ee0  ; OopMap{[272]=Oop [240]=Oop [432]=Oop [288]=Oop off=18060}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {optimized virtual_call}
  0x000002480748b14c: mov    0x1b0(%rsp),%rax
  0x000002480748b154: jmp    0x000002480748b5e4  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000002480748b159: mov    %eax,0x1c0(%rsp)
  0x000002480748b160: jmp    0x000002480748b57c  ;   {no_reloc}
  0x000002480748b165: add    %al,(%rax)
  0x000002480748b167: add    %al,(%rax)
  0x000002480748b169: add    %ch,%cl
  0x000002480748b16b: (bad)  
  0x000002480748b16c: add    $0x0,%al
  0x000002480748b16e: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000002480748b172: movabs $0x2481fc35c48,%rdx  ;   {metadata(method data for {method} {0x000002481fb03db8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000002480748b17c: addq   $0x1,0x148(%rdx)
  0x000002480748b184: mov    $0x0,%r8d
  0x000002480748b18a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000002480748b18d: mov    %rax,0x1b8(%rsp)
  0x000002480748b195: nop
  0x000002480748b196: nop
  0x000002480748b197: call   0x0000024807375ee0  ; OopMap{[440]=Oop [240]=Oop [272]=Oop [264]=Oop off=18140}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {optimized virtual_call}
  0x000002480748b19c: mov    0x1b8(%rsp),%rax
  0x000002480748b1a4: jmp    0x000002480748b5e4  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000002480748b1a9: nopl   0x0(%rax)
  0x000002480748b1b0: jmp    0x000002480748b5a2  ;   {no_reloc}
  0x000002480748b1b5: add    %al,(%rax)
  0x000002480748b1b7: add    %al,(%rax)
  0x000002480748b1b9: add    %cl,-0x75(%rcx)
  0x000002480748b1bc: rex.RXB (bad) 
  0x000002480748b1be: lea    0x20(%rax),%rdi
  0x000002480748b1c2: cmp    0x70(%r15),%rdi
  0x000002480748b1c6: ja     0x000002480748b5ac
  0x000002480748b1cc: mov    %rdi,0x60(%r15)
  0x000002480748b1d0: mov    0xa8(%rdx),%rcx
  0x000002480748b1d7: mov    %rcx,(%rax)
  0x000002480748b1da: mov    %rdx,%rcx
  0x000002480748b1dd: shr    $0x3,%rcx
  0x000002480748b1e1: mov    %ecx,0x8(%rax)
  0x000002480748b1e4: xor    %rcx,%rcx
  0x000002480748b1e7: mov    %ecx,0xc(%rax)
  0x000002480748b1ea: xor    %rcx,%rcx
  0x000002480748b1ed: mov    %rcx,0x10(%rax)
  0x000002480748b1f1: mov    %rcx,0x18(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@1826 (line 1207)

  0x000002480748b1f5: mov    %rax,%r8
  0x000002480748b1f8: movabs $0x2481fed7178,%rdx  ;   {metadata(method data for {method} {0x000002481fe52458} &apos;execute&apos; &apos;(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480748b202: addq   $0x1,0x1c08(%rdx)
  0x000002480748b20a: movabs $0x76bd5bf48,%r8   ;   {oop(&quot;JSR/RET are not supported with computeFrames option&quot;)}
  0x000002480748b214: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1832 (line 1207)

  0x000002480748b217: mov    %rax,0x1c8(%rsp)
  0x000002480748b21f: call   0x0000024807375ee0  ; OopMap{[456]=Oop off=18276}
                                                ;*invokespecial &lt;init&gt;
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1832 (line 1207)
                                                ;   {optimized virtual_call}
  0x000002480748b224: mov    0x1c8(%rsp),%rax
  0x000002480748b22c: jmp    0x000002480748b5e4
  0x000002480748b231: mov    %rbx,0x8(%rsp)
  0x000002480748b236: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b23e: call   0x0000024807433da0  ; OopMap{rdx=Oop [240]=Oop rdi=Oop [272]=Oop rsi=Oop [264]=Oop off=18307}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@-1 (line 880)
                                                ;   {runtime_call}
  0x000002480748b243: jmp    0x0000024807486b49
  0x000002480748b248: call   0x000002480742f100  ; OopMap{[272]=Oop rsi=Oop [264]=Oop [240]=Oop off=18317}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1899 (line 1227)
                                                ;   {runtime_call}
  0x000002480748b24d: call   0x000002480742f100  ; OopMap{[240]=Oop [272]=Oop rsi=Oop [264]=Oop r8=Oop off=18322}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000002480748b252: mov    %rdx,0x8(%rsp)
  0x000002480748b257: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b25f: call   0x0000024807433da0  ; OopMap{[240]=Oop [272]=Oop rsi=Oop [264]=Oop r8=Oop off=18340}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000002480748b264: jmp    0x0000024807487686
  0x000002480748b269: call   0x000002480742f100  ; OopMap{[240]=Oop [272]=Oop rsi=Oop [264]=Oop r8=Oop off=18350}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000002480748b26e: movq   $0x0,(%rsp)
  0x000002480748b276: call   0x000002480742e800  ; OopMap{[240]=Oop [272]=Oop rsi=Oop [264]=Oop r8=Oop off=18363}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000002480748b27b: mov    %rdx,0x8(%rsp)
  0x000002480748b280: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b288: call   0x0000024807433da0  ; OopMap{[240]=Oop [272]=Oop r8=Oop off=18381}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)
                                                ;   {runtime_call}
  0x000002480748b28d: jmp    0x00000248074877b8
  0x000002480748b292: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop off=18391}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2245 (line 1295)
                                                ;   {runtime_call}
  0x000002480748b297: mov    %rdx,0x8(%rsp)
  0x000002480748b29c: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b2a4: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop r8=Oop off=18409}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)
                                                ;   {runtime_call}
  0x000002480748b2a9: jmp    0x0000024807487990
  0x000002480748b2ae: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop off=18419}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2189 (line 1284)
                                                ;   {runtime_call}
  0x000002480748b2b3: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [288]=Oop off=18424}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000002480748b2b8: mov    %rdx,0x8(%rsp)
  0x000002480748b2bd: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b2c5: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [288]=Oop off=18442}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000002480748b2ca: jmp    0x0000024807487bee
  0x000002480748b2cf: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [288]=Oop rdx=Oop off=18452}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000002480748b2d4: movq   $0x0,(%rsp)
  0x000002480748b2dc: call   0x000002480742e800  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [288]=Oop rdx=Oop off=18465}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000002480748b2e1: mov    %rdx,0x8(%rsp)
  0x000002480748b2e6: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b2ee: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [288]=Oop off=18483}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)
                                                ;   {runtime_call}
  0x000002480748b2f3: jmp    0x0000024807487ce4
  0x000002480748b2f8: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop off=18493}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2122 (line 1275)
                                                ;   {runtime_call}
  0x000002480748b2fd: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [304]=Oop off=18498}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000002480748b302: mov    %rdx,0x8(%rsp)
  0x000002480748b307: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b30f: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [304]=Oop off=18516}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000002480748b314: jmp    0x0000024807487f39
  0x000002480748b319: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [304]=Oop rdx=Oop off=18526}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000002480748b31e: movq   $0x0,(%rsp)
  0x000002480748b326: call   0x000002480742e800  ; OopMap{[272]=Oop [240]=Oop rsi=Oop [304]=Oop rdx=Oop off=18539}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000002480748b32b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480748b335: mov    $0xa050f00,%eax
  0x000002480748b33a: call   0x0000024807432b60  ; OopMap{[272]=Oop [240]=Oop [304]=Oop off=18559}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@2145 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b33f: jmp    0x0000024807487fe0
  0x000002480748b344: mov    %rdx,%rdx
  0x000002480748b347: call   0x000002480742f900  ; OopMap{[272]=Oop [240]=Oop [304]=Oop off=18572}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@2145 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b34c: jmp    0x0000024807488021
  0x000002480748b351: mov    %rbx,0x8(%rsp)
  0x000002480748b356: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b35e: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rax=Oop [320]=Oop off=18595}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b363: jmp    0x0000024807488070
  0x000002480748b368: mov    %rbx,0x8(%rsp)
  0x000002480748b36d: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b375: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rax=Oop [320]=Oop off=18618}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b37a: jmp    0x00000248074880b7
  0x000002480748b37f: mov    %rbx,0x8(%rsp)
  0x000002480748b384: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b38c: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rax=Oop [320]=Oop off=18641}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b391: jmp    0x00000248074880fe
  0x000002480748b396: call   0x0000024807430280  ; OopMap{[272]=Oop [240]=Oop [304]=Oop r11=Oop [320]=Oop off=18651}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b39b: jmp    0x000002480748817d
  0x000002480748b3a0: mov    %r8,0x8(%rsp)
  0x000002480748b3a5: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b3ad: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop r11=Oop [320]=Oop off=18674}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b3b2: jmp    0x0000024807488262
  0x000002480748b3b7: mov    %r8,0x8(%rsp)
  0x000002480748b3bc: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b3c4: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop r11=Oop [320]=Oop off=18697}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b3c9: jmp    0x00000248074882ab
  0x000002480748b3ce: mov    %rdx,0x8(%rsp)
  0x000002480748b3d3: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b3db: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop r11=Oop [320]=Oop off=18720}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b3e0: jmp    0x00000248074882f9
  0x000002480748b3e5: mov    %rbx,0x8(%rsp)
  0x000002480748b3ea: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b3f2: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [312]=Oop [304]=Oop off=18743}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b3f7: jmp    0x00000248074883bb
  0x000002480748b3fc: call   0x0000024807430280  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [312]=Oop [304]=Oop off=18753}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b401: jmp    0x0000024807488435
  0x000002480748b406: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop rax=Oop rdi=Oop off=18763}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b40b: mov    %r9,0x8(%rsp)
  0x000002480748b410: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b418: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop rax=Oop rdi=Oop off=18781}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b41d: jmp    0x0000024807488486
  0x000002480748b422: nop
  0x000002480748b423: nop
  0x000002480748b424: nop
  0x000002480748b425: nop
  0x000002480748b426: nop
  0x000002480748b427: call   0x0000024807376360  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop [328]=Oop off=18796}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {static_call}
  0x000002480748b42c: jmp    0x000002480748856d
  0x000002480748b431: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rsi=Oop [320]=Oop r8=Oop off=18806}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b436: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rsi=Oop [320]=Oop r8=Oop off=18811}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b43b: mov    %rdx,(%rsp)
  0x000002480748b43f: call   0x000002480742e800  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rsi=Oop [320]=Oop r8=Oop off=18820}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 207)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b444: mov    %r8,0x8(%rsp)
  0x000002480748b449: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b451: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rsi=Oop [320]=Oop off=18838}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2159 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b456: jmp    0x000002480748868d
  0x000002480748b45b: mov    %rdx,0x8(%rsp)
  0x000002480748b460: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b468: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [320]=Oop off=18861}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b46d: jmp    0x000002480748877b
  0x000002480748b472: mov    %rdx,%rdx
  0x000002480748b475: call   0x000002480742f900  ; OopMap{[272]=Oop [240]=Oop [320]=Oop off=18874}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b47a: jmp    0x00000248074887bc
  0x000002480748b47f: mov    %rdx,0x8(%rsp)
  0x000002480748b484: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b48c: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop [336]=Oop off=18897}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)
                                                ;   {runtime_call}
  0x000002480748b491: jmp    0x0000024807488855
  0x000002480748b496: call   0x000002480742f100  ; OopMap{[240]=Oop rsi=Oop [264]=Oop [272]=Oop off=18907}
                                                ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1961 (line 1238)
                                                ;   {runtime_call}
  0x000002480748b49b: mov    %rdx,0x8(%rsp)
  0x000002480748b4a0: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b4a8: call   0x0000024807433da0  ; OopMap{[240]=Oop [272]=Oop r8=Oop off=18925}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)
                                                ;   {runtime_call}
  0x000002480748b4ad: jmp    0x0000024807488ab0
  0x000002480748b4b2: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop off=18935}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1870 (line 1217)
                                                ;   {runtime_call}
  0x000002480748b4b7: mov    %rdx,0x8(%rsp)
  0x000002480748b4bc: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b4c4: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop r8=Oop off=18953}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)
                                                ;   {runtime_call}
  0x000002480748b4c9: jmp    0x0000024807488c88
  0x000002480748b4ce: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop off=18963}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1840 (line 1210)
                                                ;   {runtime_call}
  0x000002480748b4d3: mov    %rdx,0x8(%rsp)
  0x000002480748b4d8: movq   $0xffffffffffffffff,(%rsp)
  0x000002480748b4e0: call   0x0000024807433da0  ; OopMap{[272]=Oop [240]=Oop r8=Oop off=18981}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)
                                                ;   {runtime_call}
  0x000002480748b4e5: jmp    0x0000024807488e25
  0x000002480748b4ea: call   0x000002480742f100  ; OopMap{[272]=Oop [240]=Oop off=18991}
                                                ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@878 (line 926)
                                                ;   {runtime_call}
  0x000002480748b4ef: call   0x000002480742f100  ; OopMap{[240]=Oop rdi=Oop [272]=Oop off=18996}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1054 (line 952)
                                                ;   {runtime_call}
  0x000002480748b4f4: call   0x000002480742f100  ; OopMap{rdi=Oop [272]=Oop [240]=Oop off=19001}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1038 (line 948)
                                                ;   {runtime_call}
  0x000002480748b4f9: call   0x000002480742f100  ; OopMap{rdi=Oop [272]=Oop [240]=Oop off=19006}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1022 (line 945)
                                                ;   {runtime_call}
  0x000002480748b4fe: call   0x000002480742f100  ; OopMap{rdi=Oop [272]=Oop [240]=Oop off=19011}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1006 (line 942)
                                                ;   {runtime_call}
  0x000002480748b503: call   0x000002480742f100  ; OopMap{[304]=Oop rdi=Oop [272]=Oop [240]=Oop off=19016}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2177 (line 1280)
                                                ;   {runtime_call}
  0x000002480748b508: call   0x000002480742f100  ; OopMap{rsi=Oop [288]=Oop rdi=Oop [272]=Oop [240]=Oop off=19021}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2226 (line 1289)
                                                ;   {runtime_call}
  0x000002480748b50d: call   0x000002480742f100  ; OopMap{rdi=Oop [272]=Oop [240]=Oop off=19026}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1986 (line 1242)
                                                ;   {runtime_call}
  0x000002480748b512: call   0x000002480742f100  ; OopMap{rdi=Oop [272]=Oop [240]=Oop r8=Oop off=19031}
                                                ;*invokevirtual addUninitializedType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1990 (line 1242)
                                                ;   {runtime_call}
  0x000002480748b517: call   0x000002480742f100  ; OopMap{[240]=Oop off=19036}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1882 (line 1220)
                                                ;   {runtime_call}
  0x000002480748b51c: call   0x000002480742f100  ; OopMap{[240]=Oop off=19041}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1852 (line 1213)
                                                ;   {runtime_call}
  0x000002480748b521: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480748b52b: mov    $0xa050f00,%eax
  0x000002480748b530: call   0x0000024807432b60  ; OopMap{[304]=Oop [272]=Oop [240]=Oop off=19061}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000002480748b535: jmp    0x000002480748b0c0
  0x000002480748b53a: mov    %rdx,%rdx
  0x000002480748b53d: call   0x000002480742f5e0  ; OopMap{[304]=Oop [272]=Oop [240]=Oop off=19074}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000002480748b542: jmp    0x000002480748b0cf
  0x000002480748b547: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480748b551: mov    $0xa050f00,%eax
  0x000002480748b556: call   0x0000024807432b60  ; OopMap{[288]=Oop [272]=Oop [240]=Oop off=19099}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000002480748b55b: jmp    0x000002480748b110
  0x000002480748b560: mov    %rdx,%rdx
  0x000002480748b563: call   0x000002480742f5e0  ; OopMap{[288]=Oop [272]=Oop [240]=Oop off=19112}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000002480748b568: jmp    0x000002480748b11f
  0x000002480748b56d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480748b577: mov    $0xa050f00,%eax
  0x000002480748b57c: call   0x0000024807432b60  ; OopMap{[264]=Oop [272]=Oop [240]=Oop off=19137}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000002480748b581: jmp    0x000002480748b160
  0x000002480748b586: mov    %rdx,%rdx
  0x000002480748b589: call   0x000002480742f5e0  ; OopMap{[264]=Oop [272]=Oop [240]=Oop off=19150}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000002480748b58e: jmp    0x000002480748b16f
  0x000002480748b593: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480748b59d: mov    $0xa050f00,%eax
  0x000002480748b5a2: call   0x0000024807432b60  ; OopMap{off=19175}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@1826 (line 1207)
                                                ;   {runtime_call}
  0x000002480748b5a7: jmp    0x000002480748b1b0
  0x000002480748b5ac: mov    %rdx,%rdx
  0x000002480748b5af: call   0x000002480742f900  ; OopMap{off=19188}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@1826 (line 1207)
                                                ;   {runtime_call}
  0x000002480748b5b4: jmp    0x000002480748b1f5
  0x000002480748b5b9: nop
  0x000002480748b5ba: nop
  0x000002480748b5bb: mov    0x308(%r15),%rax
  0x000002480748b5c2: movabs $0x0,%r10
  0x000002480748b5cc: mov    %r10,0x308(%r15)
  0x000002480748b5d3: movabs $0x0,%r10
  0x000002480748b5dd: mov    %r10,0x310(%r15)
  0x000002480748b5e4: add    $0x1e0,%rsp
  0x000002480748b5eb: pop    %rbp
  0x000002480748b5ec: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480748b5f1: hlt    
  0x000002480748b5f2: hlt    
  0x000002480748b5f3: hlt    
  0x000002480748b5f4: hlt    
  0x000002480748b5f5: hlt    
  0x000002480748b5f6: hlt    
  0x000002480748b5f7: hlt    
  0x000002480748b5f8: hlt    
  0x000002480748b5f9: hlt    
  0x000002480748b5fa: hlt    
  0x000002480748b5fb: hlt    
  0x000002480748b5fc: hlt    
  0x000002480748b5fd: hlt    
  0x000002480748b5fe: hlt    
  0x000002480748b5ff: hlt    
[Stub Code]
  0x000002480748b600: nop                       ;   {no_reloc}
  0x000002480748b601: nop
  0x000002480748b602: nop
  0x000002480748b603: nop
  0x000002480748b604: nop
  0x000002480748b605: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b60f: jmp    0x000002480748b60f  ;   {runtime_call}
  0x000002480748b614: nop
  0x000002480748b615: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b61f: jmp    0x000002480748b61f  ;   {runtime_call}
  0x000002480748b624: nop
  0x000002480748b625: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b62f: jmp    0x000002480748b62f  ;   {runtime_call}
  0x000002480748b634: nop
  0x000002480748b635: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b63f: jmp    0x000002480748b63f  ;   {runtime_call}
  0x000002480748b644: nop
  0x000002480748b645: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b64f: jmp    0x000002480748b64f  ;   {runtime_call}
  0x000002480748b654: nop
  0x000002480748b655: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b65f: jmp    0x000002480748b65f  ;   {runtime_call}
  0x000002480748b664: nop
  0x000002480748b665: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b66f: jmp    0x000002480748b66f  ;   {runtime_call}
  0x000002480748b674: nop
  0x000002480748b675: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b67f: jmp    0x000002480748b67f  ;   {runtime_call}
  0x000002480748b684: nop
  0x000002480748b685: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b68f: jmp    0x000002480748b68f  ;   {runtime_call}
  0x000002480748b694: nop
  0x000002480748b695: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b69f: jmp    0x000002480748b69f  ;   {runtime_call}
  0x000002480748b6a4: nop
  0x000002480748b6a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b6af: jmp    0x000002480748b6af  ;   {runtime_call}
  0x000002480748b6b4: nop
  0x000002480748b6b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b6bf: jmp    0x000002480748b6bf  ;   {runtime_call}
  0x000002480748b6c4: nop
  0x000002480748b6c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b6cf: jmp    0x000002480748b6cf  ;   {runtime_call}
  0x000002480748b6d4: nop
  0x000002480748b6d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b6df: jmp    0x000002480748b6df  ;   {runtime_call}
  0x000002480748b6e4: nop
  0x000002480748b6e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b6ef: jmp    0x000002480748b6ef  ;   {runtime_call}
  0x000002480748b6f4: nop
  0x000002480748b6f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b6ff: jmp    0x000002480748b6ff  ;   {runtime_call}
  0x000002480748b704: nop
  0x000002480748b705: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b70f: jmp    0x000002480748b70f  ;   {runtime_call}
  0x000002480748b714: nop
  0x000002480748b715: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b71f: jmp    0x000002480748b71f  ;   {runtime_call}
  0x000002480748b724: nop
  0x000002480748b725: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b72f: jmp    0x000002480748b72f  ;   {runtime_call}
  0x000002480748b734: nop
  0x000002480748b735: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b73f: jmp    0x000002480748b73f  ;   {runtime_call}
  0x000002480748b744: nop
  0x000002480748b745: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b74f: jmp    0x000002480748b74f  ;   {runtime_call}
  0x000002480748b754: nop
  0x000002480748b755: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b75f: jmp    0x000002480748b75f  ;   {runtime_call}
  0x000002480748b764: nop
  0x000002480748b765: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b76f: jmp    0x000002480748b76f  ;   {runtime_call}
  0x000002480748b774: nop
  0x000002480748b775: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b77f: jmp    0x000002480748b77f  ;   {runtime_call}
  0x000002480748b784: nop
  0x000002480748b785: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b78f: jmp    0x000002480748b78f  ;   {runtime_call}
  0x000002480748b794: nop
  0x000002480748b795: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b79f: jmp    0x000002480748b79f  ;   {runtime_call}
  0x000002480748b7a4: nop
  0x000002480748b7a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b7af: jmp    0x000002480748b7af  ;   {runtime_call}
  0x000002480748b7b4: nop
  0x000002480748b7b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b7bf: jmp    0x000002480748b7bf  ;   {runtime_call}
  0x000002480748b7c4: nop
  0x000002480748b7c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b7cf: jmp    0x000002480748b7cf  ;   {runtime_call}
  0x000002480748b7d4: nop
  0x000002480748b7d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b7df: jmp    0x000002480748b7df  ;   {runtime_call}
  0x000002480748b7e4: nop
  0x000002480748b7e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b7ef: jmp    0x000002480748b7ef  ;   {runtime_call}
  0x000002480748b7f4: nop
  0x000002480748b7f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b7ff: jmp    0x000002480748b7ff  ;   {runtime_call}
  0x000002480748b804: nop
  0x000002480748b805: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b80f: jmp    0x000002480748b80f  ;   {runtime_call}
  0x000002480748b814: nop
  0x000002480748b815: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b81f: jmp    0x000002480748b81f  ;   {runtime_call}
  0x000002480748b824: nop
  0x000002480748b825: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b82f: jmp    0x000002480748b82f  ;   {runtime_call}
  0x000002480748b834: nop
  0x000002480748b835: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b83f: jmp    0x000002480748b83f  ;   {runtime_call}
  0x000002480748b844: nop
  0x000002480748b845: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b84f: jmp    0x000002480748b84f  ;   {runtime_call}
  0x000002480748b854: nop
  0x000002480748b855: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b85f: jmp    0x000002480748b85f  ;   {runtime_call}
  0x000002480748b864: nop
  0x000002480748b865: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b86f: jmp    0x000002480748b86f  ;   {runtime_call}
  0x000002480748b874: nop
  0x000002480748b875: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b87f: jmp    0x000002480748b87f  ;   {runtime_call}
  0x000002480748b884: nop
  0x000002480748b885: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b88f: jmp    0x000002480748b88f  ;   {runtime_call}
  0x000002480748b894: nop
  0x000002480748b895: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b89f: jmp    0x000002480748b89f  ;   {runtime_call}
  0x000002480748b8a4: nop
  0x000002480748b8a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b8af: jmp    0x000002480748b8af  ;   {runtime_call}
  0x000002480748b8b4: nop
  0x000002480748b8b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b8bf: jmp    0x000002480748b8bf  ;   {runtime_call}
  0x000002480748b8c4: nop
  0x000002480748b8c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b8cf: jmp    0x000002480748b8cf  ;   {runtime_call}
  0x000002480748b8d4: nop
  0x000002480748b8d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b8df: jmp    0x000002480748b8df  ;   {runtime_call}
  0x000002480748b8e4: nop
  0x000002480748b8e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b8ef: jmp    0x000002480748b8ef  ;   {runtime_call}
  0x000002480748b8f4: nop
  0x000002480748b8f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b8ff: jmp    0x000002480748b8ff  ;   {runtime_call}
  0x000002480748b904: nop
  0x000002480748b905: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b90f: jmp    0x000002480748b90f  ;   {runtime_call}
  0x000002480748b914: nop
  0x000002480748b915: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b91f: jmp    0x000002480748b91f  ;   {runtime_call}
  0x000002480748b924: nop
  0x000002480748b925: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b92f: jmp    0x000002480748b92f  ;   {runtime_call}
  0x000002480748b934: nop
  0x000002480748b935: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b93f: jmp    0x000002480748b93f  ;   {runtime_call}
  0x000002480748b944: nop
  0x000002480748b945: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b94f: jmp    0x000002480748b94f  ;   {runtime_call}
  0x000002480748b954: nop
  0x000002480748b955: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b95f: jmp    0x000002480748b95f  ;   {runtime_call}
  0x000002480748b964: nop
  0x000002480748b965: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b96f: jmp    0x000002480748b96f  ;   {runtime_call}
  0x000002480748b974: nop
  0x000002480748b975: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b97f: jmp    0x000002480748b97f  ;   {runtime_call}
  0x000002480748b984: nop
  0x000002480748b985: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b98f: jmp    0x000002480748b98f  ;   {runtime_call}
  0x000002480748b994: nop
  0x000002480748b995: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b99f: jmp    0x000002480748b99f  ;   {runtime_call}
  0x000002480748b9a4: nop
  0x000002480748b9a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b9af: jmp    0x000002480748b9af  ;   {runtime_call}
  0x000002480748b9b4: nop
  0x000002480748b9b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b9bf: jmp    0x000002480748b9bf  ;   {runtime_call}
  0x000002480748b9c4: nop
  0x000002480748b9c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b9cf: jmp    0x000002480748b9cf  ;   {runtime_call}
  0x000002480748b9d4: nop
  0x000002480748b9d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b9df: jmp    0x000002480748b9df  ;   {runtime_call}
  0x000002480748b9e4: nop
  0x000002480748b9e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b9ef: jmp    0x000002480748b9ef  ;   {runtime_call}
  0x000002480748b9f4: nop
  0x000002480748b9f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748b9ff: jmp    0x000002480748b9ff  ;   {runtime_call}
  0x000002480748ba04: nop
  0x000002480748ba05: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba0f: jmp    0x000002480748ba0f  ;   {runtime_call}
  0x000002480748ba14: nop
  0x000002480748ba15: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba1f: jmp    0x000002480748ba1f  ;   {runtime_call}
  0x000002480748ba24: nop
  0x000002480748ba25: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba2f: jmp    0x000002480748ba2f  ;   {runtime_call}
  0x000002480748ba34: nop
  0x000002480748ba35: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba3f: jmp    0x000002480748ba3f  ;   {runtime_call}
  0x000002480748ba44: nop
  0x000002480748ba45: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba4f: jmp    0x000002480748ba4f  ;   {runtime_call}
  0x000002480748ba54: nop
  0x000002480748ba55: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba5f: jmp    0x000002480748ba5f  ;   {runtime_call}
  0x000002480748ba64: nop
  0x000002480748ba65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba6f: jmp    0x000002480748ba6f  ;   {runtime_call}
  0x000002480748ba74: nop
  0x000002480748ba75: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba7f: jmp    0x000002480748ba7f  ;   {runtime_call}
  0x000002480748ba84: nop
  0x000002480748ba85: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba8f: jmp    0x000002480748ba8f  ;   {runtime_call}
  0x000002480748ba94: nop
  0x000002480748ba95: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748ba9f: jmp    0x000002480748ba9f  ;   {runtime_call}
  0x000002480748baa4: nop
  0x000002480748baa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748baaf: jmp    0x000002480748baaf  ;   {runtime_call}
  0x000002480748bab4: nop
  0x000002480748bab5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748babf: jmp    0x000002480748babf  ;   {runtime_call}
  0x000002480748bac4: nop
  0x000002480748bac5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bacf: jmp    0x000002480748bacf  ;   {runtime_call}
  0x000002480748bad4: nop
  0x000002480748bad5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748badf: jmp    0x000002480748badf  ;   {runtime_call}
  0x000002480748bae4: nop
  0x000002480748bae5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748baef: jmp    0x000002480748baef  ;   {runtime_call}
  0x000002480748baf4: nop
  0x000002480748baf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748baff: jmp    0x000002480748baff  ;   {runtime_call}
  0x000002480748bb04: nop
  0x000002480748bb05: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb0f: jmp    0x000002480748bb0f  ;   {runtime_call}
  0x000002480748bb14: nop
  0x000002480748bb15: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb1f: jmp    0x000002480748bb1f  ;   {runtime_call}
  0x000002480748bb24: nop
  0x000002480748bb25: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb2f: jmp    0x000002480748bb2f  ;   {runtime_call}
  0x000002480748bb34: nop
  0x000002480748bb35: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb3f: jmp    0x000002480748bb3f  ;   {runtime_call}
  0x000002480748bb44: nop
  0x000002480748bb45: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb4f: jmp    0x000002480748bb4f  ;   {runtime_call}
  0x000002480748bb54: nop
  0x000002480748bb55: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb5f: jmp    0x000002480748bb5f  ;   {runtime_call}
  0x000002480748bb64: nop
  0x000002480748bb65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb6f: jmp    0x000002480748bb6f  ;   {runtime_call}
  0x000002480748bb74: nop
  0x000002480748bb75: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb7f: jmp    0x000002480748bb7f  ;   {runtime_call}
  0x000002480748bb84: nop
  0x000002480748bb85: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb8f: jmp    0x000002480748bb8f  ;   {runtime_call}
  0x000002480748bb94: nop
  0x000002480748bb95: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bb9f: jmp    0x000002480748bb9f  ;   {runtime_call}
  0x000002480748bba4: nop
  0x000002480748bba5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bbaf: jmp    0x000002480748bbaf  ;   {runtime_call}
  0x000002480748bbb4: nop
  0x000002480748bbb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bbbf: jmp    0x000002480748bbbf  ;   {runtime_call}
  0x000002480748bbc4: nop
  0x000002480748bbc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bbcf: jmp    0x000002480748bbcf  ;   {runtime_call}
  0x000002480748bbd4: nop
  0x000002480748bbd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bbdf: jmp    0x000002480748bbdf  ;   {runtime_call}
  0x000002480748bbe4: nop
  0x000002480748bbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bbef: jmp    0x000002480748bbef  ;   {runtime_call}
  0x000002480748bbf4: nop
  0x000002480748bbf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bbff: jmp    0x000002480748bbff  ;   {runtime_call}
  0x000002480748bc04: nop
  0x000002480748bc05: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc0f: jmp    0x000002480748bc0f  ;   {runtime_call}
  0x000002480748bc14: nop
  0x000002480748bc15: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc1f: jmp    0x000002480748bc1f  ;   {runtime_call}
  0x000002480748bc24: nop
  0x000002480748bc25: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc2f: jmp    0x000002480748bc2f  ;   {runtime_call}
  0x000002480748bc34: nop
  0x000002480748bc35: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc3f: jmp    0x000002480748bc3f  ;   {runtime_call}
  0x000002480748bc44: nop
  0x000002480748bc45: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc4f: jmp    0x000002480748bc4f  ;   {runtime_call}
  0x000002480748bc54: nop
  0x000002480748bc55: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc5f: jmp    0x000002480748bc5f  ;   {runtime_call}
  0x000002480748bc64: nop
  0x000002480748bc65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc6f: jmp    0x000002480748bc6f  ;   {runtime_call}
  0x000002480748bc74: nop
  0x000002480748bc75: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc7f: jmp    0x000002480748bc7f  ;   {runtime_call}
  0x000002480748bc84: nop
  0x000002480748bc85: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc8f: jmp    0x000002480748bc8f  ;   {runtime_call}
  0x000002480748bc94: nop
  0x000002480748bc95: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bc9f: jmp    0x000002480748bc9f  ;   {runtime_call}
  0x000002480748bca4: nop
  0x000002480748bca5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bcaf: jmp    0x000002480748bcaf  ;   {runtime_call}
  0x000002480748bcb4: nop
  0x000002480748bcb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bcbf: jmp    0x000002480748bcbf  ;   {runtime_call}
  0x000002480748bcc4: nop
  0x000002480748bcc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bccf: jmp    0x000002480748bccf  ;   {runtime_call}
  0x000002480748bcd4: nop
  0x000002480748bcd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bcdf: jmp    0x000002480748bcdf  ;   {runtime_call}
  0x000002480748bce4: nop
  0x000002480748bce5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bcef: jmp    0x000002480748bcef  ;   {runtime_call}
  0x000002480748bcf4: nop
  0x000002480748bcf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bcff: jmp    0x000002480748bcff  ;   {runtime_call}
  0x000002480748bd04: nop
  0x000002480748bd05: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd0f: jmp    0x000002480748bd0f  ;   {runtime_call}
  0x000002480748bd14: nop
  0x000002480748bd15: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd1f: jmp    0x000002480748bd1f  ;   {runtime_call}
  0x000002480748bd24: nop
  0x000002480748bd25: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd2f: jmp    0x000002480748bd2f  ;   {runtime_call}
  0x000002480748bd34: nop
  0x000002480748bd35: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd3f: jmp    0x000002480748bd3f  ;   {runtime_call}
  0x000002480748bd44: nop
  0x000002480748bd45: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd4f: jmp    0x000002480748bd4f  ;   {runtime_call}
  0x000002480748bd54: nop
  0x000002480748bd55: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd5f: jmp    0x000002480748bd5f  ;   {runtime_call}
  0x000002480748bd64: nop
  0x000002480748bd65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd6f: jmp    0x000002480748bd6f  ;   {runtime_call}
  0x000002480748bd74: nop
  0x000002480748bd75: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd7f: jmp    0x000002480748bd7f  ;   {runtime_call}
  0x000002480748bd84: nop
  0x000002480748bd85: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd8f: jmp    0x000002480748bd8f  ;   {runtime_call}
  0x000002480748bd94: nop
  0x000002480748bd95: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bd9f: jmp    0x000002480748bd9f  ;   {runtime_call}
  0x000002480748bda4: nop
  0x000002480748bda5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bdaf: jmp    0x000002480748bdaf  ;   {runtime_call}
  0x000002480748bdb4: nop
  0x000002480748bdb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bdbf: jmp    0x000002480748bdbf  ;   {runtime_call}
  0x000002480748bdc4: nop
  0x000002480748bdc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bdcf: jmp    0x000002480748bdcf  ;   {runtime_call}
  0x000002480748bdd4: nop
  0x000002480748bdd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bddf: jmp    0x000002480748bddf  ;   {runtime_call}
  0x000002480748bde4: nop
  0x000002480748bde5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bdef: jmp    0x000002480748bdef  ;   {runtime_call}
  0x000002480748bdf4: nop
  0x000002480748bdf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bdff: jmp    0x000002480748bdff  ;   {runtime_call}
  0x000002480748be04: nop
  0x000002480748be05: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be0f: jmp    0x000002480748be0f  ;   {runtime_call}
  0x000002480748be14: nop
  0x000002480748be15: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be1f: jmp    0x000002480748be1f  ;   {runtime_call}
  0x000002480748be24: nop
  0x000002480748be25: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be2f: jmp    0x000002480748be2f  ;   {runtime_call}
  0x000002480748be34: nop
  0x000002480748be35: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be3f: jmp    0x000002480748be3f  ;   {runtime_call}
  0x000002480748be44: nop
  0x000002480748be45: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be4f: jmp    0x000002480748be4f  ;   {runtime_call}
  0x000002480748be54: nop
  0x000002480748be55: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be5f: jmp    0x000002480748be5f  ;   {runtime_call}
  0x000002480748be64: nop
  0x000002480748be65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be6f: jmp    0x000002480748be6f  ;   {runtime_call}
  0x000002480748be74: nop
  0x000002480748be75: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be7f: jmp    0x000002480748be7f  ;   {runtime_call}
  0x000002480748be84: nop
  0x000002480748be85: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be8f: jmp    0x000002480748be8f  ;   {runtime_call}
  0x000002480748be94: nop
  0x000002480748be95: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748be9f: jmp    0x000002480748be9f  ;   {runtime_call}
  0x000002480748bea4: nop
  0x000002480748bea5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748beaf: jmp    0x000002480748beaf  ;   {runtime_call}
  0x000002480748beb4: nop
  0x000002480748beb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bebf: jmp    0x000002480748bebf  ;   {runtime_call}
  0x000002480748bec4: nop
  0x000002480748bec5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748becf: jmp    0x000002480748becf  ;   {runtime_call}
  0x000002480748bed4: nop
  0x000002480748bed5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bedf: jmp    0x000002480748bedf  ;   {runtime_call}
  0x000002480748bee4: nop
  0x000002480748bee5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748beef: jmp    0x000002480748beef  ;   {runtime_call}
  0x000002480748bef4: nop
  0x000002480748bef5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748beff: jmp    0x000002480748beff  ;   {runtime_call}
  0x000002480748bf04: nop
  0x000002480748bf05: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf0f: jmp    0x000002480748bf0f  ;   {runtime_call}
  0x000002480748bf14: nop
  0x000002480748bf15: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf1f: jmp    0x000002480748bf1f  ;   {runtime_call}
  0x000002480748bf24: nop
  0x000002480748bf25: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf2f: jmp    0x000002480748bf2f  ;   {runtime_call}
  0x000002480748bf34: nop
  0x000002480748bf35: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf3f: jmp    0x000002480748bf3f  ;   {runtime_call}
  0x000002480748bf44: nop
  0x000002480748bf45: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf4f: jmp    0x000002480748bf4f  ;   {runtime_call}
  0x000002480748bf54: nop
  0x000002480748bf55: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf5f: jmp    0x000002480748bf5f  ;   {runtime_call}
  0x000002480748bf64: nop
  0x000002480748bf65: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf6f: jmp    0x000002480748bf6f  ;   {runtime_call}
  0x000002480748bf74: nop
  0x000002480748bf75: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf7f: jmp    0x000002480748bf7f  ;   {runtime_call}
  0x000002480748bf84: nop
  0x000002480748bf85: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf8f: jmp    0x000002480748bf8f  ;   {runtime_call}
  0x000002480748bf94: nop
  0x000002480748bf95: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bf9f: jmp    0x000002480748bf9f  ;   {runtime_call}
  0x000002480748bfa4: nop
  0x000002480748bfa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bfaf: jmp    0x000002480748bfaf  ;   {runtime_call}
  0x000002480748bfb4: nop
  0x000002480748bfb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bfbf: jmp    0x000002480748bfbf  ;   {runtime_call}
  0x000002480748bfc4: nop
  0x000002480748bfc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bfcf: jmp    0x000002480748bfcf  ;   {runtime_call}
  0x000002480748bfd4: nop
  0x000002480748bfd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bfdf: jmp    0x000002480748bfdf  ;   {runtime_call}
  0x000002480748bfe4: nop
  0x000002480748bfe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bfef: jmp    0x000002480748bfef  ;   {runtime_call}
  0x000002480748bff4: nop
  0x000002480748bff5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748bfff: jmp    0x000002480748bfff  ;   {runtime_call}
  0x000002480748c004: nop
  0x000002480748c005: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c00f: jmp    0x000002480748c00f  ;   {runtime_call}
  0x000002480748c014: nop
  0x000002480748c015: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c01f: jmp    0x000002480748c01f  ;   {runtime_call}
  0x000002480748c024: nop
  0x000002480748c025: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c02f: jmp    0x000002480748c02f  ;   {runtime_call}
  0x000002480748c034: nop
  0x000002480748c035: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c03f: jmp    0x000002480748c03f  ;   {runtime_call}
  0x000002480748c044: nop
  0x000002480748c045: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c04f: jmp    0x000002480748c04f  ;   {runtime_call}
  0x000002480748c054: nop
  0x000002480748c055: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c05f: jmp    0x000002480748c05f  ;   {runtime_call}
  0x000002480748c064: nop
  0x000002480748c065: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c06f: jmp    0x000002480748c06f  ;   {runtime_call}
  0x000002480748c074: nop
  0x000002480748c075: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c07f: jmp    0x000002480748c07f  ;   {runtime_call}
  0x000002480748c084: nop
  0x000002480748c085: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c08f: jmp    0x000002480748c08f  ;   {runtime_call}
  0x000002480748c094: nop
  0x000002480748c095: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c09f: jmp    0x000002480748c09f  ;   {runtime_call}
  0x000002480748c0a4: nop
  0x000002480748c0a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c0af: jmp    0x000002480748c0af  ;   {runtime_call}
  0x000002480748c0b4: nop
  0x000002480748c0b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c0bf: jmp    0x000002480748c0bf  ;   {runtime_call}
  0x000002480748c0c4: nop
  0x000002480748c0c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c0cf: jmp    0x000002480748c0cf  ;   {runtime_call}
  0x000002480748c0d4: nop
  0x000002480748c0d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c0df: jmp    0x000002480748c0df  ;   {runtime_call}
  0x000002480748c0e4: nop
  0x000002480748c0e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c0ef: jmp    0x000002480748c0ef  ;   {runtime_call}
  0x000002480748c0f4: nop
  0x000002480748c0f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480748c0ff: jmp    0x000002480748c0ff  ;   {runtime_call}
[Exception Handler]
  0x000002480748c104: call   0x0000024807431320  ;   {runtime_call}
  0x000002480748c109: mov    %rsp,-0x28(%rsp)
  0x000002480748c10e: sub    $0x80,%rsp
  0x000002480748c115: mov    %rax,0x78(%rsp)
  0x000002480748c11a: mov    %rcx,0x70(%rsp)
  0x000002480748c11f: mov    %rdx,0x68(%rsp)
  0x000002480748c124: mov    %rbx,0x60(%rsp)
  0x000002480748c129: mov    %rbp,0x50(%rsp)
  0x000002480748c12e: mov    %rsi,0x48(%rsp)
  0x000002480748c133: mov    %rdi,0x40(%rsp)
  0x000002480748c138: mov    %r8,0x38(%rsp)
  0x000002480748c13d: mov    %r9,0x30(%rsp)
  0x000002480748c142: mov    %r10,0x28(%rsp)
  0x000002480748c147: mov    %r11,0x20(%rsp)
  0x000002480748c14c: mov    %r12,0x18(%rsp)
  0x000002480748c151: mov    %r13,0x10(%rsp)
  0x000002480748c156: mov    %r14,0x8(%rsp)
  0x000002480748c15b: mov    %r15,(%rsp)
  0x000002480748c15f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480748c169: movabs $0x2480748c109,%rdx  ;   {internal_word}
  0x000002480748c173: mov    %rsp,%r8
  0x000002480748c176: and    $0xfffffffffffffff0,%rsp
  0x000002480748c17a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480748c184: call   *%r10
  0x000002480748c187: hlt    
[Deopt Handler Code]
  0x000002480748c188: movabs $0x2480748c188,%r10  ;   {section_word}
  0x000002480748c192: push   %r10
  0x000002480748c194: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480748c199: hlt    
  0x000002480748c19a: hlt    
  0x000002480748c19b: hlt    
  0x000002480748c19c: hlt    
  0x000002480748c19d: hlt    
  0x000002480748c19e: hlt    
  0x000002480748c19f: hlt    
<nmethod compile_id='190' compiler='C1' level='3' entry='0x0000024807486ac0' size='41368' address='0x0000024807485d50' relocation_offset='288' insts_offset='3440' stub_offset='22704' scopes_data_offset='25792' scopes_pcs_offset='31696' dependencies_offset='41136' nul_chk_table_offset='41144' method='jdk/internal/org/objectweb/asm/Frame execute (IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' bytes='2252' count='1102' iicount='1102' stamp='2.447'/>
Decoding compiled method 0x000002480748ff10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  # parm0:    r8:r8     = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000024807490140: mov    0x8(%rdx),%r10d
  0x0000024807490144: shl    $0x3,%r10
  0x0000024807490148: cmp    %rax,%r10
  0x000002480749014b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807490151: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480749015c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807490160: mov    %eax,-0x6000(%rsp)
  0x0000024807490167: push   %rbp
  0x0000024807490168: sub    $0x40,%rsp
  0x000002480749016c: mov    %rdx,0x30(%rsp)
  0x0000024807490171: mov    %r8,0x28(%rsp)
  0x0000024807490176: movabs $0x2481fe5cf78,%rsi  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490180: mov    0xdc(%rsi),%edi
  0x0000024807490186: add    $0x8,%edi
  0x0000024807490189: mov    %edi,0xdc(%rsi)
  0x000002480749018f: movabs $0x2481fe40ab8,%rsi  ;   {metadata({method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490199: and    $0x1ff8,%edi
  0x000002480749019f: cmp    $0x0,%edi
  0x00000248074901a2: je     0x0000024807490c73  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@0 (line 309)

  0x00000248074901a8: mov    0x18(%rdx),%esi    ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@1 (line 309)

  0x00000248074901ab: cmp    $0x1,%esi
  0x00000248074901ae: je     0x0000024807490bb9
  0x00000248074901b4: cmp    $0x3,%esi
  0x00000248074901b7: je     0x0000024807490225
  0x00000248074901bd: cmp    $0x4,%esi
  0x00000248074901c0: je     0x0000024807490225
  0x00000248074901c6: cmp    $0x5,%esi
  0x00000248074901c9: je     0x000002480749026a
  0x00000248074901cf: cmp    $0x6,%esi
  0x00000248074901d2: je     0x000002480749026a
  0x00000248074901d8: cmp    $0x7,%esi
  0x00000248074901db: je     0x0000024807490bb9
  0x00000248074901e1: cmp    $0x8,%esi
  0x00000248074901e4: je     0x0000024807490bb9
  0x00000248074901ea: cmp    $0xc,%esi
  0x00000248074901ed: je     0x00000248074908ca
  0x00000248074901f3: cmp    $0x10,%esi
  0x00000248074901f6: je     0x0000024807490bb9
  0x00000248074901fc: cmp    $0x12,%esi
  0x00000248074901ff: je     0x00000248074906aa
  0x0000024807490205: cmp    $0x1e,%esi
  0x0000024807490208: je     0x0000024807490bb9
  0x000002480749020e: cmp    $0x1f,%esi
  0x0000024807490211: je     0x0000024807490582
  0x0000024807490217: cmp    $0x20,%esi
  0x000002480749021a: je     0x000002480749026a
  0x0000024807490220: jmp    0x00000248074902b0  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@4 (line 309)

  0x0000024807490225: mov    0x1c(%r8),%r8d     ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@179 (line 322)
                                                ; implicit exception: dispatches to 0x0000024807490c8a
  0x0000024807490229: mov    0x1c(%rdx),%edx    ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@183 (line 322)

  0x000002480749022c: cmp    %edx,%r8d
  0x000002480749022f: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490239: movabs $0x390,%rdx
  0x0000024807490243: jne    0x0000024807490253
  0x0000024807490249: movabs $0x3a0,%rdx
  0x0000024807490253: mov    (%r8,%rdx,1),%rsi
  0x0000024807490257: lea    0x1(%rsi),%rsi
  0x000002480749025b: mov    %rsi,(%r8,%rdx,1)
  0x000002480749025f: jne    0x0000024807490ba5
  0x0000024807490265: jmp    0x0000024807490b8b  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@186 (line 322)

  0x000002480749026a: mov    0x10(%r8),%rsi     ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@161 (line 319)
                                                ; implicit exception: dispatches to 0x0000024807490c8f
  0x000002480749026e: mov    0x10(%rdx),%r8     ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@165 (line 319)

  0x0000024807490272: cmp    %r8,%rsi
  0x0000024807490275: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x000002480749027f: movabs $0x358,%rdx
  0x0000024807490289: jne    0x0000024807490299
  0x000002480749028f: movabs $0x368,%rdx
  0x0000024807490299: mov    (%r8,%rdx,1),%rsi
  0x000002480749029d: lea    0x1(%rsi),%rsi
  0x00000248074902a1: mov    %rsi,(%r8,%rdx,1)
  0x00000248074902a5: jne    0x0000024807490b77
  0x00000248074902ab: jmp    0x0000024807490b5d  ;*lcmp
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@168 (line 319)

  0x00000248074902b0: mov    0x24(%r8),%esi     ; implicit exception: dispatches to 0x0000024807490c94
  0x00000248074902b4: shl    $0x3,%rsi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@307 (line 336)

  0x00000248074902b8: mov    0x24(%rdx),%edi
  0x00000248074902bb: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@311 (line 336)

  0x00000248074902bf: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490c99
  0x00000248074902c2: mov    %rsi,%rbx
  0x00000248074902c5: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074902cf: mov    0x8(%rbx),%ebx
  0x00000248074902d2: shl    $0x3,%rbx
  0x00000248074902d6: cmp    0x5e8(%rax),%rbx
  0x00000248074902dd: jne    0x00000248074902ec
  0x00000248074902df: addq   $0x1,0x5f0(%rax)
  0x00000248074902e7: jmp    0x0000024807490352
  0x00000248074902ec: cmp    0x5f8(%rax),%rbx
  0x00000248074902f3: jne    0x0000024807490302
  0x00000248074902f5: addq   $0x1,0x600(%rax)
  0x00000248074902fd: jmp    0x0000024807490352
  0x0000024807490302: cmpq   $0x0,0x5e8(%rax)
  0x000002480749030d: jne    0x0000024807490326
  0x000002480749030f: mov    %rbx,0x5e8(%rax)
  0x0000024807490316: movq   $0x1,0x5f0(%rax)
  0x0000024807490321: jmp    0x0000024807490352
  0x0000024807490326: cmpq   $0x0,0x5f8(%rax)
  0x0000024807490331: jne    0x000002480749034a
  0x0000024807490333: mov    %rbx,0x5f8(%rax)
  0x000002480749033a: movq   $0x1,0x600(%rax)
  0x0000024807490345: jmp    0x0000024807490352
  0x000002480749034a: addq   $0x1,0x5e0(%rax)
  0x0000024807490352: mov    %rdi,%r8
  0x0000024807490355: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@314 (line 336)

  0x0000024807490358: nop
  0x0000024807490359: nop
  0x000002480749035a: nop
  0x000002480749035b: nop
  0x000002480749035c: nop
  0x000002480749035d: nop
  0x000002480749035e: nop
  0x000002480749035f: call   0x0000024807375ee0  ; OopMap{[40]=Oop [48]=Oop off=548}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@314 (line 336)
                                                ;   {optimized virtual_call}
  0x0000024807490364: cmp    $0x0,%eax
  0x0000024807490367: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490371: movabs $0x610,%rdx
  0x000002480749037b: je     0x000002480749038b
  0x0000024807490381: movabs $0x620,%rdx
  0x000002480749038b: mov    (%r8,%rdx,1),%rsi
  0x000002480749038f: lea    0x1(%rsi),%rsi
  0x0000024807490393: mov    %rsi,(%r8,%rdx,1)
  0x0000024807490397: je     0x0000024807490b2f  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@317 (line 336)

  0x000002480749039d: mov    0x28(%rsp),%r8
  0x00000248074903a2: mov    0x30(%rsp),%rdx
  0x00000248074903a7: mov    0x28(%r8),%esi
  0x00000248074903ab: shl    $0x3,%rsi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@321 (line 336)

  0x00000248074903af: mov    0x28(%rdx),%edi
  0x00000248074903b2: shl    $0x3,%rdi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@325 (line 336)

  0x00000248074903b6: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490c9e
  0x00000248074903b9: mov    %rsi,%rbx
  0x00000248074903bc: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074903c6: mov    0x8(%rbx),%ebx
  0x00000248074903c9: shl    $0x3,%rbx
  0x00000248074903cd: cmp    0x638(%rax),%rbx
  0x00000248074903d4: jne    0x00000248074903e3
  0x00000248074903d6: addq   $0x1,0x640(%rax)
  0x00000248074903de: jmp    0x0000024807490449
  0x00000248074903e3: cmp    0x648(%rax),%rbx
  0x00000248074903ea: jne    0x00000248074903f9
  0x00000248074903ec: addq   $0x1,0x650(%rax)
  0x00000248074903f4: jmp    0x0000024807490449
  0x00000248074903f9: cmpq   $0x0,0x638(%rax)
  0x0000024807490404: jne    0x000002480749041d
  0x0000024807490406: mov    %rbx,0x638(%rax)
  0x000002480749040d: movq   $0x1,0x640(%rax)
  0x0000024807490418: jmp    0x0000024807490449
  0x000002480749041d: cmpq   $0x0,0x648(%rax)
  0x0000024807490428: jne    0x0000024807490441
  0x000002480749042a: mov    %rbx,0x648(%rax)
  0x0000024807490431: movq   $0x1,0x650(%rax)
  0x000002480749043c: jmp    0x0000024807490449
  0x0000024807490441: addq   $0x1,0x630(%rax)
  0x0000024807490449: mov    %rdi,%r8
  0x000002480749044c: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@328 (line 336)

  0x000002480749044f: call   0x0000024807375ee0  ; OopMap{[40]=Oop [48]=Oop off=788}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@328 (line 336)
                                                ;   {optimized virtual_call}
  0x0000024807490454: cmp    $0x0,%eax
  0x0000024807490457: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490461: movabs $0x660,%rdx
  0x000002480749046b: je     0x000002480749047b
  0x0000024807490471: movabs $0x670,%rdx
  0x000002480749047b: mov    (%r8,%rdx,1),%rsi
  0x000002480749047f: lea    0x1(%rsi),%rsi
  0x0000024807490483: mov    %rsi,(%r8,%rdx,1)
  0x0000024807490487: je     0x0000024807490b2f  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@331 (line 336)

  0x000002480749048d: mov    0x28(%rsp),%r8
  0x0000024807490492: mov    0x30(%rsp),%rdx
  0x0000024807490497: mov    0x2c(%r8),%esi
  0x000002480749049b: shl    $0x3,%rsi          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@335 (line 336)

  0x000002480749049f: mov    0x2c(%rdx),%r8d
  0x00000248074904a3: shl    $0x3,%r8           ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@339 (line 336)

  0x00000248074904a7: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490ca3
  0x00000248074904aa: mov    %rsi,%rdx
  0x00000248074904ad: movabs $0x2481fe5cf78,%rdi  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074904b7: mov    0x8(%rdx),%edx
  0x00000248074904ba: shl    $0x3,%rdx
  0x00000248074904be: cmp    0x688(%rdi),%rdx
  0x00000248074904c5: jne    0x00000248074904d4
  0x00000248074904c7: addq   $0x1,0x690(%rdi)
  0x00000248074904cf: jmp    0x000002480749053a
  0x00000248074904d4: cmp    0x698(%rdi),%rdx
  0x00000248074904db: jne    0x00000248074904ea
  0x00000248074904dd: addq   $0x1,0x6a0(%rdi)
  0x00000248074904e5: jmp    0x000002480749053a
  0x00000248074904ea: cmpq   $0x0,0x688(%rdi)
  0x00000248074904f5: jne    0x000002480749050e
  0x00000248074904f7: mov    %rdx,0x688(%rdi)
  0x00000248074904fe: movq   $0x1,0x690(%rdi)
  0x0000024807490509: jmp    0x000002480749053a
  0x000002480749050e: cmpq   $0x0,0x698(%rdi)
  0x0000024807490519: jne    0x0000024807490532
  0x000002480749051b: mov    %rdx,0x698(%rdi)
  0x0000024807490522: movq   $0x1,0x6a0(%rdi)
  0x000002480749052d: jmp    0x000002480749053a
  0x0000024807490532: addq   $0x1,0x680(%rdi)
  0x000002480749053a: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@342 (line 337)

  0x000002480749053d: nop
  0x000002480749053e: nop
  0x000002480749053f: call   0x0000024807375ee0  ; OopMap{off=1028}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@342 (line 337)
                                                ;   {optimized virtual_call}
  0x0000024807490544: cmp    $0x0,%eax
  0x0000024807490547: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490551: movabs $0x6b0,%rdx
  0x000002480749055b: je     0x000002480749056b
  0x0000024807490561: movabs $0x6c0,%rdx
  0x000002480749056b: mov    (%r8,%rdx,1),%rsi
  0x000002480749056f: lea    0x1(%rsi),%rsi
  0x0000024807490573: mov    %rsi,(%r8,%rdx,1)
  0x0000024807490577: je     0x0000024807490b2f
  0x000002480749057d: jmp    0x0000024807490b39  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@345 (line 337)

  0x0000024807490582: mov    0x1c(%r8),%esi     ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@196 (line 324)
                                                ; implicit exception: dispatches to 0x0000024807490ca8
  0x0000024807490586: mov    0x1c(%rdx),%edi    ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@200 (line 324)

  0x0000024807490589: cmp    %edi,%esi
  0x000002480749058b: movabs $0x2481fe5cf78,%rsi  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490595: movabs $0x3c8,%rdi
  0x000002480749059f: jne    0x00000248074905af
  0x00000248074905a5: movabs $0x3d8,%rdi
  0x00000248074905af: mov    (%rsi,%rdi,1),%rbx
  0x00000248074905b3: lea    0x1(%rbx),%rbx
  0x00000248074905b7: mov    %rbx,(%rsi,%rdi,1)
  0x00000248074905bb: jne    0x0000024807490b01  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@203 (line 324)

  0x00000248074905c1: mov    0x24(%r8),%esi
  0x00000248074905c5: shl    $0x3,%rsi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@207 (line 324)

  0x00000248074905c9: mov    0x24(%rdx),%r8d
  0x00000248074905cd: shl    $0x3,%r8           ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@211 (line 324)

  0x00000248074905d1: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490cad
  0x00000248074905d4: mov    %rsi,%rdx
  0x00000248074905d7: movabs $0x2481fe5cf78,%rdi  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074905e1: mov    0x8(%rdx),%edx
  0x00000248074905e4: shl    $0x3,%rdx
  0x00000248074905e8: cmp    0x3f0(%rdi),%rdx
  0x00000248074905ef: jne    0x00000248074905fe
  0x00000248074905f1: addq   $0x1,0x3f8(%rdi)
  0x00000248074905f9: jmp    0x0000024807490664
  0x00000248074905fe: cmp    0x400(%rdi),%rdx
  0x0000024807490605: jne    0x0000024807490614
  0x0000024807490607: addq   $0x1,0x408(%rdi)
  0x000002480749060f: jmp    0x0000024807490664
  0x0000024807490614: cmpq   $0x0,0x3f0(%rdi)
  0x000002480749061f: jne    0x0000024807490638
  0x0000024807490621: mov    %rdx,0x3f0(%rdi)
  0x0000024807490628: movq   $0x1,0x3f8(%rdi)
  0x0000024807490633: jmp    0x0000024807490664
  0x0000024807490638: cmpq   $0x0,0x400(%rdi)
  0x0000024807490643: jne    0x000002480749065c
  0x0000024807490645: mov    %rdx,0x400(%rdi)
  0x000002480749064c: movq   $0x1,0x408(%rdi)
  0x0000024807490657: jmp    0x0000024807490664
  0x000002480749065c: addq   $0x1,0x3e8(%rdi)
  0x0000024807490664: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@214 (line 324)

  0x0000024807490667: call   0x0000024807375ee0  ; OopMap{off=1324}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@214 (line 324)
                                                ;   {optimized virtual_call}
  0x000002480749066c: cmp    $0x0,%eax
  0x000002480749066f: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490679: movabs $0x418,%rdx
  0x0000024807490683: je     0x0000024807490693
  0x0000024807490689: movabs $0x428,%rdx
  0x0000024807490693: mov    (%r8,%rdx,1),%rsi
  0x0000024807490697: lea    0x1(%rsi),%rsi
  0x000002480749069b: mov    %rsi,(%r8,%rdx,1)
  0x000002480749069f: je     0x0000024807490b01
  0x00000248074906a5: jmp    0x0000024807490b0b  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@217 (line 324)

  0x00000248074906aa: mov    0x10(%r8),%rsi     ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@261 (line 328)
                                                ; implicit exception: dispatches to 0x0000024807490cb2
  0x00000248074906ae: mov    0x10(%rdx),%rdi    ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@265 (line 328)

  0x00000248074906b2: cmp    %rdi,%rsi
  0x00000248074906b5: movabs $0x2481fe5cf78,%rsi  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074906bf: movabs $0x508,%rdi
  0x00000248074906c9: jne    0x00000248074906d9
  0x00000248074906cf: movabs $0x518,%rdi
  0x00000248074906d9: mov    (%rsi,%rdi,1),%rbx
  0x00000248074906dd: lea    0x1(%rbx),%rbx
  0x00000248074906e1: mov    %rbx,(%rsi,%rdi,1)
  0x00000248074906e5: jne    0x0000024807490ad3  ;*lcmp
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@268 (line 328)

  0x00000248074906eb: mov    0x24(%r8),%esi
  0x00000248074906ef: shl    $0x3,%rsi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@273 (line 328)

  0x00000248074906f3: mov    0x24(%rdx),%edi
  0x00000248074906f6: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@277 (line 328)

  0x00000248074906fa: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490cb7
  0x00000248074906fd: mov    %rsi,%rbx
  0x0000024807490700: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x000002480749070a: mov    0x8(%rbx),%ebx
  0x000002480749070d: shl    $0x3,%rbx
  0x0000024807490711: cmp    0x530(%rax),%rbx
  0x0000024807490718: jne    0x0000024807490727
  0x000002480749071a: addq   $0x1,0x538(%rax)
  0x0000024807490722: jmp    0x000002480749078d
  0x0000024807490727: cmp    0x540(%rax),%rbx
  0x000002480749072e: jne    0x000002480749073d
  0x0000024807490730: addq   $0x1,0x548(%rax)
  0x0000024807490738: jmp    0x000002480749078d
  0x000002480749073d: cmpq   $0x0,0x530(%rax)
  0x0000024807490748: jne    0x0000024807490761
  0x000002480749074a: mov    %rbx,0x530(%rax)
  0x0000024807490751: movq   $0x1,0x538(%rax)
  0x000002480749075c: jmp    0x000002480749078d
  0x0000024807490761: cmpq   $0x0,0x540(%rax)
  0x000002480749076c: jne    0x0000024807490785
  0x000002480749076e: mov    %rbx,0x540(%rax)
  0x0000024807490775: movq   $0x1,0x548(%rax)
  0x0000024807490780: jmp    0x000002480749078d
  0x0000024807490785: addq   $0x1,0x528(%rax)
  0x000002480749078d: mov    %rdi,%r8
  0x0000024807490790: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@280 (line 328)

  0x0000024807490793: nop
  0x0000024807490794: nop
  0x0000024807490795: nop
  0x0000024807490796: nop
  0x0000024807490797: call   0x0000024807375ee0  ; OopMap{[40]=Oop [48]=Oop off=1628}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@280 (line 328)
                                                ;   {optimized virtual_call}
  0x000002480749079c: cmp    $0x0,%eax
  0x000002480749079f: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074907a9: movabs $0x558,%rdx
  0x00000248074907b3: je     0x00000248074907c3
  0x00000248074907b9: movabs $0x568,%rdx
  0x00000248074907c3: mov    (%r8,%rdx,1),%rsi
  0x00000248074907c7: lea    0x1(%rsi),%rsi
  0x00000248074907cb: mov    %rsi,(%r8,%rdx,1)
  0x00000248074907cf: je     0x0000024807490ad3  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@283 (line 328)

  0x00000248074907d5: mov    0x28(%rsp),%r8
  0x00000248074907da: mov    0x30(%rsp),%rdx
  0x00000248074907df: mov    0x28(%r8),%esi
  0x00000248074907e3: shl    $0x3,%rsi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@287 (line 328)

  0x00000248074907e7: mov    0x28(%rdx),%r8d
  0x00000248074907eb: shl    $0x3,%r8           ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@291 (line 328)

  0x00000248074907ef: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490cbc
  0x00000248074907f2: mov    %rsi,%rdx
  0x00000248074907f5: movabs $0x2481fe5cf78,%rdi  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074907ff: mov    0x8(%rdx),%edx
  0x0000024807490802: shl    $0x3,%rdx
  0x0000024807490806: cmp    0x580(%rdi),%rdx
  0x000002480749080d: jne    0x000002480749081c
  0x000002480749080f: addq   $0x1,0x588(%rdi)
  0x0000024807490817: jmp    0x0000024807490882
  0x000002480749081c: cmp    0x590(%rdi),%rdx
  0x0000024807490823: jne    0x0000024807490832
  0x0000024807490825: addq   $0x1,0x598(%rdi)
  0x000002480749082d: jmp    0x0000024807490882
  0x0000024807490832: cmpq   $0x0,0x580(%rdi)
  0x000002480749083d: jne    0x0000024807490856
  0x000002480749083f: mov    %rdx,0x580(%rdi)
  0x0000024807490846: movq   $0x1,0x588(%rdi)
  0x0000024807490851: jmp    0x0000024807490882
  0x0000024807490856: cmpq   $0x0,0x590(%rdi)
  0x0000024807490861: jne    0x000002480749087a
  0x0000024807490863: mov    %rdx,0x590(%rdi)
  0x000002480749086a: movq   $0x1,0x598(%rdi)
  0x0000024807490875: jmp    0x0000024807490882
  0x000002480749087a: addq   $0x1,0x578(%rdi)
  0x0000024807490882: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@294 (line 329)

  0x0000024807490885: nop
  0x0000024807490886: nop
  0x0000024807490887: call   0x0000024807375ee0  ; OopMap{off=1868}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@294 (line 329)
                                                ;   {optimized virtual_call}
  0x000002480749088c: cmp    $0x0,%eax
  0x000002480749088f: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490899: movabs $0x5a8,%rdx
  0x00000248074908a3: je     0x00000248074908b3
  0x00000248074908a9: movabs $0x5b8,%rdx
  0x00000248074908b3: mov    (%r8,%rdx,1),%rsi
  0x00000248074908b7: lea    0x1(%rsi),%rsi
  0x00000248074908bb: mov    %rsi,(%r8,%rdx,1)
  0x00000248074908bf: je     0x0000024807490ad3
  0x00000248074908c5: jmp    0x0000024807490add  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@297 (line 329)

  0x00000248074908ca: mov    0x24(%r8),%esi     ; implicit exception: dispatches to 0x0000024807490cc1
  0x00000248074908ce: shl    $0x3,%rsi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@227 (line 326)

  0x00000248074908d2: mov    0x24(%rdx),%edi
  0x00000248074908d5: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@231 (line 326)

  0x00000248074908d9: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490cc6
  0x00000248074908dc: mov    %rsi,%rbx
  0x00000248074908df: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074908e9: mov    0x8(%rbx),%ebx
  0x00000248074908ec: shl    $0x3,%rbx
  0x00000248074908f0: cmp    0x458(%rax),%rbx
  0x00000248074908f7: jne    0x0000024807490906
  0x00000248074908f9: addq   $0x1,0x460(%rax)
  0x0000024807490901: jmp    0x000002480749096c
  0x0000024807490906: cmp    0x468(%rax),%rbx
  0x000002480749090d: jne    0x000002480749091c
  0x000002480749090f: addq   $0x1,0x470(%rax)
  0x0000024807490917: jmp    0x000002480749096c
  0x000002480749091c: cmpq   $0x0,0x458(%rax)
  0x0000024807490927: jne    0x0000024807490940
  0x0000024807490929: mov    %rbx,0x458(%rax)
  0x0000024807490930: movq   $0x1,0x460(%rax)
  0x000002480749093b: jmp    0x000002480749096c
  0x0000024807490940: cmpq   $0x0,0x468(%rax)
  0x000002480749094b: jne    0x0000024807490964
  0x000002480749094d: mov    %rbx,0x468(%rax)
  0x0000024807490954: movq   $0x1,0x470(%rax)
  0x000002480749095f: jmp    0x000002480749096c
  0x0000024807490964: addq   $0x1,0x450(%rax)
  0x000002480749096c: mov    %rdi,%r8
  0x000002480749096f: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@234 (line 326)

  0x0000024807490972: nop
  0x0000024807490973: nop
  0x0000024807490974: nop
  0x0000024807490975: nop
  0x0000024807490976: nop
  0x0000024807490977: call   0x0000024807375ee0  ; OopMap{[40]=Oop [48]=Oop off=2108}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@234 (line 326)
                                                ;   {optimized virtual_call}
  0x000002480749097c: cmp    $0x0,%eax
  0x000002480749097f: movabs $0x2481fe5cf78,%r8  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490989: movabs $0x480,%rdx
  0x0000024807490993: je     0x00000248074909a3
  0x0000024807490999: movabs $0x490,%rdx
  0x00000248074909a3: mov    (%r8,%rdx,1),%rsi
  0x00000248074909a7: lea    0x1(%rsi),%rsi
  0x00000248074909ab: mov    %rsi,(%r8,%rdx,1)
  0x00000248074909af: je     0x0000024807490aa5  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@237 (line 326)

  0x00000248074909b5: mov    0x28(%rsp),%r8
  0x00000248074909ba: mov    0x30(%rsp),%rdx
  0x00000248074909bf: mov    0x28(%r8),%esi
  0x00000248074909c3: shl    $0x3,%rsi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@241 (line 326)

  0x00000248074909c7: mov    0x28(%rdx),%r8d
  0x00000248074909cb: shl    $0x3,%r8           ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@245 (line 326)

  0x00000248074909cf: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490ccb
  0x00000248074909d2: mov    %rsi,%rdx
  0x00000248074909d5: movabs $0x2481fe5cf78,%rdi  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x00000248074909df: mov    0x8(%rdx),%edx
  0x00000248074909e2: shl    $0x3,%rdx
  0x00000248074909e6: cmp    0x4a8(%rdi),%rdx
  0x00000248074909ed: jne    0x00000248074909fc
  0x00000248074909ef: addq   $0x1,0x4b0(%rdi)
  0x00000248074909f7: jmp    0x0000024807490a62
  0x00000248074909fc: cmp    0x4b8(%rdi),%rdx
  0x0000024807490a03: jne    0x0000024807490a12
  0x0000024807490a05: addq   $0x1,0x4c0(%rdi)
  0x0000024807490a0d: jmp    0x0000024807490a62
  0x0000024807490a12: cmpq   $0x0,0x4a8(%rdi)
  0x0000024807490a1d: jne    0x0000024807490a36
  0x0000024807490a1f: mov    %rdx,0x4a8(%rdi)
  0x0000024807490a26: movq   $0x1,0x4b0(%rdi)
  0x0000024807490a31: jmp    0x0000024807490a62
  0x0000024807490a36: cmpq   $0x0,0x4b8(%rdi)
  0x0000024807490a41: jne    0x0000024807490a5a
  0x0000024807490a43: mov    %rdx,0x4b8(%rdi)
  0x0000024807490a4a: movq   $0x1,0x4c0(%rdi)
  0x0000024807490a55: jmp    0x0000024807490a62
  0x0000024807490a5a: addq   $0x1,0x4a0(%rdi)
  0x0000024807490a62: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@248 (line 326)

  0x0000024807490a65: nop
  0x0000024807490a66: nop
  0x0000024807490a67: call   0x0000024807375ee0  ; OopMap{off=2348}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@248 (line 326)
                                                ;   {optimized virtual_call}
  0x0000024807490a6c: cmp    $0x0,%eax
  0x0000024807490a6f: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490a79: movabs $0x4d0,%r8
  0x0000024807490a83: je     0x0000024807490a93
  0x0000024807490a89: movabs $0x4e0,%r8
  0x0000024807490a93: mov    (%rax,%r8,1),%rdx
  0x0000024807490a97: lea    0x1(%rdx),%rdx
  0x0000024807490a9b: mov    %rdx,(%rax,%r8,1)
  0x0000024807490a9f: jne    0x0000024807490aaf  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@251 (line 326)

  0x0000024807490aa5: mov    $0x0,%eax
  0x0000024807490aaa: jmp    0x0000024807490ac4  ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@259 (line 326)

  0x0000024807490aaf: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490ab9: incl   0x4f0(%rax)
  0x0000024807490abf: mov    $0x1,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@255 (line 326)

  0x0000024807490ac4: and    $0x1,%eax
  0x0000024807490ac7: add    $0x40,%rsp
  0x0000024807490acb: pop    %rbp
  0x0000024807490acc: test   %eax,-0x1ee09d2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807490ad2: ret                       ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@259 (line 326)

  0x0000024807490ad3: mov    $0x0,%eax
  0x0000024807490ad8: jmp    0x0000024807490af2  ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@305 (line 328)

  0x0000024807490add: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490ae7: incl   0x5c8(%rax)
  0x0000024807490aed: mov    $0x1,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@301 (line 329)

  0x0000024807490af2: and    $0x1,%eax
  0x0000024807490af5: add    $0x40,%rsp
  0x0000024807490af9: pop    %rbp
  0x0000024807490afa: test   %eax,-0x1ee0a00(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807490b00: ret                       ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@305 (line 328)

  0x0000024807490b01: mov    $0x0,%eax
  0x0000024807490b06: jmp    0x0000024807490b20  ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@225 (line 324)

  0x0000024807490b0b: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490b15: incl   0x438(%rax)
  0x0000024807490b1b: mov    $0x1,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@221 (line 324)

  0x0000024807490b20: and    $0x1,%eax
  0x0000024807490b23: add    $0x40,%rsp
  0x0000024807490b27: pop    %rbp
  0x0000024807490b28: test   %eax,-0x1ee0a2e(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807490b2e: ret                       ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@225 (line 324)

  0x0000024807490b2f: mov    $0x0,%eax
  0x0000024807490b34: jmp    0x0000024807490b4e  ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@353 (line 336)

  0x0000024807490b39: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490b43: incl   0x6d0(%rax)
  0x0000024807490b49: mov    $0x1,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@349 (line 337)

  0x0000024807490b4e: and    $0x1,%eax
  0x0000024807490b51: add    $0x40,%rsp
  0x0000024807490b55: pop    %rbp
  0x0000024807490b56: test   %eax,-0x1ee0a5c(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807490b5c: ret                       ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@353 (line 336)

  0x0000024807490b5d: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490b67: incl   0x378(%rax)
  0x0000024807490b6d: mov    $0x1,%eax
  0x0000024807490b72: jmp    0x0000024807490b7c  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@173 (line 319)

  0x0000024807490b77: mov    $0x0,%eax
  0x0000024807490b7c: and    $0x1,%eax
  0x0000024807490b7f: add    $0x40,%rsp
  0x0000024807490b83: pop    %rbp
  0x0000024807490b84: test   %eax,-0x1ee0a8a(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807490b8a: ret                       ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@177 (line 319)

  0x0000024807490b8b: movabs $0x2481fe5cf78,%rax  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490b95: incl   0x3b0(%rax)
  0x0000024807490b9b: mov    $0x1,%eax
  0x0000024807490ba0: jmp    0x0000024807490baa  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@190 (line 322)

  0x0000024807490ba5: mov    $0x0,%eax
  0x0000024807490baa: and    $0x1,%eax
  0x0000024807490bad: add    $0x40,%rsp
  0x0000024807490bb1: pop    %rbp
  0x0000024807490bb2: test   %eax,-0x1ee0ab8(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807490bb8: ret                       ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@194 (line 322)

  0x0000024807490bb9: mov    0x24(%r8),%esi     ; implicit exception: dispatches to 0x0000024807490cd0
  0x0000024807490bbd: shl    $0x3,%rsi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@149 (line 315)

  0x0000024807490bc1: mov    0x24(%rdx),%r8d
  0x0000024807490bc5: shl    $0x3,%r8           ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@153 (line 315)

  0x0000024807490bc9: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000024807490cd5
  0x0000024807490bcc: mov    %rsi,%rdx
  0x0000024807490bcf: movabs $0x2481fe5cf78,%rdi  ;   {metadata(method data for {method} {0x000002481fe40ac0} &apos;isEqualTo&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Z&apos; in &apos;jdk/internal/org/objectweb/asm/Item&apos;)}
  0x0000024807490bd9: mov    0x8(%rdx),%edx
  0x0000024807490bdc: shl    $0x3,%rdx
  0x0000024807490be0: cmp    0x330(%rdi),%rdx
  0x0000024807490be7: jne    0x0000024807490bf6
  0x0000024807490be9: addq   $0x1,0x338(%rdi)
  0x0000024807490bf1: jmp    0x0000024807490c5c
  0x0000024807490bf6: cmp    0x340(%rdi),%rdx
  0x0000024807490bfd: jne    0x0000024807490c0c
  0x0000024807490bff: addq   $0x1,0x348(%rdi)
  0x0000024807490c07: jmp    0x0000024807490c5c
  0x0000024807490c0c: cmpq   $0x0,0x330(%rdi)
  0x0000024807490c17: jne    0x0000024807490c30
  0x0000024807490c19: mov    %rdx,0x330(%rdi)
  0x0000024807490c20: movq   $0x1,0x338(%rdi)
  0x0000024807490c2b: jmp    0x0000024807490c5c
  0x0000024807490c30: cmpq   $0x0,0x340(%rdi)
  0x0000024807490c3b: jne    0x0000024807490c54
  0x0000024807490c3d: mov    %rdx,0x340(%rdi)
  0x0000024807490c44: movq   $0x1,0x348(%rdi)
  0x0000024807490c4f: jmp    0x0000024807490c5c
  0x0000024807490c54: addq   $0x1,0x328(%rdi)
  0x0000024807490c5c: mov    %rsi,%rdx          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@156 (line 315)

  0x0000024807490c5f: call   0x0000024807375ee0  ; OopMap{off=2852}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@156 (line 315)
                                                ;   {optimized virtual_call}
  0x0000024807490c64: and    $0x1,%eax
  0x0000024807490c67: add    $0x40,%rsp
  0x0000024807490c6b: pop    %rbp
  0x0000024807490c6c: test   %eax,-0x1ee0b72(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807490c72: ret    
  0x0000024807490c73: mov    %rsi,0x8(%rsp)
  0x0000024807490c78: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807490c80: call   0x0000024807433da0  ; OopMap{rdx=Oop [48]=Oop r8=Oop [40]=Oop off=2885}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@-1 (line 309)
                                                ;   {runtime_call}
  0x0000024807490c85: jmp    0x00000248074901a8
  0x0000024807490c8a: call   0x000002480742f100  ; OopMap{rdx=Oop [48]=Oop off=2895}
                                                ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@179 (line 322)
                                                ;   {runtime_call}
  0x0000024807490c8f: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rdx=Oop [48]=Oop off=2900}
                                                ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@161 (line 319)
                                                ;   {runtime_call}
  0x0000024807490c94: call   0x000002480742f100  ; OopMap{rdx=Oop [48]=Oop r8=Oop [40]=Oop off=2905}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@307 (line 336)
                                                ;   {runtime_call}
  0x0000024807490c99: call   0x000002480742f100  ; OopMap{rdx=Oop [48]=Oop r8=Oop [40]=Oop rsi=Oop rdi=Oop off=2910}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@314 (line 336)
                                                ;   {runtime_call}
  0x0000024807490c9e: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rdx=Oop [48]=Oop rsi=Oop rdi=Oop off=2915}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@328 (line 336)
                                                ;   {runtime_call}
  0x0000024807490ca3: call   0x000002480742f100  ; OopMap{rsi=Oop r8=Oop off=2920}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@342 (line 337)
                                                ;   {runtime_call}
  0x0000024807490ca8: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rdx=Oop [48]=Oop off=2925}
                                                ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@196 (line 324)
                                                ;   {runtime_call}
  0x0000024807490cad: call   0x000002480742f100  ; OopMap{rsi=Oop r8=Oop off=2930}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@214 (line 324)
                                                ;   {runtime_call}
  0x0000024807490cb2: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rdx=Oop [48]=Oop off=2935}
                                                ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@261 (line 328)
                                                ;   {runtime_call}
  0x0000024807490cb7: call   0x000002480742f100  ; OopMap{rdx=Oop [48]=Oop r8=Oop [40]=Oop rsi=Oop rdi=Oop off=2940}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@280 (line 328)
                                                ;   {runtime_call}
  0x0000024807490cbc: call   0x000002480742f100  ; OopMap{rsi=Oop r8=Oop off=2945}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@294 (line 329)
                                                ;   {runtime_call}
  0x0000024807490cc1: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rdx=Oop [48]=Oop off=2950}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@227 (line 326)
                                                ;   {runtime_call}
  0x0000024807490cc6: call   0x000002480742f100  ; OopMap{r8=Oop [40]=Oop rdx=Oop [48]=Oop rsi=Oop rdi=Oop off=2955}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@234 (line 326)
                                                ;   {runtime_call}
  0x0000024807490ccb: call   0x000002480742f100  ; OopMap{rsi=Oop r8=Oop off=2960}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@248 (line 326)
                                                ;   {runtime_call}
  0x0000024807490cd0: call   0x000002480742f100  ; OopMap{rdx=Oop [48]=Oop off=2965}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@149 (line 315)
                                                ;   {runtime_call}
  0x0000024807490cd5: call   0x000002480742f100  ; OopMap{rsi=Oop r8=Oop off=2970}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@156 (line 315)
                                                ;   {runtime_call}
  0x0000024807490cda: nop
  0x0000024807490cdb: nop
  0x0000024807490cdc: mov    0x308(%r15),%rax
  0x0000024807490ce3: movabs $0x0,%r10
  0x0000024807490ced: mov    %r10,0x308(%r15)
  0x0000024807490cf4: movabs $0x0,%r10
  0x0000024807490cfe: mov    %r10,0x310(%r15)
  0x0000024807490d05: add    $0x40,%rsp
  0x0000024807490d09: pop    %rbp
  0x0000024807490d0a: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807490d0f: hlt    
  0x0000024807490d10: hlt    
  0x0000024807490d11: hlt    
  0x0000024807490d12: hlt    
  0x0000024807490d13: hlt    
  0x0000024807490d14: hlt    
  0x0000024807490d15: hlt    
  0x0000024807490d16: hlt    
  0x0000024807490d17: hlt    
  0x0000024807490d18: hlt    
  0x0000024807490d19: hlt    
  0x0000024807490d1a: hlt    
  0x0000024807490d1b: hlt    
  0x0000024807490d1c: hlt    
  0x0000024807490d1d: hlt    
  0x0000024807490d1e: hlt    
  0x0000024807490d1f: hlt    
[Stub Code]
  0x0000024807490d20: nop                       ;   {no_reloc}
  0x0000024807490d21: nop
  0x0000024807490d22: nop
  0x0000024807490d23: nop
  0x0000024807490d24: nop
  0x0000024807490d25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490d2f: jmp    0x0000024807490d2f  ;   {runtime_call}
  0x0000024807490d34: nop
  0x0000024807490d35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490d3f: jmp    0x0000024807490d3f  ;   {runtime_call}
  0x0000024807490d44: nop
  0x0000024807490d45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490d4f: jmp    0x0000024807490d4f  ;   {runtime_call}
  0x0000024807490d54: nop
  0x0000024807490d55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490d5f: jmp    0x0000024807490d5f  ;   {runtime_call}
  0x0000024807490d64: nop
  0x0000024807490d65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490d6f: jmp    0x0000024807490d6f  ;   {runtime_call}
  0x0000024807490d74: nop
  0x0000024807490d75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490d7f: jmp    0x0000024807490d7f  ;   {runtime_call}
  0x0000024807490d84: nop
  0x0000024807490d85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490d8f: jmp    0x0000024807490d8f  ;   {runtime_call}
  0x0000024807490d94: nop
  0x0000024807490d95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490d9f: jmp    0x0000024807490d9f  ;   {runtime_call}
  0x0000024807490da4: nop
  0x0000024807490da5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807490daf: jmp    0x0000024807490daf  ;   {runtime_call}
[Exception Handler]
  0x0000024807490db4: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807490db9: mov    %rsp,-0x28(%rsp)
  0x0000024807490dbe: sub    $0x80,%rsp
  0x0000024807490dc5: mov    %rax,0x78(%rsp)
  0x0000024807490dca: mov    %rcx,0x70(%rsp)
  0x0000024807490dcf: mov    %rdx,0x68(%rsp)
  0x0000024807490dd4: mov    %rbx,0x60(%rsp)
  0x0000024807490dd9: mov    %rbp,0x50(%rsp)
  0x0000024807490dde: mov    %rsi,0x48(%rsp)
  0x0000024807490de3: mov    %rdi,0x40(%rsp)
  0x0000024807490de8: mov    %r8,0x38(%rsp)
  0x0000024807490ded: mov    %r9,0x30(%rsp)
  0x0000024807490df2: mov    %r10,0x28(%rsp)
  0x0000024807490df7: mov    %r11,0x20(%rsp)
  0x0000024807490dfc: mov    %r12,0x18(%rsp)
  0x0000024807490e01: mov    %r13,0x10(%rsp)
  0x0000024807490e06: mov    %r14,0x8(%rsp)
  0x0000024807490e0b: mov    %r15,(%rsp)
  0x0000024807490e0f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807490e19: movabs $0x24807490db9,%rdx  ;   {internal_word}
  0x0000024807490e23: mov    %rsp,%r8
  0x0000024807490e26: and    $0xfffffffffffffff0,%rsp
  0x0000024807490e2a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807490e34: call   *%r10
  0x0000024807490e37: hlt    
[Deopt Handler Code]
  0x0000024807490e38: movabs $0x24807490e38,%r10  ;   {section_word}
  0x0000024807490e42: push   %r10
  0x0000024807490e44: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807490e49: hlt    
  0x0000024807490e4a: hlt    
  0x0000024807490e4b: hlt    
  0x0000024807490e4c: hlt    
  0x0000024807490e4d: hlt    
  0x0000024807490e4e: hlt    
  0x0000024807490e4f: hlt    
<nmethod compile_id='194' compiler='C1' level='3' entry='0x0000024807490140' size='6152' address='0x000002480748ff10' relocation_offset='288' insts_offset='560' stub_offset='3600' scopes_data_offset='3912' scopes_pcs_offset='4504' dependencies_offset='6008' nul_chk_table_offset='6016' method='jdk/internal/org/objectweb/asm/Item isEqualTo (Ljdk/internal/org/objectweb/asm/Item;)Z' bytes='354' count='1182' iicount='1182' stamp='2.487'/>
Decoding compiled method 0x00000248074919d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe51140} &apos;push&apos; &apos;(I)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/Frame&apos;
  # parm0:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000024807491b60: mov    0x8(%rdx),%r10d
  0x0000024807491b64: shl    $0x3,%r10
  0x0000024807491b68: cmp    %rax,%r10
  0x0000024807491b6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807491b71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807491b7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807491b80: mov    %eax,-0x6000(%rsp)
  0x0000024807491b87: push   %rbp
  0x0000024807491b88: sub    $0x70,%rsp
  0x0000024807491b8c: movabs $0x2481fee70f0,%rbx  ;   {metadata(method data for {method} {0x000002481fe51140} &apos;push&apos; &apos;(I)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807491b96: mov    0xdc(%rbx),%esi
  0x0000024807491b9c: add    $0x8,%esi
  0x0000024807491b9f: mov    %esi,0xdc(%rbx)
  0x0000024807491ba5: movabs $0x2481fe51138,%rbx  ;   {metadata({method} {0x000002481fe51140} &apos;push&apos; &apos;(I)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807491baf: and    $0x1ff8,%esi
  0x0000024807491bb5: cmp    $0x0,%esi
  0x0000024807491bb8: je     0x0000024807491f32  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@0 (line 606)

  0x0000024807491bbe: mov    0x24(%rdx),%ebx
  0x0000024807491bc1: shl    $0x3,%rbx          ;*getfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@1 (line 606)

  0x0000024807491bc5: cmp    $0x0,%rbx
  0x0000024807491bc9: movabs $0x2481fee70f0,%rbx  ;   {metadata(method data for {method} {0x000002481fe51140} &apos;push&apos; &apos;(I)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807491bd3: movabs $0x108,%rsi
  0x0000024807491bdd: jne    0x0000024807491bed
  0x0000024807491be3: movabs $0x118,%rsi
  0x0000024807491bed: mov    (%rbx,%rsi,1),%rdi
  0x0000024807491bf1: lea    0x1(%rdi),%rdi
  0x0000024807491bf5: mov    %rdi,(%rbx,%rsi,1)
  0x0000024807491bf9: je     0x0000024807491c07  ;*ifnonnull
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@4 (line 606)

  0x0000024807491bff: mov    %rdx,%r11
  0x0000024807491c02: jmp    0x0000024807491ca6  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@15 (line 609)

  0x0000024807491c07: mov    $0xa,%ebx
  0x0000024807491c0c: mov    %rdx,%r11
  0x0000024807491c0f: movabs $0x7c0000b68,%rdx  ;   {metadata({type array int})}
  0x0000024807491c19: movslq %ebx,%rbx
  0x0000024807491c1c: mov    %rbx,%rdi
  0x0000024807491c1f: cmp    $0xffffff,%rbx
  0x0000024807491c26: ja     0x0000024807491f49
  0x0000024807491c2c: movabs $0x17,%rsi
  0x0000024807491c36: lea    (%rsi,%rbx,4),%rsi
  0x0000024807491c3a: and    $0xfffffffffffffff8,%rsi
  0x0000024807491c3e: mov    0x60(%r15),%rax
  0x0000024807491c42: lea    (%rax,%rsi,1),%rsi
  0x0000024807491c46: cmp    0x70(%r15),%rsi
  0x0000024807491c4a: ja     0x0000024807491f49
  0x0000024807491c50: mov    %rsi,0x60(%r15)
  0x0000024807491c54: sub    %rax,%rsi
  0x0000024807491c57: movq   $0x1,(%rax)
  0x0000024807491c5e: mov    %rdx,%rcx
  0x0000024807491c61: shr    $0x3,%rcx
  0x0000024807491c65: mov    %ecx,0x8(%rax)
  0x0000024807491c68: mov    %ebx,0xc(%rax)
  0x0000024807491c6b: sub    $0x10,%rsi
  0x0000024807491c6f: je     0x0000024807491c86
  0x0000024807491c75: xor    %rbx,%rbx
  0x0000024807491c78: shr    $0x3,%rsi
  0x0000024807491c7c: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807491c81: dec    %rsi
  0x0000024807491c84: jne    0x0000024807491c7c  ;*newarray
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@10 (line 607)

  0x0000024807491c86: mov    %rax,%r10
  0x0000024807491c89: shr    $0x3,%r10
  0x0000024807491c8d: mov    %r10d,0x24(%r11)
  0x0000024807491c91: mov    %r11,%rdx
  0x0000024807491c94: shr    $0x9,%rdx
  0x0000024807491c98: movabs $0x248130de000,%rbx
  0x0000024807491ca2: movb   $0x0,(%rdx,%rbx,1)  ;*putfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 607)

  0x0000024807491ca6: mov    0x24(%r11),%r9d
  0x0000024807491caa: shl    $0x3,%r9           ;*getfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@16 (line 609)

  0x0000024807491cae: mov    0xc(%r9),%r13d     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@19 (line 609)
                                                ; implicit exception: dispatches to 0x0000024807491f53
  0x0000024807491cb2: mov    0xc(%r11),%ebx     ;*getfield outputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@22 (line 610)

  0x0000024807491cb6: cmp    %r13d,%ebx
  0x0000024807491cb9: movabs $0x2481fee70f0,%rdx  ;   {metadata(method data for {method} {0x000002481fe51140} &apos;push&apos; &apos;(I)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807491cc3: movabs $0x128,%rsi
  0x0000024807491ccd: jl     0x0000024807491cdd
  0x0000024807491cd3: movabs $0x138,%rsi
  0x0000024807491cdd: mov    (%rdx,%rsi,1),%rdi
  0x0000024807491ce1: lea    0x1(%rdi),%rdi
  0x0000024807491ce5: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807491ce9: jge    0x0000024807491cf7  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@26 (line 610)

  0x0000024807491cef: mov    %r11,%rdx
  0x0000024807491cf2: jmp    0x0000024807491eb9  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@60 (line 616)

  0x0000024807491cf7: inc    %ebx
  0x0000024807491cf9: mov    %r13,%rdx
  0x0000024807491cfc: shl    %edx
  0x0000024807491cfe: movabs $0x2481fee70f0,%rsi  ;   {metadata(method data for {method} {0x000002481fe51140} &apos;push&apos; &apos;(I)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807491d08: addq   $0x1,0x148(%rsi)
  0x0000024807491d10: movabs $0x2481fd57e68,%rsi  ;   {metadata(method data for {method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807491d1a: mov    0xdc(%rsi),%edi
  0x0000024807491d20: add    $0x8,%edi
  0x0000024807491d23: mov    %edi,0xdc(%rsi)
  0x0000024807491d29: movabs $0x2481fbf72d8,%rsi  ;   {metadata({method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807491d33: and    $0x7ffff8,%edi
  0x0000024807491d39: cmp    $0x0,%edi
  0x0000024807491d3c: je     0x0000024807491f58
  0x0000024807491d42: cmp    %edx,%ebx
  0x0000024807491d44: movabs $0x2481fd57e68,%rsi  ;   {metadata(method data for {method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807491d4e: movabs $0x108,%rdi
  0x0000024807491d58: jl     0x0000024807491d68
  0x0000024807491d5e: movabs $0x118,%rdi
  0x0000024807491d68: mov    (%rsi,%rdi,1),%rax
  0x0000024807491d6c: lea    0x1(%rax),%rax
  0x0000024807491d70: mov    %rax,(%rsi,%rdi,1)
  0x0000024807491d74: jl     0x0000024807491d8f  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@38 (line 611)

  0x0000024807491d7a: movabs $0x2481fd57e68,%rdx  ;   {metadata(method data for {method} {0x000002481fbf72e0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000024807491d84: incl   0x128(%rdx)
  0x0000024807491d8a: jmp    0x0000024807491d92  ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@38 (line 611)

  0x0000024807491d8f: mov    %rdx,%rbx          ;*ireturn
                                                ; - java.lang.Math::max@10 (line 1252)
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@38 (line 611)

  0x0000024807491d92: mov    %r8d,0x58(%rsp)
  0x0000024807491d97: mov    %r11,0x50(%rsp)
  0x0000024807491d9c: movabs $0x7c0000b68,%rdx  ;   {metadata({type array int})}
  0x0000024807491da6: movslq %ebx,%rbx
  0x0000024807491da9: mov    %rbx,%rdi
  0x0000024807491dac: cmp    $0xffffff,%rbx
  0x0000024807491db3: ja     0x0000024807491f6f
  0x0000024807491db9: movabs $0x17,%rsi
  0x0000024807491dc3: lea    (%rsi,%rbx,4),%rsi
  0x0000024807491dc7: and    $0xfffffffffffffff8,%rsi
  0x0000024807491dcb: mov    0x60(%r15),%rax
  0x0000024807491dcf: lea    (%rax,%rsi,1),%rsi
  0x0000024807491dd3: cmp    0x70(%r15),%rsi
  0x0000024807491dd7: ja     0x0000024807491f6f
  0x0000024807491ddd: mov    %rsi,0x60(%r15)
  0x0000024807491de1: sub    %rax,%rsi
  0x0000024807491de4: movq   $0x1,(%rax)
  0x0000024807491deb: mov    %rdx,%rcx
  0x0000024807491dee: shr    $0x3,%rcx
  0x0000024807491df2: mov    %ecx,0x8(%rax)
  0x0000024807491df5: mov    %ebx,0xc(%rax)
  0x0000024807491df8: sub    $0x10,%rsi
  0x0000024807491dfc: je     0x0000024807491e13
  0x0000024807491e02: xor    %rbx,%rbx
  0x0000024807491e05: shr    $0x3,%rsi
  0x0000024807491e09: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000024807491e0e: dec    %rsi
  0x0000024807491e11: jne    0x0000024807491e09  ;*newarray
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@41 (line 611)

  0x0000024807491e13: movabs $0x2481fee70f0,%rdx  ;   {metadata(method data for {method} {0x000002481fe51140} &apos;push&apos; &apos;(I)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807491e1d: addq   $0x1,0x158(%rdx)
  0x0000024807491e25: mov    %r9,%rdx
  0x0000024807491e28: mov    $0x0,%r8d
  0x0000024807491e2e: mov    %rax,%r9
  0x0000024807491e31: mov    $0x0,%edi
  0x0000024807491e36: mov    %r13,%rsi
  0x0000024807491e39: mov    %rax,0x48(%rsp)
  0x0000024807491e3e: lea    (%rdi,%rsi,1),%rcx
  0x0000024807491e42: cmp    0xc(%r9),%ecx
  0x0000024807491e46: ja     0x0000024807491f79
  0x0000024807491e4c: movslq %r8d,%r8
  0x0000024807491e4f: movslq %edi,%rdi
  0x0000024807491e52: lea    0x10(%rdx,%r8,4),%rcx
  0x0000024807491e57: lea    0x10(%r9,%rdi,4),%rdx
  0x0000024807491e5c: mov    %rsi,%r8
  0x0000024807491e5f: sub    $0x20,%rsp
  0x0000024807491e63: test   $0xf,%esp
  0x0000024807491e69: je     0x0000024807491e81
  0x0000024807491e6f: sub    $0x8,%rsp
  0x0000024807491e73: call   Stub::jint_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807491e78: add    $0x8,%rsp
  0x0000024807491e7c: jmp    0x0000024807491e86
  0x0000024807491e81: call   Stub::jint_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000024807491e86: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@52 (line 612)

  0x0000024807491e8a: mov    0x48(%rsp),%rax
  0x0000024807491e8f: mov    0x50(%rsp),%rdx
  0x0000024807491e94: mov    %rax,%r10
  0x0000024807491e97: shr    $0x3,%r10
  0x0000024807491e9b: mov    %r10d,0x24(%rdx)
  0x0000024807491e9f: mov    %rdx,%rsi
  0x0000024807491ea2: shr    $0x9,%rsi
  0x0000024807491ea6: movabs $0x248130de000,%rdi
  0x0000024807491eb0: movb   $0x0,(%rsi,%rdi,1)  ;*putfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@57 (line 613)

  0x0000024807491eb4: mov    0x58(%rsp),%r8d
  0x0000024807491eb9: mov    0x24(%rdx),%esi
  0x0000024807491ebc: shl    $0x3,%rsi          ;*getfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@61 (line 616)

  0x0000024807491ec0: mov    0xc(%rdx),%edi     ;*getfield outputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@66 (line 616)

  0x0000024807491ec3: mov    %rdi,%rbx
  0x0000024807491ec6: inc    %ebx
  0x0000024807491ec8: mov    %ebx,0xc(%rdx)     ;*putfield outputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@72 (line 616)

  0x0000024807491ecb: movslq %edi,%rax
  0x0000024807491ece: cmp    0xc(%rsi),%edi     ; implicit exception: dispatches to 0x0000024807491f89
  0x0000024807491ed1: jae    0x0000024807491f93
  0x0000024807491ed7: mov    %r8d,0x10(%rsi,%rax,4)  ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@76 (line 616)

  0x0000024807491edc: mov    0x14(%rdx),%esi
  0x0000024807491edf: shl    $0x3,%rsi          ;*getfield owner
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@78 (line 618)

  0x0000024807491ee3: mov    0x1c(%rsi),%edi    ;*getfield inputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@81 (line 618)
                                                ; implicit exception: dispatches to 0x0000024807491f9c
  0x0000024807491ee6: add    %ebx,%edi
  0x0000024807491ee8: mov    0x20(%rsi),%ebx    ;*getfield outputStackMax
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@95 (line 619)

  0x0000024807491eeb: cmp    %ebx,%edi
  0x0000024807491eed: movabs $0x2481fee70f0,%rbx  ;   {metadata(method data for {method} {0x000002481fe51140} &apos;push&apos; &apos;(I)V&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x0000024807491ef7: movabs $0x168,%rax
  0x0000024807491f01: jle    0x0000024807491f11
  0x0000024807491f07: movabs $0x178,%rax
  0x0000024807491f11: mov    (%rbx,%rax,1),%rdx
  0x0000024807491f15: lea    0x1(%rdx),%rdx
  0x0000024807491f19: mov    %rdx,(%rbx,%rax,1)
  0x0000024807491f1d: jle    0x0000024807491f26  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@98 (line 619)

  0x0000024807491f23: mov    %edi,0x20(%rsi)    ;*putfield outputStackMax
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@106 (line 620)

  0x0000024807491f26: add    $0x70,%rsp
  0x0000024807491f2a: pop    %rbp
  0x0000024807491f2b: test   %eax,-0x1ee1e31(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807491f31: ret    
  0x0000024807491f32: mov    %rbx,0x8(%rsp)
  0x0000024807491f37: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807491f3f: call   0x0000024807433da0  ; OopMap{rdx=Oop off=996}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 606)
                                                ;   {runtime_call}
  0x0000024807491f44: jmp    0x0000024807491bbe
  0x0000024807491f49: call   0x0000024807430280  ; OopMap{r11=Oop off=1006}
                                                ;*newarray
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@10 (line 607)
                                                ;   {runtime_call}
  0x0000024807491f4e: jmp    0x0000024807491c86
  0x0000024807491f53: call   0x000002480742f100  ; OopMap{r11=Oop r9=Oop off=1016}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@19 (line 609)
                                                ;   {runtime_call}
  0x0000024807491f58: mov    %rsi,0x8(%rsp)
  0x0000024807491f5d: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807491f65: call   0x0000024807433da0  ; OopMap{r11=Oop r9=Oop off=1034}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@38 (line 611)
                                                ;   {runtime_call}
  0x0000024807491f6a: jmp    0x0000024807491d42
  0x0000024807491f6f: call   0x0000024807430280  ; OopMap{r9=Oop [80]=Oop off=1044}
                                                ;*newarray
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@41 (line 611)
                                                ;   {runtime_call}
  0x0000024807491f74: jmp    0x0000024807491e13
  0x0000024807491f79: nop
  0x0000024807491f7a: nop
  0x0000024807491f7b: nop
  0x0000024807491f7c: nop
  0x0000024807491f7d: nop
  0x0000024807491f7e: nop
  0x0000024807491f7f: call   0x0000024807376360  ; OopMap{[72]=Oop [80]=Oop off=1060}
                                                ;*invokestatic arraycopy
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@52 (line 612)
                                                ;   {static_call}
  0x0000024807491f84: jmp    0x0000024807491e8a
  0x0000024807491f89: call   0x000002480742f100  ; OopMap{rdx=Oop rsi=Oop off=1070}
                                                ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@76 (line 616)
                                                ;   {runtime_call}
  0x0000024807491f8e: call   0x000002480742f100  ; OopMap{rdx=Oop rsi=Oop off=1075}
                                                ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@76 (line 616)
                                                ;   {runtime_call}
  0x0000024807491f93: mov    %rdi,(%rsp)
  0x0000024807491f97: call   0x000002480742e800  ; OopMap{rdx=Oop rsi=Oop off=1084}
                                                ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@76 (line 616)
                                                ;   {runtime_call}
  0x0000024807491f9c: call   0x000002480742f100  ; OopMap{rsi=Oop off=1089}
                                                ;*getfield inputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@81 (line 618)
                                                ;   {runtime_call}
  0x0000024807491fa1: nop
  0x0000024807491fa2: nop
  0x0000024807491fa3: mov    0x308(%r15),%rax
  0x0000024807491faa: movabs $0x0,%r10
  0x0000024807491fb4: mov    %r10,0x308(%r15)
  0x0000024807491fbb: movabs $0x0,%r10
  0x0000024807491fc5: mov    %r10,0x310(%r15)
  0x0000024807491fcc: add    $0x70,%rsp
  0x0000024807491fd0: pop    %rbp
  0x0000024807491fd1: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807491fd6: hlt    
  0x0000024807491fd7: hlt    
  0x0000024807491fd8: hlt    
  0x0000024807491fd9: hlt    
  0x0000024807491fda: hlt    
  0x0000024807491fdb: hlt    
  0x0000024807491fdc: hlt    
  0x0000024807491fdd: hlt    
  0x0000024807491fde: hlt    
  0x0000024807491fdf: hlt    
[Stub Code]
  0x0000024807491fe0: nop                       ;   {no_reloc}
  0x0000024807491fe1: nop
  0x0000024807491fe2: nop
  0x0000024807491fe3: nop
  0x0000024807491fe4: nop
  0x0000024807491fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000024807491fef: jmp    0x0000024807491fef  ;   {runtime_call}
[Exception Handler]
  0x0000024807491ff4: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807491ff9: mov    %rsp,-0x28(%rsp)
  0x0000024807491ffe: sub    $0x80,%rsp
  0x0000024807492005: mov    %rax,0x78(%rsp)
  0x000002480749200a: mov    %rcx,0x70(%rsp)
  0x000002480749200f: mov    %rdx,0x68(%rsp)
  0x0000024807492014: mov    %rbx,0x60(%rsp)
  0x0000024807492019: mov    %rbp,0x50(%rsp)
  0x000002480749201e: mov    %rsi,0x48(%rsp)
  0x0000024807492023: mov    %rdi,0x40(%rsp)
  0x0000024807492028: mov    %r8,0x38(%rsp)
  0x000002480749202d: mov    %r9,0x30(%rsp)
  0x0000024807492032: mov    %r10,0x28(%rsp)
  0x0000024807492037: mov    %r11,0x20(%rsp)
  0x000002480749203c: mov    %r12,0x18(%rsp)
  0x0000024807492041: mov    %r13,0x10(%rsp)
  0x0000024807492046: mov    %r14,0x8(%rsp)
  0x000002480749204b: mov    %r15,(%rsp)
  0x000002480749204f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807492059: movabs $0x24807491ff9,%rdx  ;   {internal_word}
  0x0000024807492063: mov    %rsp,%r8
  0x0000024807492066: and    $0xfffffffffffffff0,%rsp
  0x000002480749206a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807492074: call   *%r10
  0x0000024807492077: hlt    
[Deopt Handler Code]
  0x0000024807492078: movabs $0x24807492078,%r10  ;   {section_word}
  0x0000024807492082: push   %r10
  0x0000024807492084: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807492089: hlt    
  0x000002480749208a: hlt    
  0x000002480749208b: hlt    
  0x000002480749208c: hlt    
  0x000002480749208d: hlt    
  0x000002480749208e: hlt    
  0x000002480749208f: hlt    
<nmethod compile_id='193' compiler='C1' level='3' entry='0x0000024807491b60' size='2704' address='0x00000248074919d0' relocation_offset='288' insts_offset='400' stub_offset='1552' scopes_data_offset='1744' scopes_pcs_offset='2048' dependencies_offset='2656' nul_chk_table_offset='2664' method='jdk/internal/org/objectweb/asm/Frame push (I)V' bytes='110' count='964' iicount='964' stamp='2.501'/>
Decoding compiled method 0x0000024807492490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3c3d0} &apos;addType&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000024807492620: mov    0x8(%rdx),%r10d
  0x0000024807492624: shl    $0x3,%r10
  0x0000024807492628: cmp    %rax,%r10
  0x000002480749262b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807492631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480749263c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807492640: mov    %eax,-0x6000(%rsp)
  0x0000024807492647: push   %rbp
  0x0000024807492648: sub    $0x40,%rsp
  0x000002480749264c: mov    %rdx,0x30(%rsp)
  0x0000024807492651: mov    %r8,%r9
  0x0000024807492654: movabs $0x2481fee7ed0,%r8  ;   {metadata(method data for {method} {0x000002481fe3c3d0} &apos;addType&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480749265e: mov    0xdc(%r8),%edi
  0x0000024807492665: add    $0x8,%edi
  0x0000024807492668: mov    %edi,0xdc(%r8)
  0x000002480749266f: movabs $0x2481fe3c3c8,%r8  ;   {metadata({method} {0x000002481fe3c3d0} &apos;addType&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807492679: and    $0x1ff8,%edi
  0x000002480749267f: cmp    $0x0,%edi
  0x0000024807492682: je     0x00000248074927f3  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@0 (line 1607)

  0x0000024807492688: mov    0x5c(%rdx),%ebx
  0x000002480749268b: shl    $0x3,%rbx          ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@1 (line 1607)

  0x000002480749268f: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x000002480749280a
  0x0000024807492692: mov    %rbx,%r8
  0x0000024807492695: movabs $0x2481fee7ed0,%rdi  ;   {metadata(method data for {method} {0x000002481fe3c3d0} &apos;addType&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480749269f: mov    0x8(%r8),%r8d
  0x00000248074926a3: shl    $0x3,%r8
  0x00000248074926a7: cmp    0x110(%rdi),%r8
  0x00000248074926ae: jne    0x00000248074926bd
  0x00000248074926b0: addq   $0x1,0x118(%rdi)
  0x00000248074926b8: jmp    0x0000024807492723
  0x00000248074926bd: cmp    0x120(%rdi),%r8
  0x00000248074926c4: jne    0x00000248074926d3
  0x00000248074926c6: addq   $0x1,0x128(%rdi)
  0x00000248074926ce: jmp    0x0000024807492723
  0x00000248074926d3: cmpq   $0x0,0x110(%rdi)
  0x00000248074926de: jne    0x00000248074926f7
  0x00000248074926e0: mov    %r8,0x110(%rdi)
  0x00000248074926e7: movq   $0x1,0x118(%rdi)
  0x00000248074926f2: jmp    0x0000024807492723
  0x00000248074926f7: cmpq   $0x0,0x120(%rdi)
  0x0000024807492702: jne    0x000002480749271b
  0x0000024807492704: mov    %r8,0x120(%rdi)
  0x000002480749270b: movq   $0x1,0x128(%rdi)
  0x0000024807492716: jmp    0x0000024807492723
  0x000002480749271b: addq   $0x1,0x108(%rdi)
  0x0000024807492723: mov    $0x1e,%r8d
  0x0000024807492729: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x0000024807492733: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000002480749273d: mov    %rbx,%rdx          ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@9 (line 1607)

  0x0000024807492740: nop
  0x0000024807492741: nop
  0x0000024807492742: nop
  0x0000024807492743: nop
  0x0000024807492744: nop
  0x0000024807492745: nop
  0x0000024807492746: nop
  0x0000024807492747: call   0x0000024807375ee0  ; OopMap{[48]=Oop off=300}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@9 (line 1607)
                                                ;   {optimized virtual_call}
  0x000002480749274c: mov    0x30(%rsp),%rdx
  0x0000024807492751: mov    0x5c(%rdx),%r8d
  0x0000024807492755: shl    $0x3,%r8           ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@14 (line 1608)

  0x0000024807492759: mov    %rdx,%rsi
  0x000002480749275c: movabs $0x2481fee7ed0,%rdi  ;   {metadata(method data for {method} {0x000002481fe3c3d0} &apos;addType&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x0000024807492766: addq   $0x1,0x138(%rdi)
  0x000002480749276e: mov    %rdx,%rsi
  0x0000024807492771: mov    %rsi,%rdx          ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@17 (line 1608)

  0x0000024807492774: nop
  0x0000024807492775: nop
  0x0000024807492776: nop
  0x0000024807492777: call   0x0000024807375ee0  ; OopMap{[48]=Oop off=348}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@17 (line 1608)
                                                ;   {optimized virtual_call}
  0x000002480749277c: cmp    $0x0,%rax
  0x0000024807492780: movabs $0x2481fee7ed0,%r8  ;   {metadata(method data for {method} {0x000002481fe3c3d0} &apos;addType&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000002480749278a: movabs $0x148,%rdx
  0x0000024807492794: jne    0x00000248074927a4
  0x000002480749279a: movabs $0x158,%rdx
  0x00000248074927a4: mov    (%r8,%rdx,1),%rsi
  0x00000248074927a8: lea    0x1(%rsi),%rsi
  0x00000248074927ac: mov    %rsi,(%r8,%rdx,1)
  0x00000248074927b0: jne    0x00000248074927e4  ;*ifnonnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@22 (line 1609)

  0x00000248074927b6: mov    0x30(%rsp),%rdx
  0x00000248074927bb: mov    0x5c(%rdx),%r8d
  0x00000248074927bf: shl    $0x3,%r8           ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@27 (line 1610)

  0x00000248074927c3: mov    %rdx,%rsi
  0x00000248074927c6: movabs $0x2481fee7ed0,%rdi  ;   {metadata(method data for {method} {0x000002481fe3c3d0} &apos;addType&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x00000248074927d0: addq   $0x1,0x168(%rdi)
  0x00000248074927d8: nop
  0x00000248074927d9: nop
  0x00000248074927da: nop
  0x00000248074927db: nop
  0x00000248074927dc: nop
  0x00000248074927dd: nop
  0x00000248074927de: nop
  0x00000248074927df: call   0x0000024807375ee0  ; OopMap{off=452}
                                                ;*invokespecial addType
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@30 (line 1610)
                                                ;   {optimized virtual_call}
  0x00000248074927e4: mov    0xc(%rax),%eax     ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@35 (line 1612)
                                                ; implicit exception: dispatches to 0x000002480749280f
  0x00000248074927e7: add    $0x40,%rsp
  0x00000248074927eb: pop    %rbp
  0x00000248074927ec: test   %eax,-0x1ee26f2(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074927f2: ret    
  0x00000248074927f3: mov    %r8,0x8(%rsp)
  0x00000248074927f8: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807492800: call   0x0000024807433da0  ; OopMap{rdx=Oop [48]=Oop r9=Oop off=485}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@-1 (line 1607)
                                                ;   {runtime_call}
  0x0000024807492805: jmp    0x0000024807492688
  0x000002480749280a: call   0x000002480742f100  ; OopMap{rdx=Oop [48]=Oop r9=Oop rbx=Oop off=495}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@9 (line 1607)
                                                ;   {runtime_call}
  0x000002480749280f: call   0x000002480742f100  ; OopMap{off=500}
                                                ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@35 (line 1612)
                                                ;   {runtime_call}
  0x0000024807492814: nop
  0x0000024807492815: nop
  0x0000024807492816: mov    0x308(%r15),%rax
  0x000002480749281d: movabs $0x0,%r10
  0x0000024807492827: mov    %r10,0x308(%r15)
  0x000002480749282e: movabs $0x0,%r10
  0x0000024807492838: mov    %r10,0x310(%r15)
  0x000002480749283f: add    $0x40,%rsp
  0x0000024807492843: pop    %rbp
  0x0000024807492844: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807492849: hlt    
  0x000002480749284a: hlt    
  0x000002480749284b: hlt    
  0x000002480749284c: hlt    
  0x000002480749284d: hlt    
  0x000002480749284e: hlt    
  0x000002480749284f: hlt    
  0x0000024807492850: hlt    
  0x0000024807492851: hlt    
  0x0000024807492852: hlt    
  0x0000024807492853: hlt    
  0x0000024807492854: hlt    
  0x0000024807492855: hlt    
  0x0000024807492856: hlt    
  0x0000024807492857: hlt    
  0x0000024807492858: hlt    
  0x0000024807492859: hlt    
  0x000002480749285a: hlt    
  0x000002480749285b: hlt    
  0x000002480749285c: hlt    
  0x000002480749285d: hlt    
  0x000002480749285e: hlt    
  0x000002480749285f: hlt    
[Stub Code]
  0x0000024807492860: nop                       ;   {no_reloc}
  0x0000024807492861: nop
  0x0000024807492862: nop
  0x0000024807492863: nop
  0x0000024807492864: nop
  0x0000024807492865: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749286f: jmp    0x000002480749286f  ;   {runtime_call}
  0x0000024807492874: nop
  0x0000024807492875: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749287f: jmp    0x000002480749287f  ;   {runtime_call}
  0x0000024807492884: nop
  0x0000024807492885: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749288f: jmp    0x000002480749288f  ;   {runtime_call}
[Exception Handler]
  0x0000024807492894: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807492899: mov    %rsp,-0x28(%rsp)
  0x000002480749289e: sub    $0x80,%rsp
  0x00000248074928a5: mov    %rax,0x78(%rsp)
  0x00000248074928aa: mov    %rcx,0x70(%rsp)
  0x00000248074928af: mov    %rdx,0x68(%rsp)
  0x00000248074928b4: mov    %rbx,0x60(%rsp)
  0x00000248074928b9: mov    %rbp,0x50(%rsp)
  0x00000248074928be: mov    %rsi,0x48(%rsp)
  0x00000248074928c3: mov    %rdi,0x40(%rsp)
  0x00000248074928c8: mov    %r8,0x38(%rsp)
  0x00000248074928cd: mov    %r9,0x30(%rsp)
  0x00000248074928d2: mov    %r10,0x28(%rsp)
  0x00000248074928d7: mov    %r11,0x20(%rsp)
  0x00000248074928dc: mov    %r12,0x18(%rsp)
  0x00000248074928e1: mov    %r13,0x10(%rsp)
  0x00000248074928e6: mov    %r14,0x8(%rsp)
  0x00000248074928eb: mov    %r15,(%rsp)
  0x00000248074928ef: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074928f9: movabs $0x24807492899,%rdx  ;   {internal_word}
  0x0000024807492903: mov    %rsp,%r8
  0x0000024807492906: and    $0xfffffffffffffff0,%rsp
  0x000002480749290a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807492914: call   *%r10
  0x0000024807492917: hlt    
[Deopt Handler Code]
  0x0000024807492918: movabs $0x24807492918,%r10  ;   {section_word}
  0x0000024807492922: push   %r10
  0x0000024807492924: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807492929: hlt    
  0x000002480749292a: hlt    
  0x000002480749292b: hlt    
  0x000002480749292c: hlt    
  0x000002480749292d: hlt    
  0x000002480749292e: hlt    
  0x000002480749292f: hlt    
<nmethod compile_id='195' compiler='C1' level='3' entry='0x0000024807492620' size='1600' address='0x0000024807492490' relocation_offset='288' insts_offset='400' stub_offset='976' scopes_data_offset='1200' scopes_pcs_offset='1312' dependencies_offset='1568' nul_chk_table_offset='1576' method='jdk/internal/org/objectweb/asm/ClassWriter addType (Ljava/lang/String;)I' bytes='39' count='750' iicount='750' stamp='2.510'/>
Decoding compiled method 0x0000024807492b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0xc0]  (sp of caller)
  0x0000024807492da0: mov    0x8(%rdx),%r10d
  0x0000024807492da4: shl    $0x3,%r10
  0x0000024807492da8: cmp    %rax,%r10
  0x0000024807492dab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807492db1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807492dbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807492dc0: mov    %eax,-0x6000(%rsp)
  0x0000024807492dc7: push   %rbp
  0x0000024807492dc8: sub    $0xb0,%rsp
  0x0000024807492dcf: mov    %rdx,0x78(%rsp)
  0x0000024807492dd4: movabs $0x2481febef70,%rsi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492dde: mov    0xdc(%rsi),%edi
  0x0000024807492de4: add    $0x8,%edi
  0x0000024807492de7: mov    %edi,0xdc(%rsi)
  0x0000024807492ded: movabs $0x2481fb592d8,%rsi  ;   {metadata({method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492df7: and    $0x1ff8,%edi
  0x0000024807492dfd: cmp    $0x0,%edi
  0x0000024807492e00: je     0x000002480749429b  ;*aload_0
                                                ; - java.lang.invoke.MemberName::getMethodType@0 (line 122)

  0x0000024807492e06: mov    0x28(%rdx),%esi
  0x0000024807492e09: shl    $0x3,%rsi          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@1 (line 122)

  0x0000024807492e0d: cmp    $0x0,%rsi
  0x0000024807492e11: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492e1b: movabs $0x108,%rbx
  0x0000024807492e25: jne    0x0000024807492e35
  0x0000024807492e2b: movabs $0x118,%rbx
  0x0000024807492e35: mov    (%rdi,%rbx,1),%rax
  0x0000024807492e39: lea    0x1(%rax),%rax
  0x0000024807492e3d: mov    %rax,(%rdi,%rbx,1)
  0x0000024807492e41: jne    0x000002480749308a  ;*ifnonnull
                                                ; - java.lang.invoke.MemberName::getMethodType@4 (line 122)

  0x0000024807492e47: mov    %rdx,%rdi
  0x0000024807492e4a: movabs $0x2481febef70,%rbx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492e54: addq   $0x1,0x128(%rbx)
  0x0000024807492e5c: movabs $0x2481fefd2d0,%rdi  ;   {metadata(method data for {method} {0x000002481fb5b160} &apos;expandFromVM&apos; &apos;()V&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492e66: mov    0xdc(%rdi),%ebx
  0x0000024807492e6c: add    $0x8,%ebx
  0x0000024807492e6f: mov    %ebx,0xdc(%rdi)
  0x0000024807492e75: movabs $0x2481fb5b158,%rdi  ;   {metadata({method} {0x000002481fb5b160} &apos;expandFromVM&apos; &apos;()V&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492e7f: and    $0x7ffff8,%ebx
  0x0000024807492e85: cmp    $0x0,%ebx
  0x0000024807492e88: je     0x00000248074942b2
  0x0000024807492e8e: cmp    $0x0,%rsi
  0x0000024807492e92: movabs $0x2481fefd2d0,%rsi  ;   {metadata(method data for {method} {0x000002481fb5b160} &apos;expandFromVM&apos; &apos;()V&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492e9c: movabs $0x108,%rdi
  0x0000024807492ea6: je     0x0000024807492eb6
  0x0000024807492eac: movabs $0x118,%rdi
  0x0000024807492eb6: mov    (%rsi,%rdi,1),%rbx
  0x0000024807492eba: lea    0x1(%rbx),%rbx
  0x0000024807492ebe: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807492ec2: jne    0x0000024807493049  ;*ifnull
                                                ; - java.lang.invoke.MemberName::expandFromVM@4 (line 500)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x0000024807492ec8: mov    %rdx,%rsi
  0x0000024807492ecb: movabs $0x2481fefd2d0,%rdi  ;   {metadata(method data for {method} {0x000002481fb5b160} &apos;expandFromVM&apos; &apos;()V&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492ed5: mov    0x8(%rsi),%esi
  0x0000024807492ed8: shl    $0x3,%rsi
  0x0000024807492edc: cmp    0x130(%rdi),%rsi
  0x0000024807492ee3: jne    0x0000024807492ef2
  0x0000024807492ee5: addq   $0x1,0x138(%rdi)
  0x0000024807492eed: jmp    0x0000024807492f58
  0x0000024807492ef2: cmp    0x140(%rdi),%rsi
  0x0000024807492ef9: jne    0x0000024807492f08
  0x0000024807492efb: addq   $0x1,0x148(%rdi)
  0x0000024807492f03: jmp    0x0000024807492f58
  0x0000024807492f08: cmpq   $0x0,0x130(%rdi)
  0x0000024807492f13: jne    0x0000024807492f2c
  0x0000024807492f15: mov    %rsi,0x130(%rdi)
  0x0000024807492f1c: movq   $0x1,0x138(%rdi)
  0x0000024807492f27: jmp    0x0000024807492f58
  0x0000024807492f2c: cmpq   $0x0,0x140(%rdi)
  0x0000024807492f37: jne    0x0000024807492f50
  0x0000024807492f39: mov    %rsi,0x140(%rdi)
  0x0000024807492f40: movq   $0x1,0x148(%rdi)
  0x0000024807492f4b: jmp    0x0000024807492f58
  0x0000024807492f50: addq   $0x1,0x128(%rdi)
  0x0000024807492f58: movabs $0x2481fefd508,%rsi  ;   {metadata(method data for {method} {0x000002481fb5c608} &apos;isResolved&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492f62: mov    0xdc(%rsi),%edi
  0x0000024807492f68: add    $0x8,%edi
  0x0000024807492f6b: mov    %edi,0xdc(%rsi)
  0x0000024807492f71: movabs $0x2481fb5c600,%rsi  ;   {metadata({method} {0x000002481fb5c608} &apos;isResolved&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492f7b: and    $0x7ffff8,%edi
  0x0000024807492f81: cmp    $0x0,%edi
  0x0000024807492f84: je     0x00000248074942c9
  0x0000024807492f8a: mov    0x2c(%rdx),%esi
  0x0000024807492f8d: shl    $0x3,%rsi          ;*getfield resolution
                                                ; - java.lang.invoke.MemberName::isResolved@1 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x0000024807492f91: cmp    $0x0,%rsi
  0x0000024807492f95: movabs $0x2481fefd508,%rsi  ;   {metadata(method data for {method} {0x000002481fb5c608} &apos;isResolved&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492f9f: movabs $0x108,%rdi
  0x0000024807492fa9: jne    0x0000024807492fb9
  0x0000024807492faf: movabs $0x118,%rdi
  0x0000024807492fb9: mov    (%rsi,%rdi,1),%rbx
  0x0000024807492fbd: lea    0x1(%rbx),%rbx
  0x0000024807492fc1: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807492fc5: jne    0x0000024807492fe5  ;*ifnonnull
                                                ; - java.lang.invoke.MemberName::isResolved@4 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x0000024807492fcb: movabs $0x2481fefd508,%rsi  ;   {metadata(method data for {method} {0x000002481fb5c608} &apos;isResolved&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492fd5: incl   0x128(%rsi)
  0x0000024807492fdb: mov    $0x1,%esi
  0x0000024807492fe0: jmp    0x0000024807492fea  ;*goto
                                                ; - java.lang.invoke.MemberName::isResolved@8 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x0000024807492fe5: mov    $0x0,%esi          ;*ireturn
                                                ; - java.lang.invoke.MemberName::isResolved@12 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x0000024807492fea: and    $0x1,%esi
  0x0000024807492fed: cmp    $0x0,%esi
  0x0000024807492ff0: movabs $0x2481fefd2d0,%rsi  ;   {metadata(method data for {method} {0x000002481fb5b160} &apos;expandFromVM&apos; &apos;()V&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807492ffa: movabs $0x158,%rdi
  0x0000024807493004: jne    0x0000024807493014
  0x000002480749300a: movabs $0x168,%rdi
  0x0000024807493014: mov    (%rsi,%rdi,1),%rbx
  0x0000024807493018: lea    0x1(%rbx),%rbx
  0x000002480749301c: mov    %rbx,(%rsi,%rdi,1)
  0x0000024807493020: je     0x0000024807493049  ;*ifne
                                                ; - java.lang.invoke.MemberName::expandFromVM@12 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x0000024807493026: movabs $0x2481fefd2d0,%rsi  ;   {metadata(method data for {method} {0x000002481fb5b160} &apos;expandFromVM&apos; &apos;()V&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493030: addq   $0x1,0x178(%rsi)
  0x0000024807493038: mov    %rdx,%rsi
  0x000002480749303b: mov    %rsi,%rdx          ;*invokestatic expand
                                                ; - java.lang.invoke.MemberName::expandFromVM@17 (line 506)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x000002480749303e: nop
  0x000002480749303f: call   0x0000024807376360  ; OopMap{[120]=Oop off=676}
                                                ;*invokestatic expand
                                                ; - java.lang.invoke.MemberName::expandFromVM@17 (line 506)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)
                                                ;   {static_call}
  0x0000024807493044: mov    0x78(%rsp),%rdx
  0x0000024807493049: mov    0x28(%rdx),%eax
  0x000002480749304c: shl    $0x3,%rax          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@12 (line 124)

  0x0000024807493050: cmp    $0x0,%rax
  0x0000024807493054: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749305e: movabs $0x138,%rsi
  0x0000024807493068: jne    0x0000024807493078
  0x000002480749306e: movabs $0x148,%rsi
  0x0000024807493078: mov    (%rax,%rsi,1),%rdi
  0x000002480749307c: lea    0x1(%rdi),%rdi
  0x0000024807493080: mov    %rdi,(%rax,%rsi,1)
  0x0000024807493084: je     0x0000024807494163  ;*ifnonnull
                                                ; - java.lang.invoke.MemberName::getMethodType@15 (line 124)

  0x000002480749308a: mov    %rdx,%rax
  0x000002480749308d: movabs $0x2481febef70,%rsi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493097: mov    0x8(%rax),%eax
  0x000002480749309a: shl    $0x3,%rax
  0x000002480749309e: cmp    0x160(%rsi),%rax
  0x00000248074930a5: jne    0x00000248074930b4
  0x00000248074930a7: addq   $0x1,0x168(%rsi)
  0x00000248074930af: jmp    0x000002480749311a
  0x00000248074930b4: cmp    0x170(%rsi),%rax
  0x00000248074930bb: jne    0x00000248074930ca
  0x00000248074930bd: addq   $0x1,0x178(%rsi)
  0x00000248074930c5: jmp    0x000002480749311a
  0x00000248074930ca: cmpq   $0x0,0x160(%rsi)
  0x00000248074930d5: jne    0x00000248074930ee
  0x00000248074930d7: mov    %rax,0x160(%rsi)
  0x00000248074930de: movq   $0x1,0x168(%rsi)
  0x00000248074930e9: jmp    0x000002480749311a
  0x00000248074930ee: cmpq   $0x0,0x170(%rsi)
  0x00000248074930f9: jne    0x0000024807493112
  0x00000248074930fb: mov    %rax,0x170(%rsi)
  0x0000024807493102: movq   $0x1,0x178(%rsi)
  0x000002480749310d: jmp    0x000002480749311a
  0x0000024807493112: addq   $0x1,0x158(%rsi)
  0x000002480749311a: movabs $0x2481fe78488,%rax  ;   {metadata(method data for {method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493124: mov    0xdc(%rax),%esi
  0x000002480749312a: add    $0x8,%esi
  0x000002480749312d: mov    %esi,0xdc(%rax)
  0x0000024807493133: movabs $0x2481fb5ab00,%rax  ;   {metadata({method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749313d: and    $0x7ffff8,%esi
  0x0000024807493143: cmp    $0x0,%esi
  0x0000024807493146: je     0x00000248074942e0
  0x000002480749314c: mov    %rdx,%rax
  0x000002480749314f: movabs $0x2481fe78488,%rsi  ;   {metadata(method data for {method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493159: addq   $0x1,0x108(%rsi)
  0x0000024807493161: movabs $0x2481fe78e40,%rax  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749316b: mov    0xdc(%rax),%esi
  0x0000024807493171: add    $0x8,%esi
  0x0000024807493174: mov    %esi,0xdc(%rax)
  0x000002480749317a: movabs $0x2481fb5a190,%rax  ;   {metadata({method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493184: and    $0x7ffff8,%esi
  0x000002480749318a: cmp    $0x0,%esi
  0x000002480749318d: je     0x00000248074942f7
  0x0000024807493193: mov    %rdx,%rax
  0x0000024807493196: movabs $0x2481fe78e40,%rsi  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074931a0: addq   $0x1,0x108(%rsi)
  0x00000248074931a8: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074931b2: mov    0xdc(%rax),%esi
  0x00000248074931b8: add    $0x8,%esi
  0x00000248074931bb: mov    %esi,0xdc(%rax)
  0x00000248074931c1: movabs $0x2481fb5a058,%rax  ;   {metadata({method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074931cb: and    $0x7ffff8,%esi
  0x00000248074931d1: cmp    $0x0,%esi
  0x00000248074931d4: je     0x000002480749430e
  0x00000248074931da: mov    0xc(%rdx),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x00000248074931dd: and    $0x30000,%eax
  0x00000248074931e3: cmp    $0x0,%eax
  0x00000248074931e6: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074931f0: movabs $0x108,%rsi
  0x00000248074931fa: jne    0x000002480749320a
  0x0000024807493200: movabs $0x118,%rsi
  0x000002480749320a: mov    (%rax,%rsi,1),%rdi
  0x000002480749320e: lea    0x1(%rdi),%rdi
  0x0000024807493212: mov    %rdi,(%rax,%rsi,1)
  0x0000024807493216: jne    0x0000024807493236  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000002480749321c: movabs $0x2481fe60550,%rax  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493226: incl   0x128(%rax)
  0x000002480749322c: mov    $0x1,%eax
  0x0000024807493231: jmp    0x000002480749323b  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x0000024807493236: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000002480749323b: and    $0x1,%eax
  0x000002480749323e: cmp    $0x0,%eax
  0x0000024807493241: movabs $0x2481fe78e40,%rax  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749324b: movabs $0x118,%rsi
  0x0000024807493255: jne    0x0000024807493265
  0x000002480749325b: movabs $0x128,%rsi
  0x0000024807493265: mov    (%rax,%rsi,1),%rdi
  0x0000024807493269: lea    0x1(%rdi),%rdi
  0x000002480749326d: mov    %rdi,(%rax,%rsi,1)
  0x0000024807493271: jne    0x0000024807493291  ;*ifne
                                                ; - java.lang.invoke.MemberName::testAnyFlags@6 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x0000024807493277: movabs $0x2481fe78e40,%rax  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493281: incl   0x138(%rax)
  0x0000024807493287: mov    $0x1,%eax
  0x000002480749328c: jmp    0x0000024807493296  ;*goto
                                                ; - java.lang.invoke.MemberName::testAnyFlags@10 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x0000024807493291: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testAnyFlags@14 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x0000024807493296: and    $0x1,%eax
  0x0000024807493299: and    $0x1,%eax
  0x000002480749329c: cmp    $0x0,%eax
  0x000002480749329f: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074932a9: movabs $0x188,%rsi
  0x00000248074932b3: jne    0x00000248074932c3
  0x00000248074932b9: movabs $0x198,%rsi
  0x00000248074932c3: mov    (%rax,%rsi,1),%rdi
  0x00000248074932c7: lea    0x1(%rdi),%rdi
  0x00000248074932cb: mov    %rdi,(%rax,%rsi,1)
  0x00000248074932cf: je     0x000002480749417c  ;*ifne
                                                ; - java.lang.invoke.MemberName::getMethodType@24 (line 128)

  0x00000248074932d5: mov    0x28(%rdx),%esi
  0x00000248074932d8: shl    $0x3,%rsi          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@34 (line 134)

  0x00000248074932dc: cmp    $0x0,%rsi
  0x00000248074932e0: jne    0x00000248074932fb
  0x00000248074932e2: movabs $0x2481febef70,%rbx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074932ec: orl    $0x100,0x1b0(%rbx)
  0x00000248074932f6: jmp    0x00000248074933bb
  0x00000248074932fb: movabs $0x7c000c4d8,%rcx  ;   {metadata(&apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807493305: mov    0x8(%rsi),%edi
  0x0000024807493308: shl    $0x3,%rdi
  0x000002480749330c: cmp    %rdi,%rcx
  0x000002480749330f: jne    0x000002480749339f
  0x0000024807493315: movabs $0x2481febef70,%rbx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749331f: mov    0x8(%rsi),%ecx
  0x0000024807493322: shl    $0x3,%rcx
  0x0000024807493326: cmp    0x1c0(%rbx),%rcx
  0x000002480749332d: jne    0x000002480749333c
  0x000002480749332f: addq   $0x1,0x1c8(%rbx)
  0x0000024807493337: jmp    0x00000248074933c0
  0x000002480749333c: cmp    0x1d0(%rbx),%rcx
  0x0000024807493343: jne    0x0000024807493352
  0x0000024807493345: addq   $0x1,0x1d8(%rbx)
  0x000002480749334d: jmp    0x00000248074933c0
  0x0000024807493352: cmpq   $0x0,0x1c0(%rbx)
  0x000002480749335d: jne    0x0000024807493376
  0x000002480749335f: mov    %rcx,0x1c0(%rbx)
  0x0000024807493366: movq   $0x1,0x1c8(%rbx)
  0x0000024807493371: jmp    0x00000248074933c0
  0x0000024807493376: cmpq   $0x0,0x1d0(%rbx)
  0x0000024807493381: jne    0x000002480749339a
  0x0000024807493383: mov    %rcx,0x1d0(%rbx)
  0x000002480749338a: movq   $0x1,0x1d8(%rbx)
  0x0000024807493395: jmp    0x00000248074933c0
  0x000002480749339a: jmp    0x00000248074933c0
  0x000002480749339f: movabs $0x2481febef70,%rbx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074933a9: subq   $0x1,0x1b8(%rbx)
  0x00000248074933b1: jmp    0x00000248074933bb
  0x00000248074933b6: jmp    0x00000248074933c0
  0x00000248074933bb: xor    %rax,%rax
  0x00000248074933be: jmp    0x00000248074933ca
  0x00000248074933c0: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.invoke.MemberName::getMethodType@39 (line 135)

  0x00000248074933ca: cmp    $0x0,%eax
  0x00000248074933cd: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074933d7: movabs $0x1e8,%rdi
  0x00000248074933e1: je     0x00000248074933f1
  0x00000248074933e7: movabs $0x1f8,%rdi
  0x00000248074933f1: mov    (%rax,%rdi,1),%rbx
  0x00000248074933f5: lea    0x1(%rbx),%rbx
  0x00000248074933f9: mov    %rbx,(%rax,%rdi,1)
  0x00000248074933fd: jne    0x0000024807494072  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodType@42 (line 135)

  0x0000024807493403: lea    0x98(%rsp),%rsi
  0x000002480749340b: mov    %rdx,0x8(%rsi)
  0x000002480749340f: mov    (%rdx),%rax
  0x0000024807493412: mov    %rax,%rdi
  0x0000024807493415: and    $0x7,%rdi
  0x0000024807493419: cmp    $0x5,%rdi
  0x000002480749341d: jne    0x00000248074934a4
  0x0000024807493423: mov    0x8(%rdx),%edi
  0x0000024807493426: shl    $0x3,%rdi
  0x000002480749342a: mov    0xa8(%rdi),%rdi
  0x0000024807493431: or     %r15,%rdi
  0x0000024807493434: xor    %rax,%rdi
  0x0000024807493437: and    $0xffffffffffffff87,%rdi
  0x000002480749343b: je     0x00000248074934cc
  0x0000024807493441: test   $0x7,%rdi
  0x0000024807493448: jne    0x0000024807493491
  0x000002480749344a: test   $0x300,%rdi
  0x0000024807493451: jne    0x0000024807493470
  0x0000024807493453: and    $0x37f,%rax
  0x000002480749345a: mov    %rax,%rdi
  0x000002480749345d: or     %r15,%rdi
  0x0000024807493460: lock cmpxchg %rdi,(%rdx)
  0x0000024807493465: jne    0x0000024807494325
  0x000002480749346b: jmp    0x00000248074934cc
  0x0000024807493470: mov    0x8(%rdx),%edi
  0x0000024807493473: shl    $0x3,%rdi
  0x0000024807493477: mov    0xa8(%rdi),%rdi
  0x000002480749347e: or     %r15,%rdi
  0x0000024807493481: lock cmpxchg %rdi,(%rdx)
  0x0000024807493486: jne    0x0000024807494325
  0x000002480749348c: jmp    0x00000248074934cc
  0x0000024807493491: mov    0x8(%rdx),%edi
  0x0000024807493494: shl    $0x3,%rdi
  0x0000024807493498: mov    0xa8(%rdi),%rdi
  0x000002480749349f: lock cmpxchg %rdi,(%rdx)
  0x00000248074934a4: mov    (%rdx),%rax
  0x00000248074934a7: or     $0x1,%rax
  0x00000248074934ab: mov    %rax,(%rsi)
  0x00000248074934ae: lock cmpxchg %rsi,(%rdx)
  0x00000248074934b3: je     0x00000248074934cc
  0x00000248074934b9: sub    %rsp,%rax
  0x00000248074934bc: and    $0xfffffffffffff007,%rax
  0x00000248074934c3: mov    %rax,(%rsi)
  0x00000248074934c6: jne    0x0000024807494325  ;*monitorenter
                                                ; - java.lang.invoke.MemberName::getMethodType@53 (line 141)

  0x00000248074934cc: mov    0x28(%rdx),%esi
  0x00000248074934cf: shl    $0x3,%rsi          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@55 (line 142)

  0x00000248074934d3: cmp    $0x0,%rsi
  0x00000248074934d7: jne    0x00000248074934f2
  0x00000248074934d9: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074934e3: orl    $0x100,0x230(%rax)
  0x00000248074934ed: jmp    0x00000248074935b2
  0x00000248074934f2: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000248074934fc: mov    0x8(%rsi),%ebx
  0x00000248074934ff: shl    $0x3,%rbx
  0x0000024807493503: cmp    %rbx,%rcx
  0x0000024807493506: jne    0x0000024807493596
  0x000002480749350c: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493516: mov    0x8(%rsi),%ecx
  0x0000024807493519: shl    $0x3,%rcx
  0x000002480749351d: cmp    0x240(%rax),%rcx
  0x0000024807493524: jne    0x0000024807493533
  0x0000024807493526: addq   $0x1,0x248(%rax)
  0x000002480749352e: jmp    0x00000248074935b7
  0x0000024807493533: cmp    0x250(%rax),%rcx
  0x000002480749353a: jne    0x0000024807493549
  0x000002480749353c: addq   $0x1,0x258(%rax)
  0x0000024807493544: jmp    0x00000248074935b7
  0x0000024807493549: cmpq   $0x0,0x240(%rax)
  0x0000024807493554: jne    0x000002480749356d
  0x0000024807493556: mov    %rcx,0x240(%rax)
  0x000002480749355d: movq   $0x1,0x248(%rax)
  0x0000024807493568: jmp    0x00000248074935b7
  0x000002480749356d: cmpq   $0x0,0x250(%rax)
  0x0000024807493578: jne    0x0000024807493591
  0x000002480749357a: mov    %rcx,0x250(%rax)
  0x0000024807493581: movq   $0x1,0x258(%rax)
  0x000002480749358c: jmp    0x00000248074935b7
  0x0000024807493591: jmp    0x00000248074935b7
  0x0000024807493596: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074935a0: subq   $0x1,0x238(%rax)
  0x00000248074935a8: jmp    0x00000248074935b2
  0x00000248074935ad: jmp    0x00000248074935b7
  0x00000248074935b2: xor    %rdi,%rdi
  0x00000248074935b5: jmp    0x00000248074935c1
  0x00000248074935b7: movabs $0x1,%rdi          ;*instanceof
                                                ; - java.lang.invoke.MemberName::getMethodType@58 (line 142)

  0x00000248074935c1: cmp    $0x0,%edi
  0x00000248074935c4: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074935ce: movabs $0x268,%rbx
  0x00000248074935d8: je     0x00000248074935e8
  0x00000248074935de: movabs $0x278,%rbx
  0x00000248074935e8: mov    (%rdi,%rbx,1),%rax
  0x00000248074935ec: lea    0x1(%rax),%rax
  0x00000248074935f0: mov    %rax,(%rdi,%rbx,1)
  0x00000248074935f4: je     0x0000024807493aa8  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodType@61 (line 142)

  0x00000248074935fa: cmp    $0x0,%rsi
  0x00000248074935fe: jne    0x0000024807493619
  0x0000024807493600: movabs $0x2481febef70,%rbx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749360a: orl    $0x100,0x280(%rbx)
  0x0000024807493614: jmp    0x00000248074936d9
  0x0000024807493619: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000024807493623: mov    0x8(%rsi),%edi
  0x0000024807493626: shl    $0x3,%rdi
  0x000002480749362a: cmp    %rdi,%rax
  0x000002480749362d: jne    0x00000248074936bd
  0x0000024807493633: movabs $0x2481febef70,%rbx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749363d: mov    0x8(%rsi),%eax
  0x0000024807493640: shl    $0x3,%rax
  0x0000024807493644: cmp    0x290(%rbx),%rax
  0x000002480749364b: jne    0x000002480749365a
  0x000002480749364d: addq   $0x1,0x298(%rbx)
  0x0000024807493655: jmp    0x00000248074936d9
  0x000002480749365a: cmp    0x2a0(%rbx),%rax
  0x0000024807493661: jne    0x0000024807493670
  0x0000024807493663: addq   $0x1,0x2a8(%rbx)
  0x000002480749366b: jmp    0x00000248074936d9
  0x0000024807493670: cmpq   $0x0,0x290(%rbx)
  0x000002480749367b: jne    0x0000024807493694
  0x000002480749367d: mov    %rax,0x290(%rbx)
  0x0000024807493684: movq   $0x1,0x298(%rbx)
  0x000002480749368f: jmp    0x00000248074936d9
  0x0000024807493694: cmpq   $0x0,0x2a0(%rbx)
  0x000002480749369f: jne    0x00000248074936b8
  0x00000248074936a1: mov    %rax,0x2a0(%rbx)
  0x00000248074936a8: movq   $0x1,0x2a8(%rbx)
  0x00000248074936b3: jmp    0x00000248074936d9
  0x00000248074936b8: jmp    0x00000248074936d9
  0x00000248074936bd: movabs $0x2481febef70,%rbx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074936c7: subq   $0x1,0x288(%rbx)
  0x00000248074936cf: jmp    0x0000024807494338
  0x00000248074936d4: jmp    0x00000248074936d9  ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@68 (line 143)

  0x00000248074936d9: mov    %rdx,%rdi
  0x00000248074936dc: movabs $0x2481febef70,%rbx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074936e6: mov    0x8(%rdi),%edi
  0x00000248074936e9: shl    $0x3,%rdi
  0x00000248074936ed: cmp    0x2c0(%rbx),%rdi
  0x00000248074936f4: jne    0x0000024807493703
  0x00000248074936f6: addq   $0x1,0x2c8(%rbx)
  0x00000248074936fe: jmp    0x0000024807493769
  0x0000024807493703: cmp    0x2d0(%rbx),%rdi
  0x000002480749370a: jne    0x0000024807493719
  0x000002480749370c: addq   $0x1,0x2d8(%rbx)
  0x0000024807493714: jmp    0x0000024807493769
  0x0000024807493719: cmpq   $0x0,0x2c0(%rbx)
  0x0000024807493724: jne    0x000002480749373d
  0x0000024807493726: mov    %rdi,0x2c0(%rbx)
  0x000002480749372d: movq   $0x1,0x2c8(%rbx)
  0x0000024807493738: jmp    0x0000024807493769
  0x000002480749373d: cmpq   $0x0,0x2d0(%rbx)
  0x0000024807493748: jne    0x0000024807493761
  0x000002480749374a: mov    %rdi,0x2d0(%rbx)
  0x0000024807493751: movq   $0x1,0x2d8(%rbx)
  0x000002480749375c: jmp    0x0000024807493769
  0x0000024807493761: addq   $0x1,0x2b8(%rbx)
  0x0000024807493769: movabs $0x2481ff16828,%rdi  ;   {metadata(method data for {method} {0x000002481fb58fc8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493773: mov    0xdc(%rdi),%ebx
  0x0000024807493779: add    $0x8,%ebx
  0x000002480749377c: mov    %ebx,0xdc(%rdi)
  0x0000024807493782: movabs $0x2481fb58fc0,%rdi  ;   {metadata({method} {0x000002481fb58fc8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749378c: and    $0x7ffff8,%ebx
  0x0000024807493792: cmp    $0x0,%ebx
  0x0000024807493795: je     0x0000024807494341
  0x000002480749379b: mov    0x20(%rdx),%edi
  0x000002480749379e: shl    $0x3,%rdi          ;*getfield clazz
                                                ; - java.lang.invoke.MemberName::getClassLoader@1 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x00000248074937a2: cmp    (%rdi),%rax        ;*invokevirtual getClassLoader
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ; implicit exception: dispatches to 0x0000024807494358
  0x00000248074937a5: mov    %rdi,%rbx
  0x00000248074937a8: movabs $0x2481ff16828,%rax  ;   {metadata(method data for {method} {0x000002481fb58fc8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074937b2: mov    0x8(%rbx),%ebx
  0x00000248074937b5: shl    $0x3,%rbx
  0x00000248074937b9: cmp    0x110(%rax),%rbx
  0x00000248074937c0: jne    0x00000248074937cf
  0x00000248074937c2: addq   $0x1,0x118(%rax)
  0x00000248074937ca: jmp    0x0000024807493835
  0x00000248074937cf: cmp    0x120(%rax),%rbx
  0x00000248074937d6: jne    0x00000248074937e5
  0x00000248074937d8: addq   $0x1,0x128(%rax)
  0x00000248074937e0: jmp    0x0000024807493835
  0x00000248074937e5: cmpq   $0x0,0x110(%rax)
  0x00000248074937f0: jne    0x0000024807493809
  0x00000248074937f2: mov    %rbx,0x110(%rax)
  0x00000248074937f9: movq   $0x1,0x118(%rax)
  0x0000024807493804: jmp    0x0000024807493835
  0x0000024807493809: cmpq   $0x0,0x120(%rax)
  0x0000024807493814: jne    0x000002480749382d
  0x0000024807493816: mov    %rbx,0x120(%rax)
  0x000002480749381d: movq   $0x1,0x128(%rax)
  0x0000024807493828: jmp    0x0000024807493835
  0x000002480749382d: addq   $0x1,0x108(%rax)
  0x0000024807493835: movabs $0x2481fe861a0,%rbx  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x000002480749383f: mov    0xdc(%rbx),%eax
  0x0000024807493845: add    $0x8,%eax
  0x0000024807493848: mov    %eax,0xdc(%rbx)
  0x000002480749384e: movabs $0x2481fb0c9c0,%rbx  ;   {metadata({method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807493858: and    $0x7ffff8,%eax
  0x000002480749385e: cmp    $0x0,%eax
  0x0000024807493861: je     0x000002480749435d
  0x0000024807493867: mov    %rdi,%rbx
  0x000002480749386a: movabs $0x2481fe861a0,%rax  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807493874: mov    0x8(%rbx),%ebx
  0x0000024807493877: shl    $0x3,%rbx
  0x000002480749387b: cmp    0x110(%rax),%rbx
  0x0000024807493882: jne    0x0000024807493891
  0x0000024807493884: addq   $0x1,0x118(%rax)
  0x000002480749388c: jmp    0x00000248074938f7
  0x0000024807493891: cmp    0x120(%rax),%rbx
  0x0000024807493898: jne    0x00000248074938a7
  0x000002480749389a: addq   $0x1,0x128(%rax)
  0x00000248074938a2: jmp    0x00000248074938f7
  0x00000248074938a7: cmpq   $0x0,0x110(%rax)
  0x00000248074938b2: jne    0x00000248074938cb
  0x00000248074938b4: mov    %rbx,0x110(%rax)
  0x00000248074938bb: movq   $0x1,0x118(%rax)
  0x00000248074938c6: jmp    0x00000248074938f7
  0x00000248074938cb: cmpq   $0x0,0x120(%rax)
  0x00000248074938d6: jne    0x00000248074938ef
  0x00000248074938d8: mov    %rbx,0x120(%rax)
  0x00000248074938df: movq   $0x1,0x128(%rax)
  0x00000248074938ea: jmp    0x00000248074938f7
  0x00000248074938ef: addq   $0x1,0x108(%rax)
  0x00000248074938f7: mov    0x18(%rdi),%edi
  0x00000248074938fa: shl    $0x3,%rdi          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.Class::getClassLoader@1 (line 678)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x00000248074938fe: cmp    $0x0,%rdi
  0x0000024807493902: movabs $0x2481fe861a0,%rbx  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x000002480749390c: movabs $0x138,%rax
  0x0000024807493916: jne    0x0000024807493926
  0x000002480749391c: movabs $0x148,%rax
  0x0000024807493926: mov    (%rbx,%rax,1),%rcx
  0x000002480749392a: lea    0x1(%rcx),%rcx
  0x000002480749392e: mov    %rcx,(%rbx,%rax,1)
  0x0000024807493932: jne    0x000002480749394f  ;*ifnonnull
                                                ; - java.lang.Class::getClassLoader@6 (line 679)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x0000024807493938: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x0000024807493942: mov    %rsi,0x88(%rsp)
  0x000002480749394a: jmp    0x0000024807493a44  ;*areturn
                                                ; - java.lang.invoke.MemberName::getClassLoader@7 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000002480749394f: movabs $0x2481fe861a0,%rbx  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807493959: addq   $0x1,0x158(%rbx)
  0x0000024807493961: movabs $0x2481fd286d8,%rbx  ;   {metadata(method data for {method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000002480749396b: mov    0xdc(%rbx),%eax
  0x0000024807493971: add    $0x8,%eax
  0x0000024807493974: mov    %eax,0xdc(%rbx)
  0x000002480749397a: movabs $0x2481fb196e0,%rbx  ;   {metadata({method} {0x000002481fb196e8} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000024807493984: and    $0x7ffff8,%eax
  0x000002480749398a: cmp    $0x0,%eax
  0x000002480749398d: je     0x0000024807494374
  0x0000024807493993: movabs $0x76b700c78,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000002480749399d: mov    0x74(%rbx),%ebx
  0x00000248074939a0: shl    $0x3,%rbx          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 336)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x00000248074939a4: cmp    $0x0,%rbx
  0x00000248074939a8: movabs $0x2481fe861a0,%rbx  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x00000248074939b2: movabs $0x168,%rax
  0x00000248074939bc: je     0x00000248074939cc
  0x00000248074939c2: movabs $0x178,%rax
  0x00000248074939cc: mov    (%rbx,%rax,1),%rcx
  0x00000248074939d0: lea    0x1(%rcx),%rcx
  0x00000248074939d4: mov    %rcx,(%rbx,%rax,1)
  0x00000248074939d8: jne    0x00000248074939eb  ;*ifnull
                                                ; - java.lang.Class::getClassLoader@16 (line 682)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x00000248074939de: mov    %rsi,0x88(%rsp)
  0x00000248074939e6: jmp    0x0000024807493a44  ;*aload_1
                                                ; - java.lang.Class::getClassLoader@26 (line 685)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x00000248074939eb: mov    %rdi,0x80(%rsp)
  0x00000248074939f3: mov    %rsi,0x88(%rsp)
  0x00000248074939fb: movabs $0x2481fe861a0,%rbx  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807493a05: addq   $0x1,0x188(%rbx)
  0x0000024807493a0d: nop
  0x0000024807493a0e: nop
  0x0000024807493a0f: call   0x0000024807376360  ; OopMap{[128]=Oop [120]=Oop [136]=Oop [160]=Oop off=3188}
                                                ;*invokestatic getCallerClass
                                                ; - java.lang.Class::getClassLoader@20 (line 683)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {static_call}
  0x0000024807493a14: movabs $0x2481fe861a0,%rdx  ;   {metadata(method data for {method} {0x000002481fb0c9c8} &apos;getClassLoader&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;)}
  0x0000024807493a1e: addq   $0x1,0x198(%rdx)
  0x0000024807493a26: mov    0x80(%rsp),%rdx
  0x0000024807493a2e: mov    %rax,%r8           ;*invokestatic checkClassLoaderPermission
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x0000024807493a31: nop
  0x0000024807493a32: nop
  0x0000024807493a33: nop
  0x0000024807493a34: nop
  0x0000024807493a35: nop
  0x0000024807493a36: nop
  0x0000024807493a37: call   0x0000024807376360  ; OopMap{[128]=Oop [120]=Oop [136]=Oop [160]=Oop off=3228}
                                                ;*invokestatic checkClassLoaderPermission
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {static_call}
  0x0000024807493a3c: mov    0x80(%rsp),%rdi
  0x0000024807493a44: mov    0x88(%rsp),%rsi
  0x0000024807493a4c: movabs $0x2481febef70,%r8  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493a56: addq   $0x1,0x2e8(%r8)
  0x0000024807493a5e: mov    %rsi,%rdx
  0x0000024807493a61: mov    %rdi,%r8           ;*invokestatic fromMethodDescriptorString
                                                ; - java.lang.invoke.MemberName::getMethodType@77 (line 144)

  0x0000024807493a64: nop
  0x0000024807493a65: nop
  0x0000024807493a66: nop
  0x0000024807493a67: call   0x0000024807376360  ; OopMap{[120]=Oop [160]=Oop off=3276}
                                                ;*invokestatic fromMethodDescriptorString
                                                ; - java.lang.invoke.MemberName::getMethodType@77 (line 144)
                                                ;   {static_call}
  0x0000024807493a6c: mov    0x78(%rsp),%rdx
  0x0000024807493a71: mov    %rax,%r10
  0x0000024807493a74: shr    $0x3,%r10
  0x0000024807493a78: mov    %r10d,0x28(%rdx)
  0x0000024807493a7c: mov    %rdx,%r8
  0x0000024807493a7f: shr    $0x9,%r8
  0x0000024807493a83: movabs $0x248130de000,%r9
  0x0000024807493a8d: movb   $0x0,(%r8,%r9,1)   ;*putfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@83 (line 145)

  0x0000024807493a92: movabs $0x2481febef70,%r8  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493a9c: incl   0x2f8(%r8)
  0x0000024807493aa3: jmp    0x0000024807493f29  ;*goto
                                                ; - java.lang.invoke.MemberName::getMethodType@86 (line 146)

  0x0000024807493aa8: cmp    $0x0,%rsi
  0x0000024807493aac: jne    0x0000024807493ac7
  0x0000024807493aae: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493ab8: orl    $0x100,0x308(%rdi)
  0x0000024807493ac2: jmp    0x0000024807493b88
  0x0000024807493ac7: movabs $0x7c0011a60,%rbx  ;   {metadata(&apos;java/lang/Object&apos;[])}
  0x0000024807493ad1: mov    0x8(%rsi),%edi
  0x0000024807493ad4: shl    $0x3,%rdi
  0x0000024807493ad8: cmp    0x30(%rdi),%rbx
  0x0000024807493adc: jne    0x0000024807493b6c
  0x0000024807493ae2: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493aec: mov    0x8(%rsi),%ebx
  0x0000024807493aef: shl    $0x3,%rbx
  0x0000024807493af3: cmp    0x318(%rdi),%rbx
  0x0000024807493afa: jne    0x0000024807493b09
  0x0000024807493afc: addq   $0x1,0x320(%rdi)
  0x0000024807493b04: jmp    0x0000024807493b8d
  0x0000024807493b09: cmp    0x328(%rdi),%rbx
  0x0000024807493b10: jne    0x0000024807493b1f
  0x0000024807493b12: addq   $0x1,0x330(%rdi)
  0x0000024807493b1a: jmp    0x0000024807493b8d
  0x0000024807493b1f: cmpq   $0x0,0x318(%rdi)
  0x0000024807493b2a: jne    0x0000024807493b43
  0x0000024807493b2c: mov    %rbx,0x318(%rdi)
  0x0000024807493b33: movq   $0x1,0x320(%rdi)
  0x0000024807493b3e: jmp    0x0000024807493b8d
  0x0000024807493b43: cmpq   $0x0,0x328(%rdi)
  0x0000024807493b4e: jne    0x0000024807493b67
  0x0000024807493b50: mov    %rbx,0x328(%rdi)
  0x0000024807493b57: movq   $0x1,0x330(%rdi)
  0x0000024807493b62: jmp    0x0000024807493b8d
  0x0000024807493b67: jmp    0x0000024807493b8d
  0x0000024807493b6c: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493b76: subq   $0x1,0x310(%rdi)
  0x0000024807493b7e: jmp    0x0000024807493b88
  0x0000024807493b83: jmp    0x0000024807493b8d
  0x0000024807493b88: xor    %r8,%r8
  0x0000024807493b8b: jmp    0x0000024807493b97
  0x0000024807493b8d: movabs $0x1,%r8           ;*instanceof
                                                ; - java.lang.invoke.MemberName::getMethodType@93 (line 146)

  0x0000024807493b97: cmp    $0x0,%r8d
  0x0000024807493b9b: movabs $0x2481febef70,%r8  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493ba5: movabs $0x340,%r9
  0x0000024807493baf: je     0x0000024807493bbf
  0x0000024807493bb5: movabs $0x350,%r9
  0x0000024807493bbf: mov    (%r8,%r9,1),%rdi
  0x0000024807493bc3: lea    0x1(%rdi),%rdi
  0x0000024807493bc7: mov    %rdi,(%r8,%r9,1)
  0x0000024807493bcb: je     0x0000024807493f29  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodType@96 (line 146)

  0x0000024807493bd1: cmp    $0x0,%rsi
  0x0000024807493bd5: jne    0x0000024807493bf1
  0x0000024807493bd7: movabs $0x2481febef70,%r8  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493be1: orl    $0x100,0x358(%r8)
  0x0000024807493bec: jmp    0x0000024807493cb3
  0x0000024807493bf1: movabs $0x7c0011a60,%rdi  ;   {metadata(&apos;java/lang/Object&apos;[])}
  0x0000024807493bfb: mov    0x8(%rsi),%r8d
  0x0000024807493bff: shl    $0x3,%r8
  0x0000024807493c03: cmp    0x30(%r8),%rdi
  0x0000024807493c07: jne    0x0000024807493c97
  0x0000024807493c0d: movabs $0x2481febef70,%r8  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493c17: mov    0x8(%rsi),%edi
  0x0000024807493c1a: shl    $0x3,%rdi
  0x0000024807493c1e: cmp    0x368(%r8),%rdi
  0x0000024807493c25: jne    0x0000024807493c34
  0x0000024807493c27: addq   $0x1,0x370(%r8)
  0x0000024807493c2f: jmp    0x0000024807493cb3
  0x0000024807493c34: cmp    0x378(%r8),%rdi
  0x0000024807493c3b: jne    0x0000024807493c4a
  0x0000024807493c3d: addq   $0x1,0x380(%r8)
  0x0000024807493c45: jmp    0x0000024807493cb3
  0x0000024807493c4a: cmpq   $0x0,0x368(%r8)
  0x0000024807493c55: jne    0x0000024807493c6e
  0x0000024807493c57: mov    %rdi,0x368(%r8)
  0x0000024807493c5e: movq   $0x1,0x370(%r8)
  0x0000024807493c69: jmp    0x0000024807493cb3
  0x0000024807493c6e: cmpq   $0x0,0x378(%r8)
  0x0000024807493c79: jne    0x0000024807493c92
  0x0000024807493c7b: mov    %rdi,0x378(%r8)
  0x0000024807493c82: movq   $0x1,0x380(%r8)
  0x0000024807493c8d: jmp    0x0000024807493cb3
  0x0000024807493c92: jmp    0x0000024807493cb3
  0x0000024807493c97: movabs $0x2481febef70,%r8  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493ca1: subq   $0x1,0x360(%r8)
  0x0000024807493ca9: jmp    0x000002480749438b
  0x0000024807493cae: jmp    0x0000024807493cb3
  0x0000024807493cb3: mov    %rsi,%r8           ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@103 (line 147)

  0x0000024807493cb6: cmpl   $0x1,0xc(%r8)      ; implicit exception: dispatches to 0x0000024807494394
  0x0000024807493cbe: jbe    0x000002480749439e
  0x0000024807493cc4: mov    0x14(%r8),%r9d
  0x0000024807493cc8: shl    $0x3,%r9           ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@112 (line 148)

  0x0000024807493ccc: cmp    $0x0,%r9
  0x0000024807493cd0: jne    0x0000024807493ceb
  0x0000024807493cd2: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493cdc: orl    $0x100,0x3b8(%rdi)
  0x0000024807493ce6: jmp    0x0000024807493dae
  0x0000024807493ceb: movabs $0x7c00123c0,%rbx  ;   {metadata(&apos;java/lang/Class&apos;[])}
  0x0000024807493cf5: mov    0x8(%r9),%edi
  0x0000024807493cf9: shl    $0x3,%rdi
  0x0000024807493cfd: cmp    0x38(%rdi),%rbx
  0x0000024807493d01: jne    0x0000024807493d92
  0x0000024807493d07: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493d11: mov    0x8(%r9),%ebx
  0x0000024807493d15: shl    $0x3,%rbx
  0x0000024807493d19: cmp    0x3c8(%rdi),%rbx
  0x0000024807493d20: jne    0x0000024807493d2f
  0x0000024807493d22: addq   $0x1,0x3d0(%rdi)
  0x0000024807493d2a: jmp    0x0000024807493dae
  0x0000024807493d2f: cmp    0x3d8(%rdi),%rbx
  0x0000024807493d36: jne    0x0000024807493d45
  0x0000024807493d38: addq   $0x1,0x3e0(%rdi)
  0x0000024807493d40: jmp    0x0000024807493dae
  0x0000024807493d45: cmpq   $0x0,0x3c8(%rdi)
  0x0000024807493d50: jne    0x0000024807493d69
  0x0000024807493d52: mov    %rbx,0x3c8(%rdi)
  0x0000024807493d59: movq   $0x1,0x3d0(%rdi)
  0x0000024807493d64: jmp    0x0000024807493dae
  0x0000024807493d69: cmpq   $0x0,0x3d8(%rdi)
  0x0000024807493d74: jne    0x0000024807493d8d
  0x0000024807493d76: mov    %rbx,0x3d8(%rdi)
  0x0000024807493d7d: movq   $0x1,0x3e0(%rdi)
  0x0000024807493d88: jmp    0x0000024807493dae
  0x0000024807493d8d: jmp    0x0000024807493dae
  0x0000024807493d92: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493d9c: subq   $0x1,0x3c0(%rdi)
  0x0000024807493da4: jmp    0x00000248074943ab
  0x0000024807493da9: jmp    0x0000024807493dae  ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@113 (line 148)

  0x0000024807493dae: mov    0x10(%r8),%r8d
  0x0000024807493db2: shl    $0x3,%r8           ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@122 (line 149)

  0x0000024807493db6: cmp    $0x0,%r8
  0x0000024807493dba: jne    0x0000024807493dd5
  0x0000024807493dbc: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493dc6: orl    $0x100,0x418(%rdi)
  0x0000024807493dd0: jmp    0x0000024807493e97
  0x0000024807493dd5: movabs $0x7c0001ef8,%rbx  ;   {metadata(&apos;java/lang/Class&apos;)}
  0x0000024807493ddf: mov    0x8(%r8),%esi
  0x0000024807493de3: shl    $0x3,%rsi
  0x0000024807493de7: cmp    %rsi,%rbx
  0x0000024807493dea: jne    0x0000024807493e7b
  0x0000024807493df0: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493dfa: mov    0x8(%r8),%ebx
  0x0000024807493dfe: shl    $0x3,%rbx
  0x0000024807493e02: cmp    0x428(%rdi),%rbx
  0x0000024807493e09: jne    0x0000024807493e18
  0x0000024807493e0b: addq   $0x1,0x430(%rdi)
  0x0000024807493e13: jmp    0x0000024807493e97
  0x0000024807493e18: cmp    0x438(%rdi),%rbx
  0x0000024807493e1f: jne    0x0000024807493e2e
  0x0000024807493e21: addq   $0x1,0x440(%rdi)
  0x0000024807493e29: jmp    0x0000024807493e97
  0x0000024807493e2e: cmpq   $0x0,0x428(%rdi)
  0x0000024807493e39: jne    0x0000024807493e52
  0x0000024807493e3b: mov    %rbx,0x428(%rdi)
  0x0000024807493e42: movq   $0x1,0x430(%rdi)
  0x0000024807493e4d: jmp    0x0000024807493e97
  0x0000024807493e52: cmpq   $0x0,0x438(%rdi)
  0x0000024807493e5d: jne    0x0000024807493e76
  0x0000024807493e5f: mov    %rbx,0x438(%rdi)
  0x0000024807493e66: movq   $0x1,0x440(%rdi)
  0x0000024807493e71: jmp    0x0000024807493e97
  0x0000024807493e76: jmp    0x0000024807493e97
  0x0000024807493e7b: movabs $0x2481febef70,%rdi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493e85: subq   $0x1,0x420(%rdi)
  0x0000024807493e8d: jmp    0x00000248074943b4
  0x0000024807493e92: jmp    0x0000024807493e97  ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@123 (line 149)

  0x0000024807493e97: movabs $0x2481febef70,%rsi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493ea1: addq   $0x1,0x450(%rsi)
  0x0000024807493ea9: movabs $0x2481ff182f0,%rsi  ;   {metadata(method data for {method} {0x000002481fb69c70} &apos;methodType&apos; &apos;(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807493eb3: mov    0xdc(%rsi),%edi
  0x0000024807493eb9: add    $0x8,%edi
  0x0000024807493ebc: mov    %edi,0xdc(%rsi)
  0x0000024807493ec2: movabs $0x2481fb69c68,%rsi  ;   {metadata({method} {0x000002481fb69c70} &apos;methodType&apos; &apos;(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807493ecc: and    $0x7ffff8,%edi
  0x0000024807493ed2: cmp    $0x0,%edi
  0x0000024807493ed5: je     0x00000248074943bd
  0x0000024807493edb: movabs $0x2481ff182f0,%rsi  ;   {metadata(method data for {method} {0x000002481fb69c70} &apos;methodType&apos; &apos;(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807493ee5: addq   $0x1,0x108(%rsi)
  0x0000024807493eed: mov    %r8,%rdx
  0x0000024807493ef0: mov    %r9,%r8
  0x0000024807493ef3: mov    $0x0,%r9d          ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@3 (line 207)
                                                ; - java.lang.invoke.MemberName::getMethodType@131 (line 150)

  0x0000024807493ef9: nop
  0x0000024807493efa: nop
  0x0000024807493efb: nop
  0x0000024807493efc: nop
  0x0000024807493efd: nop
  0x0000024807493efe: nop
  0x0000024807493eff: call   0x0000024807376360  ; OopMap{[120]=Oop [160]=Oop off=4452}
                                                ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@3 (line 207)
                                                ; - java.lang.invoke.MemberName::getMethodType@131 (line 150)
                                                ;   {static_call}
  0x0000024807493f04: mov    0x78(%rsp),%rdx
  0x0000024807493f09: mov    %rax,%r10
  0x0000024807493f0c: shr    $0x3,%r10
  0x0000024807493f10: mov    %r10d,0x28(%rdx)
  0x0000024807493f14: mov    %rdx,%rax
  0x0000024807493f17: shr    $0x9,%rax
  0x0000024807493f1b: movabs $0x248130de000,%rsi
  0x0000024807493f25: movb   $0x0,(%rax,%rsi,1)  ;*putfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@139 (line 151)

  0x0000024807493f29: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493f33: incl   0x460(%rax)        ;*ifne
                                                ; - java.lang.invoke.MemberName::getMethodType@145 (line 154)

  0x0000024807493f39: lea    0x98(%rsp),%rax
  0x0000024807493f41: mov    0x8(%rax),%rdi
  0x0000024807493f45: mov    (%rdi),%rsi
  0x0000024807493f48: and    $0x7,%rsi
  0x0000024807493f4c: cmp    $0x5,%rsi
  0x0000024807493f50: je     0x0000024807493f6d
  0x0000024807493f56: mov    (%rax),%rsi
  0x0000024807493f59: test   %rsi,%rsi
  0x0000024807493f5c: je     0x0000024807493f6d
  0x0000024807493f62: lock cmpxchg %rsi,(%rdi)
  0x0000024807493f67: jne    0x00000248074943d4  ;*monitorexit
                                                ; - java.lang.invoke.MemberName::getMethodType@189 (line 155)

  0x0000024807493f6d: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493f77: incl   0x580(%rax)        ;*goto
                                                ; - java.lang.invoke.MemberName::getMethodType@190 (line 155)

  0x0000024807493f7d: mov    0x28(%rdx),%eax
  0x0000024807493f80: shl    $0x3,%rax          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@201 (line 156)

  0x0000024807493f84: cmp    $0x0,%rax
  0x0000024807493f88: jne    0x0000024807493fa3
  0x0000024807493f8a: movabs $0x2481febef70,%rsi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493f94: orl    $0x100,0x590(%rsi)
  0x0000024807493f9e: jmp    0x0000024807494063
  0x0000024807493fa3: movabs $0x7c000c4d8,%rdi  ;   {metadata(&apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807493fad: mov    0x8(%rax),%edx
  0x0000024807493fb0: shl    $0x3,%rdx
  0x0000024807493fb4: cmp    %rdx,%rdi
  0x0000024807493fb7: jne    0x0000024807494047
  0x0000024807493fbd: movabs $0x2481febef70,%rsi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807493fc7: mov    0x8(%rax),%edi
  0x0000024807493fca: shl    $0x3,%rdi
  0x0000024807493fce: cmp    0x5a0(%rsi),%rdi
  0x0000024807493fd5: jne    0x0000024807493fe4
  0x0000024807493fd7: addq   $0x1,0x5a8(%rsi)
  0x0000024807493fdf: jmp    0x0000024807494063
  0x0000024807493fe4: cmp    0x5b0(%rsi),%rdi
  0x0000024807493feb: jne    0x0000024807493ffa
  0x0000024807493fed: addq   $0x1,0x5b8(%rsi)
  0x0000024807493ff5: jmp    0x0000024807494063
  0x0000024807493ffa: cmpq   $0x0,0x5a0(%rsi)
  0x0000024807494005: jne    0x000002480749401e
  0x0000024807494007: mov    %rdi,0x5a0(%rsi)
  0x000002480749400e: movq   $0x1,0x5a8(%rsi)
  0x0000024807494019: jmp    0x0000024807494063
  0x000002480749401e: cmpq   $0x0,0x5b0(%rsi)
  0x0000024807494029: jne    0x0000024807494042
  0x000002480749402b: mov    %rdi,0x5b0(%rsi)
  0x0000024807494032: movq   $0x1,0x5b8(%rsi)
  0x000002480749403d: jmp    0x0000024807494063
  0x0000024807494042: jmp    0x0000024807494063
  0x0000024807494047: movabs $0x2481febef70,%rsi  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807494051: subq   $0x1,0x598(%rsi)
  0x0000024807494059: jmp    0x00000248074943ea
  0x000002480749405e: jmp    0x0000024807494063  ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@204 (line 156)

  0x0000024807494063: add    $0xb0,%rsp
  0x000002480749406a: pop    %rbp
  0x000002480749406b: test   %eax,-0x1ee3f71(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807494071: ret                       ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodType@207 (line 156)

  0x0000024807494072: cmp    $0x0,%rsi
  0x0000024807494076: jne    0x0000024807494091
  0x0000024807494078: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807494082: orl    $0x100,0x200(%rax)
  0x000002480749408c: jmp    0x0000024807494151
  0x0000024807494091: movabs $0x7c000c4d8,%rdi  ;   {metadata(&apos;java/lang/invoke/MethodType&apos;)}
  0x000002480749409b: mov    0x8(%rsi),%edx
  0x000002480749409e: shl    $0x3,%rdx
  0x00000248074940a2: cmp    %rdx,%rdi
  0x00000248074940a5: jne    0x0000024807494135
  0x00000248074940ab: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074940b5: mov    0x8(%rsi),%edi
  0x00000248074940b8: shl    $0x3,%rdi
  0x00000248074940bc: cmp    0x210(%rax),%rdi
  0x00000248074940c3: jne    0x00000248074940d2
  0x00000248074940c5: addq   $0x1,0x218(%rax)
  0x00000248074940cd: jmp    0x0000024807494151
  0x00000248074940d2: cmp    0x220(%rax),%rdi
  0x00000248074940d9: jne    0x00000248074940e8
  0x00000248074940db: addq   $0x1,0x228(%rax)
  0x00000248074940e3: jmp    0x0000024807494151
  0x00000248074940e8: cmpq   $0x0,0x210(%rax)
  0x00000248074940f3: jne    0x000002480749410c
  0x00000248074940f5: mov    %rdi,0x210(%rax)
  0x00000248074940fc: movq   $0x1,0x218(%rax)
  0x0000024807494107: jmp    0x0000024807494151
  0x000002480749410c: cmpq   $0x0,0x220(%rax)
  0x0000024807494117: jne    0x0000024807494130
  0x0000024807494119: mov    %rdi,0x220(%rax)
  0x0000024807494120: movq   $0x1,0x228(%rax)
  0x000002480749412b: jmp    0x0000024807494151
  0x0000024807494130: jmp    0x0000024807494151
  0x0000024807494135: movabs $0x2481febef70,%rax  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749413f: subq   $0x1,0x208(%rax)
  0x0000024807494147: jmp    0x00000248074943f3
  0x000002480749414c: jmp    0x0000024807494151
  0x0000024807494151: mov    %rsi,%rax          ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@46 (line 136)

  0x0000024807494154: add    $0xb0,%rsp
  0x000002480749415b: pop    %rbp
  0x000002480749415c: test   %eax,-0x1ee4062(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807494162: ret                       ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodType@49 (line 136)

  0x0000024807494163: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000002480749416d: add    $0xb0,%rsp
  0x0000024807494174: pop    %rbp
  0x0000024807494175: test   %eax,-0x1ee407b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480749417b: ret                       ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodType@19 (line 125)

  0x000002480749417c: movabs $0x2481febef70,%rdx  ;   {metadata(method data for {method} {0x000002481fb592e0} &apos;getMethodType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807494186: addq   $0x1,0x1a8(%rdx)
  0x000002480749418e: movabs $0x2481fedb010,%rdx  ;   {metadata(method data for {method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x0000024807494198: mov    0xdc(%rdx),%esi
  0x000002480749419e: add    $0x8,%esi
  0x00000248074941a1: mov    %esi,0xdc(%rdx)
  0x00000248074941a7: movabs $0x2481fdb4fa0,%rdx  ;   {metadata({method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x00000248074941b1: and    $0x7ffff8,%esi
  0x00000248074941b7: cmp    $0x0,%esi
  0x00000248074941ba: je     0x00000248074943fc
  0x00000248074941c0: jmp    0x0000024807494422  ;   {no_reloc}
  0x00000248074941c5: add    %al,(%rax)
  0x00000248074941c7: add    %al,(%rax)
  0x00000248074941c9: add    %cl,-0x75(%rcx)
  0x00000248074941cc: rex.RXB (bad) 
  0x00000248074941ce: lea    0x20(%rax),%rdi
  0x00000248074941d2: cmp    0x70(%r15),%rdi
  0x00000248074941d6: ja     0x000002480749442c
  0x00000248074941dc: mov    %rdi,0x60(%r15)
  0x00000248074941e0: mov    0xa8(%rdx),%rcx
  0x00000248074941e7: mov    %rcx,(%rax)
  0x00000248074941ea: mov    %rdx,%rcx
  0x00000248074941ed: shr    $0x3,%rcx
  0x00000248074941f1: mov    %ecx,0x8(%rax)
  0x00000248074941f4: xor    %rcx,%rcx
  0x00000248074941f7: mov    %ecx,0xc(%rax)
  0x00000248074941fa: xor    %rcx,%rcx
  0x00000248074941fd: mov    %rcx,0x10(%rax)
  0x0000024807494201: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)

  0x0000024807494205: mov    %rax,%r8
  0x0000024807494208: movabs $0x2481fedb010,%rdx  ;   {metadata(method data for {method} {0x000002481fdb4fa8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x0000024807494212: addq   $0x1,0x108(%rdx)
  0x000002480749421a: movabs $0x76bd5bfd8,%r8   ;   {oop(&quot;not invocable, no method type&quot;)}
  0x0000024807494224: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)

  0x0000024807494227: mov    %rax,0x90(%rsp)
  0x000002480749422f: call   0x0000024807375ee0  ; OopMap{[144]=Oop off=5268}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)
                                                ;   {optimized virtual_call}
  0x0000024807494234: mov    0x90(%rsp),%rax
  0x000002480749423c: jmp    0x000002480749447a  ;*athrow
                                                ; - java.lang.invoke.MemberName::getMethodType@32 (line 129)

  0x0000024807494241: mov    0x308(%r15),%rax
  0x0000024807494248: xor    %r10,%r10
  0x000002480749424b: mov    %r10,0x308(%r15)
  0x0000024807494252: xor    %r10,%r10
  0x0000024807494255: mov    %r10,0x310(%r15)
  0x000002480749425c: mov    %rax,%rsi
  0x000002480749425f: lea    0x98(%rsp),%rax
  0x0000024807494267: mov    0x8(%rax),%rbx
  0x000002480749426b: mov    (%rbx),%rdi
  0x000002480749426e: and    $0x7,%rdi
  0x0000024807494272: cmp    $0x5,%rdi
  0x0000024807494276: je     0x0000024807494293
  0x000002480749427c: mov    (%rax),%rdi
  0x000002480749427f: test   %rdi,%rdi
  0x0000024807494282: je     0x0000024807494293
  0x0000024807494288: lock cmpxchg %rdi,(%rbx)
  0x000002480749428d: jne    0x0000024807494439  ;*monitorexit
                                                ; - java.lang.invoke.MemberName::getMethodType@196 (line 155)

  0x0000024807494293: mov    %rsi,%rax
  0x0000024807494296: jmp    0x000002480749447a
  0x000002480749429b: mov    %rsi,0x8(%rsp)
  0x00000248074942a0: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074942a8: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5389}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getMethodType@-1 (line 122)
                                                ;   {runtime_call}
  0x00000248074942ad: jmp    0x0000024807492e06
  0x00000248074942b2: mov    %rdi,0x8(%rsp)
  0x00000248074942b7: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074942bf: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop rsi=Oop off=5412}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::expandFromVM@-1 (line 500)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)
                                                ;   {runtime_call}
  0x00000248074942c4: jmp    0x0000024807492e8e
  0x00000248074942c9: mov    %rsi,0x8(%rsp)
  0x00000248074942ce: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074942d6: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5435}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isResolved@-1 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)
                                                ;   {runtime_call}
  0x00000248074942db: jmp    0x0000024807492f8a
  0x00000248074942e0: mov    %rax,0x8(%rsp)
  0x00000248074942e5: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074942ed: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5458}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isInvocable@-1 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)
                                                ;   {runtime_call}
  0x00000248074942f2: jmp    0x000002480749314c
  0x00000248074942f7: mov    %rax,0x8(%rsp)
  0x00000248074942fc: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807494304: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5481}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAnyFlags@-1 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)
                                                ;   {runtime_call}
  0x0000024807494309: jmp    0x0000024807493193
  0x000002480749430e: mov    %rax,0x8(%rsp)
  0x0000024807494313: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749431b: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5504}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)
                                                ;   {runtime_call}
  0x0000024807494320: jmp    0x00000248074931da
  0x0000024807494325: mov    %rdx,0x8(%rsp)
  0x000002480749432a: mov    %rsi,(%rsp)
  0x000002480749432e: call   0x0000024807431ea0  ; OopMap{rdx=Oop [120]=Oop [160]=Oop off=5523}
                                                ;*monitorenter
                                                ; - java.lang.invoke.MemberName::getMethodType@53 (line 141)
                                                ;   {runtime_call}
  0x0000024807494333: jmp    0x00000248074934cc
  0x0000024807494338: mov    %rsi,(%rsp)
  0x000002480749433c: call   0x00000248074316c0  ; OopMap{rdx=Oop [120]=Oop [160]=Oop off=5537}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@68 (line 143)
                                                ;   {runtime_call}
  0x0000024807494341: mov    %rdi,0x8(%rsp)
  0x0000024807494346: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749434e: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop rsi=Oop [160]=Oop off=5555}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getClassLoader@-1 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {runtime_call}
  0x0000024807494353: jmp    0x000002480749379b
  0x0000024807494358: call   0x000002480742f100  ; OopMap{rdx=Oop [120]=Oop rsi=Oop rdi=Oop [160]=Oop off=5565}
                                                ;*invokevirtual getClassLoader
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {runtime_call}
  0x000002480749435d: mov    %rbx,0x8(%rsp)
  0x0000024807494362: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749436a: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop rsi=Oop rdi=Oop [160]=Oop off=5583}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getClassLoader@-1 (line 678)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {runtime_call}
  0x000002480749436f: jmp    0x0000024807493867
  0x0000024807494374: mov    %rbx,0x8(%rsp)
  0x0000024807494379: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807494381: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop rsi=Oop rdi=Oop [160]=Oop off=5606}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 336)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {runtime_call}
  0x0000024807494386: jmp    0x0000024807493993
  0x000002480749438b: mov    %rsi,(%rsp)
  0x000002480749438f: call   0x00000248074316c0  ; OopMap{[120]=Oop [160]=Oop off=5620}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@103 (line 147)
                                                ;   {runtime_call}
  0x0000024807494394: call   0x000002480742f100  ; OopMap{[120]=Oop r8=Oop [160]=Oop off=5625}
                                                ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@112 (line 148)
                                                ;   {runtime_call}
  0x0000024807494399: call   0x000002480742f100  ; OopMap{[120]=Oop r8=Oop [160]=Oop off=5630}
                                                ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@112 (line 148)
                                                ;   {runtime_call}
  0x000002480749439e: movq   $0x1,(%rsp)
  0x00000248074943a6: call   0x000002480742e800  ; OopMap{[120]=Oop r8=Oop [160]=Oop off=5643}
                                                ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@112 (line 148)
                                                ;   {runtime_call}
  0x00000248074943ab: mov    %r9,(%rsp)
  0x00000248074943af: call   0x00000248074316c0  ; OopMap{[120]=Oop r8=Oop [160]=Oop off=5652}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@113 (line 148)
                                                ;   {runtime_call}
  0x00000248074943b4: mov    %r8,(%rsp)
  0x00000248074943b8: call   0x00000248074316c0  ; OopMap{[120]=Oop r9=Oop [160]=Oop off=5661}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@123 (line 149)
                                                ;   {runtime_call}
  0x00000248074943bd: mov    %rsi,0x8(%rsp)
  0x00000248074943c2: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074943ca: call   0x0000024807433da0  ; OopMap{[120]=Oop r9=Oop r8=Oop [160]=Oop off=5679}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::methodType@-1 (line 207)
                                                ; - java.lang.invoke.MemberName::getMethodType@131 (line 150)
                                                ;   {runtime_call}
  0x00000248074943cf: jmp    0x0000024807493edb
  0x00000248074943d4: lea    0x98(%rsp),%rax
  0x00000248074943dc: mov    %rax,(%rsp)
  0x00000248074943e0: call   0x00000248074322e0  ;   {runtime_call}
  0x00000248074943e5: jmp    0x0000024807493f6d
  0x00000248074943ea: mov    %rax,(%rsp)
  0x00000248074943ee: call   0x00000248074316c0  ; OopMap{off=5715}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@204 (line 156)
                                                ;   {runtime_call}
  0x00000248074943f3: mov    %rsi,(%rsp)
  0x00000248074943f7: call   0x00000248074316c0  ; OopMap{off=5724}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@46 (line 136)
                                                ;   {runtime_call}
  0x00000248074943fc: mov    %rdx,0x8(%rsp)
  0x0000024807494401: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807494409: call   0x0000024807433da0  ; OopMap{off=5742}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)
                                                ;   {runtime_call}
  0x000002480749440e: jmp    0x00000248074941c0
  0x0000024807494413: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000002480749441d: mov    $0xa050f00,%eax
  0x0000024807494422: call   0x0000024807432b60  ; OopMap{off=5767}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)
                                                ;   {runtime_call}
  0x0000024807494427: jmp    0x00000248074941c0
  0x000002480749442c: mov    %rdx,%rdx
  0x000002480749442f: call   0x000002480742f900  ; OopMap{off=5780}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)
                                                ;   {runtime_call}
  0x0000024807494434: jmp    0x0000024807494205
  0x0000024807494439: lea    0x98(%rsp),%rax
  0x0000024807494441: mov    %rax,(%rsp)
  0x0000024807494445: call   0x00000248074322e0  ;   {runtime_call}
  0x000002480749444a: jmp    0x0000024807494293
  0x000002480749444f: nop
  0x0000024807494450: nop
  0x0000024807494451: mov    0x308(%r15),%rax
  0x0000024807494458: movabs $0x0,%r10
  0x0000024807494462: mov    %r10,0x308(%r15)
  0x0000024807494469: movabs $0x0,%r10
  0x0000024807494473: mov    %r10,0x310(%r15)
  0x000002480749447a: add    $0xb0,%rsp
  0x0000024807494481: pop    %rbp
  0x0000024807494482: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807494487: hlt    
  0x0000024807494488: hlt    
  0x0000024807494489: hlt    
  0x000002480749448a: hlt    
  0x000002480749448b: hlt    
  0x000002480749448c: hlt    
  0x000002480749448d: hlt    
  0x000002480749448e: hlt    
  0x000002480749448f: hlt    
  0x0000024807494490: hlt    
  0x0000024807494491: hlt    
  0x0000024807494492: hlt    
  0x0000024807494493: hlt    
  0x0000024807494494: hlt    
  0x0000024807494495: hlt    
  0x0000024807494496: hlt    
  0x0000024807494497: hlt    
  0x0000024807494498: hlt    
  0x0000024807494499: hlt    
  0x000002480749449a: hlt    
  0x000002480749449b: hlt    
  0x000002480749449c: hlt    
  0x000002480749449d: hlt    
  0x000002480749449e: hlt    
  0x000002480749449f: hlt    
[Stub Code]
  0x00000248074944a0: nop                       ;   {no_reloc}
  0x00000248074944a1: nop
  0x00000248074944a2: nop
  0x00000248074944a3: nop
  0x00000248074944a4: nop
  0x00000248074944a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074944af: jmp    0x00000248074944af  ;   {runtime_call}
  0x00000248074944b4: nop
  0x00000248074944b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074944bf: jmp    0x00000248074944bf  ;   {runtime_call}
  0x00000248074944c4: nop
  0x00000248074944c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074944cf: jmp    0x00000248074944cf  ;   {runtime_call}
  0x00000248074944d4: nop
  0x00000248074944d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074944df: jmp    0x00000248074944df  ;   {runtime_call}
  0x00000248074944e4: nop
  0x00000248074944e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074944ef: jmp    0x00000248074944ef  ;   {runtime_call}
  0x00000248074944f4: nop
  0x00000248074944f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074944ff: jmp    0x00000248074944ff  ;   {runtime_call}
[Exception Handler]
  0x0000024807494504: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807494509: mov    %rsp,-0x28(%rsp)
  0x000002480749450e: sub    $0x80,%rsp
  0x0000024807494515: mov    %rax,0x78(%rsp)
  0x000002480749451a: mov    %rcx,0x70(%rsp)
  0x000002480749451f: mov    %rdx,0x68(%rsp)
  0x0000024807494524: mov    %rbx,0x60(%rsp)
  0x0000024807494529: mov    %rbp,0x50(%rsp)
  0x000002480749452e: mov    %rsi,0x48(%rsp)
  0x0000024807494533: mov    %rdi,0x40(%rsp)
  0x0000024807494538: mov    %r8,0x38(%rsp)
  0x000002480749453d: mov    %r9,0x30(%rsp)
  0x0000024807494542: mov    %r10,0x28(%rsp)
  0x0000024807494547: mov    %r11,0x20(%rsp)
  0x000002480749454c: mov    %r12,0x18(%rsp)
  0x0000024807494551: mov    %r13,0x10(%rsp)
  0x0000024807494556: mov    %r14,0x8(%rsp)
  0x000002480749455b: mov    %r15,(%rsp)
  0x000002480749455f: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807494569: movabs $0x24807494509,%rdx  ;   {internal_word}
  0x0000024807494573: mov    %rsp,%r8
  0x0000024807494576: and    $0xfffffffffffffff0,%rsp
  0x000002480749457a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807494584: call   *%r10
  0x0000024807494587: hlt    
[Deopt Handler Code]
  0x0000024807494588: movabs $0x24807494588,%r10  ;   {section_word}
  0x0000024807494592: push   %r10
  0x0000024807494594: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807494599: hlt    
  0x000002480749459a: hlt    
  0x000002480749459b: hlt    
  0x000002480749459c: hlt    
  0x000002480749459d: hlt    
  0x000002480749459e: hlt    
  0x000002480749459f: hlt    
<nmethod compile_id='188' compiler='C1' level='3' entry='0x0000024807492da0' size='9696' address='0x0000024807492b10' relocation_offset='288' insts_offset='656' stub_offset='6544' scopes_data_offset='6904' scopes_pcs_offset='7864' dependencies_offset='9368' handler_table_offset='9376' nul_chk_table_offset='9664' oops_offset='6800' method='java/lang/invoke/MemberName getMethodType ()Ljava/lang/invoke/MethodType;' bytes='208' count='828' iicount='828' stamp='2.565'/>
<sweeper state='finished' traversals='1'  total_blobs='463' nmethods='176' adapters='200' free_code_cache='250197696' stamp='2.565'/>
<writer thread='27436'/>
<task_queued compile_id='196' method='jdk/internal/org/objectweb/asm/ByteVector putInt (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='74' count='512' iicount='512' level='3' stamp='2.565' comment='tiered' hot_count='512'/>
<task_queued compile_id='197' method='jdk/internal/org/objectweb/asm/Frame pop ()I' bytes='43' count='287' iicount='287' level='3' stamp='2.566' comment='tiered' hot_count='287'/>
<writer thread='26288'/>
Decoding compiled method 0x0000024807495110:
Code:
[Entry Point]
  # {method} {0x000002481fb80e08} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  # parm3:    rsi       = int
  #           [sp+0x80]  (sp of caller)
  0x0000024807495280: mov    0x8(%rdx),%r10d
  0x0000024807495284: shl    $0x3,%r10
  0x0000024807495288: cmp    %r10,%rax
  0x000002480749528b: je     0x0000024807495298
  0x0000024807495291: jmp    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807495296: xchg   %ax,%ax
[Verified Entry Point]
  0x0000024807495298: mov    %eax,-0x6000(%rsp)
  0x000002480749529f: push   %rbp
  0x00000248074952a0: mov    %rsp,%rbp
  0x00000248074952a3: sub    $0x70,%rsp
  0x00000248074952a7: mov    %rsi,0x28(%rsp)
  0x00000248074952ac: mov    %rdi,0x20(%rsp)
  0x00000248074952b1: mov    %r8,0x38(%rsp)
  0x00000248074952b6: cmp    $0x0,%r8
  0x00000248074952ba: lea    0x38(%rsp),%r8
  0x00000248074952bf: cmove  0x38(%rsp),%r8
  0x00000248074952c5: mov    %rdx,0x30(%rsp)
  0x00000248074952ca: cmp    $0x0,%rdx
  0x00000248074952ce: lea    0x30(%rsp),%rdx
  0x00000248074952d3: cmove  0x30(%rsp),%rdx    ; OopMap{[56]=Oop [48]=Oop off=89}
  0x00000248074952d9: movabs $0x248074952d9,%r10  ;   {section_word}
  0x00000248074952e3: mov    %r10,0x240(%r15)
  0x00000248074952ea: mov    %rsp,0x238(%r15)
  0x00000248074952f1: movabs $0x667e60d1,%r10   ;   {external_word}
  0x00000248074952fb: cmpb   $0x0,(%r10)
  0x00000248074952ff: je     0x0000024807495357
  0x0000024807495305: push   %rdx
  0x0000024807495306: push   %r8
  0x0000024807495308: push   %r9
  0x000002480749530a: movabs $0x2481fb80e00,%rdx  ;   {metadata({method} {0x000002481fb80e08} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000024807495314: mov    %r15,%rcx
  0x0000024807495317: sub    $0x20,%rsp
  0x000002480749531b: test   $0xf,%esp
  0x0000024807495321: je     0x0000024807495341
  0x0000024807495327: sub    $0x8,%rsp
  0x000002480749532b: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807495335: call   *%r10
  0x0000024807495338: add    $0x8,%rsp
  0x000002480749533c: jmp    0x000002480749534e
  0x0000024807495341: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480749534b: call   *%r10
  0x000002480749534e: add    $0x20,%rsp
  0x0000024807495352: pop    %r9
  0x0000024807495354: pop    %r8
  0x0000024807495356: pop    %rdx
  0x0000024807495357: lea    0x258(%r15),%rcx
  0x000002480749535e: movl   $0x4,0x2d0(%r15)
  0x0000024807495369: movabs $0x661b5b90,%r10   ;   {runtime_call}
  0x0000024807495373: call   *%r10
  0x0000024807495376: vzeroupper 
  0x0000024807495379: and    $0xff,%eax
  0x000002480749537f: setne  %al
  0x0000024807495382: movl   $0x5,0x2d0(%r15)
  0x000002480749538d: mov    %r15d,%ecx
  0x0000024807495390: shr    $0x4,%ecx
  0x0000024807495393: and    $0xffc,%ecx
  0x0000024807495399: movabs $0x248055c0000,%r10  ;   {external_word}
  0x00000248074953a3: mov    %ecx,(%r10,%rcx,1)
  0x00000248074953a7: movabs $0x667e6b0c,%r10   ;   {external_word}
  0x00000248074953b1: cmpl   $0x0,(%r10)
  0x00000248074953b8: jne    0x00000248074953cc
  0x00000248074953be: cmpl   $0x0,0x30(%r15)
  0x00000248074953c6: je     0x00000248074953f5
  0x00000248074953cc: mov    %rax,-0x8(%rbp)
  0x00000248074953d0: mov    %r15,%rcx
  0x00000248074953d3: mov    %rsp,%r12
  0x00000248074953d6: sub    $0x20,%rsp
  0x00000248074953da: and    $0xfffffffffffffff0,%rsp
  0x00000248074953de: movabs $0x662139d0,%r10   ;   {runtime_call}
  0x00000248074953e8: call   *%r10
  0x00000248074953eb: mov    %r12,%rsp
  0x00000248074953ee: xor    %r12,%r12
  0x00000248074953f1: mov    -0x8(%rbp),%rax
  0x00000248074953f5: movl   $0x8,0x2d0(%r15)
  0x0000024807495400: cmpl   $0x1,0x2fc(%r15)
  0x000002480749540b: je     0x00000248074954ba
  0x0000024807495411: movabs $0x667e60d1,%r10   ;   {external_word}
  0x000002480749541b: cmpb   $0x0,(%r10)
  0x000002480749541f: je     0x0000024807495475
  0x0000024807495425: mov    %rax,-0x8(%rbp)
  0x0000024807495429: movabs $0x2481fb80e00,%rdx  ;   {metadata({method} {0x000002481fb80e08} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000024807495433: mov    %r15,%rcx
  0x0000024807495436: sub    $0x20,%rsp
  0x000002480749543a: test   $0xf,%esp
  0x0000024807495440: je     0x0000024807495460
  0x0000024807495446: sub    $0x8,%rsp
  0x000002480749544a: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807495454: call   *%r10
  0x0000024807495457: add    $0x8,%rsp
  0x000002480749545b: jmp    0x000002480749546d
  0x0000024807495460: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480749546a: call   *%r10
  0x000002480749546d: add    $0x20,%rsp
  0x0000024807495471: mov    -0x8(%rbp),%rax
  0x0000024807495475: movabs $0x0,%r10
  0x000002480749547f: mov    %r10,0x238(%r15)
  0x0000024807495486: movabs $0x0,%r10
  0x0000024807495490: mov    %r10,0x240(%r15)
  0x0000024807495497: mov    0x38(%r15),%rcx
  0x000002480749549b: movl   $0x0,0x100(%rcx)
  0x00000248074954a5: leave  
  0x00000248074954a6: cmpq   $0x0,0x8(%r15)
  0x00000248074954ae: jne    0x00000248074954b5
  0x00000248074954b4: ret    
  0x00000248074954b5: jmp    Stub::forward exception  ;   {runtime_call}
  0x00000248074954ba: mov    %rax,-0x8(%rbp)
  0x00000248074954be: mov    %rsp,%r12
  0x00000248074954c1: sub    $0x20,%rsp
  0x00000248074954c5: and    $0xfffffffffffffff0,%rsp
  0x00000248074954c9: movabs $0x66203da0,%r10   ;   {runtime_call}
  0x00000248074954d3: call   *%r10
  0x00000248074954d6: mov    %r12,%rsp
  0x00000248074954d9: xor    %r12,%r12
  0x00000248074954dc: mov    -0x8(%rbp),%rax
  0x00000248074954e0: jmp    0x0000024807495411
  0x00000248074954e5: hlt    
  0x00000248074954e6: hlt    
  0x00000248074954e7: hlt    
<nmethod compile_id='198' compile_kind='c2n' level='0' entry='0x0000024807495280' size='984' address='0x0000024807495110' relocation_offset='288' consts_offset='984' insts_offset='368' method='sun/misc/Unsafe compareAndSwapInt (Ljava/lang/Object;JII)Z' bytes='0' count='440' iicount='440' stamp='2.571'/>
<writer thread='16136'/>
<task_queued compile_id='199' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='384' backedge_count='1' iicount='384' level='3' stamp='2.571' comment='tiered' hot_count='384'/>
<writer thread='26288'/>
Decoding compiled method 0x0000024807495510:
Code:
[Entry Point]
  # {method} {0x000002481fb81068} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x0000024807495680: mov    0x8(%rdx),%r10d
  0x0000024807495684: shl    $0x3,%r10
  0x0000024807495688: cmp    %r10,%rax
  0x000002480749568b: je     0x0000024807495698
  0x0000024807495691: jmp    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807495696: xchg   %ax,%ax
[Verified Entry Point]
  0x0000024807495698: mov    %eax,-0x6000(%rsp)
  0x000002480749569f: push   %rbp
  0x00000248074956a0: mov    %rsp,%rbp
  0x00000248074956a3: sub    $0x60,%rsp
  0x00000248074956a7: mov    %r8,0x28(%rsp)
  0x00000248074956ac: cmp    $0x0,%r8
  0x00000248074956b0: lea    0x28(%rsp),%r8
  0x00000248074956b5: cmove  0x28(%rsp),%r8
  0x00000248074956bb: mov    %rdx,0x20(%rsp)
  0x00000248074956c0: cmp    $0x0,%rdx
  0x00000248074956c4: lea    0x20(%rsp),%rdx
  0x00000248074956c9: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x00000248074956cf: movabs $0x248074956cf,%r10  ;   {section_word}
  0x00000248074956d9: mov    %r10,0x240(%r15)
  0x00000248074956e0: mov    %rsp,0x238(%r15)
  0x00000248074956e7: movabs $0x667e60d1,%r10   ;   {external_word}
  0x00000248074956f1: cmpb   $0x0,(%r10)
  0x00000248074956f5: je     0x000002480749574d
  0x00000248074956fb: push   %rdx
  0x00000248074956fc: push   %r8
  0x00000248074956fe: push   %r9
  0x0000024807495700: movabs $0x2481fb81060,%rdx  ;   {metadata({method} {0x000002481fb81068} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x000002480749570a: mov    %r15,%rcx
  0x000002480749570d: sub    $0x20,%rsp
  0x0000024807495711: test   $0xf,%esp
  0x0000024807495717: je     0x0000024807495737
  0x000002480749571d: sub    $0x8,%rsp
  0x0000024807495721: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x000002480749572b: call   *%r10
  0x000002480749572e: add    $0x8,%rsp
  0x0000024807495732: jmp    0x0000024807495744
  0x0000024807495737: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807495741: call   *%r10
  0x0000024807495744: add    $0x20,%rsp
  0x0000024807495748: pop    %r9
  0x000002480749574a: pop    %r8
  0x000002480749574c: pop    %rdx
  0x000002480749574d: lea    0x258(%r15),%rcx
  0x0000024807495754: movl   $0x4,0x2d0(%r15)
  0x000002480749575f: movabs $0x661b5eb0,%r10   ;   {runtime_call}
  0x0000024807495769: call   *%r10
  0x000002480749576c: vzeroupper 
  0x000002480749576f: movl   $0x5,0x2d0(%r15)
  0x000002480749577a: mov    %r15d,%ecx
  0x000002480749577d: shr    $0x4,%ecx
  0x0000024807495780: and    $0xffc,%ecx
  0x0000024807495786: movabs $0x248055c0000,%r10  ;   {external_word}
  0x0000024807495790: mov    %ecx,(%r10,%rcx,1)
  0x0000024807495794: movabs $0x667e6b0c,%r10   ;   {external_word}
  0x000002480749579e: cmpl   $0x0,(%r10)
  0x00000248074957a5: jne    0x00000248074957b9
  0x00000248074957ab: cmpl   $0x0,0x30(%r15)
  0x00000248074957b3: je     0x00000248074957e2
  0x00000248074957b9: mov    %rax,-0x8(%rbp)
  0x00000248074957bd: mov    %r15,%rcx
  0x00000248074957c0: mov    %rsp,%r12
  0x00000248074957c3: sub    $0x20,%rsp
  0x00000248074957c7: and    $0xfffffffffffffff0,%rsp
  0x00000248074957cb: movabs $0x662139d0,%r10   ;   {runtime_call}
  0x00000248074957d5: call   *%r10
  0x00000248074957d8: mov    %r12,%rsp
  0x00000248074957db: xor    %r12,%r12
  0x00000248074957de: mov    -0x8(%rbp),%rax
  0x00000248074957e2: movl   $0x8,0x2d0(%r15)
  0x00000248074957ed: cmpl   $0x1,0x2fc(%r15)
  0x00000248074957f8: je     0x00000248074958a7
  0x00000248074957fe: movabs $0x667e60d1,%r10   ;   {external_word}
  0x0000024807495808: cmpb   $0x0,(%r10)
  0x000002480749580c: je     0x0000024807495862
  0x0000024807495812: mov    %rax,-0x8(%rbp)
  0x0000024807495816: movabs $0x2481fb81060,%rdx  ;   {metadata({method} {0x000002481fb81068} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000024807495820: mov    %r15,%rcx
  0x0000024807495823: sub    $0x20,%rsp
  0x0000024807495827: test   $0xf,%esp
  0x000002480749582d: je     0x000002480749584d
  0x0000024807495833: sub    $0x8,%rsp
  0x0000024807495837: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807495841: call   *%r10
  0x0000024807495844: add    $0x8,%rsp
  0x0000024807495848: jmp    0x000002480749585a
  0x000002480749584d: movabs $0x66200c80,%r10   ;   {runtime_call}
  0x0000024807495857: call   *%r10
  0x000002480749585a: add    $0x20,%rsp
  0x000002480749585e: mov    -0x8(%rbp),%rax
  0x0000024807495862: movabs $0x0,%r10
  0x000002480749586c: mov    %r10,0x238(%r15)
  0x0000024807495873: movabs $0x0,%r10
  0x000002480749587d: mov    %r10,0x240(%r15)
  0x0000024807495884: mov    0x38(%r15),%rcx
  0x0000024807495888: movl   $0x0,0x100(%rcx)
  0x0000024807495892: leave  
  0x0000024807495893: cmpq   $0x0,0x8(%r15)
  0x000002480749589b: jne    0x00000248074958a2
  0x00000248074958a1: ret    
  0x00000248074958a2: jmp    Stub::forward exception  ;   {runtime_call}
  0x00000248074958a7: mov    %rax,-0x8(%rbp)
  0x00000248074958ab: mov    %rsp,%r12
  0x00000248074958ae: sub    $0x20,%rsp
  0x00000248074958b2: and    $0xfffffffffffffff0,%rsp
  0x00000248074958b6: movabs $0x66203da0,%r10   ;   {runtime_call}
  0x00000248074958c0: call   *%r10
  0x00000248074958c3: mov    %r12,%rsp
  0x00000248074958c6: xor    %r12,%r12
  0x00000248074958c9: mov    -0x8(%rbp),%rax
  0x00000248074958cd: jmp    0x00000248074957fe
  0x00000248074958d2: hlt    
  0x00000248074958d3: hlt    
  0x00000248074958d4: hlt    
  0x00000248074958d5: hlt    
  0x00000248074958d6: hlt    
  0x00000248074958d7: hlt    
<nmethod compile_id='200' compile_kind='c2n' level='0' entry='0x0000024807495680' size='968' address='0x0000024807495510' relocation_offset='288' consts_offset='968' insts_offset='368' method='sun/misc/Unsafe getIntVolatile (Ljava/lang/Object;J)I' bytes='0' count='385' iicount='385' stamp='2.576'/>
<writer thread='16136'/>
<task_queued compile_id='201' method='java/util/concurrent/atomic/AtomicInteger getAndAdd (I)I' bytes='12' count='458' iicount='463' level='3' stamp='2.576' comment='tiered' hot_count='384'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807495910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0xc0]  (sp of caller)
  0x0000024807495c00: mov    0x8(%rdx),%r10d
  0x0000024807495c04: shl    $0x3,%r10
  0x0000024807495c08: cmp    %rax,%r10
  0x0000024807495c0b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807495c11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807495c1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807495c20: mov    %eax,-0x6000(%rsp)
  0x0000024807495c27: push   %rbp
  0x0000024807495c28: sub    $0xb0,%rsp
  0x0000024807495c2f: mov    %rdx,0x78(%rsp)
  0x0000024807495c34: movabs $0x2481fed9df8,%rsi  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495c3e: mov    0xdc(%rsi),%edi
  0x0000024807495c44: add    $0x8,%edi
  0x0000024807495c47: mov    %edi,0xdc(%rsi)
  0x0000024807495c4d: movabs $0x2481fb59150,%rsi  ;   {metadata({method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495c57: and    $0x1ff8,%edi
  0x0000024807495c5d: cmp    $0x0,%edi
  0x0000024807495c60: je     0x0000024807496f49  ;*aload_0
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@0 (line 109)

  0x0000024807495c66: mov    %rdx,%rsi
  0x0000024807495c69: movabs $0x2481fed9df8,%rdi  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495c73: mov    0x8(%rsi),%esi
  0x0000024807495c76: shl    $0x3,%rsi
  0x0000024807495c7a: cmp    0x110(%rdi),%rsi
  0x0000024807495c81: jne    0x0000024807495c90
  0x0000024807495c83: addq   $0x1,0x118(%rdi)
  0x0000024807495c8b: jmp    0x0000024807495cf6
  0x0000024807495c90: cmp    0x120(%rdi),%rsi
  0x0000024807495c97: jne    0x0000024807495ca6
  0x0000024807495c99: addq   $0x1,0x128(%rdi)
  0x0000024807495ca1: jmp    0x0000024807495cf6
  0x0000024807495ca6: cmpq   $0x0,0x110(%rdi)
  0x0000024807495cb1: jne    0x0000024807495cca
  0x0000024807495cb3: mov    %rsi,0x110(%rdi)
  0x0000024807495cba: movq   $0x1,0x118(%rdi)
  0x0000024807495cc5: jmp    0x0000024807495cf6
  0x0000024807495cca: cmpq   $0x0,0x120(%rdi)
  0x0000024807495cd5: jne    0x0000024807495cee
  0x0000024807495cd7: mov    %rsi,0x120(%rdi)
  0x0000024807495cde: movq   $0x1,0x128(%rdi)
  0x0000024807495ce9: jmp    0x0000024807495cf6
  0x0000024807495cee: addq   $0x1,0x108(%rdi)
  0x0000024807495cf6: movabs $0x2481fe78488,%rsi  ;   {metadata(method data for {method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495d00: mov    0xdc(%rsi),%edi
  0x0000024807495d06: add    $0x8,%edi
  0x0000024807495d09: mov    %edi,0xdc(%rsi)
  0x0000024807495d0f: movabs $0x2481fb5ab00,%rsi  ;   {metadata({method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495d19: and    $0x7ffff8,%edi
  0x0000024807495d1f: cmp    $0x0,%edi
  0x0000024807495d22: je     0x0000024807496f60
  0x0000024807495d28: mov    %rdx,%rsi
  0x0000024807495d2b: movabs $0x2481fe78488,%rdi  ;   {metadata(method data for {method} {0x000002481fb5ab08} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495d35: addq   $0x1,0x108(%rdi)
  0x0000024807495d3d: movabs $0x2481fe78e40,%rsi  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495d47: mov    0xdc(%rsi),%edi
  0x0000024807495d4d: add    $0x8,%edi
  0x0000024807495d50: mov    %edi,0xdc(%rsi)
  0x0000024807495d56: movabs $0x2481fb5a190,%rsi  ;   {metadata({method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495d60: and    $0x7ffff8,%edi
  0x0000024807495d66: cmp    $0x0,%edi
  0x0000024807495d69: je     0x0000024807496f77
  0x0000024807495d6f: mov    %rdx,%rsi
  0x0000024807495d72: movabs $0x2481fe78e40,%rdi  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495d7c: addq   $0x1,0x108(%rdi)
  0x0000024807495d84: movabs $0x2481fe60550,%rsi  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495d8e: mov    0xdc(%rsi),%edi
  0x0000024807495d94: add    $0x8,%edi
  0x0000024807495d97: mov    %edi,0xdc(%rsi)
  0x0000024807495d9d: movabs $0x2481fb5a058,%rsi  ;   {metadata({method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495da7: and    $0x7ffff8,%edi
  0x0000024807495dad: cmp    $0x0,%edi
  0x0000024807495db0: je     0x0000024807496f8e
  0x0000024807495db6: mov    0xc(%rdx),%esi     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x0000024807495db9: mov    %rsi,%rdi
  0x0000024807495dbc: and    $0x30000,%edi
  0x0000024807495dc2: cmp    $0x0,%edi
  0x0000024807495dc5: movabs $0x2481fe60550,%rdi  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495dcf: movabs $0x108,%rbx
  0x0000024807495dd9: jne    0x0000024807495de9
  0x0000024807495ddf: movabs $0x118,%rbx
  0x0000024807495de9: mov    (%rdi,%rbx,1),%rax
  0x0000024807495ded: lea    0x1(%rax),%rax
  0x0000024807495df1: mov    %rax,(%rdi,%rbx,1)
  0x0000024807495df5: jne    0x0000024807495e15  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x0000024807495dfb: movabs $0x2481fe60550,%rdi  ;   {metadata(method data for {method} {0x000002481fb5a060} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495e05: incl   0x128(%rdi)
  0x0000024807495e0b: mov    $0x1,%edi
  0x0000024807495e10: jmp    0x0000024807495e1a  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x0000024807495e15: mov    $0x0,%edi          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x0000024807495e1a: and    $0x1,%edi
  0x0000024807495e1d: cmp    $0x0,%edi
  0x0000024807495e20: movabs $0x2481fe78e40,%rdi  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495e2a: movabs $0x118,%rbx
  0x0000024807495e34: jne    0x0000024807495e44
  0x0000024807495e3a: movabs $0x128,%rbx
  0x0000024807495e44: mov    (%rdi,%rbx,1),%rax
  0x0000024807495e48: lea    0x1(%rax),%rax
  0x0000024807495e4c: mov    %rax,(%rdi,%rbx,1)
  0x0000024807495e50: jne    0x0000024807495e70  ;*ifne
                                                ; - java.lang.invoke.MemberName::testAnyFlags@6 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x0000024807495e56: movabs $0x2481fe78e40,%rdi  ;   {metadata(method data for {method} {0x000002481fb5a198} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495e60: incl   0x138(%rdi)
  0x0000024807495e66: mov    $0x1,%edi
  0x0000024807495e6b: jmp    0x0000024807495e75  ;*goto
                                                ; - java.lang.invoke.MemberName::testAnyFlags@10 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x0000024807495e70: mov    $0x0,%edi          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testAnyFlags@14 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x0000024807495e75: and    $0x1,%edi
  0x0000024807495e78: and    $0x1,%edi
  0x0000024807495e7b: cmp    $0x0,%edi
  0x0000024807495e7e: movabs $0x2481fed9df8,%rdi  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495e88: movabs $0x138,%rbx
  0x0000024807495e92: je     0x0000024807495ea2
  0x0000024807495e98: movabs $0x148,%rbx
  0x0000024807495ea2: mov    (%rdi,%rbx,1),%rax
  0x0000024807495ea6: lea    0x1(%rax),%rax
  0x0000024807495eaa: mov    %rax,(%rdi,%rbx,1)
  0x0000024807495eae: jne    0x0000024807496c23  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@4 (line 109)

  0x0000024807495eb4: mov    %rdx,%rdi
  0x0000024807495eb7: movabs $0x2481fed9df8,%rbx  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495ec1: mov    0x8(%rdi),%edi
  0x0000024807495ec4: shl    $0x3,%rdi
  0x0000024807495ec8: cmp    0x190(%rbx),%rdi
  0x0000024807495ecf: jne    0x0000024807495ede
  0x0000024807495ed1: addq   $0x1,0x198(%rbx)
  0x0000024807495ed9: jmp    0x0000024807495f44
  0x0000024807495ede: cmp    0x1a0(%rbx),%rdi
  0x0000024807495ee5: jne    0x0000024807495ef4
  0x0000024807495ee7: addq   $0x1,0x1a8(%rbx)
  0x0000024807495eef: jmp    0x0000024807495f44
  0x0000024807495ef4: cmpq   $0x0,0x190(%rbx)
  0x0000024807495eff: jne    0x0000024807495f18
  0x0000024807495f01: mov    %rdi,0x190(%rbx)
  0x0000024807495f08: movq   $0x1,0x198(%rbx)
  0x0000024807495f13: jmp    0x0000024807495f44
  0x0000024807495f18: cmpq   $0x0,0x1a0(%rbx)
  0x0000024807495f23: jne    0x0000024807495f3c
  0x0000024807495f25: mov    %rdi,0x1a0(%rbx)
  0x0000024807495f2c: movq   $0x1,0x1a8(%rbx)
  0x0000024807495f37: jmp    0x0000024807495f44
  0x0000024807495f3c: addq   $0x1,0x188(%rbx)
  0x0000024807495f44: movabs $0x2481ff1e5e0,%rdi  ;   {metadata(method data for {method} {0x000002481fb5ba48} &apos;isGetter&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495f4e: mov    0xdc(%rdi),%ebx
  0x0000024807495f54: add    $0x8,%ebx
  0x0000024807495f57: mov    %ebx,0xdc(%rdi)
  0x0000024807495f5d: movabs $0x2481fb5ba40,%rdi  ;   {metadata({method} {0x000002481fb5ba48} &apos;isGetter&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495f67: and    $0x7ffff8,%ebx
  0x0000024807495f6d: cmp    $0x0,%ebx
  0x0000024807495f70: je     0x0000024807496fa5
  0x0000024807495f76: mov    %rdx,%rdi
  0x0000024807495f79: movabs $0x2481ff1e5e0,%rbx  ;   {metadata(method data for {method} {0x000002481fb5ba48} &apos;isGetter&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807495f83: mov    0x8(%rdi),%edi
  0x0000024807495f86: shl    $0x3,%rdi
  0x0000024807495f8a: cmp    0x110(%rbx),%rdi
  0x0000024807495f91: jne    0x0000024807495fa0
  0x0000024807495f93: addq   $0x1,0x118(%rbx)
  0x0000024807495f9b: jmp    0x0000024807496006
  0x0000024807495fa0: cmp    0x120(%rbx),%rdi
  0x0000024807495fa7: jne    0x0000024807495fb6
  0x0000024807495fa9: addq   $0x1,0x128(%rbx)
  0x0000024807495fb1: jmp    0x0000024807496006
  0x0000024807495fb6: cmpq   $0x0,0x110(%rbx)
  0x0000024807495fc1: jne    0x0000024807495fda
  0x0000024807495fc3: mov    %rdi,0x110(%rbx)
  0x0000024807495fca: movq   $0x1,0x118(%rbx)
  0x0000024807495fd5: jmp    0x0000024807496006
  0x0000024807495fda: cmpq   $0x0,0x120(%rbx)
  0x0000024807495fe5: jne    0x0000024807495ffe
  0x0000024807495fe7: mov    %rdi,0x120(%rbx)
  0x0000024807495fee: movq   $0x1,0x128(%rbx)
  0x0000024807495ff9: jmp    0x0000024807496006
  0x0000024807495ffe: addq   $0x1,0x108(%rbx)
  0x0000024807496006: movabs $0x2481ff1e768,%rdi  ;   {metadata(method data for {method} {0x000002481fb598e0} &apos;getReferenceKind&apos; &apos;()B&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496010: mov    0xdc(%rdi),%ebx
  0x0000024807496016: add    $0x8,%ebx
  0x0000024807496019: mov    %ebx,0xdc(%rdi)
  0x000002480749601f: movabs $0x2481fb598d8,%rdi  ;   {metadata({method} {0x000002481fb598e0} &apos;getReferenceKind&apos; &apos;()B&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496029: and    $0x7ffff8,%ebx
  0x000002480749602f: cmp    $0x0,%ebx
  0x0000024807496032: je     0x0000024807496fbc
  0x0000024807496038: movabs $0x2481ff1e5e0,%rdi  ;   {metadata(method data for {method} {0x000002481fb5ba48} &apos;isGetter&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496042: addq   $0x1,0x138(%rdi)
  0x000002480749604a: shr    $0x18,%esi
  0x000002480749604d: and    $0xf,%esi
  0x0000024807496050: shl    $0x18,%esi
  0x0000024807496053: sar    $0x18,%esi
  0x0000024807496056: mov    %rsi,%rdx          ;*invokestatic refKindIsGetter
                                                ; - java.lang.invoke.MemberName::isGetter@4 (line 630)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@13 (line 111)

  0x0000024807496059: nop
  0x000002480749605a: nop
  0x000002480749605b: nop
  0x000002480749605c: nop
  0x000002480749605d: nop
  0x000002480749605e: nop
  0x000002480749605f: call   0x0000024807376360  ; OopMap{[120]=Oop off=1124}
                                                ;*invokestatic refKindIsGetter
                                                ; - java.lang.invoke.MemberName::isGetter@4 (line 630)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@13 (line 111)
                                                ;   {static_call}
  0x0000024807496064: and    $0x1,%eax
  0x0000024807496067: cmp    $0x0,%eax
  0x000002480749606a: movabs $0x2481fed9df8,%rdx  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496074: movabs $0x1b8,%rsi
  0x000002480749607e: je     0x000002480749608e
  0x0000024807496084: movabs $0x1c8,%rsi
  0x000002480749608e: mov    (%rdx,%rsi,1),%rdi
  0x0000024807496092: lea    0x1(%rdi),%rdi
  0x0000024807496096: mov    %rdi,(%rdx,%rsi,1)
  0x000002480749609a: mov    0x78(%rsp),%rdx
  0x000002480749609f: mov    %rdx,%rsi
  0x00000248074960a2: jne    0x0000024807496b03  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@16 (line 111)

  0x00000248074960a8: movabs $0x2481fed9df8,%rdi  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074960b2: mov    0x8(%rsi),%esi
  0x00000248074960b5: shl    $0x3,%rsi
  0x00000248074960b9: cmp    0x220(%rdi),%rsi
  0x00000248074960c0: jne    0x00000248074960cf
  0x00000248074960c2: addq   $0x1,0x228(%rdi)
  0x00000248074960ca: jmp    0x0000024807496135
  0x00000248074960cf: cmp    0x230(%rdi),%rsi
  0x00000248074960d6: jne    0x00000248074960e5
  0x00000248074960d8: addq   $0x1,0x238(%rdi)
  0x00000248074960e0: jmp    0x0000024807496135
  0x00000248074960e5: cmpq   $0x0,0x220(%rdi)
  0x00000248074960f0: jne    0x0000024807496109
  0x00000248074960f2: mov    %rsi,0x220(%rdi)
  0x00000248074960f9: movq   $0x1,0x228(%rdi)
  0x0000024807496104: jmp    0x0000024807496135
  0x0000024807496109: cmpq   $0x0,0x230(%rdi)
  0x0000024807496114: jne    0x000002480749612d
  0x0000024807496116: mov    %rsi,0x230(%rdi)
  0x000002480749611d: movq   $0x1,0x238(%rdi)
  0x0000024807496128: jmp    0x0000024807496135
  0x000002480749612d: addq   $0x1,0x218(%rdi)
  0x0000024807496135: movabs $0x2481ff1f730,%rsi  ;   {metadata(method data for {method} {0x000002481fb5bae0} &apos;isSetter&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749613f: mov    0xdc(%rsi),%edi
  0x0000024807496145: add    $0x8,%edi
  0x0000024807496148: mov    %edi,0xdc(%rsi)
  0x000002480749614e: movabs $0x2481fb5bad8,%rsi  ;   {metadata({method} {0x000002481fb5bae0} &apos;isSetter&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496158: and    $0x7ffff8,%edi
  0x000002480749615e: cmp    $0x0,%edi
  0x0000024807496161: je     0x0000024807496fd3
  0x0000024807496167: mov    %rdx,%rsi
  0x000002480749616a: movabs $0x2481ff1f730,%rdi  ;   {metadata(method data for {method} {0x000002481fb5bae0} &apos;isSetter&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496174: mov    0x8(%rsi),%esi
  0x0000024807496177: shl    $0x3,%rsi
  0x000002480749617b: cmp    0x110(%rdi),%rsi
  0x0000024807496182: jne    0x0000024807496191
  0x0000024807496184: addq   $0x1,0x118(%rdi)
  0x000002480749618c: jmp    0x00000248074961f7
  0x0000024807496191: cmp    0x120(%rdi),%rsi
  0x0000024807496198: jne    0x00000248074961a7
  0x000002480749619a: addq   $0x1,0x128(%rdi)
  0x00000248074961a2: jmp    0x00000248074961f7
  0x00000248074961a7: cmpq   $0x0,0x110(%rdi)
  0x00000248074961b2: jne    0x00000248074961cb
  0x00000248074961b4: mov    %rsi,0x110(%rdi)
  0x00000248074961bb: movq   $0x1,0x118(%rdi)
  0x00000248074961c6: jmp    0x00000248074961f7
  0x00000248074961cb: cmpq   $0x0,0x120(%rdi)
  0x00000248074961d6: jne    0x00000248074961ef
  0x00000248074961d8: mov    %rsi,0x120(%rdi)
  0x00000248074961df: movq   $0x1,0x128(%rdi)
  0x00000248074961ea: jmp    0x00000248074961f7
  0x00000248074961ef: addq   $0x1,0x108(%rdi)
  0x00000248074961f7: movabs $0x2481ff1e768,%rsi  ;   {metadata(method data for {method} {0x000002481fb598e0} &apos;getReferenceKind&apos; &apos;()B&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496201: mov    0xdc(%rsi),%edi
  0x0000024807496207: add    $0x8,%edi
  0x000002480749620a: mov    %edi,0xdc(%rsi)
  0x0000024807496210: movabs $0x2481fb598d8,%rsi  ;   {metadata({method} {0x000002481fb598e0} &apos;getReferenceKind&apos; &apos;()B&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749621a: and    $0x7ffff8,%edi
  0x0000024807496220: cmp    $0x0,%edi
  0x0000024807496223: je     0x0000024807496fea
  0x0000024807496229: mov    0xc(%rdx),%esi     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::getReferenceKind@1 (line 250)
                                                ; - java.lang.invoke.MemberName::isSetter@1 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000002480749622c: shr    $0x18,%esi
  0x000002480749622f: and    $0xf,%esi
  0x0000024807496232: shl    $0x18,%esi
  0x0000024807496235: sar    $0x18,%esi
  0x0000024807496238: movabs $0x2481ff1f730,%rdi  ;   {metadata(method data for {method} {0x000002481fb5bae0} &apos;isSetter&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496242: addq   $0x1,0x138(%rdi)
  0x000002480749624a: movabs $0x2481ff1fa48,%rdi  ;   {metadata(method data for {method} {0x000002481fb5ecc0} &apos;refKindIsSetter&apos; &apos;(B)Z&apos; in &apos;java/lang/invoke/MethodHandleNatives&apos;)}
  0x0000024807496254: mov    0xdc(%rdi),%ebx
  0x000002480749625a: add    $0x8,%ebx
  0x000002480749625d: mov    %ebx,0xdc(%rdi)
  0x0000024807496263: movabs $0x2481fb5ecb8,%rdi  ;   {metadata({method} {0x000002481fb5ecc0} &apos;refKindIsSetter&apos; &apos;(B)Z&apos; in &apos;java/lang/invoke/MethodHandleNatives&apos;)}
  0x000002480749626d: and    $0x7ffff8,%ebx
  0x0000024807496273: cmp    $0x0,%ebx
  0x0000024807496276: je     0x0000024807497001
  0x000002480749627c: movabs $0x2481ff1fa48,%rdi  ;   {metadata(method data for {method} {0x000002481fb5ecc0} &apos;refKindIsSetter&apos; &apos;(B)Z&apos; in &apos;java/lang/invoke/MethodHandleNatives&apos;)}
  0x0000024807496286: addq   $0x1,0x108(%rdi)
  0x000002480749628e: mov    %rsi,%rdx          ;*invokestatic refKindIsField
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@1 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x0000024807496291: mov    %esi,0x80(%rsp)
  0x0000024807496298: nop
  0x0000024807496299: nop
  0x000002480749629a: nop
  0x000002480749629b: nop
  0x000002480749629c: nop
  0x000002480749629d: nop
  0x000002480749629e: nop
  0x000002480749629f: call   0x0000024807376360  ; OopMap{[120]=Oop off=1700}
                                                ;*invokestatic refKindIsField
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@1 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {static_call}
  0x00000248074962a4: cmp    $0x0,%eax
  0x00000248074962a7: movabs $0x2481ff1fa48,%rdx  ;   {metadata(method data for {method} {0x000002481fb5ecc0} &apos;refKindIsSetter&apos; &apos;(B)Z&apos; in &apos;java/lang/invoke/MethodHandleNatives&apos;)}
  0x00000248074962b1: movabs $0x118,%rsi
  0x00000248074962bb: je     0x00000248074962cb
  0x00000248074962c1: movabs $0x128,%rsi
  0x00000248074962cb: mov    (%rdx,%rsi,1),%rdi
  0x00000248074962cf: lea    0x1(%rdi),%rdi
  0x00000248074962d3: mov    %rdi,(%rdx,%rsi,1)
  0x00000248074962d7: je     0x000002480749633d  ;*ifeq
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@4 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x00000248074962dd: mov    0x80(%rsp),%esi
  0x00000248074962e4: movabs $0x2481ff1fa48,%rdx  ;   {metadata(method data for {method} {0x000002481fb5ecc0} &apos;refKindIsSetter&apos; &apos;(B)Z&apos; in &apos;java/lang/invoke/MethodHandleNatives&apos;)}
  0x00000248074962ee: addq   $0x1,0x138(%rdx)
  0x00000248074962f6: mov    %rsi,%rdx          ;*invokestatic refKindIsGetter
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@8 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x00000248074962f9: nop
  0x00000248074962fa: nop
  0x00000248074962fb: nop
  0x00000248074962fc: nop
  0x00000248074962fd: nop
  0x00000248074962fe: nop
  0x00000248074962ff: call   0x0000024807376360  ; OopMap{[120]=Oop off=1796}
                                                ;*invokestatic refKindIsGetter
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@8 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {static_call}
  0x0000024807496304: cmp    $0x0,%eax
  0x0000024807496307: movabs $0x2481ff1fa48,%rdx  ;   {metadata(method data for {method} {0x000002481fb5ecc0} &apos;refKindIsSetter&apos; &apos;(B)Z&apos; in &apos;java/lang/invoke/MethodHandleNatives&apos;)}
  0x0000024807496311: movabs $0x148,%rsi
  0x000002480749631b: jne    0x000002480749632b
  0x0000024807496321: movabs $0x158,%rsi
  0x000002480749632b: mov    (%rdx,%rsi,1),%rdi
  0x000002480749632f: lea    0x1(%rdi),%rdi
  0x0000024807496333: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807496337: je     0x0000024807496347  ;*ifne
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@11 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000002480749633d: mov    $0x0,%edx
  0x0000024807496342: jmp    0x000002480749635c  ;*ireturn
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@19 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x0000024807496347: movabs $0x2481ff1fa48,%rdx  ;   {metadata(method data for {method} {0x000002481fb5ecc0} &apos;refKindIsSetter&apos; &apos;(B)Z&apos; in &apos;java/lang/invoke/MethodHandleNatives&apos;)}
  0x0000024807496351: incl   0x168(%rdx)
  0x0000024807496357: mov    $0x1,%edx          ;*goto
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@15 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000002480749635c: and    $0x1,%edx
  0x000002480749635f: and    $0x1,%edx
  0x0000024807496362: cmp    $0x0,%edx
  0x0000024807496365: movabs $0x2481fed9df8,%rdx  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749636f: movabs $0x248,%rsi
  0x0000024807496379: je     0x0000024807496389
  0x000002480749637f: movabs $0x258,%rsi
  0x0000024807496389: mov    (%rdx,%rsi,1),%rdi
  0x000002480749638d: lea    0x1(%rdi),%rdi
  0x0000024807496391: mov    %rdi,(%rdx,%rsi,1)
  0x0000024807496395: jne    0x000002480749683c  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@31 (line 113)

  0x000002480749639b: nopl   0x0(%rax,%rax,1)
  0x00000248074963a0: jmp    0x0000024807497027  ;   {no_reloc}
  0x00000248074963a5: add    %al,(%rax)
  0x00000248074963a7: add    %al,(%rax)
  0x00000248074963a9: add    %cl,-0x75(%rcx)
  0x00000248074963ac: rex.RXB (bad) 
  0x00000248074963ae: lea    0x20(%rax),%rdi
  0x00000248074963b2: cmp    0x70(%r15),%rdi
  0x00000248074963b6: ja     0x0000024807497031
  0x00000248074963bc: mov    %rdi,0x60(%r15)
  0x00000248074963c0: mov    0xa8(%rdx),%rcx
  0x00000248074963c7: mov    %rcx,(%rax)
  0x00000248074963ca: mov    %rdx,%rcx
  0x00000248074963cd: shr    $0x3,%rcx
  0x00000248074963d1: mov    %ecx,0x8(%rax)
  0x00000248074963d4: xor    %rcx,%rcx
  0x00000248074963d7: mov    %ecx,0xc(%rax)
  0x00000248074963da: xor    %rcx,%rcx
  0x00000248074963dd: mov    %rcx,0x10(%rax)
  0x00000248074963e1: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@45 (line 115)

  0x00000248074963e5: mov    %rax,0x90(%rsp)
  0x00000248074963ed: movabs $0x7c000dd08,%rdx  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x00000248074963f7: mov    0x60(%r15),%rax
  0x00000248074963fb: lea    0x18(%rax),%rdi
  0x00000248074963ff: cmp    0x70(%r15),%rdi
  0x0000024807496403: ja     0x000002480749703e
  0x0000024807496409: mov    %rdi,0x60(%r15)
  0x000002480749640d: mov    0xa8(%rdx),%rcx
  0x0000024807496414: mov    %rcx,(%rax)
  0x0000024807496417: mov    %rdx,%rcx
  0x000002480749641a: shr    $0x3,%rcx
  0x000002480749641e: mov    %ecx,0x8(%rax)
  0x0000024807496421: xor    %rcx,%rcx
  0x0000024807496424: mov    %ecx,0xc(%rax)
  0x0000024807496427: xor    %rcx,%rcx
  0x000002480749642a: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@49 (line 115)

  0x000002480749642e: mov    %rax,%rbx
  0x0000024807496431: movabs $0x2481fed9df8,%rdx  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749643b: addq   $0x1,0x2a8(%rdx)
  0x0000024807496443: movabs $0x2481fd6d330,%rbx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480749644d: mov    0xdc(%rbx),%edx
  0x0000024807496453: add    $0x8,%edx
  0x0000024807496456: mov    %edx,0xdc(%rbx)
  0x000002480749645c: movabs $0x2481fb79208,%rbx  ;   {metadata({method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496466: and    $0x7ffff8,%edx
  0x000002480749646c: cmp    $0x0,%edx
  0x000002480749646f: je     0x000002480749704b
  0x0000024807496475: mov    %rax,%rbx
  0x0000024807496478: movabs $0x2481fd6d330,%rdx  ;   {metadata(method data for {method} {0x000002481fb79210} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496482: addq   $0x1,0x108(%rdx)
  0x000002480749648a: movabs $0x2481fd57d30,%rbx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000024807496494: mov    0xdc(%rbx),%edx
  0x000002480749649a: add    $0x8,%edx
  0x000002480749649d: mov    %edx,0xdc(%rbx)
  0x00000248074964a3: movabs $0x2481fb754f8,%rbx  ;   {metadata({method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074964ad: and    $0x7ffff8,%edx
  0x00000248074964b3: cmp    $0x0,%edx
  0x00000248074964b6: je     0x0000024807497062
  0x00000248074964bc: mov    %rax,%rbx
  0x00000248074964bf: movabs $0x2481fd57d30,%rdx  ;   {metadata(method data for {method} {0x000002481fb75500} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000248074964c9: addq   $0x1,0x108(%rdx)
  0x00000248074964d1: movabs $0x2481fc36b00,%rbx  ;   {metadata(method data for {method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000248074964db: mov    0xdc(%rbx),%edx
  0x00000248074964e1: add    $0x8,%edx
  0x00000248074964e4: mov    %edx,0xdc(%rbx)
  0x00000248074964ea: movabs $0x2481fb00480,%rbx  ;   {metadata({method} {0x000002481fb00488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000248074964f4: and    $0x7ffff8,%edx
  0x00000248074964fa: cmp    $0x0,%edx
  0x00000248074964fd: je     0x0000024807497079
  0x0000024807496503: mov    $0x10,%ebx
  0x0000024807496508: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000024807496512: mov    %rax,%r13
  0x0000024807496515: movslq %ebx,%rbx
  0x0000024807496518: mov    %rbx,%rdi
  0x000002480749651b: cmp    $0xffffff,%rbx
  0x0000024807496522: ja     0x0000024807497090
  0x0000024807496528: movabs $0x17,%rsi
  0x0000024807496532: lea    (%rsi,%rbx,2),%rsi
  0x0000024807496536: and    $0xfffffffffffffff8,%rsi
  0x000002480749653a: mov    0x60(%r15),%rax
  0x000002480749653e: lea    (%rax,%rsi,1),%rsi
  0x0000024807496542: cmp    0x70(%r15),%rsi
  0x0000024807496546: ja     0x0000024807497090
  0x000002480749654c: mov    %rsi,0x60(%r15)
  0x0000024807496550: sub    %rax,%rsi
  0x0000024807496553: movq   $0x1,(%rax)
  0x000002480749655a: mov    %rdx,%rcx
  0x000002480749655d: shr    $0x3,%rcx
  0x0000024807496561: mov    %ecx,0x8(%rax)
  0x0000024807496564: mov    %ebx,0xc(%rax)
  0x0000024807496567: sub    $0x10,%rsi
  0x000002480749656b: je     0x0000024807496582
  0x0000024807496571: xor    %rbx,%rbx
  0x0000024807496574: shr    $0x3,%rsi
  0x0000024807496578: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480749657d: dec    %rsi
  0x0000024807496580: jne    0x0000024807496578  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)

  0x0000024807496582: mov    %rax,%r10
  0x0000024807496585: shr    $0x3,%r10
  0x0000024807496589: mov    %r10d,0x10(%r13)
  0x000002480749658d: mov    %r13,%rax
  0x0000024807496590: shr    $0x9,%rax
  0x0000024807496594: movabs $0x248130de000,%r8
  0x000002480749659e: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)

  0x00000248074965a3: mov    %r13,%rax
  0x00000248074965a6: movabs $0x2481fed9df8,%r8  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074965b0: mov    0x8(%rax),%eax
  0x00000248074965b3: shl    $0x3,%rax
  0x00000248074965b7: cmp    0x2c0(%r8),%rax
  0x00000248074965be: jne    0x00000248074965cd
  0x00000248074965c0: addq   $0x1,0x2c8(%r8)
  0x00000248074965c8: jmp    0x0000024807496633
  0x00000248074965cd: cmp    0x2d0(%r8),%rax
  0x00000248074965d4: jne    0x00000248074965e3
  0x00000248074965d6: addq   $0x1,0x2d8(%r8)
  0x00000248074965de: jmp    0x0000024807496633
  0x00000248074965e3: cmpq   $0x0,0x2c0(%r8)
  0x00000248074965ee: jne    0x0000024807496607
  0x00000248074965f0: mov    %rax,0x2c0(%r8)
  0x00000248074965f7: movq   $0x1,0x2c8(%r8)
  0x0000024807496602: jmp    0x0000024807496633
  0x0000024807496607: cmpq   $0x0,0x2d0(%r8)
  0x0000024807496612: jne    0x000002480749662b
  0x0000024807496614: mov    %rax,0x2d0(%r8)
  0x000002480749661b: movq   $0x1,0x2d8(%r8)
  0x0000024807496626: jmp    0x0000024807496633
  0x000002480749662b: addq   $0x1,0x2b8(%r8)
  0x0000024807496633: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480749663d: mov    0xdc(%r8),%edx
  0x0000024807496644: add    $0x8,%edx
  0x0000024807496647: mov    %edx,0xdc(%r8)
  0x000002480749664e: movabs $0x2481fb79520,%r8  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496658: and    $0x7ffff8,%edx
  0x000002480749665e: cmp    $0x0,%edx
  0x0000024807496661: je     0x000002480749709a
  0x0000024807496667: mov    %r13,%rax
  0x000002480749666a: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496674: addq   $0x1,0x108(%r8)
  0x000002480749667c: movabs $0x76bd5c040,%r8   ;   {oop(&quot;not a method or field: &quot;)}
  0x0000024807496686: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@58 (line 115)

  0x0000024807496689: mov    %r13,0x88(%rsp)
  0x0000024807496691: nop
  0x0000024807496692: nop
  0x0000024807496693: nop
  0x0000024807496694: nop
  0x0000024807496695: nop
  0x0000024807496696: nop
  0x0000024807496697: call   0x0000024807375ee0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=2716}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@58 (line 115)
                                                ;   {optimized virtual_call}
  0x000002480749669c: mov    0x88(%rsp),%rax
  0x00000248074966a4: movabs $0x2481fed9df8,%rdx  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074966ae: mov    0x8(%rax),%eax
  0x00000248074966b1: shl    $0x3,%rax
  0x00000248074966b5: cmp    0x2f0(%rdx),%rax
  0x00000248074966bc: jne    0x00000248074966cb
  0x00000248074966be: addq   $0x1,0x2f8(%rdx)
  0x00000248074966c6: jmp    0x0000024807496731
  0x00000248074966cb: cmp    0x300(%rdx),%rax
  0x00000248074966d2: jne    0x00000248074966e1
  0x00000248074966d4: addq   $0x1,0x308(%rdx)
  0x00000248074966dc: jmp    0x0000024807496731
  0x00000248074966e1: cmpq   $0x0,0x2f0(%rdx)
  0x00000248074966ec: jne    0x0000024807496705
  0x00000248074966ee: mov    %rax,0x2f0(%rdx)
  0x00000248074966f5: movq   $0x1,0x2f8(%rdx)
  0x0000024807496700: jmp    0x0000024807496731
  0x0000024807496705: cmpq   $0x0,0x300(%rdx)
  0x0000024807496710: jne    0x0000024807496729
  0x0000024807496712: mov    %rax,0x300(%rdx)
  0x0000024807496719: movq   $0x1,0x308(%rdx)
  0x0000024807496724: jmp    0x0000024807496731
  0x0000024807496729: addq   $0x1,0x2e8(%rdx)
  0x0000024807496731: movabs $0x2481ff20038,%rdx  ;   {metadata(method data for {method} {0x000002481fb79490} &apos;append&apos; &apos;(Ljava/lang/Object;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480749673b: mov    0xdc(%rdx),%esi
  0x0000024807496741: add    $0x8,%esi
  0x0000024807496744: mov    %esi,0xdc(%rdx)
  0x000002480749674a: movabs $0x2481fb79488,%rdx  ;   {metadata({method} {0x000002481fb79490} &apos;append&apos; &apos;(Ljava/lang/Object;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496754: and    $0x7ffff8,%esi
  0x000002480749675a: cmp    $0x0,%esi
  0x000002480749675d: je     0x00000248074970b1
  0x0000024807496763: movabs $0x2481ff20038,%rdx  ;   {metadata(method data for {method} {0x000002481fb79490} &apos;append&apos; &apos;(Ljava/lang/Object;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000002480749676d: addq   $0x1,0x108(%rdx)
  0x0000024807496775: movabs $0x2481ff201c8,%rdx  ;   {metadata(method data for {method} {0x000002481fb070d0} &apos;valueOf&apos; &apos;(Ljava/lang/Object;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000002480749677f: mov    0xdc(%rdx),%esi
  0x0000024807496785: add    $0x8,%esi
  0x0000024807496788: mov    %esi,0xdc(%rdx)
  0x000002480749678e: movabs $0x2481fb070c8,%rdx  ;   {metadata({method} {0x000002481fb070d0} &apos;valueOf&apos; &apos;(Ljava/lang/Object;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807496798: and    $0x7ffff8,%esi
  0x000002480749679e: cmp    $0x0,%esi
  0x00000248074967a1: je     0x00000248074970c8
  0x00000248074967a7: mov    0x78(%rsp),%rdx
  0x00000248074967ac: cmp    $0x0,%rdx
  0x00000248074967b0: movabs $0x2481ff201c8,%rsi  ;   {metadata(method data for {method} {0x000002481fb070d0} &apos;valueOf&apos; &apos;(Ljava/lang/Object;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000248074967ba: movabs $0x108,%rdi
  0x00000248074967c4: jne    0x00000248074967d4
  0x00000248074967ca: movabs $0x118,%rdi
  0x00000248074967d4: mov    (%rsi,%rdi,1),%rbx
  0x00000248074967d8: lea    0x1(%rbx),%rbx
  0x00000248074967dc: mov    %rbx,(%rsi,%rdi,1)
  0x00000248074967e0: jne    0x0000024807496805  ;*ifnonnull
                                                ; - java.lang.String::valueOf@1 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)

  0x00000248074967e6: movabs $0x2481ff201c8,%rdx  ;   {metadata(method data for {method} {0x000002481fb070d0} &apos;valueOf&apos; &apos;(Ljava/lang/Object;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000248074967f0: incl   0x128(%rdx)
  0x00000248074967f6: movabs $0x76b7040a0,%rsi  ;   {oop(&quot;null&quot;)}
  0x0000024807496800: jmp    0x0000024807496ccb  ;*goto
                                                ; - java.lang.String::valueOf@6 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)

  0x0000024807496805: mov    %rdx,%rsi
  0x0000024807496808: movabs $0x2481ff201c8,%rdi  ;   {metadata(method data for {method} {0x000002481fb070d0} &apos;valueOf&apos; &apos;(Ljava/lang/Object;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000024807496812: movabs $0x7c000bde8,%r10  ;   {metadata(&apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749681c: mov    %r10,0x148(%rdi)
  0x0000024807496823: addq   $0x1,0x150(%rdi)
  0x000002480749682b: nop
  0x000002480749682c: nop
  0x000002480749682d: nop
  0x000002480749682e: nop
  0x000002480749682f: call   0x0000024807375ee0  ; OopMap{[136]=Oop [144]=Oop off=3124}
                                                ;*invokevirtual toString
                                                ; - java.lang.String::valueOf@10 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {optimized virtual_call}
  0x0000024807496834: mov    %rax,%rsi
  0x0000024807496837: jmp    0x0000024807496ccb  ;*areturn
                                                ; - java.lang.String::valueOf@13 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)

  0x000002480749683c: mov    0x78(%rsp),%rdx
  0x0000024807496841: mov    %rdx,%rsi
  0x0000024807496844: movabs $0x2481fed9df8,%rdi  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000002480749684e: mov    0x8(%rsi),%esi
  0x0000024807496851: shl    $0x3,%rsi
  0x0000024807496855: cmp    0x270(%rdi),%rsi
  0x000002480749685c: jne    0x000002480749686b
  0x000002480749685e: addq   $0x1,0x278(%rdi)
  0x0000024807496866: jmp    0x00000248074968d1
  0x000002480749686b: cmp    0x280(%rdi),%rsi
  0x0000024807496872: jne    0x0000024807496881
  0x0000024807496874: addq   $0x1,0x288(%rdi)
  0x000002480749687c: jmp    0x00000248074968d1
  0x0000024807496881: cmpq   $0x0,0x270(%rdi)
  0x000002480749688c: jne    0x00000248074968a5
  0x000002480749688e: mov    %rsi,0x270(%rdi)
  0x0000024807496895: movq   $0x1,0x278(%rdi)
  0x00000248074968a0: jmp    0x00000248074968d1
  0x00000248074968a5: cmpq   $0x0,0x280(%rdi)
  0x00000248074968b0: jne    0x00000248074968c9
  0x00000248074968b2: mov    %rsi,0x280(%rdi)
  0x00000248074968b9: movq   $0x1,0x288(%rdi)
  0x00000248074968c4: jmp    0x00000248074968d1
  0x00000248074968c9: addq   $0x1,0x268(%rdi)
  0x00000248074968d1: nop
  0x00000248074968d2: nop
  0x00000248074968d3: nop
  0x00000248074968d4: nop
  0x00000248074968d5: nop
  0x00000248074968d6: nop
  0x00000248074968d7: call   0x0000024807375ee0  ; OopMap{off=3292}
                                                ;*invokevirtual getFieldType
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@38 (line 114)
                                                ;   {optimized virtual_call}
  0x00000248074968dc: mov    %rax,%r8           ;*invokevirtual getFieldType
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@38 (line 114)

  0x00000248074968df: movabs $0x2481fed9df8,%rbx  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000248074968e9: addq   $0x1,0x298(%rbx)
  0x00000248074968f1: movabs $0x2481ff1fea8,%rbx  ;   {metadata(method data for {method} {0x000002481fb69fa0} &apos;methodType&apos; &apos;(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00000248074968fb: mov    0xdc(%rbx),%edx
  0x0000024807496901: add    $0x8,%edx
  0x0000024807496904: mov    %edx,0xdc(%rbx)
  0x000002480749690a: movabs $0x2481fb69f98,%rbx  ;   {metadata({method} {0x000002481fb69fa0} &apos;methodType&apos; &apos;(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807496914: and    $0x7ffff8,%edx
  0x000002480749691a: cmp    $0x0,%edx
  0x000002480749691d: je     0x00000248074970df
  0x0000024807496923: mov    $0x1,%ebx
  0x0000024807496928: movabs $0x7c00123c0,%rdx  ;   {metadata(&apos;java/lang/Class&apos;[])}
  0x0000024807496932: movslq %ebx,%rbx
  0x0000024807496935: mov    %rbx,%rdi
  0x0000024807496938: cmp    $0xffffff,%rbx
  0x000002480749693f: ja     0x00000248074970f6
  0x0000024807496945: movabs $0x17,%rsi
  0x000002480749694f: lea    (%rsi,%rbx,4),%rsi
  0x0000024807496953: and    $0xfffffffffffffff8,%rsi
  0x0000024807496957: mov    0x60(%r15),%rax
  0x000002480749695b: lea    (%rax,%rsi,1),%rsi
  0x000002480749695f: cmp    0x70(%r15),%rsi
  0x0000024807496963: ja     0x00000248074970f6
  0x0000024807496969: mov    %rsi,0x60(%r15)
  0x000002480749696d: sub    %rax,%rsi
  0x0000024807496970: movq   $0x1,(%rax)
  0x0000024807496977: mov    %rdx,%rcx
  0x000002480749697a: shr    $0x3,%rcx
  0x000002480749697e: mov    %ecx,0x8(%rax)
  0x0000024807496981: mov    %ebx,0xc(%rax)
  0x0000024807496984: sub    $0x10,%rsi
  0x0000024807496988: je     0x000002480749699f
  0x000002480749698e: xor    %rbx,%rbx
  0x0000024807496991: shr    $0x3,%rsi
  0x0000024807496995: mov    %rbx,0x8(%rax,%rsi,8)
  0x000002480749699a: dec    %rsi
  0x000002480749699d: jne    0x0000024807496995  ;*anewarray
                                                ; - java.lang.invoke.MethodType::methodType@2 (line 275)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)

  0x000002480749699f: lea    0x10(%rax),%rdx
  0x00000248074969a3: cmp    $0x0,%r8
  0x00000248074969a7: jne    0x00000248074969c2
  0x00000248074969a9: movabs $0x2481ff1fea8,%rsi  ;   {metadata(method data for {method} {0x000002481fb69fa0} &apos;methodType&apos; &apos;(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00000248074969b3: orl    $0x100,0x100(%rsi)
  0x00000248074969bd: jmp    0x0000024807496aad
  0x00000248074969c2: mov    0x8(%rax),%r9d     ; implicit exception: dispatches to 0x0000024807497100
  0x00000248074969c6: shl    $0x3,%r9
  0x00000248074969ca: mov    0x8(%r8),%esi
  0x00000248074969ce: shl    $0x3,%rsi
  0x00000248074969d2: mov    0xf0(%r9),%r9
  0x00000248074969d9: cmp    %r9,%rsi
  0x00000248074969dc: je     0x0000024807496a0e
  0x00000248074969e2: mov    0xc(%r9),%edi
  0x00000248074969e6: cmp    (%rsi,%rdi,1),%r9
  0x00000248074969ea: je     0x0000024807496a0e
  0x00000248074969f0: cmp    $0x18,%edi
  0x00000248074969f3: jne    0x0000024807496a96
  0x00000248074969f9: push   %rsi
  0x00000248074969fa: push   %r9
  0x00000248074969fc: call   0x0000024807431b20  ;   {runtime_call}
  0x0000024807496a01: pop    %rsi
  0x0000024807496a02: pop    %r9
  0x0000024807496a04: cmp    $0x0,%r9d
  0x0000024807496a08: je     0x0000024807496a96
  0x0000024807496a0e: movabs $0x2481ff1fea8,%rsi  ;   {metadata(method data for {method} {0x000002481fb69fa0} &apos;methodType&apos; &apos;(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807496a18: mov    0x8(%r8),%r9d
  0x0000024807496a1c: shl    $0x3,%r9
  0x0000024807496a20: cmp    0x110(%rsi),%r9
  0x0000024807496a27: jne    0x0000024807496a36
  0x0000024807496a29: addq   $0x1,0x118(%rsi)
  0x0000024807496a31: jmp    0x0000024807496aad
  0x0000024807496a36: cmp    0x120(%rsi),%r9
  0x0000024807496a3d: jne    0x0000024807496a4c
  0x0000024807496a3f: addq   $0x1,0x128(%rsi)
  0x0000024807496a47: jmp    0x0000024807496aad
  0x0000024807496a4c: cmpq   $0x0,0x110(%rsi)
  0x0000024807496a57: jne    0x0000024807496a70
  0x0000024807496a59: mov    %r9,0x110(%rsi)
  0x0000024807496a60: movq   $0x1,0x118(%rsi)
  0x0000024807496a6b: jmp    0x0000024807496aad
  0x0000024807496a70: cmpq   $0x0,0x120(%rsi)
  0x0000024807496a7b: jne    0x0000024807496a94
  0x0000024807496a7d: mov    %r9,0x120(%rsi)
  0x0000024807496a84: movq   $0x1,0x128(%rsi)
  0x0000024807496a8f: jmp    0x0000024807496aad
  0x0000024807496a94: jmp    0x0000024807496aad
  0x0000024807496a96: movabs $0x2481ff1fea8,%rsi  ;   {metadata(method data for {method} {0x000002481fb69fa0} &apos;methodType&apos; &apos;(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807496aa0: subq   $0x1,0x108(%rsi)
  0x0000024807496aa8: jmp    0x0000024807497105
  0x0000024807496aad: mov    %r8,%r10
  0x0000024807496ab0: shr    $0x3,%r10
  0x0000024807496ab4: mov    %r10d,(%rdx)
  0x0000024807496ab7: shr    $0x9,%rdx
  0x0000024807496abb: movabs $0x248130de000,%r8
  0x0000024807496ac5: movb   $0x0,(%rdx,%r8,1)  ;*aastore
                                                ; - java.lang.invoke.MethodType::methodType@8 (line 275)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)

  0x0000024807496aca: movabs $0x2481ff1fea8,%rdx  ;   {metadata(method data for {method} {0x000002481fb69fa0} &apos;methodType&apos; &apos;(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807496ad4: addq   $0x1,0x138(%rdx)
  0x0000024807496adc: movabs $0x76b700350,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = void)}
  0x0000024807496ae6: mov    %rax,%r8
  0x0000024807496ae9: mov    $0x1,%r9d          ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@10 (line 275)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)

  0x0000024807496aef: call   0x0000024807376360  ; OopMap{off=3828}
                                                ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@10 (line 275)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {static_call}
  0x0000024807496af4: add    $0xb0,%rsp
  0x0000024807496afb: pop    %rbp
  0x0000024807496afc: test   %eax,-0x1ee6a02(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807496b02: ret                       ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@44 (line 114)

  0x0000024807496b03: movabs $0x2481fed9df8,%rdi  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496b0d: mov    0x8(%rsi),%esi
  0x0000024807496b10: shl    $0x3,%rsi
  0x0000024807496b14: cmp    0x1e0(%rdi),%rsi
  0x0000024807496b1b: jne    0x0000024807496b2a
  0x0000024807496b1d: addq   $0x1,0x1e8(%rdi)
  0x0000024807496b25: jmp    0x0000024807496b90
  0x0000024807496b2a: cmp    0x1f0(%rdi),%rsi
  0x0000024807496b31: jne    0x0000024807496b40
  0x0000024807496b33: addq   $0x1,0x1f8(%rdi)
  0x0000024807496b3b: jmp    0x0000024807496b90
  0x0000024807496b40: cmpq   $0x0,0x1e0(%rdi)
  0x0000024807496b4b: jne    0x0000024807496b64
  0x0000024807496b4d: mov    %rsi,0x1e0(%rdi)
  0x0000024807496b54: movq   $0x1,0x1e8(%rdi)
  0x0000024807496b5f: jmp    0x0000024807496b90
  0x0000024807496b64: cmpq   $0x0,0x1f0(%rdi)
  0x0000024807496b6f: jne    0x0000024807496b88
  0x0000024807496b71: mov    %rsi,0x1f0(%rdi)
  0x0000024807496b78: movq   $0x1,0x1f8(%rdi)
  0x0000024807496b83: jmp    0x0000024807496b90
  0x0000024807496b88: addq   $0x1,0x1d8(%rdi)
  0x0000024807496b90: nop
  0x0000024807496b91: nop
  0x0000024807496b92: nop
  0x0000024807496b93: nop
  0x0000024807496b94: nop
  0x0000024807496b95: nop
  0x0000024807496b96: nop
  0x0000024807496b97: call   0x0000024807375ee0  ; OopMap{off=3996}
                                                ;*invokevirtual getFieldType
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@20 (line 112)
                                                ;   {optimized virtual_call}
  0x0000024807496b9c: movabs $0x2481fed9df8,%rdx  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496ba6: addq   $0x1,0x208(%rdx)
  0x0000024807496bae: movabs $0x2481ff1f538,%rdx  ;   {metadata(method data for {method} {0x000002481fb69f00} &apos;methodType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807496bb8: mov    0xdc(%rdx),%r8d
  0x0000024807496bbf: add    $0x8,%r8d
  0x0000024807496bc3: mov    %r8d,0xdc(%rdx)
  0x0000024807496bca: movabs $0x2481fb69ef8,%rdx  ;   {metadata({method} {0x000002481fb69f00} &apos;methodType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807496bd4: and    $0x7ffff8,%r8d
  0x0000024807496bdb: cmp    $0x0,%r8d
  0x0000024807496bdf: je     0x000002480749710e
  0x0000024807496be5: movabs $0x2481ff1f538,%rdx  ;   {metadata(method data for {method} {0x000002481fb69f00} &apos;methodType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000024807496bef: addq   $0x1,0x108(%rdx)
  0x0000024807496bf7: mov    %rax,%rdx
  0x0000024807496bfa: movabs $0x76bace5d0,%r8   ;   {oop(a &apos;java/lang/Class&apos;[0] )}
  0x0000024807496c04: mov    $0x1,%r9d          ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@5 (line 260)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@23 (line 112)

  0x0000024807496c0a: nop
  0x0000024807496c0b: nop
  0x0000024807496c0c: nop
  0x0000024807496c0d: nop
  0x0000024807496c0e: nop
  0x0000024807496c0f: call   0x0000024807376360  ; OopMap{off=4116}
                                                ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@5 (line 260)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@23 (line 112)
                                                ;   {static_call}
  0x0000024807496c14: add    $0xb0,%rsp
  0x0000024807496c1b: pop    %rbp
  0x0000024807496c1c: test   %eax,-0x1ee6b22(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807496c22: ret                       ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@26 (line 112)

  0x0000024807496c23: mov    %rdx,%rsi
  0x0000024807496c26: movabs $0x2481fed9df8,%rdi  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496c30: mov    0x8(%rsi),%esi
  0x0000024807496c33: shl    $0x3,%rsi
  0x0000024807496c37: cmp    0x160(%rdi),%rsi
  0x0000024807496c3e: jne    0x0000024807496c4d
  0x0000024807496c40: addq   $0x1,0x168(%rdi)
  0x0000024807496c48: jmp    0x0000024807496cb3
  0x0000024807496c4d: cmp    0x170(%rdi),%rsi
  0x0000024807496c54: jne    0x0000024807496c63
  0x0000024807496c56: addq   $0x1,0x178(%rdi)
  0x0000024807496c5e: jmp    0x0000024807496cb3
  0x0000024807496c63: cmpq   $0x0,0x160(%rdi)
  0x0000024807496c6e: jne    0x0000024807496c87
  0x0000024807496c70: mov    %rsi,0x160(%rdi)
  0x0000024807496c77: movq   $0x1,0x168(%rdi)
  0x0000024807496c82: jmp    0x0000024807496cb3
  0x0000024807496c87: cmpq   $0x0,0x170(%rdi)
  0x0000024807496c92: jne    0x0000024807496cab
  0x0000024807496c94: mov    %rsi,0x170(%rdi)
  0x0000024807496c9b: movq   $0x1,0x178(%rdi)
  0x0000024807496ca6: jmp    0x0000024807496cb3
  0x0000024807496cab: addq   $0x1,0x158(%rdi)
  0x0000024807496cb3: nop
  0x0000024807496cb4: nop
  0x0000024807496cb5: nop
  0x0000024807496cb6: nop
  0x0000024807496cb7: call   0x0000024807375ee0  ; OopMap{off=4284}
                                                ;*invokevirtual getMethodType
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@8 (line 110)
                                                ;   {optimized virtual_call}
  0x0000024807496cbc: add    $0xb0,%rsp
  0x0000024807496cc3: pop    %rbp
  0x0000024807496cc4: test   %eax,-0x1ee6bca(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807496cca: ret                       ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@11 (line 110)

  0x0000024807496ccb: mov    0x88(%rsp),%rax
  0x0000024807496cd3: movabs $0x2481ff20038,%r8  ;   {metadata(method data for {method} {0x000002481fb79490} &apos;append&apos; &apos;(Ljava/lang/Object;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496cdd: mov    0x8(%rax),%eax
  0x0000024807496ce0: shl    $0x3,%rax
  0x0000024807496ce4: cmp    0x120(%r8),%rax
  0x0000024807496ceb: jne    0x0000024807496cfa
  0x0000024807496ced: addq   $0x1,0x128(%r8)
  0x0000024807496cf5: jmp    0x0000024807496d60
  0x0000024807496cfa: cmp    0x130(%r8),%rax
  0x0000024807496d01: jne    0x0000024807496d10
  0x0000024807496d03: addq   $0x1,0x138(%r8)
  0x0000024807496d0b: jmp    0x0000024807496d60
  0x0000024807496d10: cmpq   $0x0,0x120(%r8)
  0x0000024807496d1b: jne    0x0000024807496d34
  0x0000024807496d1d: mov    %rax,0x120(%r8)
  0x0000024807496d24: movq   $0x1,0x128(%r8)
  0x0000024807496d2f: jmp    0x0000024807496d60
  0x0000024807496d34: cmpq   $0x0,0x130(%r8)
  0x0000024807496d3f: jne    0x0000024807496d58
  0x0000024807496d41: mov    %rax,0x130(%r8)
  0x0000024807496d48: movq   $0x1,0x138(%r8)
  0x0000024807496d53: jmp    0x0000024807496d60
  0x0000024807496d58: addq   $0x1,0x118(%r8)
  0x0000024807496d60: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496d6a: mov    0xdc(%r8),%edx
  0x0000024807496d71: add    $0x8,%edx
  0x0000024807496d74: mov    %edx,0xdc(%r8)
  0x0000024807496d7b: movabs $0x2481fb79520,%r8  ;   {metadata({method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496d85: and    $0x7ffff8,%edx
  0x0000024807496d8b: cmp    $0x0,%edx
  0x0000024807496d8e: je     0x0000024807497125
  0x0000024807496d94: mov    0x88(%rsp),%rax
  0x0000024807496d9c: movabs $0x2481fd4c2f0,%r8  ;   {metadata(method data for {method} {0x000002481fb79528} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496da6: addq   $0x1,0x108(%r8)
  0x0000024807496dae: mov    %rsi,%r8
  0x0000024807496db1: mov    0x88(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.lang.StringBuilder::append@5 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)

  0x0000024807496db9: nop
  0x0000024807496dba: nop
  0x0000024807496dbb: nop
  0x0000024807496dbc: nop
  0x0000024807496dbd: nop
  0x0000024807496dbe: nop
  0x0000024807496dbf: call   0x0000024807375ee0  ; OopMap{[136]=Oop [144]=Oop off=4548}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.lang.StringBuilder::append@5 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {optimized virtual_call}
  0x0000024807496dc4: mov    0x88(%rsp),%r8
  0x0000024807496dcc: mov    %r8,%rdx
  0x0000024807496dcf: movabs $0x2481fed9df8,%rsi  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496dd9: mov    0x8(%rdx),%edx
  0x0000024807496ddc: shl    $0x3,%rdx
  0x0000024807496de0: cmp    0x320(%rsi),%rdx
  0x0000024807496de7: jne    0x0000024807496df6
  0x0000024807496de9: addq   $0x1,0x328(%rsi)
  0x0000024807496df1: jmp    0x0000024807496e5c
  0x0000024807496df6: cmp    0x330(%rsi),%rdx
  0x0000024807496dfd: jne    0x0000024807496e0c
  0x0000024807496dff: addq   $0x1,0x338(%rsi)
  0x0000024807496e07: jmp    0x0000024807496e5c
  0x0000024807496e0c: cmpq   $0x0,0x320(%rsi)
  0x0000024807496e17: jne    0x0000024807496e30
  0x0000024807496e19: mov    %rdx,0x320(%rsi)
  0x0000024807496e20: movq   $0x1,0x328(%rsi)
  0x0000024807496e2b: jmp    0x0000024807496e5c
  0x0000024807496e30: cmpq   $0x0,0x330(%rsi)
  0x0000024807496e3b: jne    0x0000024807496e54
  0x0000024807496e3d: mov    %rdx,0x330(%rsi)
  0x0000024807496e44: movq   $0x1,0x338(%rsi)
  0x0000024807496e4f: jmp    0x0000024807496e5c
  0x0000024807496e54: addq   $0x1,0x318(%rsi)
  0x0000024807496e5c: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496e66: mov    0xdc(%rdx),%esi
  0x0000024807496e6c: add    $0x8,%esi
  0x0000024807496e6f: mov    %esi,0xdc(%rdx)
  0x0000024807496e75: movabs $0x2481fb7a8d0,%rdx  ;   {metadata({method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496e7f: and    $0x7ffff8,%esi
  0x0000024807496e85: cmp    $0x0,%esi
  0x0000024807496e88: je     0x000002480749713c
  0x0000024807496e8e: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000024807496e98: mov    0x60(%r15),%rax
  0x0000024807496e9c: lea    0x18(%rax),%rdi
  0x0000024807496ea0: cmp    0x70(%r15),%rdi
  0x0000024807496ea4: ja     0x0000024807497153
  0x0000024807496eaa: mov    %rdi,0x60(%r15)
  0x0000024807496eae: mov    0xa8(%rdx),%rcx
  0x0000024807496eb5: mov    %rcx,(%rax)
  0x0000024807496eb8: mov    %rdx,%rcx
  0x0000024807496ebb: shr    $0x3,%rcx
  0x0000024807496ebf: mov    %ecx,0x8(%rax)
  0x0000024807496ec2: xor    %rcx,%rcx
  0x0000024807496ec5: mov    %ecx,0xc(%rax)
  0x0000024807496ec8: xor    %rcx,%rcx
  0x0000024807496ecb: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)

  0x0000024807496ecf: mov    0x10(%r8),%r9d
  0x0000024807496ed3: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)

  0x0000024807496ed7: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)

  0x0000024807496edb: mov    %rax,%r8
  0x0000024807496ede: movabs $0x2481fd6d200,%rdx  ;   {metadata(method data for {method} {0x000002481fb7a8d8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000024807496ee8: addq   $0x1,0x108(%rdx)
  0x0000024807496ef0: mov    %r9,%r8
  0x0000024807496ef3: mov    $0x0,%r9d
  0x0000024807496ef9: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)

  0x0000024807496efc: mov    %rax,0x98(%rsp)
  0x0000024807496f04: nop
  0x0000024807496f05: nop
  0x0000024807496f06: nop
  0x0000024807496f07: call   0x0000024807375ee0  ; OopMap{[144]=Oop [152]=Oop off=4876}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)
                                                ;   {optimized virtual_call}
  0x0000024807496f0c: mov    0x90(%rsp),%rax
  0x0000024807496f14: movabs $0x2481fed9df8,%r8  ;   {metadata(method data for {method} {0x000002481fb59158} &apos;getMethodOrFieldType&apos; &apos;()Ljava/lang/invoke/MethodType;&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000024807496f1e: addq   $0x1,0x348(%r8)
  0x0000024807496f26: mov    0x98(%rsp),%r8
  0x0000024807496f2e: mov    0x90(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@68 (line 115)

  0x0000024807496f36: nop
  0x0000024807496f37: call   0x0000024807375ee0  ; OopMap{[144]=Oop off=4924}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@68 (line 115)
                                                ;   {optimized virtual_call}
  0x0000024807496f3c: mov    0x90(%rsp),%rax
  0x0000024807496f44: jmp    0x000002480749718b
  0x0000024807496f49: mov    %rsi,0x8(%rsp)
  0x0000024807496f4e: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807496f56: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=4955}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@-1 (line 109)
                                                ;   {runtime_call}
  0x0000024807496f5b: jmp    0x0000024807495c66
  0x0000024807496f60: mov    %rsi,0x8(%rsp)
  0x0000024807496f65: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807496f6d: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=4978}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isInvocable@-1 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)
                                                ;   {runtime_call}
  0x0000024807496f72: jmp    0x0000024807495d28
  0x0000024807496f77: mov    %rsi,0x8(%rsp)
  0x0000024807496f7c: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807496f84: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5001}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAnyFlags@-1 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)
                                                ;   {runtime_call}
  0x0000024807496f89: jmp    0x0000024807495d6f
  0x0000024807496f8e: mov    %rsi,0x8(%rsp)
  0x0000024807496f93: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807496f9b: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5024}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)
                                                ;   {runtime_call}
  0x0000024807496fa0: jmp    0x0000024807495db6
  0x0000024807496fa5: mov    %rdi,0x8(%rsp)
  0x0000024807496faa: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807496fb2: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5047}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isGetter@-1 (line 630)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@13 (line 111)
                                                ;   {runtime_call}
  0x0000024807496fb7: jmp    0x0000024807495f76
  0x0000024807496fbc: mov    %rdi,0x8(%rsp)
  0x0000024807496fc1: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807496fc9: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5070}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getReferenceKind@-1 (line 250)
                                                ; - java.lang.invoke.MemberName::isGetter@1 (line 630)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@13 (line 111)
                                                ;   {runtime_call}
  0x0000024807496fce: jmp    0x0000024807496038
  0x0000024807496fd3: mov    %rsi,0x8(%rsp)
  0x0000024807496fd8: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807496fe0: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5093}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isSetter@-1 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {runtime_call}
  0x0000024807496fe5: jmp    0x0000024807496167
  0x0000024807496fea: mov    %rsi,0x8(%rsp)
  0x0000024807496fef: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807496ff7: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5116}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getReferenceKind@-1 (line 250)
                                                ; - java.lang.invoke.MemberName::isSetter@1 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {runtime_call}
  0x0000024807496ffc: jmp    0x0000024807496229
  0x0000024807497001: mov    %rdi,0x8(%rsp)
  0x0000024807497006: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749700e: call   0x0000024807433da0  ; OopMap{rdx=Oop [120]=Oop off=5139}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@-1 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {runtime_call}
  0x0000024807497013: jmp    0x000002480749627c
  0x0000024807497018: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000024807497022: mov    $0xa050f00,%eax
  0x0000024807497027: call   0x0000024807432b60  ; OopMap{[120]=Oop off=5164}
                                                ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@45 (line 115)
                                                ;   {runtime_call}
  0x000002480749702c: jmp    0x00000248074963a0
  0x0000024807497031: mov    %rdx,%rdx
  0x0000024807497034: call   0x000002480742f900  ; OopMap{[120]=Oop off=5177}
                                                ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@45 (line 115)
                                                ;   {runtime_call}
  0x0000024807497039: jmp    0x00000248074963e5
  0x000002480749703e: mov    %rdx,%rdx
  0x0000024807497041: call   0x000002480742f900  ; OopMap{[120]=Oop [144]=Oop off=5190}
                                                ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@49 (line 115)
                                                ;   {runtime_call}
  0x0000024807497046: jmp    0x000002480749642e
  0x000002480749704b: mov    %rbx,0x8(%rsp)
  0x0000024807497050: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807497058: call   0x0000024807433da0  ; OopMap{[120]=Oop [144]=Oop rax=Oop off=5213}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)
                                                ;   {runtime_call}
  0x000002480749705d: jmp    0x0000024807496475
  0x0000024807497062: mov    %rbx,0x8(%rsp)
  0x0000024807497067: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749706f: call   0x0000024807433da0  ; OopMap{[120]=Oop [144]=Oop rax=Oop off=5236}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)
                                                ;   {runtime_call}
  0x0000024807497074: jmp    0x00000248074964bc
  0x0000024807497079: mov    %rbx,0x8(%rsp)
  0x000002480749707e: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807497086: call   0x0000024807433da0  ; OopMap{[120]=Oop [144]=Oop rax=Oop off=5259}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)
                                                ;   {runtime_call}
  0x000002480749708b: jmp    0x0000024807496503
  0x0000024807497090: call   0x0000024807430280  ; OopMap{[120]=Oop [144]=Oop r13=Oop off=5269}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)
                                                ;   {runtime_call}
  0x0000024807497095: jmp    0x0000024807496582
  0x000002480749709a: mov    %r8,0x8(%rsp)
  0x000002480749709f: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074970a7: call   0x0000024807433da0  ; OopMap{[120]=Oop [144]=Oop r13=Oop off=5292}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@58 (line 115)
                                                ;   {runtime_call}
  0x00000248074970ac: jmp    0x0000024807496667
  0x00000248074970b1: mov    %rdx,0x8(%rsp)
  0x00000248074970b6: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074970be: call   0x0000024807433da0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=5315}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {runtime_call}
  0x00000248074970c3: jmp    0x0000024807496763
  0x00000248074970c8: mov    %rdx,0x8(%rsp)
  0x00000248074970cd: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074970d5: call   0x0000024807433da0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=5338}
                                                ;*synchronization entry
                                                ; - java.lang.String::valueOf@-1 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {runtime_call}
  0x00000248074970da: jmp    0x00000248074967a7
  0x00000248074970df: mov    %rbx,0x8(%rsp)
  0x00000248074970e4: movq   $0xffffffffffffffff,(%rsp)
  0x00000248074970ec: call   0x0000024807433da0  ; OopMap{r8=Oop off=5361}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::methodType@-1 (line 275)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {runtime_call}
  0x00000248074970f1: jmp    0x0000024807496923
  0x00000248074970f6: call   0x0000024807430780  ; OopMap{r8=Oop off=5371}
                                                ;*anewarray
                                                ; - java.lang.invoke.MethodType::methodType@2 (line 275)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {runtime_call}
  0x00000248074970fb: jmp    0x000002480749699f
  0x0000024807497100: call   0x000002480742f100  ; OopMap{r8=Oop rax=Oop off=5381}
                                                ;*aastore
                                                ; - java.lang.invoke.MethodType::methodType@8 (line 275)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {runtime_call}
  0x0000024807497105: mov    %r8,(%rsp)
  0x0000024807497109: call   0x0000024807431480  ; OopMap{r8=Oop rax=Oop off=5390}
                                                ;*aastore
                                                ; - java.lang.invoke.MethodType::methodType@8 (line 275)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {runtime_call}
  0x000002480749710e: mov    %rdx,0x8(%rsp)
  0x0000024807497113: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749711b: call   0x0000024807433da0  ; OopMap{rax=Oop off=5408}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::methodType@-1 (line 260)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@23 (line 112)
                                                ;   {runtime_call}
  0x0000024807497120: jmp    0x0000024807496be5
  0x0000024807497125: mov    %r8,0x8(%rsp)
  0x000002480749712a: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807497132: call   0x0000024807433da0  ; OopMap{[136]=Oop [144]=Oop rsi=Oop off=5431}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - java.lang.StringBuilder::append@5 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {runtime_call}
  0x0000024807497137: jmp    0x0000024807496d94
  0x000002480749713c: mov    %rdx,0x8(%rsp)
  0x0000024807497141: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807497149: call   0x0000024807433da0  ; OopMap{r8=Oop [144]=Oop off=5454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)
                                                ;   {runtime_call}
  0x000002480749714e: jmp    0x0000024807496e8e
  0x0000024807497153: mov    %rdx,%rdx
  0x0000024807497156: call   0x000002480742f900  ; OopMap{r8=Oop [144]=Oop off=5467}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)
                                                ;   {runtime_call}
  0x000002480749715b: jmp    0x0000024807496ecf
  0x0000024807497160: nop
  0x0000024807497161: nop
  0x0000024807497162: mov    0x308(%r15),%rax
  0x0000024807497169: movabs $0x0,%r10
  0x0000024807497173: mov    %r10,0x308(%r15)
  0x000002480749717a: movabs $0x0,%r10
  0x0000024807497184: mov    %r10,0x310(%r15)
  0x000002480749718b: add    $0xb0,%rsp
  0x0000024807497192: pop    %rbp
  0x0000024807497193: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807497198: hlt    
  0x0000024807497199: hlt    
  0x000002480749719a: hlt    
  0x000002480749719b: hlt    
  0x000002480749719c: hlt    
  0x000002480749719d: hlt    
  0x000002480749719e: hlt    
  0x000002480749719f: hlt    
[Stub Code]
  0x00000248074971a0: nop                       ;   {no_reloc}
  0x00000248074971a1: nop
  0x00000248074971a2: nop
  0x00000248074971a3: nop
  0x00000248074971a4: nop
  0x00000248074971a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074971af: jmp    0x00000248074971af  ;   {runtime_call}
  0x00000248074971b4: nop
  0x00000248074971b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074971bf: jmp    0x00000248074971bf  ;   {runtime_call}
  0x00000248074971c4: nop
  0x00000248074971c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074971cf: jmp    0x00000248074971cf  ;   {runtime_call}
  0x00000248074971d4: nop
  0x00000248074971d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074971df: jmp    0x00000248074971df  ;   {runtime_call}
  0x00000248074971e4: nop
  0x00000248074971e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074971ef: jmp    0x00000248074971ef  ;   {runtime_call}
  0x00000248074971f4: nop
  0x00000248074971f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000248074971ff: jmp    0x00000248074971ff  ;   {runtime_call}
  0x0000024807497204: nop
  0x0000024807497205: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749720f: jmp    0x000002480749720f  ;   {runtime_call}
  0x0000024807497214: nop
  0x0000024807497215: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749721f: jmp    0x000002480749721f  ;   {runtime_call}
  0x0000024807497224: nop
  0x0000024807497225: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749722f: jmp    0x000002480749722f  ;   {runtime_call}
  0x0000024807497234: nop
  0x0000024807497235: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749723f: jmp    0x000002480749723f  ;   {runtime_call}
  0x0000024807497244: nop
  0x0000024807497245: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749724f: jmp    0x000002480749724f  ;   {runtime_call}
  0x0000024807497254: nop
  0x0000024807497255: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749725f: jmp    0x000002480749725f  ;   {runtime_call}
  0x0000024807497264: nop
  0x0000024807497265: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749726f: jmp    0x000002480749726f  ;   {runtime_call}
[Exception Handler]
  0x0000024807497274: call   0x0000024807431320  ;   {runtime_call}
  0x0000024807497279: mov    %rsp,-0x28(%rsp)
  0x000002480749727e: sub    $0x80,%rsp
  0x0000024807497285: mov    %rax,0x78(%rsp)
  0x000002480749728a: mov    %rcx,0x70(%rsp)
  0x000002480749728f: mov    %rdx,0x68(%rsp)
  0x0000024807497294: mov    %rbx,0x60(%rsp)
  0x0000024807497299: mov    %rbp,0x50(%rsp)
  0x000002480749729e: mov    %rsi,0x48(%rsp)
  0x00000248074972a3: mov    %rdi,0x40(%rsp)
  0x00000248074972a8: mov    %r8,0x38(%rsp)
  0x00000248074972ad: mov    %r9,0x30(%rsp)
  0x00000248074972b2: mov    %r10,0x28(%rsp)
  0x00000248074972b7: mov    %r11,0x20(%rsp)
  0x00000248074972bc: mov    %r12,0x18(%rsp)
  0x00000248074972c1: mov    %r13,0x10(%rsp)
  0x00000248074972c6: mov    %r14,0x8(%rsp)
  0x00000248074972cb: mov    %r15,(%rsp)
  0x00000248074972cf: movabs $0x66613820,%rcx   ;   {external_word}
  0x00000248074972d9: movabs $0x24807497279,%rdx  ;   {internal_word}
  0x00000248074972e3: mov    %rsp,%r8
  0x00000248074972e6: and    $0xfffffffffffffff0,%rsp
  0x00000248074972ea: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x00000248074972f4: call   *%r10
  0x00000248074972f7: hlt    
[Deopt Handler Code]
  0x00000248074972f8: movabs $0x248074972f8,%r10  ;   {section_word}
  0x0000024807497302: push   %r10
  0x0000024807497304: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807497309: hlt    
  0x000002480749730a: hlt    
  0x000002480749730b: hlt    
  0x000002480749730c: hlt    
  0x000002480749730d: hlt    
  0x000002480749730e: hlt    
  0x000002480749730f: hlt    
<nmethod compile_id='192' compiler='C1' level='3' entry='0x0000024807495c00' size='9160' address='0x0000024807495910' relocation_offset='288' insts_offset='752' stub_offset='6288' scopes_data_offset='6808' scopes_pcs_offset='7808' dependencies_offset='9136' nul_chk_table_offset='9144' oops_offset='6656' method='java/lang/invoke/MemberName getMethodOrFieldType ()Ljava/lang/invoke/MethodType;' bytes='72' count='712' iicount='712' stamp='2.626'/>
<writer thread='26288'/>
<task_queued compile_id='202' compile_kind='osr' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='121872' iicount='2' osr_bci='2' level='3' stamp='2.627' comment='tiered' hot_count='121872'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807497d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb81da0} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  #           [sp+0x60]  (sp of caller)
  0x0000024807497e60: mov    0x8(%rdx),%r10d
  0x0000024807497e64: shl    $0x3,%r10
  0x0000024807497e68: cmp    %rax,%r10
  0x0000024807497e6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807497e71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807497e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807497e80: mov    %eax,-0x6000(%rsp)
  0x0000024807497e87: push   %rbp
  0x0000024807497e88: sub    $0x50,%rsp
  0x0000024807497e8c: movabs $0x2481fc14420,%rax
  0x0000024807497e96: mov    0x8(%rax),%esi
  0x0000024807497e99: add    $0x8,%esi
  0x0000024807497e9c: mov    %esi,0x8(%rax)
  0x0000024807497e9f: movabs $0x2481fb81d98,%rax  ;   {metadata({method} {0x000002481fb81da0} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000024807497ea9: and    $0x3ff8,%esi
  0x0000024807497eaf: cmp    $0x0,%esi
  0x0000024807497eb2: je     0x0000024807497f22  ;*aload_0
                                                ; - sun.misc.Unsafe::getAndAddInt@0 (line 1034)

  0x0000024807497eb8: mov    (%r8,%r9,1),%esi
  0x0000024807497ebc: mov    %rdi,%rbx
  0x0000024807497ebf: add    %esi,%ebx
  0x0000024807497ec1: mov    %rsi,%rax
  0x0000024807497ec4: lea    (%r8,%r9,1),%rcx
  0x0000024807497ec8: lock cmpxchg %ebx,(%rcx)
  0x0000024807497ecc: mov    $0x1,%eax
  0x0000024807497ed1: je     0x0000024807497edc
  0x0000024807497ed7: mov    $0x0,%eax          ;*invokevirtual compareAndSwapInt
                                                ; - sun.misc.Unsafe::getAndAddInt@18 (line 1035)

  0x0000024807497edc: movabs $0x2481fc14420,%rbx
  0x0000024807497ee6: mov    0xc(%rbx),%ecx
  0x0000024807497ee9: add    $0x8,%ecx
  0x0000024807497eec: mov    %ecx,0xc(%rbx)
  0x0000024807497eef: movabs $0x2481fb81d98,%rbx  ;   {metadata({method} {0x000002481fb81da0} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000024807497ef9: and    $0x1fff8,%ecx
  0x0000024807497eff: cmp    $0x0,%ecx
  0x0000024807497f02: je     0x0000024807497f36  ; OopMap{rdx=Oop r8=Oop off=168}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x0000024807497f08: test   %eax,-0x1ee7e0e(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x0000024807497f0e: cmp    $0x0,%eax
  0x0000024807497f11: je     0x0000024807497eb8  ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x0000024807497f13: mov    %rsi,%rax
  0x0000024807497f16: add    $0x50,%rsp
  0x0000024807497f1a: pop    %rbp
  0x0000024807497f1b: test   %eax,-0x1ee7e21(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807497f21: ret    
  0x0000024807497f22: mov    %rax,0x8(%rsp)
  0x0000024807497f27: movq   $0xffffffffffffffff,(%rsp)
  0x0000024807497f2f: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=212}
                                                ;*synchronization entry
                                                ; - sun.misc.Unsafe::getAndAddInt@-1 (line 1034)
                                                ;   {runtime_call}
  0x0000024807497f34: jmp    0x0000024807497eb8
  0x0000024807497f36: mov    %rbx,0x8(%rsp)
  0x0000024807497f3b: movq   $0x15,(%rsp)
  0x0000024807497f43: call   0x0000024807433da0  ; OopMap{rdx=Oop r8=Oop off=232}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)
                                                ;   {runtime_call}
  0x0000024807497f48: jmp    0x0000024807497f08
  0x0000024807497f4a: nop
  0x0000024807497f4b: nop
  0x0000024807497f4c: mov    0x308(%r15),%rax
  0x0000024807497f53: movabs $0x0,%r10
  0x0000024807497f5d: mov    %r10,0x308(%r15)
  0x0000024807497f64: movabs $0x0,%r10
  0x0000024807497f6e: mov    %r10,0x310(%r15)
  0x0000024807497f75: add    $0x50,%rsp
  0x0000024807497f79: pop    %rbp
  0x0000024807497f7a: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807497f7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807497f80: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807497f85: mov    %rsp,-0x28(%rsp)
  0x0000024807497f8a: sub    $0x80,%rsp
  0x0000024807497f91: mov    %rax,0x78(%rsp)
  0x0000024807497f96: mov    %rcx,0x70(%rsp)
  0x0000024807497f9b: mov    %rdx,0x68(%rsp)
  0x0000024807497fa0: mov    %rbx,0x60(%rsp)
  0x0000024807497fa5: mov    %rbp,0x50(%rsp)
  0x0000024807497faa: mov    %rsi,0x48(%rsp)
  0x0000024807497faf: mov    %rdi,0x40(%rsp)
  0x0000024807497fb4: mov    %r8,0x38(%rsp)
  0x0000024807497fb9: mov    %r9,0x30(%rsp)
  0x0000024807497fbe: mov    %r10,0x28(%rsp)
  0x0000024807497fc3: mov    %r11,0x20(%rsp)
  0x0000024807497fc8: mov    %r12,0x18(%rsp)
  0x0000024807497fcd: mov    %r13,0x10(%rsp)
  0x0000024807497fd2: mov    %r14,0x8(%rsp)
  0x0000024807497fd7: mov    %r15,(%rsp)
  0x0000024807497fdb: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807497fe5: movabs $0x24807497f85,%rdx  ;   {internal_word}
  0x0000024807497fef: mov    %rsp,%r8
  0x0000024807497ff2: and    $0xfffffffffffffff0,%rsp
  0x0000024807497ff6: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807498000: call   *%r10
  0x0000024807498003: hlt    
[Deopt Handler Code]
  0x0000024807498004: movabs $0x24807498004,%r10  ;   {section_word}
  0x000002480749800e: push   %r10
  0x0000024807498010: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807498015: hlt    
  0x0000024807498016: hlt    
  0x0000024807498017: hlt    
<nmethod compile_id='199' compiler='C1' level='2' entry='0x0000024807497e60' size='992' address='0x0000024807497d10' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='784' scopes_pcs_offset='856' dependencies_offset='984' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='146397' backedge_count='54618' iicount='146407' stamp='2.631'/>
<writer thread='16136'/>
<task_queued compile_id='203' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='148302' backedge_count='56509' iicount='148325' stamp='2.631' comment='tiered' hot_count='147965'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807498110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;
  0x0000024807498280: mov    %eax,-0x6000(%rsp)
  0x0000024807498287: push   %rbp
  0x0000024807498288: sub    $0x60,%rsp
  0x000002480749828c: movabs $0x2481ff032b0,%rdx  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x0000024807498296: mov    0xdc(%rdx),%ecx
  0x000002480749829c: add    $0x8,%ecx
  0x000002480749829f: mov    %ecx,0xdc(%rdx)
  0x00000248074982a5: movabs $0x2481ff02e60,%rdx  ;   {metadata({method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x00000248074982af: and    $0x1ff8,%ecx
  0x00000248074982b5: cmp    $0x0,%ecx
  0x00000248074982b8: je     0x0000024807498462  ;*iconst_0
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@0 (line 10)

  0x00000248074982be: mov    $0x0,%esi
  0x00000248074982c3: jmp    0x00000248074983f2  ;*iload_0
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@2 (line 10)

  0x00000248074982c8: movabs $0x76bac4878,%rdi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x00000248074982d2: mov    0x68(%rdi),%edi
  0x00000248074982d5: shl    $0x3,%rdi          ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x00000248074982d9: cmp    (%rdi),%rax        ;*invokevirtual getAndAdd
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)
                                                ; implicit exception: dispatches to 0x0000024807498479
  0x00000248074982dc: mov    %rdi,%rbx
  0x00000248074982df: movabs $0x2481ff032b0,%rax  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x00000248074982e9: mov    0x8(%rbx),%ebx
  0x00000248074982ec: shl    $0x3,%rbx
  0x00000248074982f0: cmp    0x130(%rax),%rbx
  0x00000248074982f7: jne    0x0000024807498306
  0x00000248074982f9: addq   $0x1,0x138(%rax)
  0x0000024807498301: jmp    0x000002480749836c
  0x0000024807498306: cmp    0x140(%rax),%rbx
  0x000002480749830d: jne    0x000002480749831c
  0x000002480749830f: addq   $0x1,0x148(%rax)
  0x0000024807498317: jmp    0x000002480749836c
  0x000002480749831c: cmpq   $0x0,0x130(%rax)
  0x0000024807498327: jne    0x0000024807498340
  0x0000024807498329: mov    %rbx,0x130(%rax)
  0x0000024807498330: movq   $0x1,0x138(%rax)
  0x000002480749833b: jmp    0x000002480749836c
  0x0000024807498340: cmpq   $0x0,0x140(%rax)
  0x000002480749834b: jne    0x0000024807498364
  0x000002480749834d: mov    %rbx,0x140(%rax)
  0x0000024807498354: movq   $0x1,0x148(%rax)
  0x000002480749835f: jmp    0x000002480749836c
  0x0000024807498364: addq   $0x1,0x128(%rax)
  0x000002480749836c: movabs $0x2481ff20bc8,%rbx  ;   {metadata(method data for {method} {0x000002481fc07630} &apos;getAndAdd&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x0000024807498376: mov    0xdc(%rbx),%eax
  0x000002480749837c: add    $0x8,%eax
  0x000002480749837f: mov    %eax,0xdc(%rbx)
  0x0000024807498385: movabs $0x2481fc07628,%rbx  ;   {metadata({method} {0x000002481fc07630} &apos;getAndAdd&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x000002480749838f: and    $0x7ffff8,%eax
  0x0000024807498395: cmp    $0x0,%eax
  0x0000024807498398: je     0x000002480749847e
  0x000002480749839e: mov    $0x1,%ebx
  0x00000248074983a3: lock xadd %ebx,0xc(%rdi)
  0x00000248074983a8: inc    %esi
  0x00000248074983aa: movabs $0x2481ff032b0,%rdi  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x00000248074983b4: mov    0xe0(%rdi),%ebx
  0x00000248074983ba: add    $0x8,%ebx
  0x00000248074983bd: mov    %ebx,0xe0(%rdi)
  0x00000248074983c3: movabs $0x2481ff02e60,%rdi  ;   {metadata({method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x00000248074983cd: and    $0xfff8,%ebx
  0x00000248074983d3: cmp    $0x0,%ebx
  0x00000248074983d6: je     0x0000024807498495  ; OopMap{off=348}
                                                ;*goto
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@19 (line 10)

  0x00000248074983dc: test   %eax,-0x1ee82e2(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x00000248074983e2: movabs $0x2481ff032b0,%rdi  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x00000248074983ec: incl   0x158(%rdi)        ;*goto
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@19 (line 10)

  0x00000248074983f2: cmp    $0x3b9aca00,%esi
  0x00000248074983f8: movabs $0x2481ff032b0,%rdi  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x0000024807498402: movabs $0x108,%rbx
  0x000002480749840c: jge    0x000002480749841c
  0x0000024807498412: movabs $0x118,%rbx
  0x000002480749841c: mov    (%rdi,%rbx,1),%rax
  0x0000024807498420: lea    0x1(%rax),%rax
  0x0000024807498424: mov    %rax,(%rdi,%rbx,1)
  0x0000024807498428: jl     0x00000248074982c8  ;*if_icmpge
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@5 (line 10)

  0x000002480749842e: add    $0x60,%rsp
  0x0000024807498432: pop    %rbp
  0x0000024807498433: test   %eax,-0x1ee8339(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807498439: ret                       ;*return
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@22 (line 13)

  0x000002480749843a: mov    %eax,-0x6000(%rsp)
  0x0000024807498441: push   %rbp
  0x0000024807498442: sub    $0x60,%rsp
  0x0000024807498446: mov    (%rdx),%esi
  0x0000024807498448: mov    %rdx,%rcx
  0x000002480749844b: mov    %esi,0x48(%rsp)
  0x000002480749844f: movabs $0x661ffac0,%r10   ;   {runtime_call}
  0x0000024807498459: call   *%r10
  0x000002480749845c: mov    0x48(%rsp),%esi
  0x0000024807498460: jmp    0x00000248074983f2
  0x0000024807498462: mov    %rdx,0x8(%rsp)
  0x0000024807498467: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749846f: call   0x0000024807433da0  ; OopMap{off=500}
                                                ;*synchronization entry
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@-1 (line 10)
                                                ;   {runtime_call}
  0x0000024807498474: jmp    0x00000248074982be
  0x0000024807498479: call   0x000002480742f100  ; OopMap{rdi=Oop off=510}
                                                ;*invokevirtual getAndAdd
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)
                                                ;   {runtime_call}
  0x000002480749847e: mov    %rbx,0x8(%rsp)
  0x0000024807498483: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749848b: call   0x0000024807433da0  ; OopMap{rdi=Oop off=528}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@-1 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)
                                                ;   {runtime_call}
  0x0000024807498490: jmp    0x000002480749839e
  0x0000024807498495: mov    %rdi,0x8(%rsp)
  0x000002480749849a: movq   $0x13,(%rsp)
  0x00000248074984a2: call   0x0000024807433da0  ; OopMap{off=551}
                                                ;*goto
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@19 (line 10)
                                                ;   {runtime_call}
  0x00000248074984a7: jmp    0x00000248074983dc
  0x00000248074984ac: nop
  0x00000248074984ad: nop
  0x00000248074984ae: mov    0x308(%r15),%rax
  0x00000248074984b5: movabs $0x0,%r10
  0x00000248074984bf: mov    %r10,0x308(%r15)
  0x00000248074984c6: movabs $0x0,%r10
  0x00000248074984d0: mov    %r10,0x310(%r15)
  0x00000248074984d7: add    $0x60,%rsp
  0x00000248074984db: pop    %rbp
  0x00000248074984dc: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074984e1: hlt    
  0x00000248074984e2: hlt    
  0x00000248074984e3: hlt    
  0x00000248074984e4: hlt    
  0x00000248074984e5: hlt    
  0x00000248074984e6: hlt    
  0x00000248074984e7: hlt    
  0x00000248074984e8: hlt    
  0x00000248074984e9: hlt    
  0x00000248074984ea: hlt    
  0x00000248074984eb: hlt    
  0x00000248074984ec: hlt    
  0x00000248074984ed: hlt    
  0x00000248074984ee: hlt    
  0x00000248074984ef: hlt    
  0x00000248074984f0: hlt    
  0x00000248074984f1: hlt    
  0x00000248074984f2: hlt    
  0x00000248074984f3: hlt    
  0x00000248074984f4: hlt    
  0x00000248074984f5: hlt    
  0x00000248074984f6: hlt    
  0x00000248074984f7: hlt    
  0x00000248074984f8: hlt    
  0x00000248074984f9: hlt    
  0x00000248074984fa: hlt    
  0x00000248074984fb: hlt    
  0x00000248074984fc: hlt    
  0x00000248074984fd: hlt    
  0x00000248074984fe: hlt    
  0x00000248074984ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807498500: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807498505: mov    %rsp,-0x28(%rsp)
  0x000002480749850a: sub    $0x80,%rsp
  0x0000024807498511: mov    %rax,0x78(%rsp)
  0x0000024807498516: mov    %rcx,0x70(%rsp)
  0x000002480749851b: mov    %rdx,0x68(%rsp)
  0x0000024807498520: mov    %rbx,0x60(%rsp)
  0x0000024807498525: mov    %rbp,0x50(%rsp)
  0x000002480749852a: mov    %rsi,0x48(%rsp)
  0x000002480749852f: mov    %rdi,0x40(%rsp)
  0x0000024807498534: mov    %r8,0x38(%rsp)
  0x0000024807498539: mov    %r9,0x30(%rsp)
  0x000002480749853e: mov    %r10,0x28(%rsp)
  0x0000024807498543: mov    %r11,0x20(%rsp)
  0x0000024807498548: mov    %r12,0x18(%rsp)
  0x000002480749854d: mov    %r13,0x10(%rsp)
  0x0000024807498552: mov    %r14,0x8(%rsp)
  0x0000024807498557: mov    %r15,(%rsp)
  0x000002480749855b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807498565: movabs $0x24807498505,%rdx  ;   {internal_word}
  0x000002480749856f: mov    %rsp,%r8
  0x0000024807498572: and    $0xfffffffffffffff0,%rsp
  0x0000024807498576: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807498580: call   *%r10
  0x0000024807498583: hlt    
[Deopt Handler Code]
  0x0000024807498584: movabs $0x24807498584,%r10  ;   {section_word}
  0x000002480749858e: push   %r10
  0x0000024807498590: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807498595: hlt    
  0x0000024807498596: hlt    
  0x0000024807498597: hlt    
<nmethod compile_id='202' compile_kind='osr' compiler='C1' level='3' entry='0x0000024807498280' size='1528' address='0x0000024807498110' relocation_offset='288' insts_offset='368' stub_offset='1008' scopes_data_offset='1192' scopes_pcs_offset='1280' dependencies_offset='1504' nul_chk_table_offset='1512' oops_offset='1160' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='266396' iicount='2' stamp='2.638'/>
<writer thread='26288'/>
<task_queued compile_id='204' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='267442' iicount='2' level='3' stamp='2.638' comment='tiered' hot_count='2'/>
<writer thread='13612'/>
Decoding compiled method 0x000002480749b410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb81da0} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  #           [sp+0x20]  (sp of caller)
  0x000002480749b540: mov    0x8(%rdx),%r10d
  0x000002480749b544: shl    $0x3,%r10
  0x000002480749b548: cmp    %r10,%rax
  0x000002480749b54b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480749b551: data16 xchg %ax,%ax
  0x000002480749b554: nopl   0x0(%rax,%rax,1)
  0x000002480749b55c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480749b560: sub    $0x18,%rsp
  0x000002480749b567: mov    %rbp,0x10(%rsp)
  0x000002480749b56c: mov    %r8,%r11
  0x000002480749b56f: add    %r9,%r11
  0x000002480749b572: mov    (%r11),%r10d
  0x000002480749b575: mov    %edi,%ebx
  0x000002480749b577: add    %r10d,%ebx
  0x000002480749b57a: mov    %r10d,%eax
  0x000002480749b57d: lock cmpxchg %ebx,(%r11)
  0x000002480749b582: sete   %cl
  0x000002480749b585: movzbl %cl,%ecx           ;*invokevirtual compareAndSwapInt
                                                ; - sun.misc.Unsafe::getAndAddInt@18 (line 1035)

  0x000002480749b588: test   %ecx,%ecx
  0x000002480749b58a: jne    0x000002480749b5b0  ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x000002480749b58c: nopl   0x0(%rax)
  0x000002480749b590: mov    (%r11),%r10d
  0x000002480749b593: mov    %r10d,%ebx
  0x000002480749b596: add    %edi,%ebx
  0x000002480749b598: mov    %r10d,%eax
  0x000002480749b59b: lock cmpxchg %ebx,(%r11)
  0x000002480749b5a0: sete   %bl
  0x000002480749b5a3: movzbl %bl,%ebx           ; OopMap{r11=Derived_oop_r8 r8=Oop rdx=Oop off=102}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x000002480749b5a6: test   %eax,-0x1eeb5ac(%rip)        # 0x00000248055b0000
                                                ;   {poll}
  0x000002480749b5ac: test   %ebx,%ebx
  0x000002480749b5ae: je     0x000002480749b590  ;*iload
                                                ; - sun.misc.Unsafe::getAndAddInt@24 (line 1036)

  0x000002480749b5b0: mov    %r10d,%eax
  0x000002480749b5b3: add    $0x10,%rsp
  0x000002480749b5b7: pop    %rbp
  0x000002480749b5b8: test   %eax,-0x1eeb5be(%rip)        # 0x00000248055b0000
                                                ;   {poll_return}
  0x000002480749b5be: ret    
  0x000002480749b5bf: hlt    
[Exception Handler]
[Stub Code]
  0x000002480749b5c0: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x000002480749b5c5: call   0x000002480749b5ca
  0x000002480749b5ca: subq   $0x5,(%rsp)
  0x000002480749b5cf: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480749b5d4: hlt    
  0x000002480749b5d5: hlt    
  0x000002480749b5d6: hlt    
  0x000002480749b5d7: hlt    
<nmethod compile_id='203' compiler='C2' level='4' entry='0x000002480749b540' size='616' address='0x000002480749b410' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='512' dependencies_offset='608' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='267108' backedge_count='180989' iicount='267108' stamp='2.641'/>
<make_not_entrant thread='13612' compile_id='199' compiler='C1' level='2' stamp='2.641'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480749ae50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;
  #           [sp+0x60]  (sp of caller)
  0x000002480749afc0: mov    %eax,-0x6000(%rsp)
  0x000002480749afc7: push   %rbp
  0x000002480749afc8: sub    $0x50,%rsp
  0x000002480749afcc: movabs $0x2481ff032b0,%rsi  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x000002480749afd6: mov    0xdc(%rsi),%edi
  0x000002480749afdc: add    $0x8,%edi
  0x000002480749afdf: mov    %edi,0xdc(%rsi)
  0x000002480749afe5: movabs $0x2481ff02e60,%rsi  ;   {metadata({method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x000002480749afef: and    $0x1ff8,%edi
  0x000002480749aff5: cmp    $0x0,%edi
  0x000002480749aff8: je     0x000002480749b17a  ;*iconst_0
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@0 (line 10)

  0x000002480749affe: mov    $0x0,%esi
  0x000002480749b003: jmp    0x000002480749b132  ;*iload_0
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@2 (line 10)

  0x000002480749b008: movabs $0x76bac4878,%rdi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x000002480749b012: mov    0x68(%rdi),%edi
  0x000002480749b015: shl    $0x3,%rdi          ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x000002480749b019: cmp    (%rdi),%rax        ;*invokevirtual getAndAdd
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)
                                                ; implicit exception: dispatches to 0x000002480749b191
  0x000002480749b01c: mov    %rdi,%rbx
  0x000002480749b01f: movabs $0x2481ff032b0,%rax  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x000002480749b029: mov    0x8(%rbx),%ebx
  0x000002480749b02c: shl    $0x3,%rbx
  0x000002480749b030: cmp    0x130(%rax),%rbx
  0x000002480749b037: jne    0x000002480749b046
  0x000002480749b039: addq   $0x1,0x138(%rax)
  0x000002480749b041: jmp    0x000002480749b0ac
  0x000002480749b046: cmp    0x140(%rax),%rbx
  0x000002480749b04d: jne    0x000002480749b05c
  0x000002480749b04f: addq   $0x1,0x148(%rax)
  0x000002480749b057: jmp    0x000002480749b0ac
  0x000002480749b05c: cmpq   $0x0,0x130(%rax)
  0x000002480749b067: jne    0x000002480749b080
  0x000002480749b069: mov    %rbx,0x130(%rax)
  0x000002480749b070: movq   $0x1,0x138(%rax)
  0x000002480749b07b: jmp    0x000002480749b0ac
  0x000002480749b080: cmpq   $0x0,0x140(%rax)
  0x000002480749b08b: jne    0x000002480749b0a4
  0x000002480749b08d: mov    %rbx,0x140(%rax)
  0x000002480749b094: movq   $0x1,0x148(%rax)
  0x000002480749b09f: jmp    0x000002480749b0ac
  0x000002480749b0a4: addq   $0x1,0x128(%rax)
  0x000002480749b0ac: movabs $0x2481ff20bc8,%rbx  ;   {metadata(method data for {method} {0x000002481fc07630} &apos;getAndAdd&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x000002480749b0b6: mov    0xdc(%rbx),%eax
  0x000002480749b0bc: add    $0x8,%eax
  0x000002480749b0bf: mov    %eax,0xdc(%rbx)
  0x000002480749b0c5: movabs $0x2481fc07628,%rbx  ;   {metadata({method} {0x000002481fc07630} &apos;getAndAdd&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x000002480749b0cf: and    $0x7ffff8,%eax
  0x000002480749b0d5: cmp    $0x0,%eax
  0x000002480749b0d8: je     0x000002480749b196
  0x000002480749b0de: mov    $0x1,%ebx
  0x000002480749b0e3: lock xadd %ebx,0xc(%rdi)
  0x000002480749b0e8: inc    %esi
  0x000002480749b0ea: movabs $0x2481ff032b0,%rdi  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x000002480749b0f4: mov    0xe0(%rdi),%ebx
  0x000002480749b0fa: add    $0x8,%ebx
  0x000002480749b0fd: mov    %ebx,0xe0(%rdi)
  0x000002480749b103: movabs $0x2481ff02e60,%rdi  ;   {metadata({method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x000002480749b10d: and    $0xfff8,%ebx
  0x000002480749b113: cmp    $0x0,%ebx
  0x000002480749b116: je     0x000002480749b1ad  ; OopMap{off=348}
                                                ;*goto
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@19 (line 10)

  0x000002480749b11c: test   %eax,-0x1eeb022(%rip)        # 0x00000248055b0100
                                                ;   {poll}
  0x000002480749b122: movabs $0x2481ff032b0,%rdi  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x000002480749b12c: incl   0x158(%rdi)        ;*goto
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@19 (line 10)

  0x000002480749b132: cmp    $0x3b9aca00,%esi
  0x000002480749b138: movabs $0x2481ff032b0,%rdi  ;   {metadata(method data for {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x000002480749b142: movabs $0x108,%rbx
  0x000002480749b14c: jge    0x000002480749b15c
  0x000002480749b152: movabs $0x118,%rbx
  0x000002480749b15c: mov    (%rdi,%rbx,1),%rax
  0x000002480749b160: lea    0x1(%rax),%rax
  0x000002480749b164: mov    %rax,(%rdi,%rbx,1)
  0x000002480749b168: jl     0x000002480749b008  ;*if_icmpge
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@5 (line 10)

  0x000002480749b16e: add    $0x50,%rsp
  0x000002480749b172: pop    %rbp
  0x000002480749b173: test   %eax,-0x1eeb079(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480749b179: ret    
  0x000002480749b17a: mov    %rsi,0x8(%rsp)
  0x000002480749b17f: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749b187: call   0x0000024807433da0  ; OopMap{off=460}
                                                ;*synchronization entry
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@-1 (line 10)
                                                ;   {runtime_call}
  0x000002480749b18c: jmp    0x000002480749affe
  0x000002480749b191: call   0x000002480742f100  ; OopMap{rdi=Oop off=470}
                                                ;*invokevirtual getAndAdd
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)
                                                ;   {runtime_call}
  0x000002480749b196: mov    %rbx,0x8(%rsp)
  0x000002480749b19b: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749b1a3: call   0x0000024807433da0  ; OopMap{rdi=Oop off=488}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@-1 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)
                                                ;   {runtime_call}
  0x000002480749b1a8: jmp    0x000002480749b0de
  0x000002480749b1ad: mov    %rdi,0x8(%rsp)
  0x000002480749b1b2: movq   $0x13,(%rsp)
  0x000002480749b1ba: call   0x0000024807433da0  ; OopMap{off=511}
                                                ;*goto
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@19 (line 10)
                                                ;   {runtime_call}
  0x000002480749b1bf: jmp    0x000002480749b11c
  0x000002480749b1c4: nop
  0x000002480749b1c5: nop
  0x000002480749b1c6: mov    0x308(%r15),%rax
  0x000002480749b1cd: movabs $0x0,%r10
  0x000002480749b1d7: mov    %r10,0x308(%r15)
  0x000002480749b1de: movabs $0x0,%r10
  0x000002480749b1e8: mov    %r10,0x310(%r15)
  0x000002480749b1ef: add    $0x50,%rsp
  0x000002480749b1f3: pop    %rbp
  0x000002480749b1f4: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480749b1f9: hlt    
  0x000002480749b1fa: hlt    
  0x000002480749b1fb: hlt    
  0x000002480749b1fc: hlt    
  0x000002480749b1fd: hlt    
  0x000002480749b1fe: hlt    
  0x000002480749b1ff: hlt    
[Exception Handler]
[Stub Code]
  0x000002480749b200: call   0x0000024807431320  ;   {no_reloc}
  0x000002480749b205: mov    %rsp,-0x28(%rsp)
  0x000002480749b20a: sub    $0x80,%rsp
  0x000002480749b211: mov    %rax,0x78(%rsp)
  0x000002480749b216: mov    %rcx,0x70(%rsp)
  0x000002480749b21b: mov    %rdx,0x68(%rsp)
  0x000002480749b220: mov    %rbx,0x60(%rsp)
  0x000002480749b225: mov    %rbp,0x50(%rsp)
  0x000002480749b22a: mov    %rsi,0x48(%rsp)
  0x000002480749b22f: mov    %rdi,0x40(%rsp)
  0x000002480749b234: mov    %r8,0x38(%rsp)
  0x000002480749b239: mov    %r9,0x30(%rsp)
  0x000002480749b23e: mov    %r10,0x28(%rsp)
  0x000002480749b243: mov    %r11,0x20(%rsp)
  0x000002480749b248: mov    %r12,0x18(%rsp)
  0x000002480749b24d: mov    %r13,0x10(%rsp)
  0x000002480749b252: mov    %r14,0x8(%rsp)
  0x000002480749b257: mov    %r15,(%rsp)
  0x000002480749b25b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480749b265: movabs $0x2480749b205,%rdx  ;   {internal_word}
  0x000002480749b26f: mov    %rsp,%r8
  0x000002480749b272: and    $0xfffffffffffffff0,%rsp
  0x000002480749b276: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480749b280: call   *%r10
  0x000002480749b283: hlt    
[Deopt Handler Code]
  0x000002480749b284: movabs $0x2480749b284,%r10  ;   {section_word}
  0x000002480749b28e: push   %r10
  0x000002480749b290: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480749b295: hlt    
  0x000002480749b296: hlt    
  0x000002480749b297: hlt    
<nmethod compile_id='204' compiler='C1' level='3' entry='0x000002480749afc0' size='1440' address='0x000002480749ae50' relocation_offset='288' insts_offset='368' stub_offset='944' scopes_data_offset='1128' scopes_pcs_offset='1208' dependencies_offset='1416' nul_chk_table_offset='1424' oops_offset='1096' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='554362' iicount='2' stamp='2.647'/>
<writer thread='26288'/>
<task_queued compile_id='205' compile_kind='osr' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='557269' iicount='2' osr_bci='2' stamp='2.647' comment='tiered' hot_count='555098'/>
<writer thread='26148'/>
Decoding compiled method 0x000002480749ab10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fc07630} &apos;getAndAdd&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  # this:     rdx:rdx   = &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x000002480749ac60: mov    0x8(%rdx),%r10d
  0x000002480749ac64: shl    $0x3,%r10
  0x000002480749ac68: cmp    %rax,%r10
  0x000002480749ac6b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480749ac71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480749ac7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480749ac80: mov    %eax,-0x6000(%rsp)
  0x000002480749ac87: push   %rbp
  0x000002480749ac88: sub    $0x40,%rsp
  0x000002480749ac8c: movabs $0x2481fc14400,%rax
  0x000002480749ac96: mov    0x8(%rax),%esi
  0x000002480749ac99: add    $0x8,%esi
  0x000002480749ac9c: mov    %esi,0x8(%rax)
  0x000002480749ac9f: movabs $0x2481fc07628,%rax  ;   {metadata({method} {0x000002481fc07630} &apos;getAndAdd&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x000002480749aca9: and    $0x3ff8,%esi
  0x000002480749acaf: cmp    $0x0,%esi
  0x000002480749acb2: je     0x000002480749accd  ;*getstatic unsafe
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@0 (line 177)

  0x000002480749acb8: lock xadd %r8d,0xc(%rdx)
  0x000002480749acbe: mov    %r8,%rax
  0x000002480749acc1: add    $0x40,%rsp
  0x000002480749acc5: pop    %rbp
  0x000002480749acc6: test   %eax,-0x1eeabcc(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480749accc: ret    
  0x000002480749accd: mov    %rax,0x8(%rsp)
  0x000002480749acd2: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749acda: call   0x0000024807433da0  ; OopMap{rdx=Oop off=127}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@-1 (line 177)
                                                ;   {runtime_call}
  0x000002480749acdf: jmp    0x000002480749acb8
  0x000002480749ace1: nop
  0x000002480749ace2: nop
  0x000002480749ace3: mov    0x308(%r15),%rax
  0x000002480749acea: movabs $0x0,%r10
  0x000002480749acf4: mov    %r10,0x308(%r15)
  0x000002480749acfb: movabs $0x0,%r10
  0x000002480749ad05: mov    %r10,0x310(%r15)
  0x000002480749ad0c: add    $0x40,%rsp
  0x000002480749ad10: pop    %rbp
  0x000002480749ad11: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480749ad16: hlt    
  0x000002480749ad17: hlt    
  0x000002480749ad18: hlt    
  0x000002480749ad19: hlt    
  0x000002480749ad1a: hlt    
  0x000002480749ad1b: hlt    
  0x000002480749ad1c: hlt    
  0x000002480749ad1d: hlt    
  0x000002480749ad1e: hlt    
  0x000002480749ad1f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480749ad20: call   0x0000024807431320  ;   {no_reloc}
  0x000002480749ad25: mov    %rsp,-0x28(%rsp)
  0x000002480749ad2a: sub    $0x80,%rsp
  0x000002480749ad31: mov    %rax,0x78(%rsp)
  0x000002480749ad36: mov    %rcx,0x70(%rsp)
  0x000002480749ad3b: mov    %rdx,0x68(%rsp)
  0x000002480749ad40: mov    %rbx,0x60(%rsp)
  0x000002480749ad45: mov    %rbp,0x50(%rsp)
  0x000002480749ad4a: mov    %rsi,0x48(%rsp)
  0x000002480749ad4f: mov    %rdi,0x40(%rsp)
  0x000002480749ad54: mov    %r8,0x38(%rsp)
  0x000002480749ad59: mov    %r9,0x30(%rsp)
  0x000002480749ad5e: mov    %r10,0x28(%rsp)
  0x000002480749ad63: mov    %r11,0x20(%rsp)
  0x000002480749ad68: mov    %r12,0x18(%rsp)
  0x000002480749ad6d: mov    %r13,0x10(%rsp)
  0x000002480749ad72: mov    %r14,0x8(%rsp)
  0x000002480749ad77: mov    %r15,(%rsp)
  0x000002480749ad7b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480749ad85: movabs $0x2480749ad25,%rdx  ;   {internal_word}
  0x000002480749ad8f: mov    %rsp,%r8
  0x000002480749ad92: and    $0xfffffffffffffff0,%rsp
  0x000002480749ad96: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480749ada0: call   *%r10
  0x000002480749ada3: hlt    
[Deopt Handler Code]
  0x000002480749ada4: movabs $0x2480749ada4,%r10  ;   {section_word}
  0x000002480749adae: push   %r10
  0x000002480749adb0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480749adb5: hlt    
  0x000002480749adb6: hlt    
  0x000002480749adb7: hlt    
<nmethod compile_id='201' compiler='C1' level='2' entry='0x000002480749ac60' size='784' address='0x000002480749ab10' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='688' scopes_pcs_offset='712' dependencies_offset='776' method='java/util/concurrent/atomic/AtomicInteger getAndAdd (I)I' bytes='12' count='584818' iicount='584825' stamp='2.651'/>
Decoding compiled method 0x000002480749a490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe3f610} &apos;putInt&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x000002480749a600: mov    0x8(%rdx),%r10d
  0x000002480749a604: shl    $0x3,%r10
  0x000002480749a608: cmp    %rax,%r10
  0x000002480749a60b: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480749a611: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480749a61c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480749a620: mov    %eax,-0x6000(%rsp)
  0x000002480749a627: push   %rbp
  0x000002480749a628: sub    $0x40,%rsp
  0x000002480749a62c: movabs $0x2481ff1e480,%rsi  ;   {metadata(method data for {method} {0x000002481fe3f610} &apos;putInt&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000002480749a636: mov    0xdc(%rsi),%edi
  0x000002480749a63c: add    $0x8,%edi
  0x000002480749a63f: mov    %edi,0xdc(%rsi)
  0x000002480749a645: movabs $0x2481fe3f608,%rsi  ;   {metadata({method} {0x000002481fe3f610} &apos;putInt&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000002480749a64f: and    $0x1ff8,%edi
  0x000002480749a655: cmp    $0x0,%edi
  0x000002480749a658: je     0x000002480749a76c  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@0 (line 190)

  0x000002480749a65e: mov    0xc(%rdx),%esi     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@1 (line 190)

  0x000002480749a661: mov    0x10(%rdx),%edi
  0x000002480749a664: shl    $0x3,%rdi          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@9 (line 191)

  0x000002480749a668: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@12 (line 191)
                                                ; implicit exception: dispatches to 0x000002480749a783
  0x000002480749a66b: mov    %rsi,%rbx
  0x000002480749a66e: add    $0x4,%ebx
  0x000002480749a671: cmp    %edi,%ebx
  0x000002480749a673: movabs $0x2481ff1e480,%rdi  ;   {metadata(method data for {method} {0x000002481fe3f610} &apos;putInt&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000002480749a67d: movabs $0x108,%rbx
  0x000002480749a687: jle    0x000002480749a697
  0x000002480749a68d: movabs $0x118,%rbx
  0x000002480749a697: mov    (%rdi,%rbx,1),%rax
  0x000002480749a69b: lea    0x1(%rax),%rax
  0x000002480749a69f: mov    %rax,(%rdi,%rbx,1)
  0x000002480749a6a3: jle    0x000002480749a6f2  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@13 (line 191)

  0x000002480749a6a9: mov    %esi,0x34(%rsp)
  0x000002480749a6ad: mov    %r8d,0x30(%rsp)
  0x000002480749a6b2: mov    %rdx,%rdi
  0x000002480749a6b5: movabs $0x2481ff1e480,%rbx  ;   {metadata(method data for {method} {0x000002481fe3f610} &apos;putInt&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000002480749a6bf: addq   $0x1,0x128(%rbx)
  0x000002480749a6c7: mov    $0x4,%r8d
  0x000002480749a6cd: mov    %rdx,%rbx
  0x000002480749a6d0: mov    %rbx,%rdx          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@18 (line 192)

  0x000002480749a6d3: mov    %rbx,0x28(%rsp)
  0x000002480749a6d8: nop
  0x000002480749a6d9: nop
  0x000002480749a6da: nop
  0x000002480749a6db: nop
  0x000002480749a6dc: nop
  0x000002480749a6dd: nop
  0x000002480749a6de: nop
  0x000002480749a6df: call   0x0000024807375ee0  ; OopMap{[40]=Oop off=228}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@18 (line 192)
                                                ;   {optimized virtual_call}
  0x000002480749a6e4: mov    0x34(%rsp),%esi
  0x000002480749a6e8: mov    0x30(%rsp),%r8d
  0x000002480749a6ed: mov    0x28(%rsp),%rdx
  0x000002480749a6f2: mov    0x10(%rdx),%eax
  0x000002480749a6f5: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@22 (line 194)

  0x000002480749a6f9: mov    %r8,%rdi
  0x000002480749a6fc: shr    $0x18,%edi
  0x000002480749a6ff: movslq %esi,%rbx
  0x000002480749a702: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x000002480749a788
  0x000002480749a705: jae    0x000002480749a792
  0x000002480749a70b: mov    %dil,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@36 (line 195)

  0x000002480749a710: inc    %esi
  0x000002480749a712: mov    %r8,%rdi
  0x000002480749a715: shr    $0x10,%edi
  0x000002480749a718: movslq %esi,%rbx
  0x000002480749a71b: cmp    0xc(%rax),%esi
  0x000002480749a71e: jae    0x000002480749a79b
  0x000002480749a724: mov    %dil,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@47 (line 196)

  0x000002480749a729: inc    %esi
  0x000002480749a72b: mov    %r8,%rdi
  0x000002480749a72e: shr    $0x8,%edi
  0x000002480749a731: movslq %esi,%rbx
  0x000002480749a734: cmp    0xc(%rax),%esi
  0x000002480749a737: jae    0x000002480749a7a4
  0x000002480749a73d: mov    %dil,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@58 (line 197)

  0x000002480749a742: inc    %esi
  0x000002480749a744: mov    %rsi,%rdi
  0x000002480749a747: inc    %edi
  0x000002480749a749: movslq %esi,%rbx
  0x000002480749a74c: cmp    0xc(%rax),%esi
  0x000002480749a74f: jae    0x000002480749a7ad
  0x000002480749a755: mov    %r8b,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@66 (line 198)

  0x000002480749a75a: mov    %edi,0xc(%rdx)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@69 (line 199)

  0x000002480749a75d: mov    %rdx,%rax
  0x000002480749a760: add    $0x40,%rsp
  0x000002480749a764: pop    %rbp
  0x000002480749a765: test   %eax,-0x1eea66b(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480749a76b: ret    
  0x000002480749a76c: mov    %rsi,0x8(%rsp)
  0x000002480749a771: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749a779: call   0x0000024807433da0  ; OopMap{rdx=Oop off=382}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@-1 (line 190)
                                                ;   {runtime_call}
  0x000002480749a77e: jmp    0x000002480749a65e
  0x000002480749a783: call   0x000002480742f100  ; OopMap{rdx=Oop off=392}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@12 (line 191)
                                                ;   {runtime_call}
  0x000002480749a788: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=397}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@36 (line 195)
                                                ;   {runtime_call}
  0x000002480749a78d: call   0x000002480742f100  ; OopMap{rdx=Oop rax=Oop off=402}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@36 (line 195)
                                                ;   {runtime_call}
  0x000002480749a792: mov    %rsi,(%rsp)
  0x000002480749a796: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=411}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@36 (line 195)
                                                ;   {runtime_call}
  0x000002480749a79b: mov    %rsi,(%rsp)
  0x000002480749a79f: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=420}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@47 (line 196)
                                                ;   {runtime_call}
  0x000002480749a7a4: mov    %rsi,(%rsp)
  0x000002480749a7a8: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=429}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@58 (line 197)
                                                ;   {runtime_call}
  0x000002480749a7ad: mov    %rsi,(%rsp)
  0x000002480749a7b1: call   0x000002480742e800  ; OopMap{rdx=Oop rax=Oop off=438}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putInt@66 (line 198)
                                                ;   {runtime_call}
  0x000002480749a7b6: nop
  0x000002480749a7b7: nop
  0x000002480749a7b8: mov    0x308(%r15),%rax
  0x000002480749a7bf: movabs $0x0,%r10
  0x000002480749a7c9: mov    %r10,0x308(%r15)
  0x000002480749a7d0: movabs $0x0,%r10
  0x000002480749a7da: mov    %r10,0x310(%r15)
  0x000002480749a7e1: add    $0x40,%rsp
  0x000002480749a7e5: pop    %rbp
  0x000002480749a7e6: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480749a7eb: hlt    
  0x000002480749a7ec: hlt    
  0x000002480749a7ed: hlt    
  0x000002480749a7ee: hlt    
  0x000002480749a7ef: hlt    
  0x000002480749a7f0: hlt    
  0x000002480749a7f1: hlt    
  0x000002480749a7f2: hlt    
  0x000002480749a7f3: hlt    
  0x000002480749a7f4: hlt    
  0x000002480749a7f5: hlt    
  0x000002480749a7f6: hlt    
  0x000002480749a7f7: hlt    
  0x000002480749a7f8: hlt    
  0x000002480749a7f9: hlt    
  0x000002480749a7fa: hlt    
  0x000002480749a7fb: hlt    
  0x000002480749a7fc: hlt    
  0x000002480749a7fd: hlt    
  0x000002480749a7fe: hlt    
  0x000002480749a7ff: hlt    
[Stub Code]
  0x000002480749a800: nop                       ;   {no_reloc}
  0x000002480749a801: nop
  0x000002480749a802: nop
  0x000002480749a803: nop
  0x000002480749a804: nop
  0x000002480749a805: movabs $0x0,%rbx          ;   {static_stub}
  0x000002480749a80f: jmp    0x000002480749a80f  ;   {runtime_call}
[Exception Handler]
  0x000002480749a814: call   0x0000024807431320  ;   {runtime_call}
  0x000002480749a819: mov    %rsp,-0x28(%rsp)
  0x000002480749a81e: sub    $0x80,%rsp
  0x000002480749a825: mov    %rax,0x78(%rsp)
  0x000002480749a82a: mov    %rcx,0x70(%rsp)
  0x000002480749a82f: mov    %rdx,0x68(%rsp)
  0x000002480749a834: mov    %rbx,0x60(%rsp)
  0x000002480749a839: mov    %rbp,0x50(%rsp)
  0x000002480749a83e: mov    %rsi,0x48(%rsp)
  0x000002480749a843: mov    %rdi,0x40(%rsp)
  0x000002480749a848: mov    %r8,0x38(%rsp)
  0x000002480749a84d: mov    %r9,0x30(%rsp)
  0x000002480749a852: mov    %r10,0x28(%rsp)
  0x000002480749a857: mov    %r11,0x20(%rsp)
  0x000002480749a85c: mov    %r12,0x18(%rsp)
  0x000002480749a861: mov    %r13,0x10(%rsp)
  0x000002480749a866: mov    %r14,0x8(%rsp)
  0x000002480749a86b: mov    %r15,(%rsp)
  0x000002480749a86f: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480749a879: movabs $0x2480749a819,%rdx  ;   {internal_word}
  0x000002480749a883: mov    %rsp,%r8
  0x000002480749a886: and    $0xfffffffffffffff0,%rsp
  0x000002480749a88a: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480749a894: call   *%r10
  0x000002480749a897: hlt    
[Deopt Handler Code]
  0x000002480749a898: movabs $0x2480749a898,%r10  ;   {section_word}
  0x000002480749a8a2: push   %r10
  0x000002480749a8a4: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480749a8a9: hlt    
  0x000002480749a8aa: hlt    
  0x000002480749a8ab: hlt    
  0x000002480749a8ac: hlt    
  0x000002480749a8ad: hlt    
  0x000002480749a8ae: hlt    
  0x000002480749a8af: hlt    
<nmethod compile_id='196' compiler='C1' level='3' entry='0x000002480749a600' size='1632' address='0x000002480749a490' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1072' scopes_pcs_offset='1224' dependencies_offset='1592' nul_chk_table_offset='1600' method='jdk/internal/org/objectweb/asm/ByteVector putInt (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='74' count='526' iicount='526' stamp='2.661'/>
<writer thread='12268'/>
Decoding compiled method 0x0000024807498a50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481ff02e68} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;pers/mine/scratchpad/other/SafepointTest&apos;
  0x0000024807498b80: int3   
  0x0000024807498b81: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807498b8c: data16 data16 xchg %ax,%ax
  0x0000024807498b90: mov    %eax,-0x6000(%rsp)
  0x0000024807498b97: push   %rbp
  0x0000024807498b98: sub    $0x40,%rsp
  0x0000024807498b9c: mov    (%rdx),%ebp
  0x0000024807498b9e: mov    %rdx,%rcx
  0x0000024807498ba1: movabs $0x661ffac0,%r10
  0x0000024807498bab: call   *%r10              ;*iload_0
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@2 (line 10)

  0x0000024807498bae: cmp    $0x3b9aca00,%ebp
  0x0000024807498bb4: jge    0x0000024807498cb2  ;*if_icmpge
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@5 (line 10)

  0x0000024807498bba: mov    %ebp,%r11d
  0x0000024807498bbd: inc    %r11d
  0x0000024807498bc0: movabs $0x76bac4878,%r9   ;   {oop(a &apos;java/lang/Class&apos; = &apos;pers/mine/scratchpad/other/SafepointTest&apos;)}
  0x0000024807498bca: mov    0x68(%r9),%r8d     ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x0000024807498bce: test   %r8d,%r8d
  0x0000024807498bd1: je     0x0000024807498c77
  0x0000024807498bd7: mov    $0x1,%r10d
  0x0000024807498bdd: lock xadd %r10d,0xc(%r12,%r8,8)  ;*invokevirtual getAndAddInt
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@8 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498be4: mov    0x68(%r9),%r8d     ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x0000024807498be8: mov    %ebp,%ecx
  0x0000024807498bea: inc    %ecx               ;*iinc
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@16 (line 10)

  0x0000024807498bec: cmp    %r11d,%ecx
  0x0000024807498bef: jge    0x0000024807498bf5  ;*if_icmpge
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@5 (line 10)

  0x0000024807498bf1: mov    %ecx,%ebp
  0x0000024807498bf3: jmp    0x0000024807498bce
  0x0000024807498bf5: cmp    $0x3b9ac9fd,%ecx
  0x0000024807498bfb: jge    0x0000024807498cbd
  0x0000024807498c01: jmp    0x0000024807498c05
  0x0000024807498c03: mov    %ebp,%ecx          ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@-1 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498c05: test   %r8d,%r8d
  0x0000024807498c08: je     0x0000024807498c77
  0x0000024807498c0a: mov    $0x1,%r10d
  0x0000024807498c10: lock xadd %r10d,0xc(%r12,%r8,8)  ;*invokevirtual getAndAddInt
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@8 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498c17: mov    0x68(%r9),%r10d    ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x0000024807498c1b: test   %r10d,%r10d
  0x0000024807498c1e: je     0x0000024807498c77
  0x0000024807498c20: mov    $0x1,%r11d
  0x0000024807498c26: lock xadd %r11d,0xc(%r12,%r10,8)
                                                ;*invokevirtual getAndAddInt
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@8 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498c2d: mov    0x68(%r9),%r10d    ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x0000024807498c31: test   %r10d,%r10d
  0x0000024807498c34: je     0x0000024807498c77
  0x0000024807498c36: mov    $0x1,%r11d
  0x0000024807498c3c: lock xadd %r11d,0xc(%r12,%r10,8)
                                                ;*invokevirtual getAndAddInt
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@8 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498c43: mov    0x68(%r9),%r10d    ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x0000024807498c47: test   %r10d,%r10d
  0x0000024807498c4a: je     0x0000024807498c77
  0x0000024807498c4c: mov    $0x1,%r8d
  0x0000024807498c52: lock xadd %r8d,0xc(%r12,%r10,8)  ;*invokevirtual getAndAddInt
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@8 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498c59: mov    0x68(%r9),%r8d     ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x0000024807498c5d: mov    %ecx,%ebp
  0x0000024807498c5f: add    $0x4,%ebp          ;*iinc
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@16 (line 10)

  0x0000024807498c62: cmp    $0x3b9ac9fd,%ebp
  0x0000024807498c68: jl     0x0000024807498c03  ;*if_icmpge
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@5 (line 10)

  0x0000024807498c6a: add    $0x3,%ecx          ;*iinc
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@16 (line 10)

  0x0000024807498c6d: cmp    $0x3b9aca00,%ebp
  0x0000024807498c73: jge    0x0000024807498cc7
  0x0000024807498c75: jmp    0x0000024807498c8f
  0x0000024807498c77: mov    $0xfffffff6,%edx
  0x0000024807498c7c: data16 xchg %ax,%ax
  0x0000024807498c7f: call   0x00000248073754e0  ; OopMap{off=260}
                                                ;*invokevirtual getAndAdd
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)
                                                ;   {runtime_call}
  0x0000024807498c84: int3                      ;*invokevirtual getAndAdd
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498c85: data16 xchg %ax,%ax
  0x0000024807498c88: mov    0x68(%r9),%r8d     ;*getstatic num
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@8 (line 11)

  0x0000024807498c8c: mov    %r10d,%ebp         ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@-1 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498c8f: test   %r8d,%r8d
  0x0000024807498c92: je     0x0000024807498c77
  0x0000024807498c94: mov    $0x1,%r10d
  0x0000024807498c9a: lock xadd %r10d,0xc(%r12,%r8,8)  ;*invokevirtual getAndAddInt
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndAdd@8 (line 177)
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@12 (line 11)

  0x0000024807498ca1: mov    %ebp,%r10d
  0x0000024807498ca4: inc    %r10d              ;*iinc
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@16 (line 10)

  0x0000024807498ca7: cmp    $0x3b9aca00,%r10d
  0x0000024807498cae: jl     0x0000024807498c88
  0x0000024807498cb0: inc    %ebp               ;*if_icmpge
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@5 (line 10)

  0x0000024807498cb2: mov    $0xffffff65,%edx
  0x0000024807498cb7: call   0x00000248073754e0  ; OopMap{off=316}
                                                ;*if_icmpge
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@5 (line 10)
                                                ;   {runtime_call}
  0x0000024807498cbc: int3                      ;*if_icmpge
                                                ; - pers.mine.scratchpad.other.SafepointTest::lambda$main$0@5 (line 10)

  0x0000024807498cbd: mov    %ebp,%r11d
  0x0000024807498cc0: mov    %ecx,%ebp
  0x0000024807498cc2: mov    %r11d,%ecx
  0x0000024807498cc5: jmp    0x0000024807498c6d
  0x0000024807498cc7: mov    %ecx,%ebp
  0x0000024807498cc9: jmp    0x0000024807498cb0
  0x0000024807498ccb: hlt    
  0x0000024807498ccc: hlt    
  0x0000024807498ccd: hlt    
  0x0000024807498cce: hlt    
  0x0000024807498ccf: hlt    
  0x0000024807498cd0: hlt    
  0x0000024807498cd1: hlt    
  0x0000024807498cd2: hlt    
  0x0000024807498cd3: hlt    
  0x0000024807498cd4: hlt    
  0x0000024807498cd5: hlt    
  0x0000024807498cd6: hlt    
  0x0000024807498cd7: hlt    
  0x0000024807498cd8: hlt    
  0x0000024807498cd9: hlt    
  0x0000024807498cda: hlt    
  0x0000024807498cdb: hlt    
  0x0000024807498cdc: hlt    
  0x0000024807498cdd: hlt    
  0x0000024807498cde: hlt    
  0x0000024807498cdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807498ce0: jmp    0x000002480742efe0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000024807498ce5: call   0x0000024807498cea
  0x0000024807498cea: subq   $0x5,(%rsp)
  0x0000024807498cef: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807498cf4: hlt    
  0x0000024807498cf5: hlt    
  0x0000024807498cf6: hlt    
  0x0000024807498cf7: hlt    
<nmethod compile_id='205' compile_kind='osr' compiler='C2' level='4' entry='0x0000024807498b80' size='1272' address='0x0000024807498a50' relocation_offset='288' insts_offset='304' stub_offset='656' scopes_data_offset='704' scopes_pcs_offset='784' dependencies_offset='1264' oops_offset='680' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='798608' iicount='2' stamp='2.669'/>
<make_not_entrant thread='12268' compile_id='202' compile_kind='osr' compiler='C1' level='3' stamp='2.669'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807499f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fe51510} &apos;pop&apos; &apos;()I&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;
  #           [sp+0x40]  (sp of caller)
  0x000002480749a0c0: mov    0x8(%rdx),%r10d
  0x000002480749a0c4: shl    $0x3,%r10
  0x000002480749a0c8: cmp    %rax,%r10
  0x000002480749a0cb: jne    0x0000024807375ca0  ;   {runtime_call}
  0x000002480749a0d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002480749a0dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002480749a0e0: mov    %eax,-0x6000(%rsp)
  0x000002480749a0e7: push   %rbp
  0x000002480749a0e8: sub    $0x30,%rsp
  0x000002480749a0ec: movabs $0x2481fee83d8,%rax  ;   {metadata(method data for {method} {0x000002481fe51510} &apos;pop&apos; &apos;()I&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480749a0f6: mov    0xdc(%rax),%esi
  0x000002480749a0fc: add    $0x8,%esi
  0x000002480749a0ff: mov    %esi,0xdc(%rax)
  0x000002480749a105: movabs $0x2481fe51508,%rax  ;   {metadata({method} {0x000002481fe51510} &apos;pop&apos; &apos;()I&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480749a10f: and    $0x1ff8,%esi
  0x000002480749a115: cmp    $0x0,%esi
  0x000002480749a118: je     0x000002480749a1a8  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@0 (line 724)

  0x000002480749a11e: mov    0xc(%rdx),%eax     ;*getfield outputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@1 (line 724)

  0x000002480749a121: cmp    $0x0,%eax
  0x000002480749a124: movabs $0x2481fee83d8,%rsi  ;   {metadata(method data for {method} {0x000002481fe51510} &apos;pop&apos; &apos;()I&apos; in &apos;jdk/internal/org/objectweb/asm/Frame&apos;)}
  0x000002480749a12e: movabs $0x108,%rdi
  0x000002480749a138: jle    0x000002480749a148
  0x000002480749a13e: movabs $0x118,%rdi
  0x000002480749a148: mov    (%rsi,%rdi,1),%rbx
  0x000002480749a14c: lea    0x1(%rbx),%rbx
  0x000002480749a150: mov    %rbx,(%rsi,%rdi,1)
  0x000002480749a154: jle    0x000002480749a182  ;*ifle
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@4 (line 724)

  0x000002480749a15a: mov    0x24(%rdx),%esi
  0x000002480749a15d: shl    $0x3,%rsi          ;*getfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@8 (line 725)

  0x000002480749a161: dec    %eax
  0x000002480749a163: mov    %eax,0xc(%rdx)     ;*putfield outputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@19 (line 725)

  0x000002480749a166: movslq %eax,%rdi
  0x000002480749a169: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000002480749a1bf
  0x000002480749a16c: jae    0x000002480749a1c9
  0x000002480749a172: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@22 (line 725)

  0x000002480749a176: add    $0x30,%rsp
  0x000002480749a17a: pop    %rbp
  0x000002480749a17b: test   %eax,-0x1eea081(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480749a181: ret                       ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@23 (line 725)

  0x000002480749a182: mov    0x14(%rdx),%eax
  0x000002480749a185: shl    $0x3,%rax          ;*getfield owner
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@27 (line 728)

  0x000002480749a189: mov    0x1c(%rax),%esi    ;*getfield inputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@31 (line 728)
                                                ; implicit exception: dispatches to 0x000002480749a1d2
  0x000002480749a18c: dec    %esi
  0x000002480749a18e: mov    %esi,0x1c(%rax)    ;*putfield inputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@37 (line 728)

  0x000002480749a191: neg    %esi
  0x000002480749a193: mov    %rsi,%rax
  0x000002480749a196: or     $0x3000000,%eax
  0x000002480749a19c: add    $0x30,%rsp
  0x000002480749a1a0: pop    %rbp
  0x000002480749a1a1: test   %eax,-0x1eea0a7(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x000002480749a1a7: ret    
  0x000002480749a1a8: mov    %rax,0x8(%rsp)
  0x000002480749a1ad: movq   $0xffffffffffffffff,(%rsp)
  0x000002480749a1b5: call   0x0000024807433da0  ; OopMap{rdx=Oop off=250}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@-1 (line 724)
                                                ;   {runtime_call}
  0x000002480749a1ba: jmp    0x000002480749a11e
  0x000002480749a1bf: call   0x000002480742f100  ; OopMap{rsi=Oop off=260}
                                                ;*iaload
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@22 (line 725)
                                                ;   {runtime_call}
  0x000002480749a1c4: call   0x000002480742f100  ; OopMap{rsi=Oop off=265}
                                                ;*iaload
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@22 (line 725)
                                                ;   {runtime_call}
  0x000002480749a1c9: mov    %rax,(%rsp)
  0x000002480749a1cd: call   0x000002480742e800  ; OopMap{rsi=Oop off=274}
                                                ;*iaload
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@22 (line 725)
                                                ;   {runtime_call}
  0x000002480749a1d2: call   0x000002480742f100  ; OopMap{rax=Oop off=279}
                                                ;*getfield inputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::pop@31 (line 728)
                                                ;   {runtime_call}
  0x000002480749a1d7: nop
  0x000002480749a1d8: nop
  0x000002480749a1d9: mov    0x308(%r15),%rax
  0x000002480749a1e0: movabs $0x0,%r10
  0x000002480749a1ea: mov    %r10,0x308(%r15)
  0x000002480749a1f1: movabs $0x0,%r10
  0x000002480749a1fb: mov    %r10,0x310(%r15)
  0x000002480749a202: add    $0x30,%rsp
  0x000002480749a206: pop    %rbp
  0x000002480749a207: jmp    0x000002480742eee0  ;   {runtime_call}
  0x000002480749a20c: hlt    
  0x000002480749a20d: hlt    
  0x000002480749a20e: hlt    
  0x000002480749a20f: hlt    
  0x000002480749a210: hlt    
  0x000002480749a211: hlt    
  0x000002480749a212: hlt    
  0x000002480749a213: hlt    
  0x000002480749a214: hlt    
  0x000002480749a215: hlt    
  0x000002480749a216: hlt    
  0x000002480749a217: hlt    
  0x000002480749a218: hlt    
  0x000002480749a219: hlt    
  0x000002480749a21a: hlt    
  0x000002480749a21b: hlt    
  0x000002480749a21c: hlt    
  0x000002480749a21d: hlt    
  0x000002480749a21e: hlt    
  0x000002480749a21f: hlt    
[Exception Handler]
[Stub Code]
  0x000002480749a220: call   0x0000024807431320  ;   {no_reloc}
  0x000002480749a225: mov    %rsp,-0x28(%rsp)
  0x000002480749a22a: sub    $0x80,%rsp
  0x000002480749a231: mov    %rax,0x78(%rsp)
  0x000002480749a236: mov    %rcx,0x70(%rsp)
  0x000002480749a23b: mov    %rdx,0x68(%rsp)
  0x000002480749a240: mov    %rbx,0x60(%rsp)
  0x000002480749a245: mov    %rbp,0x50(%rsp)
  0x000002480749a24a: mov    %rsi,0x48(%rsp)
  0x000002480749a24f: mov    %rdi,0x40(%rsp)
  0x000002480749a254: mov    %r8,0x38(%rsp)
  0x000002480749a259: mov    %r9,0x30(%rsp)
  0x000002480749a25e: mov    %r10,0x28(%rsp)
  0x000002480749a263: mov    %r11,0x20(%rsp)
  0x000002480749a268: mov    %r12,0x18(%rsp)
  0x000002480749a26d: mov    %r13,0x10(%rsp)
  0x000002480749a272: mov    %r14,0x8(%rsp)
  0x000002480749a277: mov    %r15,(%rsp)
  0x000002480749a27b: movabs $0x66613820,%rcx   ;   {external_word}
  0x000002480749a285: movabs $0x2480749a225,%rdx  ;   {internal_word}
  0x000002480749a28f: mov    %rsp,%r8
  0x000002480749a292: and    $0xfffffffffffffff0,%rsp
  0x000002480749a296: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x000002480749a2a0: call   *%r10
  0x000002480749a2a3: hlt    
[Deopt Handler Code]
  0x000002480749a2a4: movabs $0x2480749a2a4,%r10  ;   {section_word}
  0x000002480749a2ae: push   %r10
  0x000002480749a2b0: jmp    0x0000024807377340  ;   {runtime_call}
  0x000002480749a2b5: hlt    
  0x000002480749a2b6: hlt    
  0x000002480749a2b7: hlt    
<nmethod compile_id='197' compiler='C1' level='3' entry='0x000002480749a0c0' size='1280' address='0x0000024807499f50' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='880' scopes_pcs_offset='968' dependencies_offset='1240' nul_chk_table_offset='1248' method='jdk/internal/org/objectweb/asm/Frame pop ()I' bytes='43' count='289' iicount='289' stamp='2.676'/>
Decoding compiled method 0x0000024807498750:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002481fe5f298} &apos;access$200&apos; &apos;(Ljava/util/SubList;)I&apos; in &apos;java/util/SubList&apos;
  # parm0:    rdx:rdx   = &apos;java/util/SubList&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000248074988a0: mov    %eax,-0x6000(%rsp)
  0x00000248074988a7: push   %rbp
  0x00000248074988a8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.SubList::access$200@0 (line 613)

  0x00000248074988ac: mov    0x14(%rdx),%eax    ;*getfield size
                                                ; - java.util.SubList::access$200@1 (line 613)
                                                ; implicit exception: dispatches to 0x00000248074988bb
  0x00000248074988af: add    $0x30,%rsp
  0x00000248074988b3: pop    %rbp
  0x00000248074988b4: test   %eax,-0x1ee87ba(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x00000248074988ba: ret    
  0x00000248074988bb: call   0x000002480742f100  ; OopMap{off=32}
                                                ;*getfield size
                                                ; - java.util.SubList::access$200@1 (line 613)
                                                ;   {runtime_call}
  0x00000248074988c0: nop
  0x00000248074988c1: nop
  0x00000248074988c2: mov    0x308(%r15),%rax
  0x00000248074988c9: movabs $0x0,%r10
  0x00000248074988d3: mov    %r10,0x308(%r15)
  0x00000248074988da: movabs $0x0,%r10
  0x00000248074988e4: mov    %r10,0x310(%r15)
  0x00000248074988eb: add    $0x30,%rsp
  0x00000248074988ef: pop    %rbp
  0x00000248074988f0: jmp    0x000002480742eee0  ;   {runtime_call}
  0x00000248074988f5: hlt    
  0x00000248074988f6: hlt    
  0x00000248074988f7: hlt    
  0x00000248074988f8: hlt    
  0x00000248074988f9: hlt    
  0x00000248074988fa: hlt    
  0x00000248074988fb: hlt    
  0x00000248074988fc: hlt    
  0x00000248074988fd: hlt    
  0x00000248074988fe: hlt    
  0x00000248074988ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807498900: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807498905: mov    %rsp,-0x28(%rsp)
  0x000002480749890a: sub    $0x80,%rsp
  0x0000024807498911: mov    %rax,0x78(%rsp)
  0x0000024807498916: mov    %rcx,0x70(%rsp)
  0x000002480749891b: mov    %rdx,0x68(%rsp)
  0x0000024807498920: mov    %rbx,0x60(%rsp)
  0x0000024807498925: mov    %rbp,0x50(%rsp)
  0x000002480749892a: mov    %rsi,0x48(%rsp)
  0x000002480749892f: mov    %rdi,0x40(%rsp)
  0x0000024807498934: mov    %r8,0x38(%rsp)
  0x0000024807498939: mov    %r9,0x30(%rsp)
  0x000002480749893e: mov    %r10,0x28(%rsp)
  0x0000024807498943: mov    %r11,0x20(%rsp)
  0x0000024807498948: mov    %r12,0x18(%rsp)
  0x000002480749894d: mov    %r13,0x10(%rsp)
  0x0000024807498952: mov    %r14,0x8(%rsp)
  0x0000024807498957: mov    %r15,(%rsp)
  0x000002480749895b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807498965: movabs $0x24807498905,%rdx  ;   {internal_word}
  0x000002480749896f: mov    %rsp,%r8
  0x0000024807498972: and    $0xfffffffffffffff0,%rsp
  0x0000024807498976: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807498980: call   *%r10
  0x0000024807498983: hlt    
[Deopt Handler Code]
  0x0000024807498984: movabs $0x24807498984,%r10  ;   {section_word}
  0x000002480749898e: push   %r10
  0x0000024807498990: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807498995: hlt    
  0x0000024807498996: hlt    
  0x0000024807498997: hlt    
<nmethod compile_id='71' compiler='C1' level='1' entry='0x00000248074988a0' size='720' address='0x0000024807498750' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='616' dependencies_offset='696' nul_chk_table_offset='704' method='java/util/SubList access$200 (Ljava/util/SubList;)I' bytes='5' count='201' iicount='201' stamp='2.680'/>
<writer thread='26288'/>
<uncommon_trap thread='26288' reason='unstable_if' action='reinterpret' compile_id='205' compile_kind='osr' compiler='C2' level='4' stamp='45.522'>
<jvms bci='5' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='801808' iicount='2'/>
</uncommon_trap>
<make_not_entrant thread='26288' compile_id='205' compile_kind='osr' compiler='C2' level='4' stamp='45.522'/>
<writer thread='16136'/>
<uncommon_trap thread='16136' reason='unstable_if' action='reinterpret' compile_id='205' compile_kind='osr' compiler='C2' level='4' count='1' state='intrinsic recompiled' stamp='45.540'>
<jvms bci='5' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='801808' iicount='2' decompiles='1' unstable_if_traps='1'/>
</uncommon_trap>
<writer thread='27436'/>
<task_queued compile_id='206' method='java/nio/Buffer position ()I' bytes='5' count='128' iicount='128' level='1' stamp='45.556' comment='tiered' hot_count='128'/>
<writer thread='26148'/>
Decoding compiled method 0x0000024807499c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000002481fb96a28} &apos;position&apos; &apos;()I&apos; in &apos;java/nio/Buffer&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000024807499da0: mov    0x8(%rdx),%r10d
  0x0000024807499da4: shl    $0x3,%r10
  0x0000024807499da8: cmp    %rax,%r10
  0x0000024807499dab: jne    0x0000024807375ca0  ;   {runtime_call}
  0x0000024807499db1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000024807499dbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000024807499dc0: mov    %eax,-0x6000(%rsp)
  0x0000024807499dc7: push   %rbp
  0x0000024807499dc8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.nio.Buffer::position@0 (line 226)

  0x0000024807499dcc: mov    0x18(%rdx),%eax    ;*getfield position
                                                ; - java.nio.Buffer::position@1 (line 226)

  0x0000024807499dcf: add    $0x30,%rsp
  0x0000024807499dd3: pop    %rbp
  0x0000024807499dd4: test   %eax,-0x1ee9cda(%rip)        # 0x00000248055b0100
                                                ;   {poll_return}
  0x0000024807499dda: ret    
  0x0000024807499ddb: nop
  0x0000024807499ddc: nop
  0x0000024807499ddd: mov    0x308(%r15),%rax
  0x0000024807499de4: movabs $0x0,%r10
  0x0000024807499dee: mov    %r10,0x308(%r15)
  0x0000024807499df5: movabs $0x0,%r10
  0x0000024807499dff: mov    %r10,0x310(%r15)
  0x0000024807499e06: add    $0x30,%rsp
  0x0000024807499e0a: pop    %rbp
  0x0000024807499e0b: jmp    0x000002480742eee0  ;   {runtime_call}
  0x0000024807499e10: hlt    
  0x0000024807499e11: hlt    
  0x0000024807499e12: hlt    
  0x0000024807499e13: hlt    
  0x0000024807499e14: hlt    
  0x0000024807499e15: hlt    
  0x0000024807499e16: hlt    
  0x0000024807499e17: hlt    
  0x0000024807499e18: hlt    
  0x0000024807499e19: hlt    
  0x0000024807499e1a: hlt    
  0x0000024807499e1b: hlt    
  0x0000024807499e1c: hlt    
  0x0000024807499e1d: hlt    
  0x0000024807499e1e: hlt    
  0x0000024807499e1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000024807499e20: call   0x0000024807431320  ;   {no_reloc}
  0x0000024807499e25: mov    %rsp,-0x28(%rsp)
  0x0000024807499e2a: sub    $0x80,%rsp
  0x0000024807499e31: mov    %rax,0x78(%rsp)
  0x0000024807499e36: mov    %rcx,0x70(%rsp)
  0x0000024807499e3b: mov    %rdx,0x68(%rsp)
  0x0000024807499e40: mov    %rbx,0x60(%rsp)
  0x0000024807499e45: mov    %rbp,0x50(%rsp)
  0x0000024807499e4a: mov    %rsi,0x48(%rsp)
  0x0000024807499e4f: mov    %rdi,0x40(%rsp)
  0x0000024807499e54: mov    %r8,0x38(%rsp)
  0x0000024807499e59: mov    %r9,0x30(%rsp)
  0x0000024807499e5e: mov    %r10,0x28(%rsp)
  0x0000024807499e63: mov    %r11,0x20(%rsp)
  0x0000024807499e68: mov    %r12,0x18(%rsp)
  0x0000024807499e6d: mov    %r13,0x10(%rsp)
  0x0000024807499e72: mov    %r14,0x8(%rsp)
  0x0000024807499e77: mov    %r15,(%rsp)
  0x0000024807499e7b: movabs $0x66613820,%rcx   ;   {external_word}
  0x0000024807499e85: movabs $0x24807499e25,%rdx  ;   {internal_word}
  0x0000024807499e8f: mov    %rsp,%r8
  0x0000024807499e92: and    $0xfffffffffffffff0,%rsp
  0x0000024807499e96: movabs $0x662b6360,%r10   ;   {runtime_call}
  0x0000024807499ea0: call   *%r10
  0x0000024807499ea3: hlt    
[Deopt Handler Code]
  0x0000024807499ea4: movabs $0x24807499ea4,%r10  ;   {section_word}
  0x0000024807499eae: push   %r10
  0x0000024807499eb0: jmp    0x0000024807377340  ;   {runtime_call}
  0x0000024807499eb5: hlt    
  0x0000024807499eb6: hlt    
  0x0000024807499eb7: hlt    
<nmethod compile_id='206' compiler='C1' level='1' entry='0x0000024807499da0' size='712' address='0x0000024807499c50' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='640' dependencies_offset='704' method='java/nio/Buffer position ()I' bytes='5' count='130' iicount='130' stamp='45.566'/>
<writer thread='30496'/>
<destroy_vm stamp='45.567'/>
<tty_done stamp='46.058'/>
</tty>
<compilation_log thread='19792'>
<start_compile_thread name='C2 CompilerThread1' thread='19792' process='11764' stamp='0.561'/>
<task compile_id='13' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='37563' iicount='37563' stamp='0.596'>
<phase name='parse' nodes='3' live='3' stamp='0.596'>
<type id='729' name='boolean'/>
<type id='730' name='char'/>
<klass id='846' name='java/io/WinNTFileSystem' flags='0'/>
<method id='847' holder='846' name='isSlash' return='729' arguments='730' flags='2' bytes='18' iicount='37563'/>
<parse method='847' uses='37563' stamp='0.596'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='2312' not_taken='35251' cnt='37563' prob='0.0615499'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='34026' not_taken='1226' cnt='35252' prob='0.965222'/>
<parse_done nodes='47' live='46' memory='26176' stamp='0.597'/>
</parse>
<phase_done name='parse' nodes='48' live='27' stamp='0.597'/>
</phase>
<phase name='optimizer' nodes='48' live='27' stamp='0.597'>
<phase name='ccp' nodes='48' live='27' stamp='0.597'>
<phase_done name='ccp' nodes='48' live='27' stamp='0.597'/>
</phase>
<phase name='idealLoop' nodes='48' live='27' stamp='0.597'>
<phase_done name='idealLoop' nodes='48' live='27' stamp='0.597'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.597'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.597'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.597'/>
</phase>
<phase name='regalloc' nodes='36' live='36' stamp='0.597'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='36' stamp='0.597'/>
</phase>
<phase name='output' nodes='36' live='36' stamp='0.597'>
<phase_done name='output' nodes='46' live='43' stamp='0.603'/>
</phase>
<code_cache total_blobs='269' nmethods='9' adapters='171' free_code_cache='250525120'/>
<task_done success='1' nmsize='120' count='37563' stamp='0.606'/>
</task>
<task compile_id='14' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='34381' iicount='34381' stamp='0.618'>
<phase name='parse' nodes='3' live='3' stamp='0.628'>
<klass id='808' name='java/lang/StringBuffer' flags='17'/>
<type id='730' name='char'/>
<method id='846' holder='808' name='append' return='808' arguments='730' flags='33' bytes='13' iicount='34381'/>
<parse method='846' uses='34381' stamp='0.628'>
<bc code='183' bci='7'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='848' holder='807' name='append' return='807' arguments='730' flags='1' bytes='29' iicount='34502'/>
<call method='848' count='33869' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='34381' stamp='0.628'>
<bc code='183' bci='7'/>
<type id='737' name='void'/>
<type id='735' name='int'/>
<method id='849' holder='807' name='ensureCapacityInternal' return='737' arguments='735' flags='2' bytes='27' iicount='36313'/>
<call method='849' count='33990' prof_factor='0.996493' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='34381' stamp='0.628'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='35818' not_taken='495' cnt='36313' prob='0.986369'/>
<bc code='183' bci='17'/>
<method id='851' holder='807' name='newCapacity' return='735' arguments='735' flags='2' bytes='39' iicount='729'/>
<call method='851' count='488' prof_factor='0.946796' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='469' stamp='0.629'>
<bc code='183' bci='31'/>
<method id='855' holder='807' name='hugeCapacity' return='735' arguments='735' flags='2' bytes='28' iicount='1'/>
<call method='855' count='-1' prof_factor='0.643347' inline='1'/>
<klass id='765' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='855' bci='7' reason='unloaded' action='reinterpret' index='12' klass='765'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='174' live='172' memory='50216' stamp='0.629'/>
</parse>
<bc code='184' bci='20'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='835' arguments='835 735' flags='9' bytes='19' compile_id='5' compiler='C1' level='3' iicount='787'/>
<call method='853' count='488' prof_factor='0.946796' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='469' stamp='0.635'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='735' arguments='735 735' flags='9' bytes='11' iicount='5729'/>
<call method='858' count='-1' prof_factor='0.595934' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='859' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='859' count='-1' prof_factor='0.595934' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='366' live='362' memory='88832' stamp='0.636'/>
</parse>
<parse_done nodes='396' live='391' memory='95864' stamp='0.640'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='446' live='438' memory='105080' stamp='0.640'/>
</parse>
<parse_done nodes='467' live='458' memory='108320' stamp='0.640'/>
</parse>
<phase_done name='parse' nodes='469' live='292' stamp='0.640'/>
</phase>
<phase name='optimizer' nodes='469' live='292' stamp='0.640'>
<phase name='escapeAnalysis' nodes='473' live='288' stamp='0.640'>
<phase name='connectionGraph' nodes='473' live='288' stamp='0.640'>
<phase_done name='connectionGraph' nodes='473' live='288' stamp='0.640'/>
</phase>
<phase_done name='escapeAnalysis' nodes='473' live='288' stamp='0.640'/>
</phase>
<phase name='ccp' nodes='473' live='288' stamp='0.641'>
<phase_done name='ccp' nodes='473' live='288' stamp='0.641'/>
</phase>
<phase name='idealLoop' nodes='473' live='287' stamp='0.641'>
<phase_done name='idealLoop' nodes='491' live='278' stamp='0.641'/>
</phase>
<phase name='idealLoop' nodes='491' live='278' stamp='0.641'>
<phase_done name='idealLoop' nodes='497' live='278' stamp='0.642'/>
</phase>
<phase_done name='optimizer' nodes='661' live='408' stamp='0.642'/>
</phase>
<phase name='matcher' nodes='661' live='408' stamp='0.642'>
<phase_done name='matcher' nodes='400' live='400' stamp='0.643'/>
</phase>
<phase name='regalloc' nodes='508' live='507' stamp='0.644'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='665' live='598' stamp='0.647'/>
</phase>
<phase name='output' nodes='667' live='600' stamp='0.647'>
<phase_done name='output' nodes='692' live='615' stamp='0.653'/>
</phase>
<code_cache total_blobs='285' nmethods='20' adapters='176' free_code_cache='250506176'/>
<task_done success='1' nmsize='1448' count='34381' inlined_bytes='125' stamp='0.689'/>
</task>
<task compile_id='24' method='java/lang/String indexOf (II)I' bytes='70' count='1952' backedge_count='112373' iicount='1952' stamp='0.701'>
<phase name='parse' nodes='3' live='3' stamp='0.701'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='indexOf' return='735' arguments='735 735' flags='1' bytes='70' iicount='1952'/>
<parse method='846' uses='1952' stamp='0.701'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='1749' not_taken='0' cnt='1749' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='1464' not_taken='285' cnt='1749' prob='0.83705'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='1464' cnt='1464' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1460' not_taken='107193' cnt='108653' prob='0.0134373'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='107189' not_taken='4' cnt='107193' prob='0.999963'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1460' not_taken='107193' cnt='107189' prob='0.0134373'/>
<parse_done nodes='184' live='174' memory='50272' stamp='0.701'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.701'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.701'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.702'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.702'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.702'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.702'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.702'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.702'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.702'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.702'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.702'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='222' stamp='0.702'/>
</phase>
<phase name='idealLoop' nodes='342' live='222' stamp='0.702'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='288' stamp='0.702'/>
</phase>
<phase name='idealLoop' nodes='418' live='288' stamp='0.702'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='271' stamp='0.702'/>
</phase>
<phase name='idealLoop' nodes='418' live='271' stamp='0.702'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='268' stamp='0.703'/>
</phase>
<phase_done name='optimizer' nodes='488' live='265' stamp='0.703'/>
</phase>
<phase name='matcher' nodes='488' live='265' stamp='0.703'>
<phase_done name='matcher' nodes='197' live='197' stamp='0.703'/>
</phase>
<phase name='regalloc' nodes='279' live='278' stamp='0.703'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='296' live='293' stamp='0.704'/>
</phase>
<phase name='output' nodes='296' live='293' stamp='0.704'>
<phase_done name='output' nodes='329' live='306' stamp='0.706'/>
</phase>
<code_cache total_blobs='289' nmethods='24' adapters='176' free_code_cache='250500672'/>
<task_done success='1' nmsize='504' count='1952' backedge_count='112373' stamp='0.718'/>
</task>
<task compile_id='26' method='java/lang/Character toLowerCase (I)I' bytes='9' count='14595' iicount='14595' stamp='0.721'>
<phase name='parse' nodes='3' live='3' stamp='0.721'>
<type id='735' name='int'/>
<klass id='824' name='java/lang/Character' flags='17'/>
<method id='846' holder='824' name='toLowerCase' return='735' arguments='735' flags='9' bytes='9' iicount='14595'/>
<parse method='846' uses='14595' stamp='0.721'>
<bc code='184' bci='1'/>
<klass id='849' name='java/lang/CharacterData' flags='1024'/>
<method id='850' holder='849' name='of' return='849' arguments='735' flags='24' bytes='120' iicount='15275'/>
<call method='850' count='14083' prof_factor='1' inline='1'/>
<klass id='852' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='850' bci='96' reason='unloaded' action='reinterpret' index='51' klass='852'/>
<klass id='853' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='850' bci='100' reason='unloaded' action='reinterpret' index='53' klass='853'/>
<klass id='854' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='850' bci='104' reason='unloaded' action='reinterpret' index='55' klass='854'/>
<klass id='855' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='850' bci='108' reason='unloaded' action='reinterpret' index='56' klass='855'/>
<klass id='856' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='850' bci='112' reason='unloaded' action='reinterpret' index='57' klass='856'/>
<klass id='857' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='850' bci='116' reason='unloaded' action='reinterpret' index='58' klass='857'/>
<inline_success reason='inline (hot)'/>
<klass id='848' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='849' x='848'/>
<parse method='850' uses='14595' stamp='0.721'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='15275' cnt='15275' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='51' live='49' memory='27472' stamp='0.721'/>
</parse>
<bc code='182' bci='5'/>
<method id='861' holder='848' name='toLowerCase' return='735' arguments='735' flags='0' bytes='39' compile_id='27' compiler='C2' level='4' iicount='14595'/>
<dependency type='unique_concrete_method' ctxk='848' x='861'/>
<call method='861' count='14083' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='861' uses='14595' stamp='0.721'>
<bc code='182' bci='4'/>
<method id='862' holder='848' name='getProperties' return='735' arguments='735' flags='0' bytes='11' iicount='15275'/>
<dependency type='unique_concrete_method' ctxk='848' x='862'/>
<call method='862' count='14083' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='862' uses='14595' stamp='0.744'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='98' memory='36208' stamp='0.744'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='13707' not_taken='888' cnt='14595' prob='0.939157'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='888' cnt='888' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='133' live='127' memory='42488' stamp='0.744'/>
</parse>
<parse_done nodes='133' live='126' memory='42872' stamp='0.744'/>
</parse>
<phase_done name='parse' nodes='134' live='69' stamp='0.744'/>
</phase>
<phase name='optimizer' nodes='134' live='69' stamp='0.744'>
<phase name='ccp' nodes='134' live='67' stamp='0.744'>
<phase_done name='ccp' nodes='134' live='67' stamp='0.744'/>
</phase>
<phase name='idealLoop' nodes='134' live='67' stamp='0.744'>
<phase_done name='idealLoop' nodes='134' live='67' stamp='0.744'/>
</phase>
<phase_done name='optimizer' nodes='135' live='67' stamp='0.744'/>
</phase>
<phase name='matcher' nodes='135' live='67' stamp='0.744'>
<phase_done name='matcher' nodes='60' live='60' stamp='0.745'/>
</phase>
<phase name='regalloc' nodes='75' live='75' stamp='0.745'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='92' live='86' stamp='0.745'/>
</phase>
<phase name='output' nodes='92' live='86' stamp='0.745'>
<phase_done name='output' nodes='105' live='94' stamp='0.747'/>
</phase>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='849' x='848'/>
<dependency type='unique_concrete_method' ctxk='848' x='861'/>
<dependency type='unique_concrete_method' ctxk='848' x='862'/>
<code_cache total_blobs='293' nmethods='29' adapters='177' free_code_cache='250505088'/>
<task_done success='1' nmsize='184' count='14595' inlined_bytes='170' stamp='0.752'/>
</task>
<task compile_id='74' method='java/lang/Math max (II)I' bytes='11' count='17536' iicount='17536' stamp='1.144'>
<phase name='parse' nodes='3' live='3' stamp='1.144'>
<type id='735' name='int'/>
<klass id='846' name='java/lang/Math' flags='17'/>
<method id='847' holder='846' name='max' return='735' arguments='735 735' flags='9' bytes='11' iicount='17536'/>
<parse method='847' uses='17536' stamp='1.144'>
<bc code='161' bci='2'/>
<branch target_bci='9' taken='586' not_taken='16950' cnt='17536' prob='0.033417'/>
<parse_done nodes='32' live='31' memory='23912' stamp='1.145'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='1.145'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='1.145'>
<phase name='ccp' nodes='33' live='18' stamp='1.145'>
<phase_done name='ccp' nodes='33' live='18' stamp='1.145'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='1.145'>
<phase_done name='idealLoop' nodes='33' live='18' stamp='1.145'/>
</phase>
<phase_done name='optimizer' nodes='33' live='18' stamp='1.145'/>
</phase>
<phase name='matcher' nodes='33' live='18' stamp='1.145'>
<phase_done name='matcher' nodes='19' live='19' stamp='1.145'/>
</phase>
<phase name='regalloc' nodes='25' live='25' stamp='1.145'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='27' live='27' stamp='1.145'/>
</phase>
<phase name='output' nodes='27' live='27' stamp='1.145'>
<phase_done name='output' nodes='34' live='32' stamp='1.148'/>
</phase>
<code_cache total_blobs='350' nmethods='73' adapters='190' free_code_cache='250434688'/>
<task_done success='1' nmsize='88' count='17543' stamp='1.151'/>
</task>
<task compile_id='82' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='11136' iicount='11136' stamp='1.159'>
<phase name='parse' nodes='3' live='3' stamp='1.159'>
<type id='735' name='int'/>
<type id='730' name='char'/>
<klass id='846' name='sun/nio/cs/ext/DoubleByte$Encoder' flags='9'/>
<method id='847' holder='846' name='encodeChar' return='735' arguments='730' flags='1' bytes='21' iicount='11136'/>
<parse method='847' uses='11136' stamp='1.159'>
<bc code='52' bci='12'/>
<uncommon_trap bci='12' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='12' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='19'/>
<uncommon_trap bci='19' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='115' live='110' memory='36664' stamp='1.159'/>
</parse>
<phase_done name='parse' nodes='116' live='81' stamp='1.160'/>
</phase>
<phase name='optimizer' nodes='116' live='81' stamp='1.160'>
<phase name='ccp' nodes='116' live='81' stamp='1.160'>
<phase_done name='ccp' nodes='116' live='81' stamp='1.160'/>
</phase>
<phase name='idealLoop' nodes='116' live='81' stamp='1.160'>
<phase_done name='idealLoop' nodes='116' live='81' stamp='1.160'/>
</phase>
<phase_done name='optimizer' nodes='124' live='82' stamp='1.160'/>
</phase>
<phase name='matcher' nodes='124' live='82' stamp='1.160'>
<phase_done name='matcher' nodes='70' live='70' stamp='1.160'/>
</phase>
<phase name='regalloc' nodes='86' live='84' stamp='1.160'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='94' live='92' stamp='1.160'/>
</phase>
<phase name='output' nodes='94' live='92' stamp='1.160'>
<phase_done name='output' nodes='107' live='103' stamp='1.167'/>
</phase>
<code_cache total_blobs='359' nmethods='78' adapters='194' free_code_cache='250428160'/>
<task_done success='1' nmsize='248' count='11136' stamp='1.172'/>
</task>
<task compile_id='172' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='890' backedge_count='28795' iicount='890' stamp='2.057'>
<phase name='parse' nodes='3' live='3' stamp='2.058'>
<klass id='846' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='847' holder='846' name='putUTF8' return='846' arguments='743' flags='1' bytes='142' compile_id='61' compiler='C1' level='3' iicount='896'/>
<klass id='853' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='847' bci='11' reason='unloaded' action='reinterpret' index='7' klass='853'/>
<parse method='847' uses='896' stamp='2.058'>
<bc code='182' bci='1'/>
<type id='735' name='int'/>
<method id='849' holder='743' name='length' return='735' flags='1' bytes='6' compile_id='4' compiler='C2' level='4' iicount='33595'/>
<call method='849' count='743' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='743' stamp='2.058'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='68' live='65' memory='30920' stamp='2.064'/>
</parse>
<bc code='164' bci='8'/>
<branch target_bci='19' taken='743' not_taken='0' cnt='743' prob='always'/>
<uncommon_trap bci='8' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='34'/>
<branch target_bci='44' taken='590' not_taken='153' cnt='743' prob='0.794078'/>
<bc code='183' bci='41'/>
<type id='737' name='void'/>
<method id='852' holder='846' name='enlarge' return='737' arguments='735' flags='2' bytes='51' iicount='201'/>
<call method='852' count='153' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<direct_call bci='41'/>
<bc code='84' bci='61'/>
<uncommon_trap bci='61' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='61' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='70'/>
<uncommon_trap bci='70' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='77'/>
<branch target_bci='135' taken='743' not_taken='24850' cnt='25593' prob='0.0290314'/>
<uncommon_trap bci='80' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='80' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='83'/>
<type id='730' name='char'/>
<method id='850' holder='743' name='charAt' return='730' arguments='735' flags='1' bytes='29' compile_id='10' compiler='C2' level='4' iicount='199440'/>
<call method='850' count='24850' prof_factor='1' inline='1'/>
<klass id='856' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='850' bci='13' reason='unloaded' action='reinterpret' index='6' klass='856'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='24850' stamp='2.067'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='199440' cnt='199440' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='199440' not_taken='0' cnt='199440' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='334' live='319' memory='83672' stamp='2.067'/>
</parse>
<bc code='161' bci='91'/>
<branch target_bci='114' taken='0' not_taken='24850' cnt='24850' prob='never'/>
<uncommon_trap bci='91' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='98'/>
<branch target_bci='114' taken='0' not_taken='24850' cnt='24850' prob='never'/>
<uncommon_trap bci='98' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='84' bci='110'/>
<uncommon_trap bci='110' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='77'/>
<branch target_bci='135' taken='743' not_taken='24850' cnt='24850' prob='0.0290314'/>
<parse_done nodes='403' live='384' memory='97568' stamp='2.068'/>
</parse>
<phase_done name='parse' nodes='405' live='275' stamp='2.068'/>
</phase>
<phase name='optimizer' nodes='405' live='275' stamp='2.068'>
<phase name='idealLoop' nodes='405' live='262' stamp='2.068'>
<loop_tree>
<loop idx='411' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='452' live='265' stamp='2.068'/>
</phase>
<phase name='idealLoop' nodes='452' live='265' stamp='2.068'>
<loop_tree>
<loop idx='411' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='503' live='276' stamp='2.068'/>
</phase>
<phase name='idealLoop' nodes='503' live='276' stamp='2.068'>
<loop_tree>
<loop idx='727' inner_loop='1' main_loop='727' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='789' live='444' stamp='2.069'/>
</phase>
<phase name='ccp' nodes='789' live='444' stamp='2.069'>
<phase_done name='ccp' nodes='789' live='444' stamp='2.069'/>
</phase>
<phase name='idealLoop' nodes='790' live='443' stamp='2.069'>
<loop_tree>
<loop idx='603' inner_loop='1' pre_loop='411' >
</loop>
<loop idx='838' inner_loop='1' main_loop='838' >
</loop>
<loop idx='528' inner_loop='1' post_loop='411' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='889' live='499' stamp='2.070'/>
</phase>
<phase name='idealLoop' nodes='889' live='499' stamp='2.070'>
<loop_tree>
<loop idx='603' inner_loop='1' pre_loop='411' >
</loop>
<loop idx='528' inner_loop='1' post_loop='411' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='897' live='485' stamp='2.070'/>
</phase>
<phase name='idealLoop' nodes='897' live='485' stamp='2.070'>
<loop_tree>
<loop idx='603' inner_loop='1' pre_loop='411' >
</loop>
<loop idx='528' inner_loop='1' post_loop='411' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='905' live='339' stamp='2.071'/>
</phase>
<phase_done name='optimizer' nodes='943' live='346' stamp='2.071'/>
</phase>
<phase name='matcher' nodes='943' live='346' stamp='2.071'>
<phase_done name='matcher' nodes='301' live='301' stamp='2.071'/>
</phase>
<phase name='regalloc' nodes='395' live='391' stamp='2.071'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='539' live='478' stamp='2.073'/>
</phase>
<phase name='output' nodes='539' live='478' stamp='2.073'>
<phase_done name='output' nodes='561' live='496' stamp='2.079'/>
</phase>
<code_cache total_blobs='444' nmethods='158' adapters='198' free_code_cache='250277888'/>
<task_done success='1' nmsize='936' count='953' backedge_count='30714' inlined_bytes='35' stamp='2.101'/>
</task>
</compilation_log>
<compilation_log thread='12268'>
<start_compile_thread name='C2 CompilerThread0' thread='12268' process='11764' stamp='0.548'/>
<task compile_id='3' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='2375' backedge_count='62580' iicount='2375' osr_bci='24' stamp='0.596'>
<phase name='parse' nodes='3' live='3' stamp='0.596'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='hashCode' return='735' flags='1' bytes='55' iicount='2375'/>
<parse method='846' uses='2375' osr_bci='24' stamp='0.596'>
<uncommon_trap bci='24' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='24' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='24' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='838' not_taken='58452' cnt='59290' prob='0.0141339'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='219' live='211' memory='54384' stamp='0.597'/>
</parse>
<phase_done name='parse' nodes='220' live='169' stamp='0.597'/>
</phase>
<phase name='optimizer' nodes='220' live='169' stamp='0.597'>
<phase name='idealLoop' nodes='230' live='160' stamp='0.597'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='245' live='154' stamp='0.597'/>
</phase>
<phase name='idealLoop' nodes='245' live='154' stamp='0.597'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='296' live='161' stamp='0.598'/>
</phase>
<phase name='idealLoop' nodes='296' live='161' stamp='0.598'>
<loop_tree>
<loop idx='301' main_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='399' live='227' stamp='0.598'/>
</phase>
<phase name='ccp' nodes='399' live='227' stamp='0.598'>
<phase_done name='ccp' nodes='399' live='227' stamp='0.598'/>
</phase>
<phase name='idealLoop' nodes='402' live='220' stamp='0.598'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='301' inner_loop='1' main_loop='301' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='402' live='214' stamp='0.599'/>
</phase>
<phase name='idealLoop' nodes='402' live='214' stamp='0.599'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='446' inner_loop='1' main_loop='446' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='465' live='233' stamp='0.599'/>
</phase>
<phase name='idealLoop' nodes='465' live='233' stamp='0.599'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='495' inner_loop='1' main_loop='495' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='508' live='256' stamp='0.600'/>
</phase>
<phase name='idealLoop' nodes='508' live='256' stamp='0.600'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='558' inner_loop='1' main_loop='558' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='572' live='305' stamp='0.600'/>
</phase>
<phase name='idealLoop' nodes='572' live='305' stamp='0.600'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='558' inner_loop='1' main_loop='558' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='575' live='298' stamp='0.600'/>
</phase>
<phase_done name='optimizer' nodes='645' live='282' stamp='0.601'/>
</phase>
<phase name='matcher' nodes='645' live='282' stamp='0.601'>
<phase_done name='matcher' nodes='238' live='238' stamp='0.601'/>
</phase>
<phase name='regalloc' nodes='300' live='297' stamp='0.603'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='369' live='344' stamp='0.605'/>
</phase>
<phase name='output' nodes='369' live='344' stamp='0.605'>
<phase_done name='output' nodes='384' live='355' stamp='0.611'/>
</phase>
<code_cache total_blobs='271' nmethods='12' adapters='172' free_code_cache='250530944'/>
<task_done success='1' nmsize='632' count='2383' backedge_count='62733' stamp='0.628'/>
</task>
<task compile_id='4' method='java/lang/String length ()I' bytes='6' count='31977' iicount='31977' stamp='0.628'>
<phase name='parse' nodes='3' live='3' stamp='0.628'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='length' return='735' flags='1' bytes='6' iicount='31977'/>
<parse method='846' uses='31977' stamp='0.628'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25944' stamp='0.628'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.628'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.628'>
<phase name='ccp' nodes='45' live='27' stamp='0.628'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.628'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.628'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.628'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.628'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.628'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.628'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.628'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.629'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.629'>
<phase_done name='output' nodes='38' live='37' stamp='0.629'/>
</phase>
<code_cache total_blobs='274' nmethods='13' adapters='173' free_code_cache='250524352'/>
<task_done success='1' nmsize='120' count='31979' stamp='0.632'/>
</task>
<task compile_id='6' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='36313' iicount='36313' stamp='0.635'>
<phase name='parse' nodes='3' live='3' stamp='0.635'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='807' name='ensureCapacityInternal' return='737' arguments='735' flags='2' bytes='27' iicount='36313'/>
<parse method='846' uses='36313' stamp='0.640'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='35818' not_taken='495' cnt='36313' prob='0.986369'/>
<bc code='183' bci='17'/>
<method id='848' holder='807' name='newCapacity' return='735' arguments='735' flags='2' bytes='39' iicount='729'/>
<call method='848' count='488' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='495' stamp='0.640'>
<bc code='183' bci='31'/>
<method id='851' holder='807' name='hugeCapacity' return='735' arguments='735' flags='2' bytes='28' iicount='1'/>
<call method='851' count='-1' prof_factor='0.679012' inline='1'/>
<klass id='765' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='851' bci='7' reason='unloaded' action='reinterpret' index='12' klass='765'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='0.644'/>
</parse>
<bc code='184' bci='20'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='849' name='java/util/Arrays' flags='1'/>
<method id='850' holder='849' name='copyOf' return='835' arguments='835 735' flags='9' bytes='19' compile_id='5' compiler='C1' level='3' iicount='787'/>
<call method='850' count='488' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='495' stamp='0.644'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='853' name='java/lang/Math' flags='17'/>
<method id='854' holder='853' name='min' return='735' arguments='735 735' flags='9' bytes='11' iicount='5729'/>
<call method='854' count='-1' prof_factor='0.628971' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='855' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='855' count='-1' prof_factor='0.628971' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='320' live='316' memory='77744' stamp='0.645'/>
</parse>
<parse_done nodes='347' live='342' memory='83088' stamp='0.645'/>
</parse>
<phase_done name='parse' nodes='349' live='221' stamp='0.645'/>
</phase>
<phase name='optimizer' nodes='349' live='221' stamp='0.645'>
<phase name='escapeAnalysis' nodes='353' live='218' stamp='0.645'>
<phase name='connectionGraph' nodes='354' live='219' stamp='0.645'>
<phase_done name='connectionGraph' nodes='354' live='219' stamp='0.645'/>
</phase>
<phase_done name='escapeAnalysis' nodes='354' live='219' stamp='0.645'/>
</phase>
<phase name='ccp' nodes='354' live='219' stamp='0.645'>
<phase_done name='ccp' nodes='354' live='219' stamp='0.645'/>
</phase>
<phase name='idealLoop' nodes='354' live='218' stamp='0.645'>
<phase_done name='idealLoop' nodes='360' live='208' stamp='0.646'/>
</phase>
<phase name='idealLoop' nodes='360' live='208' stamp='0.646'>
<phase_done name='idealLoop' nodes='366' live='208' stamp='0.646'/>
</phase>
<phase_done name='optimizer' nodes='424' live='246' stamp='0.646'/>
</phase>
<phase name='matcher' nodes='424' live='246' stamp='0.646'>
<phase_done name='matcher' nodes='245' live='245' stamp='0.646'/>
</phase>
<phase name='regalloc' nodes='308' live='307' stamp='0.647'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='384' live='358' stamp='0.649'/>
</phase>
<phase name='output' nodes='384' live='358' stamp='0.649'>
<phase_done name='output' nodes='405' live='370' stamp='0.653'/>
</phase>
<code_cache total_blobs='285' nmethods='18' adapters='176' free_code_cache='250497728'/>
<task_done success='1' nmsize='712' count='36330' inlined_bytes='69' stamp='0.664'/>
</task>
<task compile_id='11' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='12276' iicount='12276' stamp='0.701'>
<phase name='parse' nodes='3' live='3' stamp='0.701'>
<type id='737' name='void'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='846' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' iicount='12279'/>
<parse method='846' uses='12279' stamp='0.701'>
<parse_done nodes='54' live='53' memory='27160' stamp='0.701'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.701'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.701'>
<phase name='ccp' nodes='56' live='38' stamp='0.701'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.701'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.701'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.701'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.701'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.701'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.701'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.702'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.702'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.702'>
<phase_done name='output' nodes='55' live='53' stamp='0.706'/>
</phase>
<code_cache total_blobs='288' nmethods='25' adapters='176' free_code_cache='250511424'/>
<task_done success='1' nmsize='152' count='12554' stamp='0.721'/>
</task>
<task compile_id='42' method='java/lang/String hashCode ()I' bytes='55' count='2420' backedge_count='63287' iicount='2420' stamp='0.847'>
<phase name='parse' nodes='3' live='3' stamp='0.847'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='hashCode' return='735' flags='1' bytes='55' iicount='2420'/>
<parse method='846' uses='2420' stamp='0.847'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='1179' not_taken='870' cnt='2049' prob='0.575403'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='3' not_taken='867' cnt='870' prob='0.00344828'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='867' not_taken='59178' cnt='60045' prob='0.0144392'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='867' not_taken='59178' cnt='59178' prob='0.0144392'/>
<parse_done nodes='190' live='184' memory='50048' stamp='0.847'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.847'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.847'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.848'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.848'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.848'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.848'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.848'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.848'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.848'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.849'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.849'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='364' live='198' stamp='0.849'/>
</phase>
<phase name='idealLoop' nodes='364' live='198' stamp='0.849'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='370' live='184' stamp='0.849'/>
</phase>
<phase name='idealLoop' nodes='370' live='184' stamp='0.849'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='167' stamp='0.849'/>
</phase>
<phase_done name='optimizer' nodes='412' live='164' stamp='0.849'/>
</phase>
<phase name='matcher' nodes='412' live='164' stamp='0.849'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.850'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.850'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.850'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.850'>
<phase_done name='output' nodes='209' live='200' stamp='0.851'/>
</phase>
<code_cache total_blobs='317' nmethods='42' adapters='188' free_code_cache='250481664'/>
<task_done success='1' nmsize='376' count='2454' backedge_count='63726' stamp='0.857'/>
</task>
<task compile_id='139' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='15385' iicount='15385' stamp='1.694'>
<phase name='parse' nodes='3' live='3' stamp='1.694'>
<klass id='846' name='java/lang/CharacterData' flags='1024'/>
<klass id='849' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='846' x='849'/>
<type id='735' name='int'/>
<method id='847' holder='846' name='of' return='846' arguments='735' flags='24' bytes='120' iicount='15385'/>
<klass id='850' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='847' bci='96' reason='unloaded' action='reinterpret' index='51' klass='850'/>
<klass id='851' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='847' bci='100' reason='unloaded' action='reinterpret' index='53' klass='851'/>
<klass id='852' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='847' bci='104' reason='unloaded' action='reinterpret' index='55' klass='852'/>
<klass id='853' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='847' bci='108' reason='unloaded' action='reinterpret' index='56' klass='853'/>
<klass id='854' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='847' bci='112' reason='unloaded' action='reinterpret' index='57' klass='854'/>
<klass id='855' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='847' bci='116' reason='unloaded' action='reinterpret' index='58' klass='855'/>
<parse method='847' uses='15385' stamp='1.695'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='15385' cnt='15385' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='41' live='39' memory='25784' stamp='1.695'/>
</parse>
<phase_done name='parse' nodes='42' live='23' stamp='1.695'/>
</phase>
<phase name='optimizer' nodes='42' live='23' stamp='1.695'>
<phase name='ccp' nodes='42' live='23' stamp='1.695'>
<phase_done name='ccp' nodes='42' live='23' stamp='1.695'/>
</phase>
<phase name='idealLoop' nodes='42' live='23' stamp='1.695'>
<phase_done name='idealLoop' nodes='42' live='23' stamp='1.695'/>
</phase>
<phase_done name='optimizer' nodes='42' live='23' stamp='1.695'/>
</phase>
<phase name='matcher' nodes='42' live='23' stamp='1.695'>
<phase_done name='matcher' nodes='24' live='24' stamp='1.695'/>
</phase>
<phase name='regalloc' nodes='29' live='29' stamp='1.695'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='32' stamp='1.695'/>
</phase>
<phase name='output' nodes='33' live='32' stamp='1.695'>
<phase_done name='output' nodes='40' live='38' stamp='1.698'/>
</phase>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='846' x='849'/>
<code_cache total_blobs='404' nmethods='120' adapters='196' free_code_cache='250344768'/>
<task_done success='1' nmsize='120' count='15602' stamp='1.701'/>
</task>
<task compile_id='205' compile_kind='osr' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='558652' iicount='2' osr_bci='2' stamp='2.647'>
<phase name='parse' nodes='3' live='3' stamp='2.648'>
<type id='737' name='void'/>
<klass id='846' name='pers/mine/scratchpad/other/SafepointTest' flags='1'/>
<method id='847' holder='846' name='lambda$main$0' return='737' flags='4106' bytes='23' compile_id='204' compiler='C1' level='3' iicount='2'/>
<parse method='847' uses='2' osr_bci='2' stamp='2.648'>
<uncommon_trap bci='2' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='2' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='5'/>
<branch target_bci='22' taken='0' not_taken='278978' cnt='278978' prob='never'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='12'/>
<type id='735' name='int'/>
<klass id='849' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='850' holder='849' name='getAndAdd' return='735' arguments='735' flags='17' bytes='12' iicount='561211'/>
<call method='850' count='301487' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='301487' stamp='2.651'>
<uncommon_trap bci='12' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='8'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='736' name='long'/>
<klass id='810' name='sun/misc/Unsafe' flags='17'/>
<method id='853' holder='810' name='getAndAddInt' return='735' arguments='742 736 735' flags='17' bytes='27' compile_id='203' compiler='C2' level='4' iicount='267108'/>
<call method='853' count='267035' prof_factor='0.537208' inline='1'/>
<intrinsic id='_getAndAddInt' nodes='19'/>
<parse_done nodes='140' live='135' memory='42552' stamp='2.651'/>
</parse>
<parse_done nodes='143' live='138' memory='43032' stamp='2.651'/>
</parse>
<phase_done name='parse' nodes='143' live='93' stamp='2.651'/>
</phase>
<phase name='optimizer' nodes='143' live='93' stamp='2.651'>
<phase name='idealLoop' nodes='143' live='86' stamp='2.651'>
<loop_tree>
<loop idx='143' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='200' live='98' stamp='2.651'/>
</phase>
<phase name='idealLoop' nodes='200' live='98' stamp='2.651'>
<loop_tree>
<loop idx='340' main_loop='340' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='358' live='210' stamp='2.651'/>
</phase>
<phase name='idealLoop' nodes='358' live='210' stamp='2.651'>
<loop_tree>
<loop idx='282' inner_loop='1' pre_loop='205' >
</loop>
<loop idx='384' inner_loop='1' main_loop='384' >
</loop>
<loop idx='233' inner_loop='1' post_loop='205' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='436' live='271' stamp='2.652'/>
</phase>
<phase name='ccp' nodes='436' live='271' stamp='2.652'>
<phase_done name='ccp' nodes='436' live='271' stamp='2.652'/>
</phase>
<phase name='idealLoop' nodes='436' live='271' stamp='2.652'>
<loop_tree>
<loop idx='282' inner_loop='1' pre_loop='205' >
</loop>
<loop idx='384' inner_loop='1' main_loop='384' >
</loop>
<loop idx='233' inner_loop='1' post_loop='205' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='451' live='270' stamp='2.652'/>
</phase>
<phase_done name='optimizer' nodes='469' live='265' stamp='2.652'/>
</phase>
<phase name='matcher' nodes='469' live='265' stamp='2.652'>
<phase_done name='matcher' nodes='240' live='240' stamp='2.652'/>
</phase>
<phase name='regalloc' nodes='291' live='291' stamp='2.652'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='313' live='310' stamp='2.653'/>
</phase>
<phase name='output' nodes='313' live='310' stamp='2.653'>
<phase_done name='output' nodes='335' live='318' stamp='2.661'/>
</phase>
<code_cache total_blobs='474' nmethods='186' adapters='200' free_code_cache='250172480'/>
<task_done success='1' nmsize='376' count='2' backedge_count='799188' inlined_bytes='39' stamp='2.669'/>
</task>
</compilation_log>
<compilation_log thread='26148'>
<start_compile_thread name='C1 CompilerThread3' thread='26148' process='11764' stamp='0.546'/>
<task compile_id='5' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='769' iicount='769' level='3' stamp='0.547'>
<phase name='buildIR' stamp='0.547'>
<klass id='835' name='[C' flags='1041'/>
<type id='735' name='int'/>
<klass id='846' name='java/util/Arrays' flags='1'/>
<method id='847' holder='846' name='copyOf' return='835' arguments='835 735' flags='9' bytes='19' iicount='769'/>
<parse method='847'  stamp='0.547'>
<bc code='184' bci='11'/>
<klass id='849' name='java/lang/Math' flags='17'/>
<method id='850' holder='849' name='min' return='735' arguments='735 735' flags='9' bytes='11' iicount='5647'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.547'/>
</parse>
<bc code='184' bci='14'/>
<type id='737' name='void'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='852' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='852' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.547'/>
</parse>
<phase name='optimize_blocks' stamp='0.547'>
<phase_done name='optimize_blocks' stamp='0.547'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.547'>
<phase_done name='rangeCheckElimination' stamp='0.547'/>
</phase>
<phase name='optimize_null_checks' stamp='0.547'>
<phase_done name='optimize_null_checks' stamp='0.547'/>
</phase>
<phase_done name='buildIR' stamp='0.547'/>
</phase>
<phase name='emit_lir' stamp='0.547'>
<phase name='lirGeneration' stamp='0.547'>
<phase_done name='lirGeneration' stamp='0.547'/>
</phase>
<phase name='linearScan' stamp='0.547'>
<phase_done name='linearScan' stamp='0.548'/>
</phase>
<phase_done name='emit_lir' stamp='0.548'/>
</phase>
<phase name='codeemit' stamp='0.548'>
<phase_done name='codeemit' stamp='0.548'/>
</phase>
<phase name='codeinstall' stamp='0.548'>
<phase_done name='codeinstall' stamp='0.561'/>
</phase>
<code_cache total_blobs='236' nmethods='2' adapters='160' free_code_cache='250578944'/>
<task_done success='1' nmsize='816' count='769' inlined_bytes='11' stamp='0.561'/>
</task>
<task compile_id='8' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='640' iicount='640' level='3' stamp='0.564'>
<phase name='buildIR' stamp='0.564'>
<type id='729' name='boolean'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='endsWith' return='729' arguments='743' flags='1' bytes='17' iicount='642'/>
<parse method='846'  stamp='0.564'>
<bc code='182' bci='13'/>
<type id='735' name='int'/>
<method id='848' holder='743' name='startsWith' return='729' arguments='743 735' flags='1' bytes='72' iicount='1362'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.564'/>
</parse>
<phase name='optimize_blocks' stamp='0.564'>
<phase_done name='optimize_blocks' stamp='0.564'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.564'>
<phase_done name='rangeCheckElimination' stamp='0.564'/>
</phase>
<phase name='optimize_null_checks' stamp='0.564'>
<phase_done name='optimize_null_checks' stamp='0.564'/>
</phase>
<phase_done name='buildIR' stamp='0.564'/>
</phase>
<phase name='emit_lir' stamp='0.564'>
<phase name='lirGeneration' stamp='0.564'>
<phase_done name='lirGeneration' stamp='0.564'/>
</phase>
<phase name='linearScan' stamp='0.564'>
<phase_done name='linearScan' stamp='0.564'/>
</phase>
<phase_done name='emit_lir' stamp='0.564'/>
</phase>
<phase name='codeemit' stamp='0.564'>
<phase_done name='codeemit' stamp='0.564'/>
</phase>
<phase name='codeinstall' stamp='0.564'>
<phase_done name='codeinstall' stamp='0.572'/>
</phase>
<code_cache total_blobs='250' nmethods='3' adapters='165' free_code_cache='250540800'/>
<task_done success='1' nmsize='560' count='651' stamp='0.572'/>
</task>
<task compile_id='9' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1368' backedge_count='7116' iicount='1368' level='3' stamp='0.573'>
<phase name='buildIR' stamp='0.573'>
<type id='729' name='boolean'/>
<klass id='743' name='java/lang/String' flags='17'/>
<type id='735' name='int'/>
<method id='846' holder='743' name='startsWith' return='729' arguments='743 735' flags='1' bytes='72' iicount='1368'/>
<parse method='846'  stamp='0.573'>
<parse_done stamp='0.573'/>
</parse>
<phase name='optimize_blocks' stamp='0.573'>
<phase_done name='optimize_blocks' stamp='0.573'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.573'>
<phase_done name='rangeCheckElimination' stamp='0.573'/>
</phase>
<phase name='optimize_null_checks' stamp='0.573'>
<phase_done name='optimize_null_checks' stamp='0.573'/>
</phase>
<phase_done name='buildIR' stamp='0.573'/>
</phase>
<phase name='emit_lir' stamp='0.573'>
<phase name='lirGeneration' stamp='0.573'>
<phase_done name='lirGeneration' stamp='0.573'/>
</phase>
<phase name='linearScan' stamp='0.573'>
<phase_done name='linearScan' stamp='0.573'/>
</phase>
<phase_done name='emit_lir' stamp='0.573'/>
</phase>
<phase name='codeemit' stamp='0.573'>
<phase_done name='codeemit' stamp='0.573'/>
</phase>
<phase name='codeinstall' stamp='0.573'>
<phase_done name='codeinstall' stamp='0.582'/>
</phase>
<code_cache total_blobs='255' nmethods='4' adapters='167' free_code_cache='250537344'/>
<task_done success='1' nmsize='824' count='1368' backedge_count='7116' stamp='0.582'/>
</task>
<task compile_id='12' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.582'>
<phase name='buildIR' stamp='0.582'>
<klass id='848' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='846' name='sun/instrument/TransformerManager' flags='1'/>
<method id='849' holder='846' name='getSnapshotTransformerList' return='848' flags='2' bytes='5' iicount='128'/>
<parse method='849'  stamp='0.582'>
<parse_done stamp='0.582'/>
</parse>
<phase name='optimize_blocks' stamp='0.582'>
<phase_done name='optimize_blocks' stamp='0.582'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.582'>
<phase_done name='rangeCheckElimination' stamp='0.582'/>
</phase>
<phase name='optimize_null_checks' stamp='0.582'>
<phase_done name='optimize_null_checks' stamp='0.582'/>
</phase>
<phase_done name='buildIR' stamp='0.582'/>
</phase>
<phase name='emit_lir' stamp='0.582'>
<phase name='lirGeneration' stamp='0.582'>
<phase_done name='lirGeneration' stamp='0.582'/>
</phase>
<phase name='linearScan' stamp='0.582'>
<phase_done name='linearScan' stamp='0.582'/>
</phase>
<phase_done name='emit_lir' stamp='0.582'/>
</phase>
<phase name='codeemit' stamp='0.582'>
<phase_done name='codeemit' stamp='0.582'/>
</phase>
<phase name='codeinstall' stamp='0.582'>
<phase_done name='codeinstall' stamp='0.585'/>
</phase>
<code_cache total_blobs='256' nmethods='5' adapters='167' free_code_cache='250542464'/>
<task_done success='1' nmsize='280' count='129' stamp='0.585'/>
</task>
<task compile_id='16' method='java/lang/String indexOf (I)I' bytes='7' count='1808' iicount='1809' level='3' stamp='0.585'>
<phase name='buildIR' stamp='0.585'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='indexOf' return='735' arguments='735' flags='1' bytes='7' iicount='1816'/>
<parse method='846'  stamp='0.585'>
<bc code='182' bci='3'/>
<method id='848' holder='743' name='indexOf' return='735' arguments='735 735' flags='1' bytes='70' iicount='1834'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.585'/>
</parse>
<phase name='optimize_blocks' stamp='0.585'>
<phase_done name='optimize_blocks' stamp='0.585'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.585'>
<phase_done name='rangeCheckElimination' stamp='0.585'/>
</phase>
<phase name='optimize_null_checks' stamp='0.585'>
<phase_done name='optimize_null_checks' stamp='0.585'/>
</phase>
<phase_done name='buildIR' stamp='0.585'/>
</phase>
<phase name='emit_lir' stamp='0.585'>
<phase name='lirGeneration' stamp='0.585'>
<phase_done name='lirGeneration' stamp='0.585'/>
</phase>
<phase name='linearScan' stamp='0.585'>
<phase_done name='linearScan' stamp='0.585'/>
</phase>
<phase_done name='emit_lir' stamp='0.585'/>
</phase>
<phase name='codeemit' stamp='0.585'>
<phase_done name='codeemit' stamp='0.585'/>
</phase>
<phase name='codeinstall' stamp='0.585'>
<phase_done name='codeinstall' stamp='0.590'/>
</phase>
<code_cache total_blobs='260' nmethods='6' adapters='169' free_code_cache='250540032'/>
<task_done success='1' nmsize='528' count='1818' stamp='0.590'/>
</task>
<task compile_id='17' method='sun/nio/fs/WindowsPathParser isSlash (C)Z' bytes='18' count='265' iicount='265' level='3' stamp='0.590'>
<phase name='buildIR' stamp='0.590'>
<type id='729' name='boolean'/>
<type id='730' name='char'/>
<klass id='846' name='sun/nio/fs/WindowsPathParser' flags='0'/>
<method id='847' holder='846' name='isSlash' return='729' arguments='730' flags='26' bytes='18' iicount='265'/>
<parse method='847'  stamp='0.590'>
<parse_done stamp='0.590'/>
</parse>
<phase name='optimize_blocks' stamp='0.590'>
<phase_done name='optimize_blocks' stamp='0.590'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.590'>
<phase_done name='rangeCheckElimination' stamp='0.590'/>
</phase>
<phase name='optimize_null_checks' stamp='0.590'>
<phase_done name='optimize_null_checks' stamp='0.590'/>
</phase>
<phase_done name='buildIR' stamp='0.590'/>
</phase>
<phase name='emit_lir' stamp='0.590'>
<phase name='lirGeneration' stamp='0.590'>
<phase_done name='lirGeneration' stamp='0.590'/>
</phase>
<phase name='linearScan' stamp='0.590'>
<phase_done name='linearScan' stamp='0.591'/>
</phase>
<phase_done name='emit_lir' stamp='0.591'/>
</phase>
<phase name='codeemit' stamp='0.591'>
<phase_done name='codeemit' stamp='0.591'/>
</phase>
<phase name='codeinstall' stamp='0.591'>
<phase_done name='codeinstall' stamp='0.596'/>
</phase>
<code_cache total_blobs='263' nmethods='7' adapters='169' free_code_cache='250532736'/>
<task_done success='1' nmsize='472' count='265' stamp='0.596'/>
</task>
<task compile_id='18' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.597'>
<phase name='buildIR' stamp='0.597'>
<klass id='847' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='848' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='735' name='int'/>
<klass id='846' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='849' holder='846' name='tabAt' return='847' arguments='848 735' flags='24' bytes='21' iicount='256'/>
<parse method='849'  stamp='0.597'>
<bc code='182' bci='14'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='736' name='long'/>
<klass id='810' name='sun/misc/Unsafe' flags='17'/>
<method id='853' holder='810' name='getObjectVolatile' return='742' arguments='742 736' flags='257' bytes='0' compile_id='19' compile_kind='c2n' level='0' iicount='256'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.603'/>
</parse>
<phase name='optimize_blocks' stamp='0.603'>
<phase_done name='optimize_blocks' stamp='0.603'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.603'>
<phase_done name='rangeCheckElimination' stamp='0.603'/>
</phase>
<phase name='optimize_null_checks' stamp='0.603'>
<phase_done name='optimize_null_checks' stamp='0.603'/>
</phase>
<phase_done name='buildIR' stamp='0.603'/>
</phase>
<phase name='emit_lir' stamp='0.603'>
<phase name='lirGeneration' stamp='0.603'>
<phase_done name='lirGeneration' stamp='0.603'/>
</phase>
<phase name='linearScan' stamp='0.603'>
<phase_done name='linearScan' stamp='0.603'/>
</phase>
<phase_done name='emit_lir' stamp='0.603'/>
</phase>
<phase name='codeemit' stamp='0.603'>
<phase_done name='codeemit' stamp='0.603'/>
</phase>
<phase name='codeinstall' stamp='0.603'>
<phase_done name='codeinstall' stamp='0.611'/>
</phase>
<code_cache total_blobs='270' nmethods='10' adapters='171' free_code_cache='250523008'/>
<task_done success='1' nmsize='568' count='386' stamp='0.611'/>
</task>
<task compile_id='20' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1281' iicount='1281' level='3' stamp='0.628'>
<phase name='buildIR' stamp='0.629'>
<klass id='754' name='java/lang/SecurityManager' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='846' holder='748' name='getSecurityManager' return='754' flags='9' bytes='4' iicount='1281'/>
<parse method='846'  stamp='0.629'>
<parse_done stamp='0.629'/>
</parse>
<phase name='optimize_blocks' stamp='0.629'>
<phase_done name='optimize_blocks' stamp='0.629'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.629'>
<phase_done name='rangeCheckElimination' stamp='0.629'/>
</phase>
<phase name='optimize_null_checks' stamp='0.629'>
<phase_done name='optimize_null_checks' stamp='0.629'/>
</phase>
<phase_done name='buildIR' stamp='0.629'/>
</phase>
<phase name='emit_lir' stamp='0.629'>
<phase name='lirGeneration' stamp='0.629'>
<phase_done name='lirGeneration' stamp='0.629'/>
</phase>
<phase name='linearScan' stamp='0.629'>
<phase_done name='linearScan' stamp='0.629'/>
</phase>
<phase_done name='emit_lir' stamp='0.629'/>
</phase>
<phase name='codeemit' stamp='0.629'>
<phase_done name='codeemit' stamp='0.629'/>
</phase>
<phase name='codeinstall' stamp='0.629'>
<phase_done name='codeinstall' stamp='0.635'/>
</phase>
<code_cache total_blobs='275' nmethods='14' adapters='173' free_code_cache='250522816'/>
<task_done success='1' nmsize='344' count='1281' stamp='0.635'/>
</task>
<task compile_id='22' method='java/lang/Number &lt;init&gt; ()V' bytes='5' count='392' iicount='393' level='3' stamp='0.647'>
<phase name='buildIR' stamp='0.647'>
<type id='737' name='void'/>
<klass id='825' name='java/lang/Number' flags='1025'/>
<method id='846' holder='825' name='&lt;init&gt;' return='737' flags='1' bytes='5' iicount='430'/>
<parse method='846'  stamp='0.647'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='848' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' iicount='11788'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='825'/>
<parse_done stamp='0.647'/>
</parse>
<parse_done stamp='0.647'/>
</parse>
<phase name='optimize_blocks' stamp='0.647'>
<phase_done name='optimize_blocks' stamp='0.647'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.647'>
<phase_done name='rangeCheckElimination' stamp='0.647'/>
</phase>
<phase name='optimize_null_checks' stamp='0.647'>
<phase_done name='optimize_null_checks' stamp='0.647'/>
</phase>
<phase_done name='buildIR' stamp='0.647'/>
</phase>
<phase name='emit_lir' stamp='0.647'>
<phase name='lirGeneration' stamp='0.647'>
<phase_done name='lirGeneration' stamp='0.647'/>
</phase>
<phase name='linearScan' stamp='0.647'>
<phase_done name='linearScan' stamp='0.647'/>
</phase>
<phase_done name='emit_lir' stamp='0.647'/>
</phase>
<phase name='codeemit' stamp='0.647'>
<phase_done name='codeemit' stamp='0.647'/>
</phase>
<phase name='codeinstall' stamp='0.647'>
<dependency type='no_finalizable_subclasses' ctxk='825'/>
<phase_done name='codeinstall' stamp='0.652'/>
</phase>
<code_cache total_blobs='280' nmethods='17' adapters='176' free_code_cache='250524352'/>
<task_done success='1' nmsize='440' count='520' inlined_bytes='1' stamp='0.652'/>
</task>
<task compile_id='23' method='java/lang/Byte &lt;init&gt; (B)V' bytes='10' count='256' iicount='256' level='3' stamp='0.653'>
<phase name='buildIR' stamp='0.653'>
<type id='737' name='void'/>
<type id='733' name='byte'/>
<klass id='828' name='java/lang/Byte' flags='17'/>
<method id='846' holder='828' name='&lt;init&gt;' return='737' arguments='733' flags='1' bytes='10' iicount='256'/>
<parse method='846'  stamp='0.653'>
<bc code='183' bci='1'/>
<klass id='825' name='java/lang/Number' flags='1025'/>
<method id='848' holder='825' name='&lt;init&gt;' return='737' flags='1' bytes='5' compile_id='22' compiler='C1' level='3' iicount='610'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='850' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' iicount='11994'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.653'/>
</parse>
<parse_done stamp='0.653'/>
</parse>
<parse_done stamp='0.653'/>
</parse>
<phase name='optimize_blocks' stamp='0.653'>
<phase_done name='optimize_blocks' stamp='0.653'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.653'>
<phase_done name='rangeCheckElimination' stamp='0.653'/>
</phase>
<phase name='optimize_null_checks' stamp='0.653'>
<phase_done name='optimize_null_checks' stamp='0.653'/>
</phase>
<phase_done name='buildIR' stamp='0.653'/>
</phase>
<phase name='emit_lir' stamp='0.653'>
<phase name='lirGeneration' stamp='0.653'>
<phase_done name='lirGeneration' stamp='0.653'/>
</phase>
<phase name='linearScan' stamp='0.653'>
<phase_done name='linearScan' stamp='0.653'/>
</phase>
<phase_done name='emit_lir' stamp='0.653'/>
</phase>
<phase name='codeemit' stamp='0.653'>
<phase_done name='codeemit' stamp='0.653'/>
</phase>
<phase name='codeinstall' stamp='0.653'>
<phase_done name='codeinstall' stamp='0.668'/>
</phase>
<code_cache total_blobs='285' nmethods='19' adapters='176' free_code_cache='250501952'/>
<task_done success='1' nmsize='536' count='256' inlined_bytes='6' stamp='0.668'/>
</task>
<task compile_id='25' method='java/lang/Short &lt;init&gt; (S)V' bytes='10' count='256' iicount='256' level='3' stamp='0.701'>
<phase name='buildIR' stamp='0.701'>
<type id='737' name='void'/>
<type id='734' name='short'/>
<klass id='829' name='java/lang/Short' flags='17'/>
<method id='846' holder='829' name='&lt;init&gt;' return='737' arguments='734' flags='1' bytes='10' iicount='256'/>
<parse method='846'  stamp='0.701'>
<bc code='183' bci='1'/>
<klass id='825' name='java/lang/Number' flags='1025'/>
<method id='848' holder='825' name='&lt;init&gt;' return='737' flags='1' bytes='5' compile_id='22' compiler='C1' level='3' iicount='783'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='850' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' iicount='12294'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.701'/>
</parse>
<parse_done stamp='0.701'/>
</parse>
<parse_done stamp='0.701'/>
</parse>
<phase name='optimize_blocks' stamp='0.701'>
<phase_done name='optimize_blocks' stamp='0.701'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.701'>
<phase_done name='rangeCheckElimination' stamp='0.701'/>
</phase>
<phase name='optimize_null_checks' stamp='0.701'>
<phase_done name='optimize_null_checks' stamp='0.701'/>
</phase>
<phase_done name='buildIR' stamp='0.701'/>
</phase>
<phase name='emit_lir' stamp='0.701'>
<phase name='lirGeneration' stamp='0.701'>
<phase_done name='lirGeneration' stamp='0.701'/>
</phase>
<phase name='linearScan' stamp='0.701'>
<phase_done name='linearScan' stamp='0.701'/>
</phase>
<phase_done name='emit_lir' stamp='0.701'/>
</phase>
<phase name='codeemit' stamp='0.701'>
<phase_done name='codeemit' stamp='0.701'/>
</phase>
<phase name='codeinstall' stamp='0.701'>
<phase_done name='codeinstall' stamp='0.706'/>
</phase>
<code_cache total_blobs='286' nmethods='22' adapters='176' free_code_cache='250509440'/>
<task_done success='1' nmsize='536' count='256' inlined_bytes='6' stamp='0.706'/>
</task>
<task compile_id='28' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1793' iicount='1793' level='3' stamp='0.710'>
<phase name='buildIR' stamp='0.721'>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='807' name='append' return='807' arguments='743' flags='1' bytes='50' iicount='1793'/>
<parse method='846'  stamp='0.721'>
<bc code='183' bci='5'/>
<method id='848' holder='807' name='appendNull' return='807' flags='2' bytes='56' iicount='1'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='735' name='int'/>
<method id='850' holder='743' name='length' return='735' flags='1' bytes='6' compile_id='4' compiler='C2' level='4' iicount='31979'/>
<call method='850' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.721'/>
</parse>
<bc code='183' bci='21'/>
<type id='737' name='void'/>
<method id='852' holder='807' name='ensureCapacityInternal' return='737' arguments='735' flags='2' bytes='27' compile_id='6' compiler='C2' level='4' iicount='36330'/>
<call method='852' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='183' bci='17'/>
<method id='854' holder='807' name='newCapacity' return='735' arguments='735' flags='2' bytes='39' iicount='734'/>
<call method='854' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='856' name='java/util/Arrays' flags='1'/>
<method id='857' holder='856' name='copyOf' return='835' arguments='835 735' flags='9' bytes='19' compile_id='5' compiler='C1' level='3' iicount='794'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='184' bci='11'/>
<klass id='859' name='java/lang/Math' flags='17'/>
<method id='860' holder='859' name='min' return='735' arguments='735 735' flags='9' bytes='11' iicount='5774'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<parse_done stamp='0.721'/>
</parse>
<bc code='184' bci='14'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='862' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='862' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.721'/>
</parse>
<parse_done stamp='0.721'/>
</parse>
<bc code='182' bci='35'/>
<method id='864' holder='743' name='getChars' return='737' arguments='735 735 835 735' flags='1' bytes='62' iicount='1863'/>
<call method='864' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.721'/>
</parse>
<phase name='optimize_blocks' stamp='0.721'>
<phase_done name='optimize_blocks' stamp='0.721'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.721'>
<phase_done name='rangeCheckElimination' stamp='0.721'/>
</phase>
<phase name='optimize_null_checks' stamp='0.721'>
<phase_done name='optimize_null_checks' stamp='0.721'/>
</phase>
<phase_done name='buildIR' stamp='0.721'/>
</phase>
<phase name='emit_lir' stamp='0.721'>
<phase name='lirGeneration' stamp='0.721'>
<phase_done name='lirGeneration' stamp='0.721'/>
</phase>
<phase name='linearScan' stamp='0.721'>
<phase_done name='linearScan' stamp='0.722'/>
</phase>
<phase_done name='emit_lir' stamp='0.722'/>
</phase>
<phase name='codeemit' stamp='0.722'>
<phase_done name='codeemit' stamp='0.722'/>
</phase>
<phase name='codeinstall' stamp='0.722'>
<phase_done name='codeinstall' stamp='0.744'/>
</phase>
<code_cache total_blobs='289' nmethods='27' adapters='176' free_code_cache='250512576'/>
<task_done success='1' nmsize='1888' count='1793' inlined_bytes='63' stamp='0.744'/>
</task>
<task compile_id='31' method='java/lang/ref/ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='385' iicount='385' level='3' stamp='0.744'>
<phase name='buildIR' stamp='0.744'>
<klass id='768' name='java/lang/ref/Reference' flags='1025'/>
<klass id='775' name='java/lang/ref/ReferenceQueue' flags='1'/>
<method id='846' holder='775' name='poll' return='768' flags='1' bytes='28' iicount='385'/>
<parse method='846'  stamp='0.744'>
<bc code='183' bci='17'/>
<method id='849' holder='775' name='reallyPoll' return='768' flags='2' bytes='65' iicount='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.746'/>
</parse>
<phase name='optimize_blocks' stamp='0.746'>
<phase_done name='optimize_blocks' stamp='0.747'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.747'>
<phase_done name='rangeCheckElimination' stamp='0.747'/>
</phase>
<phase name='optimize_null_checks' stamp='0.747'>
<phase_done name='optimize_null_checks' stamp='0.747'/>
</phase>
<phase_done name='buildIR' stamp='0.747'/>
</phase>
<phase name='emit_lir' stamp='0.747'>
<phase name='lirGeneration' stamp='0.747'>
<phase_done name='lirGeneration' stamp='0.747'/>
</phase>
<phase name='linearScan' stamp='0.747'>
<phase_done name='linearScan' stamp='0.747'/>
</phase>
<phase_done name='emit_lir' stamp='0.747'/>
</phase>
<phase name='codeemit' stamp='0.747'>
<phase_done name='codeemit' stamp='0.747'/>
</phase>
<phase name='codeinstall' stamp='0.747'>
<phase_done name='codeinstall' stamp='0.759'/>
</phase>
<code_cache total_blobs='294' nmethods='30' adapters='178' free_code_cache='250508160'/>
<task_done success='1' nmsize='912' count='388' stamp='0.759'/>
</task>
<task compile_id='29' method='java/lang/Long &lt;init&gt; (J)V' bytes='10' count='256' iicount='256' level='3' stamp='0.759'>
<phase name='buildIR' stamp='0.759'>
<type id='737' name='void'/>
<type id='736' name='long'/>
<klass id='831' name='java/lang/Long' flags='17'/>
<method id='846' holder='831' name='&lt;init&gt;' return='737' arguments='736' flags='1' bytes='10' iicount='256'/>
<parse method='846'  stamp='0.759'>
<bc code='183' bci='1'/>
<klass id='825' name='java/lang/Number' flags='1025'/>
<method id='848' holder='825' name='&lt;init&gt;' return='737' flags='1' bytes='5' compile_id='22' compiler='C1' level='3' iicount='1034'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='850' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='12554'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.760'/>
</parse>
<parse_done stamp='0.760'/>
</parse>
<parse_done stamp='0.760'/>
</parse>
<phase name='optimize_blocks' stamp='0.760'>
<phase_done name='optimize_blocks' stamp='0.760'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.760'>
<phase_done name='rangeCheckElimination' stamp='0.760'/>
</phase>
<phase name='optimize_null_checks' stamp='0.760'>
<phase_done name='optimize_null_checks' stamp='0.760'/>
</phase>
<phase_done name='buildIR' stamp='0.760'/>
</phase>
<phase name='emit_lir' stamp='0.760'>
<phase name='lirGeneration' stamp='0.760'>
<phase_done name='lirGeneration' stamp='0.760'/>
</phase>
<phase name='linearScan' stamp='0.760'>
<phase_done name='linearScan' stamp='0.760'/>
</phase>
<phase_done name='emit_lir' stamp='0.760'/>
</phase>
<phase name='codeemit' stamp='0.760'>
<phase_done name='codeemit' stamp='0.760'/>
</phase>
<phase name='codeinstall' stamp='0.760'>
<phase_done name='codeinstall' stamp='0.765'/>
</phase>
<code_cache total_blobs='296' nmethods='31' adapters='179' free_code_cache='250506496'/>
<task_done success='1' nmsize='536' count='256' inlined_bytes='6' stamp='0.765'/>
</task>
<task compile_id='30' method='java/lang/Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='136' iicount='136' level='1' stamp='0.765'>
<phase name='buildIR' stamp='0.765'>
<klass id='746' name='java/lang/ClassLoader' flags='1025'/>
<klass id='744' name='java/lang/Class' flags='17'/>
<method id='846' holder='744' name='getClassLoader0' return='746' flags='0' bytes='5' iicount='136'/>
<parse method='846'  stamp='0.765'>
<parse_done stamp='0.765'/>
</parse>
<phase name='optimize_blocks' stamp='0.765'>
<phase_done name='optimize_blocks' stamp='0.765'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.765'>
<phase_done name='rangeCheckElimination' stamp='0.765'/>
</phase>
<phase name='optimize_null_checks' stamp='0.765'>
<phase_done name='optimize_null_checks' stamp='0.765'/>
</phase>
<phase_done name='buildIR' stamp='0.765'/>
</phase>
<phase name='emit_lir' stamp='0.765'>
<phase name='lirGeneration' stamp='0.765'>
<phase_done name='lirGeneration' stamp='0.765'/>
</phase>
<phase name='linearScan' stamp='0.765'>
<phase_done name='linearScan' stamp='0.765'/>
</phase>
<phase_done name='emit_lir' stamp='0.765'/>
</phase>
<phase name='codeemit' stamp='0.765'>
<phase_done name='codeemit' stamp='0.765'/>
</phase>
<phase name='codeinstall' stamp='0.765'>
<phase_done name='codeinstall' stamp='0.771'/>
</phase>
<code_cache total_blobs='299' nmethods='33' adapters='180' free_code_cache='250504064'/>
<task_done success='1' nmsize='280' count='136' stamp='0.771'/>
</task>
<task compile_id='34' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='771' iicount='771' level='3' stamp='0.772'>
<phase name='buildIR' stamp='0.772'>
<type id='737' name='void'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='775' name='java/lang/ref/ReferenceQueue' flags='1'/>
<klass id='768' name='java/lang/ref/Reference' flags='1025'/>
<method id='846' holder='768' name='&lt;init&gt;' return='737' arguments='742 775' flags='0' bytes='25' iicount='771'/>
<parse method='846'  stamp='0.772'>
<bc code='183' bci='1'/>
<method id='848' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='12554'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='768'/>
<parse_done stamp='0.772'/>
</parse>
<parse_done stamp='0.772'/>
</parse>
<phase name='optimize_blocks' stamp='0.772'>
<phase_done name='optimize_blocks' stamp='0.772'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.772'>
<phase_done name='rangeCheckElimination' stamp='0.772'/>
</phase>
<phase name='optimize_null_checks' stamp='0.772'>
<phase_done name='optimize_null_checks' stamp='0.772'/>
</phase>
<phase_done name='buildIR' stamp='0.772'/>
</phase>
<phase name='emit_lir' stamp='0.772'>
<phase name='lirGeneration' stamp='0.772'>
<phase_done name='lirGeneration' stamp='0.772'/>
</phase>
<phase name='linearScan' stamp='0.772'>
<phase_done name='linearScan' stamp='0.772'/>
</phase>
<phase_done name='emit_lir' stamp='0.772'/>
</phase>
<phase name='codeemit' stamp='0.772'>
<phase_done name='codeemit' stamp='0.772'/>
</phase>
<phase name='codeinstall' stamp='0.772'>
<dependency type='no_finalizable_subclasses' ctxk='768'/>
<phase_done name='codeinstall' stamp='0.780'/>
</phase>
<code_cache total_blobs='300' nmethods='34' adapters='180' free_code_cache='250502784'/>
<task_done success='1' nmsize='600' count='778' inlined_bytes='1' stamp='0.780'/>
</task>
<task compile_id='35' method='java/lang/Class getName ()Ljava/lang/String;' bytes='21' count='384' iicount='384' level='3' stamp='0.780'>
<phase name='buildIR' stamp='0.780'>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='744' name='java/lang/Class' flags='17'/>
<method id='846' holder='744' name='getName' return='743' flags='1' bytes='21' iicount='384'/>
<parse method='846'  stamp='0.780'>
<bc code='183' bci='11'/>
<method id='848' holder='744' name='getName0' return='743' flags='258' bytes='0' iicount='41'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='native method'/>
<parse_done stamp='0.780'/>
</parse>
<phase name='optimize_blocks' stamp='0.780'>
<phase_done name='optimize_blocks' stamp='0.780'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.780'>
<phase_done name='rangeCheckElimination' stamp='0.780'/>
</phase>
<phase name='optimize_null_checks' stamp='0.780'>
<phase_done name='optimize_null_checks' stamp='0.780'/>
</phase>
<phase_done name='buildIR' stamp='0.780'/>
</phase>
<phase name='emit_lir' stamp='0.780'>
<phase name='lirGeneration' stamp='0.780'>
<phase_done name='lirGeneration' stamp='0.781'/>
</phase>
<phase name='linearScan' stamp='0.781'>
<phase_done name='linearScan' stamp='0.781'/>
</phase>
<phase_done name='emit_lir' stamp='0.781'/>
</phase>
<phase name='codeemit' stamp='0.781'>
<phase_done name='codeemit' stamp='0.781'/>
</phase>
<phase name='codeinstall' stamp='0.781'>
<phase_done name='codeinstall' stamp='0.787'/>
</phase>
<code_cache total_blobs='301' nmethods='35' adapters='180' free_code_cache='250501632'/>
<task_done success='1' nmsize='528' count='391' stamp='0.787'/>
</task>
<task compile_id='37' method='java/lang/String lastIndexOf (II)I' bytes='52' count='356' backedge_count='26654' iicount='356' level='3' stamp='0.789'>
<phase name='buildIR' stamp='0.789'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='lastIndexOf' return='735' arguments='735 735' flags='1' bytes='52' iicount='356'/>
<parse method='846'  stamp='0.789'>
<bc code='184' bci='16'/>
<klass id='848' name='java/lang/Math' flags='17'/>
<method id='849' holder='848' name='min' return='735' arguments='735 735' flags='9' bytes='11' compile_id='1' compiler='C2' level='4' iicount='5777'/>
<call method='849' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='0.789'/>
</parse>
<bc code='183' bci='48'/>
<method id='851' holder='743' name='lastIndexOfSupplementary' return='735' arguments='735 735' flags='2' bytes='70' iicount='1'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.790'/>
</parse>
<phase name='optimize_blocks' stamp='0.790'>
<phase_done name='optimize_blocks' stamp='0.790'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.790'>
<phase_done name='rangeCheckElimination' stamp='0.790'/>
</phase>
<phase name='optimize_null_checks' stamp='0.790'>
<phase_done name='optimize_null_checks' stamp='0.790'/>
</phase>
<phase_done name='buildIR' stamp='0.790'/>
</phase>
<phase name='emit_lir' stamp='0.790'>
<phase name='lirGeneration' stamp='0.790'>
<phase_done name='lirGeneration' stamp='0.790'/>
</phase>
<phase name='linearScan' stamp='0.790'>
<phase_done name='linearScan' stamp='0.790'/>
</phase>
<phase_done name='emit_lir' stamp='0.790'/>
</phase>
<phase name='codeemit' stamp='0.790'>
<phase_done name='codeemit' stamp='0.790'/>
</phase>
<phase name='codeinstall' stamp='0.790'>
<phase_done name='codeinstall' stamp='0.804'/>
</phase>
<code_cache total_blobs='306' nmethods='37' adapters='182' free_code_cache='250492864'/>
<task_done success='1' nmsize='944' count='356' backedge_count='26654' inlined_bytes='11' stamp='0.804'/>
</task>
<task compile_id='39' method='java/lang/reflect/Method getName ()Ljava/lang/String;' bytes='5' count='215' iicount='215' level='1' stamp='0.816'>
<phase name='buildIR' stamp='0.816'>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='785' name='java/lang/reflect/Method' flags='17'/>
<method id='846' holder='785' name='getName' return='743' flags='1' bytes='5' iicount='261'/>
<parse method='846'  stamp='0.816'>
<parse_done stamp='0.816'/>
</parse>
<phase name='optimize_blocks' stamp='0.816'>
<phase_done name='optimize_blocks' stamp='0.816'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.816'>
<phase_done name='rangeCheckElimination' stamp='0.816'/>
</phase>
<phase name='optimize_null_checks' stamp='0.816'>
<phase_done name='optimize_null_checks' stamp='0.816'/>
</phase>
<phase_done name='buildIR' stamp='0.816'/>
</phase>
<phase name='emit_lir' stamp='0.816'>
<phase name='lirGeneration' stamp='0.816'>
<phase_done name='lirGeneration' stamp='0.816'/>
</phase>
<phase name='linearScan' stamp='0.816'>
<phase_done name='linearScan' stamp='0.816'/>
</phase>
<phase_done name='emit_lir' stamp='0.816'/>
</phase>
<phase name='codeemit' stamp='0.816'>
<phase_done name='codeemit' stamp='0.816'/>
</phase>
<phase name='codeinstall' stamp='0.816'>
<phase_done name='codeinstall' stamp='0.820'/>
</phase>
<code_cache total_blobs='307' nmethods='39' adapters='182' free_code_cache='250495424'/>
<task_done success='1' nmsize='280' count='372' stamp='0.820'/>
</task>
<task compile_id='41' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='182' backedge_count='13349' iicount='182' level='3' stamp='0.824'>
<phase name='buildIR' stamp='0.824'>
<klass id='743' name='java/lang/String' flags='17'/>
<type id='730' name='char'/>
<method id='846' holder='743' name='replace' return='743' arguments='730 730' flags='1' bytes='127' iicount='182'/>
<parse method='846'  stamp='0.824'>
<bc code='183' bci='121'/>
<type id='737' name='void'/>
<klass id='835' name='[C' flags='1041'/>
<type id='729' name='boolean'/>
<method id='848' holder='743' name='&lt;init&gt;' return='737' arguments='835 729' flags='0' bytes='10' iicount='707'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='850' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='12582'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.824'/>
</parse>
<parse_done stamp='0.824'/>
</parse>
<parse_done stamp='0.824'/>
</parse>
<phase name='optimize_blocks' stamp='0.824'>
<phase_done name='optimize_blocks' stamp='0.824'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.824'>
<phase_done name='rangeCheckElimination' stamp='0.824'/>
</phase>
<phase name='optimize_null_checks' stamp='0.824'>
<phase_done name='optimize_null_checks' stamp='0.824'/>
</phase>
<phase_done name='buildIR' stamp='0.824'/>
</phase>
<phase name='emit_lir' stamp='0.824'>
<phase name='lirGeneration' stamp='0.824'>
<phase_done name='lirGeneration' stamp='0.824'/>
</phase>
<phase name='linearScan' stamp='0.824'>
<phase_done name='linearScan' stamp='0.824'/>
</phase>
<phase_done name='emit_lir' stamp='0.824'/>
</phase>
<phase name='codeemit' stamp='0.824'>
<phase_done name='codeemit' stamp='0.824'/>
</phase>
<phase name='codeinstall' stamp='0.824'>
<phase_done name='codeinstall' stamp='0.847'/>
</phase>
<code_cache total_blobs='314' nmethods='41' adapters='187' free_code_cache='250488832'/>
<task_done success='1' nmsize='1720' count='182' backedge_count='13349' inlined_bytes='11' stamp='0.847'/>
</task>
<task compile_id='44' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2304' iicount='2304' level='3' stamp='0.860'>
<phase name='buildIR' stamp='0.860'>
<klass id='835' name='[C' flags='1041'/>
<type id='735' name='int'/>
<klass id='846' name='java/util/Arrays' flags='1'/>
<method id='847' holder='846' name='copyOfRange' return='835' arguments='835 735 735' flags='9' bytes='63' iicount='2305'/>
<parse method='847'  stamp='0.860'>
<bc code='183' bci='16'/>
<type id='737' name='void'/>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<method id='850' holder='809' name='&lt;init&gt;' return='737' flags='1' bytes='7' iicount='587'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='3'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='852' holder='807' name='&lt;init&gt;' return='737' arguments='735' flags='0' bytes='12' iicount='1123'/>
<call method='852' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='854' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='12607'/>
<call method='854' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<parse_done stamp='0.860'/>
</parse>
<parse_done stamp='0.860'/>
</parse>
<parse_done stamp='0.860'/>
</parse>
<bc code='182' bci='20'/>
<method id='856' holder='809' name='append' return='809' arguments='735' flags='1' bytes='8' iicount='6'/>
<call method='856' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<bc code='183' bci='2'/>
<method id='858' holder='807' name='append' return='807' arguments='735' flags='1' bytes='62' iicount='6'/>
<call method='858' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.860'/>
</parse>
<bc code='182' bci='25'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='861' holder='809' name='append' return='809' arguments='743' flags='1' bytes='8' iicount='1405'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='2'/>
<method id='863' holder='807' name='append' return='807' arguments='743' flags='1' bytes='50' compile_id='28' compiler='C1' level='3' iicount='1834'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.860'/>
</parse>
<bc code='182' bci='29'/>
<call method='856' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<bc code='183' bci='2'/>
<call method='858' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.860'/>
</parse>
<bc code='182' bci='32'/>
<method id='865' holder='809' name='toString' return='743' flags='1' bytes='17' iicount='595'/>
<call method='865' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='865'>
<bc code='183' bci='13'/>
<method id='867' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' iicount='1787'/>
<call method='867' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.860'/>
</parse>
<bc code='183' bci='35'/>
<klass id='849' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='869' holder='849' name='&lt;init&gt;' return='737' arguments='743' flags='1' bytes='6' iicount='1'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='871' name='java/lang/Math' flags='17'/>
<method id='872' holder='871' name='min' return='735' arguments='735 735' flags='9' bytes='11' compile_id='1' compiler='C2' level='4' iicount='5819'/>
<call method='872' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='872'>
<parse_done stamp='0.861'/>
</parse>
<bc code='184' bci='57'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='874' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='874' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.861'/>
</parse>
<phase name='optimize_blocks' stamp='0.861'>
<phase_done name='optimize_blocks' stamp='0.861'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.861'>
<phase_done name='rangeCheckElimination' stamp='0.861'/>
</phase>
<phase name='optimize_null_checks' stamp='0.861'>
<phase_done name='optimize_null_checks' stamp='0.861'/>
</phase>
<phase_done name='buildIR' stamp='0.861'/>
</phase>
<phase name='emit_lir' stamp='0.861'>
<phase name='lirGeneration' stamp='0.861'>
<phase_done name='lirGeneration' stamp='0.861'/>
</phase>
<phase name='linearScan' stamp='0.861'>
<phase_done name='linearScan' stamp='0.861'/>
</phase>
<phase_done name='emit_lir' stamp='0.861'/>
</phase>
<phase name='codeemit' stamp='0.861'>
<phase_done name='codeemit' stamp='0.861'/>
</phase>
<phase name='codeinstall' stamp='0.861'>
<phase_done name='codeinstall' stamp='0.895'/>
</phase>
<code_cache total_blobs='319' nmethods='45' adapters='188' free_code_cache='250481344'/>
<task_done success='1' nmsize='2880' count='2310' inlined_bytes='72' stamp='0.895'/>
</task>
<task compile_id='46' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='1408' iicount='1408' level='3' stamp='0.895'>
<phase name='buildIR' stamp='0.895'>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='809' name='append' return='809' arguments='743' flags='1' bytes='8' iicount='1408'/>
<parse method='846'  stamp='0.895'>
<bc code='183' bci='2'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='848' holder='807' name='append' return='807' arguments='743' flags='1' bytes='50' compile_id='28' compiler='C1' level='3' iicount='1837'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.895'/>
</parse>
<phase name='optimize_blocks' stamp='0.895'>
<phase_done name='optimize_blocks' stamp='0.895'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.895'>
<phase_done name='rangeCheckElimination' stamp='0.895'/>
</phase>
<phase name='optimize_null_checks' stamp='0.895'>
<phase_done name='optimize_null_checks' stamp='0.895'/>
</phase>
<phase_done name='buildIR' stamp='0.895'/>
</phase>
<phase name='emit_lir' stamp='0.895'>
<phase name='lirGeneration' stamp='0.896'>
<phase_done name='lirGeneration' stamp='0.896'/>
</phase>
<phase name='linearScan' stamp='0.896'>
<phase_done name='linearScan' stamp='0.896'/>
</phase>
<phase_done name='emit_lir' stamp='0.896'/>
</phase>
<phase name='codeemit' stamp='0.896'>
<phase_done name='codeemit' stamp='0.896'/>
</phase>
<phase name='codeinstall' stamp='0.896'>
<phase_done name='codeinstall' stamp='0.901'/>
</phase>
<code_cache total_blobs='320' nmethods='46' adapters='188' free_code_cache='250480384'/>
<task_done success='1' nmsize='400' count='1414' stamp='0.901'/>
</task>
<task compile_id='47' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='1796' iicount='1796' level='3' stamp='0.901'>
<phase name='buildIR' stamp='0.901'>
<type id='737' name='void'/>
<klass id='835' name='[C' flags='1041'/>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' iicount='1797'/>
<parse method='846'  stamp='0.901'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='848' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='12621'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='0.901'/>
</parse>
<bc code='183' bci='13'/>
<klass id='850' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='851' holder='850' name='&lt;init&gt;' return='737' arguments='735' unloaded='1'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='853' name='java/util/Arrays' flags='1'/>
<method id='854' holder='853' name='copyOfRange' return='835' arguments='835 735 735' flags='9' bytes='63' compile_id='44' compiler='C1' level='3' iicount='2321'/>
<call method='854' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.901'/>
</parse>
<phase name='optimize_blocks' stamp='0.901'>
<phase_done name='optimize_blocks' stamp='0.901'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.901'>
<phase_done name='rangeCheckElimination' stamp='0.901'/>
</phase>
<phase name='optimize_null_checks' stamp='0.901'>
<phase_done name='optimize_null_checks' stamp='0.901'/>
</phase>
<phase_done name='buildIR' stamp='0.901'/>
</phase>
<phase name='emit_lir' stamp='0.901'>
<phase name='lirGeneration' stamp='0.901'>
<phase_done name='lirGeneration' stamp='0.901'/>
</phase>
<phase name='linearScan' stamp='0.901'>
<phase_done name='linearScan' stamp='0.902'/>
</phase>
<phase_done name='emit_lir' stamp='0.902'/>
</phase>
<phase name='codeemit' stamp='0.902'>
<phase_done name='codeemit' stamp='0.902'/>
</phase>
<phase name='codeinstall' stamp='0.902'>
<phase_done name='codeinstall' stamp='0.922'/>
</phase>
<code_cache total_blobs='322' nmethods='48' adapters='188' free_code_cache='250477248'/>
<task_done success='1' nmsize='1280' count='1804' inlined_bytes='1' stamp='0.922'/>
</task>
<task compile_id='50' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='387' backedge_count='27692' iicount='387' level='3' stamp='0.922'>
<phase name='buildIR' stamp='0.922'>
<type id='735' name='int'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='indexOf' return='735' arguments='835 735 735 835 735 735 735' flags='8' bytes='166' iicount='387'/>
<parse method='846'  stamp='0.922'>
<parse_done stamp='0.922'/>
</parse>
<phase name='optimize_blocks' stamp='0.922'>
<phase_done name='optimize_blocks' stamp='0.922'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.922'>
<phase_done name='rangeCheckElimination' stamp='0.922'/>
</phase>
<phase name='optimize_null_checks' stamp='0.922'>
<phase_done name='optimize_null_checks' stamp='0.922'/>
</phase>
<phase_done name='buildIR' stamp='0.922'/>
</phase>
<phase name='emit_lir' stamp='0.922'>
<phase name='lirGeneration' stamp='0.922'>
<phase_done name='lirGeneration' stamp='0.922'/>
</phase>
<phase name='linearScan' stamp='0.922'>
<phase_done name='linearScan' stamp='0.923'/>
</phase>
<phase_done name='emit_lir' stamp='0.923'/>
</phase>
<phase name='codeemit' stamp='0.923'>
<phase_done name='codeemit' stamp='0.923'/>
</phase>
<phase name='codeinstall' stamp='0.923'>
<phase_done name='codeinstall' stamp='0.940'/>
</phase>
<code_cache total_blobs='324' nmethods='50' adapters='188' free_code_cache='250473600'/>
<task_done success='1' nmsize='1624' count='391' backedge_count='27810' stamp='0.940'/>
</task>
<task compile_id='53' method='java/lang/String getChars (II[CI)V' bytes='62' count='1930' iicount='1930' level='3' stamp='0.940'>
<phase name='buildIR' stamp='0.940'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='getChars' return='737' arguments='735 735 835 735' flags='1' bytes='62' iicount='1930'/>
<parse method='846'  stamp='0.940'>
<bc code='183' bci='9'/>
<klass id='848' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='849' holder='848' name='&lt;init&gt;' return='737' arguments='735' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='850' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.941'/>
</parse>
<phase name='optimize_blocks' stamp='0.941'>
<phase_done name='optimize_blocks' stamp='0.941'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.941'>
<phase_done name='rangeCheckElimination' stamp='0.941'/>
</phase>
<phase name='optimize_null_checks' stamp='0.941'>
<phase_done name='optimize_null_checks' stamp='0.941'/>
</phase>
<phase_done name='buildIR' stamp='0.941'/>
</phase>
<phase name='emit_lir' stamp='0.941'>
<phase name='lirGeneration' stamp='0.941'>
<phase_done name='lirGeneration' stamp='0.941'/>
</phase>
<phase name='linearScan' stamp='0.941'>
<phase_done name='linearScan' stamp='0.941'/>
</phase>
<phase_done name='emit_lir' stamp='0.941'/>
</phase>
<phase name='codeemit' stamp='0.941'>
<phase_done name='codeemit' stamp='0.941'/>
</phase>
<phase name='codeinstall' stamp='0.941'>
<phase_done name='codeinstall' stamp='0.953'/>
</phase>
<code_cache total_blobs='325' nmethods='51' adapters='188' free_code_cache='250471296'/>
<task_done success='1' nmsize='1088' count='1930' stamp='0.954'/>
</task>
<task compile_id='51' method='java/lang/String lastIndexOf (I)I' bytes='13' count='417' iicount='417' level='3' stamp='0.954'>
<phase name='buildIR' stamp='0.954'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='lastIndexOf' return='735' arguments='735' flags='1' bytes='13' iicount='417'/>
<parse method='846'  stamp='0.954'>
<bc code='182' bci='9'/>
<method id='848' holder='743' name='lastIndexOf' return='735' arguments='735 735' flags='1' bytes='52' compile_id='37' compiler='C1' level='3' iicount='420'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.954'/>
</parse>
<phase name='optimize_blocks' stamp='0.954'>
<phase_done name='optimize_blocks' stamp='0.954'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.954'>
<phase_done name='rangeCheckElimination' stamp='0.954'/>
</phase>
<phase name='optimize_null_checks' stamp='0.954'>
<phase_done name='optimize_null_checks' stamp='0.954'/>
</phase>
<phase_done name='buildIR' stamp='0.954'/>
</phase>
<phase name='emit_lir' stamp='0.954'>
<phase name='lirGeneration' stamp='0.954'>
<phase_done name='lirGeneration' stamp='0.954'/>
</phase>
<phase name='linearScan' stamp='0.954'>
<phase_done name='linearScan' stamp='0.954'/>
</phase>
<phase_done name='emit_lir' stamp='0.954'/>
</phase>
<phase name='codeemit' stamp='0.954'>
<phase_done name='codeemit' stamp='0.954'/>
</phase>
<phase name='codeinstall' stamp='0.954'>
<phase_done name='codeinstall' stamp='0.959'/>
</phase>
<code_cache total_blobs='326' nmethods='52' adapters='188' free_code_cache='250470144'/>
<task_done success='1' nmsize='560' count='423' stamp='0.959'/>
</task>
<task compile_id='56' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='645' iicount='645' level='1' stamp='0.959'>
<phase name='buildIR' stamp='0.959'>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='768' name='java/lang/ref/Reference' flags='1025'/>
<method id='846' holder='768' name='get' return='742' flags='1' bytes='5' iicount='645'/>
<parse method='846'  stamp='0.959'>
<parse_done stamp='0.959'/>
</parse>
<phase name='optimize_blocks' stamp='0.959'>
<phase_done name='optimize_blocks' stamp='0.959'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.959'>
<phase_done name='rangeCheckElimination' stamp='0.959'/>
</phase>
<phase name='optimize_null_checks' stamp='0.959'>
<phase_done name='optimize_null_checks' stamp='0.959'/>
</phase>
<phase_done name='buildIR' stamp='0.959'/>
</phase>
<phase name='emit_lir' stamp='0.959'>
<phase name='lirGeneration' stamp='0.959'>
<phase_done name='lirGeneration' stamp='0.959'/>
</phase>
<phase name='linearScan' stamp='0.959'>
<phase_done name='linearScan' stamp='0.959'/>
</phase>
<phase_done name='emit_lir' stamp='0.959'/>
</phase>
<phase name='codeemit' stamp='0.959'>
<phase_done name='codeemit' stamp='0.959'/>
</phase>
<phase name='codeinstall' stamp='0.959'>
<phase_done name='codeinstall' stamp='0.963'/>
</phase>
<code_cache total_blobs='327' nmethods='53' adapters='188' free_code_cache='250469440'/>
<task_done success='1' nmsize='280' count='645' stamp='0.963'/>
</task>
<task compile_id='57' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='1152' iicount='1152' level='3' stamp='0.963'>
<phase name='buildIR' stamp='0.963'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='807' name='&lt;init&gt;' return='737' arguments='735' flags='0' bytes='12' iicount='1152'/>
<parse method='846'  stamp='0.963'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='848' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='12688'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='807'/>
<parse_done stamp='0.963'/>
</parse>
<parse_done stamp='0.963'/>
</parse>
<phase name='optimize_blocks' stamp='0.963'>
<phase_done name='optimize_blocks' stamp='0.963'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.963'>
<phase_done name='rangeCheckElimination' stamp='0.963'/>
</phase>
<phase name='optimize_null_checks' stamp='0.963'>
<phase_done name='optimize_null_checks' stamp='0.963'/>
</phase>
<phase_done name='buildIR' stamp='0.963'/>
</phase>
<phase name='emit_lir' stamp='0.963'>
<phase name='lirGeneration' stamp='0.963'>
<phase_done name='lirGeneration' stamp='0.963'/>
</phase>
<phase name='linearScan' stamp='0.963'>
<phase_done name='linearScan' stamp='0.963'/>
</phase>
<phase_done name='emit_lir' stamp='0.963'/>
</phase>
<phase name='codeemit' stamp='0.963'>
<phase_done name='codeemit' stamp='0.963'/>
</phase>
<phase name='codeinstall' stamp='0.963'>
<dependency type='no_finalizable_subclasses' ctxk='807'/>
<phase_done name='codeinstall' stamp='0.971'/>
</phase>
<code_cache total_blobs='328' nmethods='54' adapters='188' free_code_cache='250468224'/>
<task_done success='1' nmsize='600' count='1160' inlined_bytes='1' stamp='0.971'/>
</task>
<task compile_id='58' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='773' iicount='773' level='3' stamp='0.971'>
<phase name='buildIR' stamp='0.971'>
<type id='735' name='int'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='807' name='newCapacity' return='735' arguments='735' flags='2' bytes='39' iicount='773'/>
<parse method='846'  stamp='0.971'>
<bc code='183' bci='31'/>
<method id='848' holder='807' name='hugeCapacity' return='735' arguments='735' flags='2' bytes='28' iicount='1'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='11'/>
<type id='737' name='void'/>
<klass id='765' name='java/lang/OutOfMemoryError' flags='1'/>
<method id='850' holder='765' name='&lt;init&gt;' return='737' flags='1' bytes='5' iicount='1'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.971'/>
</parse>
<parse_done stamp='0.971'/>
</parse>
<phase name='optimize_blocks' stamp='0.971'>
<phase_done name='optimize_blocks' stamp='0.971'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.971'>
<phase_done name='rangeCheckElimination' stamp='0.971'/>
</phase>
<phase name='optimize_null_checks' stamp='0.971'>
<phase_done name='optimize_null_checks' stamp='0.971'/>
</phase>
<phase_done name='buildIR' stamp='0.971'/>
</phase>
<phase name='emit_lir' stamp='0.971'>
<phase name='lirGeneration' stamp='0.971'>
<phase_done name='lirGeneration' stamp='0.971'/>
</phase>
<phase name='linearScan' stamp='0.971'>
<phase_done name='linearScan' stamp='0.972'/>
</phase>
<phase_done name='emit_lir' stamp='0.972'/>
</phase>
<phase name='codeemit' stamp='0.972'>
<phase_done name='codeemit' stamp='0.972'/>
</phase>
<phase name='codeinstall' stamp='0.972'>
<phase_done name='codeinstall' stamp='0.981'/>
</phase>
<code_cache total_blobs='329' nmethods='55' adapters='188' free_code_cache='250466176'/>
<task_done success='1' nmsize='1008' count='776' inlined_bytes='28' stamp='0.981'/>
</task>
<task compile_id='49' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='408' iicount='408' level='3' stamp='0.981'>
<phase name='buildIR' stamp='0.981'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='indexOf' return='735' arguments='743 735' flags='1' bytes='25' iicount='408'/>
<parse method='846'  stamp='0.981'>
<bc code='184' bci='21'/>
<klass id='835' name='[C' flags='1041'/>
<method id='848' holder='743' name='indexOf' return='735' arguments='835 735 735 835 735 735 735' flags='8' bytes='166' compile_id='50' compiler='C1' level='3' iicount='409'/>
<call method='848' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.981'/>
</parse>
<phase name='optimize_blocks' stamp='0.981'>
<phase_done name='optimize_blocks' stamp='0.981'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.981'>
<phase_done name='rangeCheckElimination' stamp='0.981'/>
</phase>
<phase name='optimize_null_checks' stamp='0.981'>
<phase_done name='optimize_null_checks' stamp='0.981'/>
</phase>
<phase_done name='buildIR' stamp='0.981'/>
</phase>
<phase name='emit_lir' stamp='0.981'>
<phase name='lirGeneration' stamp='0.981'>
<phase_done name='lirGeneration' stamp='0.981'/>
</phase>
<phase name='linearScan' stamp='0.981'>
<phase_done name='linearScan' stamp='0.981'/>
</phase>
<phase_done name='emit_lir' stamp='0.981'/>
</phase>
<phase name='codeemit' stamp='0.981'>
<phase_done name='codeemit' stamp='0.982'/>
</phase>
<phase name='codeinstall' stamp='0.982'>
<phase_done name='codeinstall' stamp='0.987'/>
</phase>
<code_cache total_blobs='331' nmethods='56' adapters='189' free_code_cache='250464448'/>
<task_done success='1' nmsize='464' count='409' stamp='0.987'/>
</task>
<task compile_id='48' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='537' iicount='537' level='3' stamp='0.987'>
<phase name='buildIR' stamp='0.987'>
<klass id='743' name='java/lang/String' flags='17'/>
<type id='735' name='int'/>
<method id='846' holder='743' name='substring' return='743' arguments='735 735' flags='1' bytes='79' iicount='537'/>
<parse method='846'  stamp='0.987'>
<bc code='183' bci='9'/>
<type id='737' name='void'/>
<klass id='848' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='849' holder='848' name='&lt;init&gt;' return='737' arguments='735' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='44'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='75'/>
<klass id='835' name='[C' flags='1041'/>
<method id='850' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' compile_id='47' compiler='C1' level='3' iicount='1863'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.987'/>
</parse>
<phase name='optimize_blocks' stamp='0.987'>
<phase_done name='optimize_blocks' stamp='0.987'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.987'>
<phase_done name='rangeCheckElimination' stamp='0.987'/>
</phase>
<phase name='optimize_null_checks' stamp='0.987'>
<phase_done name='optimize_null_checks' stamp='0.987'/>
</phase>
<phase_done name='buildIR' stamp='0.987'/>
</phase>
<phase name='emit_lir' stamp='0.987'>
<phase name='lirGeneration' stamp='0.987'>
<phase_done name='lirGeneration' stamp='0.987'/>
</phase>
<phase name='linearScan' stamp='0.987'>
<phase_done name='linearScan' stamp='0.987'/>
</phase>
<phase_done name='emit_lir' stamp='0.987'/>
</phase>
<phase name='codeemit' stamp='0.987'>
<phase_done name='codeemit' stamp='0.988'/>
</phase>
<phase name='codeinstall' stamp='0.988'>
<phase_done name='codeinstall' stamp='1.004'/>
</phase>
<code_cache total_blobs='332' nmethods='57' adapters='189' free_code_cache='250461888'/>
<task_done success='1' nmsize='1216' count='539' stamp='1.004'/>
</task>
<task compile_id='54' method='java/lang/Enum ordinal ()I' bytes='5' count='194' iicount='194' level='1' stamp='1.004'>
<phase name='buildIR' stamp='1.004'>
<type id='735' name='int'/>
<klass id='846' name='java/lang/Enum' flags='1025'/>
<method id='847' holder='846' name='ordinal' return='735' flags='17' bytes='5' iicount='194'/>
<parse method='847'  stamp='1.004'>
<parse_done stamp='1.004'/>
</parse>
<phase name='optimize_blocks' stamp='1.004'>
<phase_done name='optimize_blocks' stamp='1.004'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.004'>
<phase_done name='rangeCheckElimination' stamp='1.004'/>
</phase>
<phase name='optimize_null_checks' stamp='1.004'>
<phase_done name='optimize_null_checks' stamp='1.004'/>
</phase>
<phase_done name='buildIR' stamp='1.004'/>
</phase>
<phase name='emit_lir' stamp='1.004'>
<phase name='lirGeneration' stamp='1.004'>
<phase_done name='lirGeneration' stamp='1.004'/>
</phase>
<phase name='linearScan' stamp='1.004'>
<phase_done name='linearScan' stamp='1.004'/>
</phase>
<phase_done name='emit_lir' stamp='1.004'/>
</phase>
<phase name='codeemit' stamp='1.004'>
<phase_done name='codeemit' stamp='1.004'/>
</phase>
<phase name='codeinstall' stamp='1.004'>
<phase_done name='codeinstall' stamp='1.008'/>
</phase>
<code_cache total_blobs='333' nmethods='58' adapters='189' free_code_cache='250461120'/>
<task_done success='1' nmsize='280' count='196' stamp='1.008'/>
</task>
<task compile_id='61' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='153' backedge_count='4140' iicount='153' level='3' stamp='1.008'>
<phase name='buildIR' stamp='1.008'>
<klass id='846' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='847' holder='846' name='putUTF8' return='846' arguments='743' flags='1' bytes='142' iicount='153'/>
<parse method='847'  stamp='1.008'>
<bc code='182' bci='1'/>
<type id='735' name='int'/>
<method id='849' holder='743' name='length' return='735' flags='1' bytes='6' compile_id='4' compiler='C2' level='4' iicount='32093'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='1.008'/>
</parse>
<bc code='183' bci='15'/>
<type id='737' name='void'/>
<klass id='851' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='852' holder='851' name='&lt;init&gt;' return='737' flags='1' bytes='5' iicount='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='183' bci='41'/>
<method id='854' holder='846' name='enlarge' return='737' arguments='735' flags='2' bytes='51' iicount='36'/>
<call method='854' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='83'/>
<type id='730' name='char'/>
<method id='856' holder='743' name='charAt' return='730' arguments='735' flags='1' bytes='29' compile_id='10' compiler='C2' level='4' iicount='175304'/>
<call method='856' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<bc code='183' bci='18'/>
<klass id='858' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='859' holder='858' name='&lt;init&gt;' return='737' arguments='735' unloaded='1'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.008'/>
</parse>
<bc code='182' bci='125'/>
<method id='860' holder='846' name='encodeUTF8' return='846' arguments='743 735 735' flags='0' bytes='335' iicount='1'/>
<call method='860' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='846'/>
<parse_done stamp='1.009'/>
</parse>
<phase name='optimize_blocks' stamp='1.009'>
<phase_done name='optimize_blocks' stamp='1.009'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.009'>
<phase_done name='rangeCheckElimination' stamp='1.009'/>
</phase>
<phase name='optimize_null_checks' stamp='1.009'>
<phase_done name='optimize_null_checks' stamp='1.009'/>
</phase>
<phase_done name='buildIR' stamp='1.009'/>
</phase>
<phase name='emit_lir' stamp='1.009'>
<phase name='lirGeneration' stamp='1.009'>
<phase_done name='lirGeneration' stamp='1.009'/>
</phase>
<phase name='linearScan' stamp='1.009'>
<phase_done name='linearScan' stamp='1.009'/>
</phase>
<phase_done name='emit_lir' stamp='1.009'/>
</phase>
<phase name='codeemit' stamp='1.009'>
<phase_done name='codeemit' stamp='1.009'/>
</phase>
<phase name='codeinstall' stamp='1.009'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='1.041'/>
</phase>
<code_cache total_blobs='334' nmethods='59' adapters='189' free_code_cache='250456896'/>
<task_done success='1' nmsize='2080' count='190' backedge_count='4903' inlined_bytes='35' stamp='1.041'/>
</task>
<task compile_id='62' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='652' iicount='652' level='3' stamp='1.041'>
<phase name='buildIR' stamp='1.041'>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<method id='846' holder='809' name='toString' return='743' flags='1' bytes='17' iicount='653'/>
<parse method='846'  stamp='1.041'>
<bc code='183' bci='13'/>
<type id='737' name='void'/>
<klass id='835' name='[C' flags='1041'/>
<type id='735' name='int'/>
<method id='848' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' compile_id='47' compiler='C1' level='3' iicount='1899'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.041'/>
</parse>
<phase name='optimize_blocks' stamp='1.041'>
<phase_done name='optimize_blocks' stamp='1.042'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.042'>
<phase_done name='rangeCheckElimination' stamp='1.042'/>
</phase>
<phase name='optimize_null_checks' stamp='1.042'>
<phase_done name='optimize_null_checks' stamp='1.042'/>
</phase>
<phase_done name='buildIR' stamp='1.042'/>
</phase>
<phase name='emit_lir' stamp='1.042'>
<phase name='lirGeneration' stamp='1.042'>
<phase_done name='lirGeneration' stamp='1.042'/>
</phase>
<phase name='linearScan' stamp='1.042'>
<phase_done name='linearScan' stamp='1.042'/>
</phase>
<phase_done name='emit_lir' stamp='1.042'/>
</phase>
<phase name='codeemit' stamp='1.042'>
<phase_done name='codeemit' stamp='1.042'/>
</phase>
<phase name='codeinstall' stamp='1.042'>
<phase_done name='codeinstall' stamp='1.050'/>
</phase>
<code_cache total_blobs='335' nmethods='60' adapters='189' free_code_cache='250455744'/>
<task_done success='1' nmsize='528' count='658' stamp='1.050'/>
</task>
<task compile_id='65' method='jdk/internal/org/objectweb/asm/ClassWriter get (Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' bytes='49' count='412' backedge_count='13' iicount='412' level='3' stamp='1.050'>
<phase name='buildIR' stamp='1.050'>
<klass id='847' name='jdk/internal/org/objectweb/asm/Item' flags='16'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/ClassWriter' flags='1'/>
<method id='848' holder='846' name='get' return='847' arguments='847' flags='2' bytes='49' iicount='412'/>
<parse method='848'  stamp='1.050'>
<bc code='182' bci='33'/>
<type id='729' name='boolean'/>
<method id='851' holder='847' name='isEqualTo' return='729' arguments='847' flags='0' bytes='354' iicount='80'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.050'/>
</parse>
<phase name='optimize_blocks' stamp='1.050'>
<phase_done name='optimize_blocks' stamp='1.050'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.050'>
<phase_done name='rangeCheckElimination' stamp='1.050'/>
</phase>
<phase name='optimize_null_checks' stamp='1.050'>
<phase_done name='optimize_null_checks' stamp='1.050'/>
</phase>
<phase_done name='buildIR' stamp='1.050'/>
</phase>
<phase name='emit_lir' stamp='1.050'>
<phase name='lirGeneration' stamp='1.050'>
<phase_done name='lirGeneration' stamp='1.050'/>
</phase>
<phase name='linearScan' stamp='1.050'>
<phase_done name='linearScan' stamp='1.050'/>
</phase>
<phase_done name='emit_lir' stamp='1.050'/>
</phase>
<phase name='codeemit' stamp='1.050'>
<phase_done name='codeemit' stamp='1.050'/>
</phase>
<phase name='codeinstall' stamp='1.050'>
<phase_done name='codeinstall' stamp='1.065'/>
</phase>
<code_cache total_blobs='336' nmethods='61' adapters='189' free_code_cache='250453760'/>
<task_done success='1' nmsize='944' count='458' backedge_count='13' stamp='1.065'/>
</task>
<task compile_id='64' method='jdk/internal/org/objectweb/asm/Item set (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' bytes='143' count='458' iicount='458' level='3' stamp='1.065'>
<phase name='buildIR' stamp='1.065'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/Item' flags='16'/>
<method id='847' holder='846' name='set' return='737' arguments='735 743 743 743' flags='0' bytes='143' iicount='458'/>
<parse method='847'  stamp='1.065'>
<bc code='182' bci='104'/>
<method id='849' holder='743' name='hashCode' return='735' flags='1' bytes='55' compile_id='42' compiler='C2' level='4' iicount='2454'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<bc code='182' bci='108'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<bc code='182' bci='90'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<bc code='182' bci='123'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<bc code='182' bci='127'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<bc code='182' bci='133'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='1.066'/>
</parse>
<phase name='optimize_blocks' stamp='1.066'>
<phase_done name='optimize_blocks' stamp='1.066'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.066'>
<phase_done name='rangeCheckElimination' stamp='1.066'/>
</phase>
<phase name='optimize_null_checks' stamp='1.066'>
<phase_done name='optimize_null_checks' stamp='1.066'/>
</phase>
<phase_done name='buildIR' stamp='1.066'/>
</phase>
<phase name='emit_lir' stamp='1.066'>
<phase name='lirGeneration' stamp='1.066'>
<phase_done name='lirGeneration' stamp='1.066'/>
</phase>
<phase name='linearScan' stamp='1.066'>
<phase_done name='linearScan' stamp='1.066'/>
</phase>
<phase_done name='emit_lir' stamp='1.066'/>
</phase>
<phase name='codeemit' stamp='1.066'>
<phase_done name='codeemit' stamp='1.066'/>
</phase>
<phase name='codeinstall' stamp='1.066'>
<phase_done name='codeinstall' stamp='1.088'/>
</phase>
<code_cache total_blobs='337' nmethods='62' adapters='189' free_code_cache='250450624'/>
<task_done success='1' nmsize='1728' count='504' stamp='1.088'/>
</task>
<task compile_id='67' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='654' iicount='654' level='3' stamp='1.088'>
<phase name='buildIR' stamp='1.088'>
<type id='737' name='void'/>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<method id='846' holder='809' name='&lt;init&gt;' return='737' flags='1' bytes='7' iicount='654'/>
<parse method='846'  stamp='1.088'>
<bc code='183' bci='3'/>
<type id='735' name='int'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='848' holder='807' name='&lt;init&gt;' return='737' arguments='735' flags='0' bytes='12' compile_id='57' compiler='C1' level='3' iicount='1238'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='850' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='12931'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.088'/>
</parse>
<parse_done stamp='1.089'/>
</parse>
<parse_done stamp='1.089'/>
</parse>
<phase name='optimize_blocks' stamp='1.089'>
<phase_done name='optimize_blocks' stamp='1.089'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.089'>
<phase_done name='rangeCheckElimination' stamp='1.089'/>
</phase>
<phase name='optimize_null_checks' stamp='1.089'>
<phase_done name='optimize_null_checks' stamp='1.089'/>
</phase>
<phase_done name='buildIR' stamp='1.089'/>
</phase>
<phase name='emit_lir' stamp='1.089'>
<phase name='lirGeneration' stamp='1.089'>
<phase_done name='lirGeneration' stamp='1.089'/>
</phase>
<phase name='linearScan' stamp='1.089'>
<phase_done name='linearScan' stamp='1.089'/>
</phase>
<phase_done name='emit_lir' stamp='1.089'/>
</phase>
<phase name='codeemit' stamp='1.089'>
<phase_done name='codeemit' stamp='1.089'/>
</phase>
<phase name='codeinstall' stamp='1.089'>
<phase_done name='codeinstall' stamp='1.100'/>
</phase>
<code_cache total_blobs='338' nmethods='63' adapters='189' free_code_cache='250449280'/>
<task_done success='1' nmsize='696' count='654' inlined_bytes='13' stamp='1.100'/>
</task>
<task compile_id='68' method='jdk/internal/org/objectweb/asm/ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='526' iicount='526' level='3' stamp='1.100'>
<phase name='buildIR' stamp='1.100'>
<klass id='846' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<type id='735' name='int'/>
<method id='847' holder='846' name='putShort' return='846' arguments='735' flags='1' bytes='52' iicount='526'/>
<parse method='847'  stamp='1.100'>
<bc code='183' bci='18'/>
<type id='737' name='void'/>
<method id='849' holder='846' name='enlarge' return='737' arguments='735' flags='2' bytes='51' iicount='61'/>
<call method='849' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.100'/>
</parse>
<phase name='optimize_blocks' stamp='1.100'>
<phase_done name='optimize_blocks' stamp='1.100'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.100'>
<phase_done name='rangeCheckElimination' stamp='1.100'/>
</phase>
<phase name='optimize_null_checks' stamp='1.100'>
<phase_done name='optimize_null_checks' stamp='1.100'/>
</phase>
<phase_done name='buildIR' stamp='1.100'/>
</phase>
<phase name='emit_lir' stamp='1.100'>
<phase name='lirGeneration' stamp='1.100'>
<phase_done name='lirGeneration' stamp='1.100'/>
</phase>
<phase name='linearScan' stamp='1.100'>
<phase_done name='linearScan' stamp='1.100'/>
</phase>
<phase_done name='emit_lir' stamp='1.100'/>
</phase>
<phase name='codeemit' stamp='1.100'>
<phase_done name='codeemit' stamp='1.100'/>
</phase>
<phase name='codeinstall' stamp='1.100'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='1.112'/>
</phase>
<code_cache total_blobs='339' nmethods='64' adapters='189' free_code_cache='250447744'/>
<task_done success='1' nmsize='624' count='526' stamp='1.112'/>
</task>
<task compile_id='66' method='java/lang/invoke/MemberName testFlags (II)Z' bytes='16' count='409' iicount='409' level='3' stamp='1.112'>
<phase name='buildIR' stamp='1.112'>
<type id='729' name='boolean'/>
<type id='735' name='int'/>
<klass id='798' name='java/lang/invoke/MemberName' flags='16'/>
<method id='846' holder='798' name='testFlags' return='729' arguments='735 735' flags='2' bytes='16' iicount='409'/>
<parse method='846'  stamp='1.112'>
<parse_done stamp='1.112'/>
</parse>
<phase name='optimize_blocks' stamp='1.112'>
<phase_done name='optimize_blocks' stamp='1.112'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.112'>
<phase_done name='rangeCheckElimination' stamp='1.112'/>
</phase>
<phase name='optimize_null_checks' stamp='1.112'>
<phase_done name='optimize_null_checks' stamp='1.112'/>
</phase>
<phase_done name='buildIR' stamp='1.112'/>
</phase>
<phase name='emit_lir' stamp='1.112'>
<phase name='lirGeneration' stamp='1.112'>
<phase_done name='lirGeneration' stamp='1.112'/>
</phase>
<phase name='linearScan' stamp='1.112'>
<phase_done name='linearScan' stamp='1.112'/>
</phase>
<phase_done name='emit_lir' stamp='1.112'/>
</phase>
<phase name='codeemit' stamp='1.112'>
<phase_done name='codeemit' stamp='1.112'/>
</phase>
<phase name='codeinstall' stamp='1.112'>
<phase_done name='codeinstall' stamp='1.118'/>
</phase>
<code_cache total_blobs='340' nmethods='65' adapters='189' free_code_cache='250446720'/>
<task_done success='1' nmsize='440' count='409' stamp='1.118'/>
</task>
<task compile_id='59' method='java/lang/invoke/MethodType returnType ()Ljava/lang/Class;' bytes='5' count='186' iicount='186' level='1' stamp='1.118'>
<phase name='buildIR' stamp='1.118'>
<klass id='744' name='java/lang/Class' flags='17'/>
<klass id='801' name='java/lang/invoke/MethodType' flags='17'/>
<method id='846' holder='801' name='returnType' return='744' flags='1' bytes='5' iicount='186'/>
<parse method='846'  stamp='1.118'>
<parse_done stamp='1.118'/>
</parse>
<phase name='optimize_blocks' stamp='1.118'>
<phase_done name='optimize_blocks' stamp='1.118'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.118'>
<phase_done name='rangeCheckElimination' stamp='1.118'/>
</phase>
<phase name='optimize_null_checks' stamp='1.118'>
<phase_done name='optimize_null_checks' stamp='1.118'/>
</phase>
<phase_done name='buildIR' stamp='1.118'/>
</phase>
<phase name='emit_lir' stamp='1.118'>
<phase name='lirGeneration' stamp='1.118'>
<phase_done name='lirGeneration' stamp='1.118'/>
</phase>
<phase name='linearScan' stamp='1.118'>
<phase_done name='linearScan' stamp='1.118'/>
</phase>
<phase_done name='emit_lir' stamp='1.118'/>
</phase>
<phase name='codeemit' stamp='1.118'>
<phase_done name='codeemit' stamp='1.118'/>
</phase>
<phase name='codeinstall' stamp='1.118'>
<phase_done name='codeinstall' stamp='1.121'/>
</phase>
<code_cache total_blobs='341' nmethods='66' adapters='189' free_code_cache='250445952'/>
<task_done success='1' nmsize='280' count='186' stamp='1.121'/>
</task>
<task compile_id='60' method='java/lang/invoke/MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='159' iicount='159' level='1' stamp='1.121'>
<phase name='buildIR' stamp='1.121'>
<klass id='744' name='java/lang/Class' flags='17'/>
<klass id='798' name='java/lang/invoke/MemberName' flags='16'/>
<method id='846' holder='798' name='getDeclaringClass' return='744' flags='1' bytes='5' iicount='159'/>
<parse method='846'  stamp='1.121'>
<parse_done stamp='1.121'/>
</parse>
<phase name='optimize_blocks' stamp='1.121'>
<phase_done name='optimize_blocks' stamp='1.121'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.121'>
<phase_done name='rangeCheckElimination' stamp='1.121'/>
</phase>
<phase name='optimize_null_checks' stamp='1.121'>
<phase_done name='optimize_null_checks' stamp='1.122'/>
</phase>
<phase_done name='buildIR' stamp='1.122'/>
</phase>
<phase name='emit_lir' stamp='1.122'>
<phase name='lirGeneration' stamp='1.122'>
<phase_done name='lirGeneration' stamp='1.122'/>
</phase>
<phase name='linearScan' stamp='1.122'>
<phase_done name='linearScan' stamp='1.122'/>
</phase>
<phase_done name='emit_lir' stamp='1.122'/>
</phase>
<phase name='codeemit' stamp='1.122'>
<phase_done name='codeemit' stamp='1.122'/>
</phase>
<phase name='codeinstall' stamp='1.122'>
<phase_done name='codeinstall' stamp='1.125'/>
</phase>
<code_cache total_blobs='342' nmethods='67' adapters='189' free_code_cache='250445184'/>
<task_done success='1' nmsize='280' count='159' stamp='1.125'/>
</task>
<task compile_id='63' method='java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='137' iicount='137' level='1' stamp='1.126'>
<phase name='buildIR' stamp='1.126'>
<type id='735' name='int'/>
<klass id='846' name='java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry' flags='10'/>
<method id='847' holder='846' name='hashCode' return='735' flags='1' bytes='5' iicount='137'/>
<parse method='847'  stamp='1.126'>
<parse_done stamp='1.126'/>
</parse>
<phase name='optimize_blocks' stamp='1.126'>
<phase_done name='optimize_blocks' stamp='1.126'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.126'>
<phase_done name='rangeCheckElimination' stamp='1.126'/>
</phase>
<phase name='optimize_null_checks' stamp='1.126'>
<phase_done name='optimize_null_checks' stamp='1.126'/>
</phase>
<phase_done name='buildIR' stamp='1.126'/>
</phase>
<phase name='emit_lir' stamp='1.126'>
<phase name='lirGeneration' stamp='1.126'>
<phase_done name='lirGeneration' stamp='1.126'/>
</phase>
<phase name='linearScan' stamp='1.126'>
<phase_done name='linearScan' stamp='1.126'/>
</phase>
<phase_done name='emit_lir' stamp='1.126'/>
</phase>
<phase name='codeemit' stamp='1.126'>
<phase_done name='codeemit' stamp='1.126'/>
</phase>
<phase name='codeinstall' stamp='1.126'>
<phase_done name='codeinstall' stamp='1.130'/>
</phase>
<code_cache total_blobs='344' nmethods='69' adapters='189' free_code_cache='250443456'/>
<task_done success='1' nmsize='280' count='152' stamp='1.130'/>
</task>
<task compile_id='69' method='java/util/SubList access$000 (Ljava/util/SubList;)I' bytes='5' count='146' iicount='146' level='1' stamp='1.130'>
<phase name='buildIR' stamp='1.136'>
<type id='735' name='int'/>
<klass id='846' name='java/util/SubList' flags='0'/>
<method id='847' holder='846' name='access$000' return='735' arguments='846' flags='4104' bytes='5' iicount='146'/>
<parse method='847'  stamp='1.136'>
<parse_done stamp='1.136'/>
</parse>
<phase name='optimize_blocks' stamp='1.136'>
<phase_done name='optimize_blocks' stamp='1.136'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.136'>
<phase_done name='rangeCheckElimination' stamp='1.136'/>
</phase>
<phase name='optimize_null_checks' stamp='1.136'>
<phase_done name='optimize_null_checks' stamp='1.136'/>
</phase>
<phase_done name='buildIR' stamp='1.136'/>
</phase>
<phase name='emit_lir' stamp='1.136'>
<phase name='lirGeneration' stamp='1.136'>
<phase_done name='lirGeneration' stamp='1.136'/>
</phase>
<phase name='linearScan' stamp='1.136'>
<phase_done name='linearScan' stamp='1.136'/>
</phase>
<phase_done name='emit_lir' stamp='1.136'/>
</phase>
<phase name='codeemit' stamp='1.136'>
<phase_done name='codeemit' stamp='1.136'/>
</phase>
<phase name='codeinstall' stamp='1.136'>
<phase_done name='codeinstall' stamp='1.140'/>
</phase>
<code_cache total_blobs='345' nmethods='70' adapters='189' free_code_cache='250442688'/>
<task_done success='1' nmsize='248' count='146' stamp='1.140'/>
</task>
<task compile_id='73' method='java/util/ArrayList size ()I' bytes='5' count='769' iicount='769' level='1' stamp='1.140'>
<phase name='buildIR' stamp='1.140'>
<type id='735' name='int'/>
<klass id='846' name='java/util/ArrayList' flags='1'/>
<method id='847' holder='846' name='size' return='735' flags='1' bytes='5' iicount='769'/>
<parse method='847'  stamp='1.140'>
<parse_done stamp='1.140'/>
</parse>
<phase name='optimize_blocks' stamp='1.140'>
<phase_done name='optimize_blocks' stamp='1.140'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.140'>
<phase_done name='rangeCheckElimination' stamp='1.140'/>
</phase>
<phase name='optimize_null_checks' stamp='1.140'>
<phase_done name='optimize_null_checks' stamp='1.140'/>
</phase>
<phase_done name='buildIR' stamp='1.140'/>
</phase>
<phase name='emit_lir' stamp='1.140'>
<phase name='lirGeneration' stamp='1.140'>
<phase_done name='lirGeneration' stamp='1.140'/>
</phase>
<phase name='linearScan' stamp='1.140'>
<phase_done name='linearScan' stamp='1.140'/>
</phase>
<phase_done name='emit_lir' stamp='1.140'/>
</phase>
<phase name='codeemit' stamp='1.140'>
<phase_done name='codeemit' stamp='1.140'/>
</phase>
<phase name='codeinstall' stamp='1.140'>
<phase_done name='codeinstall' stamp='1.144'/>
</phase>
<code_cache total_blobs='346' nmethods='71' adapters='189' free_code_cache='250441920'/>
<task_done success='1' nmsize='280' count='784' stamp='1.144'/>
</task>
<task compile_id='70' method='java/util/AbstractList$ListItr nextIndex ()I' bytes='5' count='145' iicount='145' level='1' stamp='1.144'>
<phase name='buildIR' stamp='1.144'>
<type id='735' name='int'/>
<klass id='846' name='java/util/AbstractList$ListItr' flags='2'/>
<method id='847' holder='846' name='nextIndex' return='735' flags='1' bytes='5' iicount='145'/>
<parse method='847'  stamp='1.144'>
<parse_done stamp='1.144'/>
</parse>
<phase name='optimize_blocks' stamp='1.144'>
<phase_done name='optimize_blocks' stamp='1.144'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.144'>
<phase_done name='rangeCheckElimination' stamp='1.144'/>
</phase>
<phase name='optimize_null_checks' stamp='1.144'>
<phase_done name='optimize_null_checks' stamp='1.144'/>
</phase>
<phase_done name='buildIR' stamp='1.144'/>
</phase>
<phase name='emit_lir' stamp='1.144'>
<phase name='lirGeneration' stamp='1.144'>
<phase_done name='lirGeneration' stamp='1.145'/>
</phase>
<phase name='linearScan' stamp='1.145'>
<phase_done name='linearScan' stamp='1.145'/>
</phase>
<phase_done name='emit_lir' stamp='1.145'/>
</phase>
<phase name='codeemit' stamp='1.145'>
<phase_done name='codeemit' stamp='1.145'/>
</phase>
<phase name='codeinstall' stamp='1.145'>
<phase_done name='codeinstall' stamp='1.148'/>
</phase>
<code_cache total_blobs='349' nmethods='72' adapters='189' free_code_cache='250429824'/>
<task_done success='1' nmsize='280' count='145' stamp='1.148'/>
</task>
<task compile_id='76' method='java/util/ArrayList access$000 (Ljava/util/ArrayList;)I' bytes='5' count='176' iicount='176' level='1' stamp='1.151'>
<phase name='buildIR' stamp='1.151'>
<type id='735' name='int'/>
<klass id='846' name='java/util/ArrayList' flags='1'/>
<method id='847' holder='846' name='access$000' return='735' arguments='846' flags='4104' bytes='5' iicount='176'/>
<parse method='847'  stamp='1.151'>
<parse_done stamp='1.151'/>
</parse>
<phase name='optimize_blocks' stamp='1.151'>
<phase_done name='optimize_blocks' stamp='1.151'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.151'>
<phase_done name='rangeCheckElimination' stamp='1.151'/>
</phase>
<phase name='optimize_null_checks' stamp='1.151'>
<phase_done name='optimize_null_checks' stamp='1.151'/>
</phase>
<phase_done name='buildIR' stamp='1.151'/>
</phase>
<phase name='emit_lir' stamp='1.151'>
<phase name='lirGeneration' stamp='1.151'>
<phase_done name='lirGeneration' stamp='1.151'/>
</phase>
<phase name='linearScan' stamp='1.151'>
<phase_done name='linearScan' stamp='1.151'/>
</phase>
<phase_done name='emit_lir' stamp='1.151'/>
</phase>
<phase name='codeemit' stamp='1.151'>
<phase_done name='codeemit' stamp='1.151'/>
</phase>
<phase name='codeinstall' stamp='1.151'>
<phase_done name='codeinstall' stamp='1.155'/>
</phase>
<code_cache total_blobs='352' nmethods='74' adapters='192' free_code_cache='250438208'/>
<task_done success='1' nmsize='248' count='234' stamp='1.155'/>
</task>
<task compile_id='77' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='471' iicount='471' level='3' stamp='1.155'>
<phase name='buildIR' stamp='1.155'>
<type id='735' name='int'/>
<klass id='846' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='847' holder='846' name='spread' return='735' arguments='735' flags='24' bytes='10' iicount='472'/>
<parse method='847'  stamp='1.155'>
<parse_done stamp='1.155'/>
</parse>
<phase name='optimize_blocks' stamp='1.155'>
<phase_done name='optimize_blocks' stamp='1.155'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.155'>
<phase_done name='rangeCheckElimination' stamp='1.155'/>
</phase>
<phase name='optimize_null_checks' stamp='1.155'>
<phase_done name='optimize_null_checks' stamp='1.155'/>
</phase>
<phase_done name='buildIR' stamp='1.155'/>
</phase>
<phase name='emit_lir' stamp='1.155'>
<phase name='lirGeneration' stamp='1.155'>
<phase_done name='lirGeneration' stamp='1.155'/>
</phase>
<phase name='linearScan' stamp='1.155'>
<phase_done name='linearScan' stamp='1.155'/>
</phase>
<phase_done name='emit_lir' stamp='1.155'/>
</phase>
<phase name='codeemit' stamp='1.155'>
<phase_done name='codeemit' stamp='1.155'/>
</phase>
<phase name='codeinstall' stamp='1.155'>
<phase_done name='codeinstall' stamp='1.159'/>
</phase>
<code_cache total_blobs='354' nmethods='75' adapters='193' free_code_cache='250436864'/>
<task_done success='1' nmsize='344' count='480' stamp='1.159'/>
</task>
<task compile_id='80' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='771' iicount='771' level='3' stamp='1.159'>
<phase name='buildIR' stamp='1.159'>
<type id='729' name='boolean'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='startsWith' return='729' arguments='743' flags='1' bytes='7' iicount='771'/>
<parse method='846'  stamp='1.159'>
<bc code='182' bci='3'/>
<type id='735' name='int'/>
<method id='848' holder='743' name='startsWith' return='729' arguments='743 735' flags='1' bytes='72' compile_id='9' compiler='C1' level='3' iicount='1427'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.159'/>
</parse>
<phase name='optimize_blocks' stamp='1.159'>
<phase_done name='optimize_blocks' stamp='1.159'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.159'>
<phase_done name='rangeCheckElimination' stamp='1.159'/>
</phase>
<phase name='optimize_null_checks' stamp='1.159'>
<phase_done name='optimize_null_checks' stamp='1.159'/>
</phase>
<phase_done name='buildIR' stamp='1.159'/>
</phase>
<phase name='emit_lir' stamp='1.159'>
<phase name='lirGeneration' stamp='1.159'>
<phase_done name='lirGeneration' stamp='1.159'/>
</phase>
<phase name='linearScan' stamp='1.159'>
<phase_done name='linearScan' stamp='1.159'/>
</phase>
<phase_done name='emit_lir' stamp='1.159'/>
</phase>
<phase name='codeemit' stamp='1.159'>
<phase_done name='codeemit' stamp='1.159'/>
</phase>
<phase name='codeinstall' stamp='1.159'>
<phase_done name='codeinstall' stamp='1.166'/>
</phase>
<code_cache total_blobs='357' nmethods='77' adapters='193' free_code_cache='250430016'/>
<task_done success='1' nmsize='528' count='771' stamp='1.166'/>
</task>
<task compile_id='81' method='java/lang/invoke/MemberName isInvocable ()Z' bytes='7' count='417' iicount='417' level='3' stamp='1.167'>
<phase name='buildIR' stamp='1.167'>
<type id='729' name='boolean'/>
<klass id='798' name='java/lang/invoke/MemberName' flags='16'/>
<method id='846' holder='798' name='isInvocable' return='729' flags='1' bytes='7' iicount='418'/>
<parse method='846'  stamp='1.167'>
<bc code='183' bci='3'/>
<type id='735' name='int'/>
<method id='848' holder='798' name='testAnyFlags' return='729' arguments='735' flags='2' bytes='15' iicount='486'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='3'/>
<method id='850' holder='798' name='testFlags' return='729' arguments='735 735' flags='2' bytes='16' compile_id='66' compiler='C1' level='3' iicount='690'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.167'/>
</parse>
<parse_done stamp='1.167'/>
</parse>
<parse_done stamp='1.167'/>
</parse>
<phase name='optimize_blocks' stamp='1.167'>
<phase_done name='optimize_blocks' stamp='1.167'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.167'>
<phase_done name='rangeCheckElimination' stamp='1.167'/>
</phase>
<phase name='optimize_null_checks' stamp='1.167'>
<phase_done name='optimize_null_checks' stamp='1.167'/>
</phase>
<phase_done name='buildIR' stamp='1.167'/>
</phase>
<phase name='emit_lir' stamp='1.167'>
<phase name='lirGeneration' stamp='1.167'>
<phase_done name='lirGeneration' stamp='1.167'/>
</phase>
<phase name='linearScan' stamp='1.167'>
<phase_done name='linearScan' stamp='1.167'/>
</phase>
<phase_done name='emit_lir' stamp='1.167'/>
</phase>
<phase name='codeemit' stamp='1.167'>
<phase_done name='codeemit' stamp='1.167'/>
</phase>
<phase name='codeinstall' stamp='1.167'>
<phase_done name='codeinstall' stamp='1.180'/>
</phase>
<code_cache total_blobs='360' nmethods='80' adapters='194' free_code_cache='250431680'/>
<task_done success='1' nmsize='728' count='424' inlined_bytes='31' stamp='1.180'/>
</task>
<task compile_id='78' method='java/util/ArrayList ensureCapacityInternal (I)V' bytes='13' count='436' iicount='436' level='3' stamp='1.180'>
<phase name='buildIR' stamp='1.182'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='846' name='java/util/ArrayList' flags='1'/>
<method id='847' holder='846' name='ensureCapacityInternal' return='737' arguments='735' flags='2' bytes='13' iicount='436'/>
<parse method='847'  stamp='1.182'>
<bc code='184' bci='6'/>
<klass id='849' name='[Ljava/lang/Object;' flags='1041'/>
<method id='850' holder='846' name='calculateCapacity' return='735' arguments='849 735' flags='10' bytes='16' iicount='436'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='184' bci='10'/>
<klass id='854' name='java/lang/Math' flags='17'/>
<method id='855' holder='854' name='max' return='735' arguments='735 735' flags='9' bytes='11' compile_id='74' compiler='C2' level='4' iicount='17543'/>
<call method='855' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<parse_done stamp='1.182'/>
</parse>
<parse_done stamp='1.182'/>
</parse>
<bc code='183' bci='9'/>
<method id='857' holder='846' name='ensureExplicitCapacity' return='737' arguments='735' flags='2' bytes='26' iicount='436'/>
<call method='857' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='22'/>
<method id='860' holder='846' name='grow' return='737' arguments='735' flags='2' bytes='45' iicount='65'/>
<call method='860' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.182'/>
</parse>
<parse_done stamp='1.182'/>
</parse>
<phase name='optimize_blocks' stamp='1.182'>
<phase_done name='optimize_blocks' stamp='1.182'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.182'>
<phase_done name='rangeCheckElimination' stamp='1.182'/>
</phase>
<phase name='optimize_null_checks' stamp='1.182'>
<phase_done name='optimize_null_checks' stamp='1.182'/>
</phase>
<phase_done name='buildIR' stamp='1.182'/>
</phase>
<phase name='emit_lir' stamp='1.182'>
<phase name='lirGeneration' stamp='1.182'>
<phase_done name='lirGeneration' stamp='1.182'/>
</phase>
<phase name='linearScan' stamp='1.182'>
<phase_done name='linearScan' stamp='1.183'/>
</phase>
<phase_done name='emit_lir' stamp='1.183'/>
</phase>
<phase name='codeemit' stamp='1.183'>
<phase_done name='codeemit' stamp='1.183'/>
</phase>
<phase name='codeinstall' stamp='1.183'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='1.195'/>
</phase>
<code_cache total_blobs='362' nmethods='81' adapters='195' free_code_cache='250429248'/>
<task_done success='1' nmsize='912' count='436' inlined_bytes='53' stamp='1.195'/>
</task>
<task compile_id='86' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='418' iicount='420' level='3' stamp='1.195'>
<phase name='buildIR' stamp='1.195'>
<klass id='838' name='[B' flags='1041'/>
<klass id='846' name='java/io/BufferedInputStream' flags='1'/>
<method id='847' holder='846' name='getBufIfOpen' return='838' flags='2' bytes='21' iicount='500'/>
<parse method='847'  stamp='1.195'>
<bc code='183' bci='15'/>
<type id='737' name='void'/>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='849' name='java/io/IOException' flags='1'/>
<method id='851' holder='849' name='&lt;init&gt;' return='737' arguments='743' flags='1' bytes='6' iicount='1'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.195'/>
</parse>
<phase name='optimize_blocks' stamp='1.195'>
<phase_done name='optimize_blocks' stamp='1.195'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.195'>
<phase_done name='rangeCheckElimination' stamp='1.195'/>
</phase>
<phase name='optimize_null_checks' stamp='1.195'>
<phase_done name='optimize_null_checks' stamp='1.195'/>
</phase>
<phase_done name='buildIR' stamp='1.195'/>
</phase>
<phase name='emit_lir' stamp='1.195'>
<phase name='lirGeneration' stamp='1.195'>
<phase_done name='lirGeneration' stamp='1.195'/>
</phase>
<phase name='linearScan' stamp='1.195'>
<phase_done name='linearScan' stamp='1.195'/>
</phase>
<phase_done name='emit_lir' stamp='1.195'/>
</phase>
<phase name='codeemit' stamp='1.195'>
<phase_done name='codeemit' stamp='1.195'/>
</phase>
<phase name='codeinstall' stamp='1.195'>
<phase_done name='codeinstall' stamp='1.203'/>
</phase>
<code_cache total_blobs='363' nmethods='82' adapters='195' free_code_cache='250427968'/>
<task_done success='1' nmsize='592' count='988' stamp='1.203'/>
</task>
<task compile_id='88' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='252' backedge_count='4190' iicount='253' level='3' stamp='1.203'>
<phase name='buildIR' stamp='1.203'>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='847' name='java/io/DataInput' flags='1537'/>
<klass id='846' name='java/io/DataInputStream' flags='1'/>
<method id='848' holder='846' name='readUTF' return='743' arguments='847' flags='25' bytes='501' iicount='254'/>
<parse method='848'  stamp='1.203'>
<bc code='185' bci='1'/>
<type id='735' name='int'/>
<method id='850' holder='847' name='readUnsignedShort' return='735' flags='1025' bytes='0' iicount='1'/>
<call method='850' instr='invokeinterface'/>
<dependency type='unique_implementor' ctxk='847' x='846'/>
<method id='851' holder='846' name='readUnsignedShort' return='735' flags='17' bytes='39' iicount='311'/>
<dependency type='unique_concrete_method' ctxk='847' x='851'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='846'/>
<bc code='193' bci='12'/>
<dependency type='leaf_type' ctxk='846'/>
<bc code='192' bci='19'/>
<dependency type='leaf_type' ctxk='846'/>
<bc code='185' bci='87'/>
<type id='737' name='void'/>
<klass id='838' name='[B' flags='1041'/>
<method id='853' holder='847' name='readFully' return='737' arguments='838 735 735' flags='1025' bytes='0' iicount='1'/>
<call method='853' instr='invokeinterface'/>
<dependency type='unique_implementor' ctxk='847' x='846'/>
<method id='854' holder='846' name='readFully' return='737' arguments='838 735 735' flags='17' bytes='63' iicount='384'/>
<dependency type='unique_concrete_method' ctxk='847' x='854'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='846'/>
<bc code='183' bci='259'/>
<klass id='857' name='java/io/UTFDataFormatException' unloaded='1'/>
<method id='859' holder='857' name='&lt;init&gt;' return='737' arguments='743' unloaded='1'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='291'/>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<method id='860' holder='809' name='&lt;init&gt;' return='737' flags='1' bytes='7' compile_id='67' compiler='C1' level='3' iicount='669'/>
<call method='860' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<bc code='183' bci='3'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='862' holder='807' name='&lt;init&gt;' return='737' arguments='735' flags='0' bytes='12' compile_id='57' compiler='C1' level='3' iicount='1266'/>
<call method='862' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='862'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='864' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='13846'/>
<call method='864' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='864'>
<parse_done stamp='1.204'/>
</parse>
<parse_done stamp='1.204'/>
</parse>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='296'/>
<method id='867' holder='809' name='append' return='809' arguments='743' flags='1' bytes='8' compile_id='46' compiler='C1' level='3' iicount='1568'/>
<call method='867' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<bc code='183' bci='2'/>
<method id='869' holder='807' name='append' return='807' arguments='743' flags='1' bytes='50' compile_id='28' compiler='C1' level='3' iicount='1997'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='301'/>
<method id='871' holder='809' name='append' return='809' arguments='735' flags='1' bytes='8' iicount='15'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='2'/>
<method id='873' holder='807' name='append' return='807' arguments='735' flags='1' bytes='62' iicount='15'/>
<call method='873' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='304'/>
<method id='875' holder='809' name='toString' return='743' flags='1' bytes='17' compile_id='62' compiler='C1' level='3' iicount='695'/>
<call method='875' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='13'/>
<klass id='835' name='[C' flags='1041'/>
<method id='877' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' compile_id='47' compiler='C1' level='3' iicount='2659'/>
<call method='877' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='183' bci='307'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='351'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='403'/>
<call method='860' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<bc code='183' bci='3'/>
<call method='862' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='862'>
<bc code='183' bci='1'/>
<call method='864' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='864'>
<parse_done stamp='1.204'/>
</parse>
<parse_done stamp='1.204'/>
</parse>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='408'/>
<call method='867' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<bc code='183' bci='2'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='415'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='2'/>
<call method='873' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='418'/>
<call method='875' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='13'/>
<call method='877' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='183' bci='421'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='469'/>
<call method='860' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<bc code='183' bci='3'/>
<call method='862' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='862'>
<bc code='183' bci='1'/>
<call method='864' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='864'>
<parse_done stamp='1.204'/>
</parse>
<parse_done stamp='1.204'/>
</parse>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='474'/>
<call method='867' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<bc code='183' bci='2'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='479'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='2'/>
<call method='873' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='182' bci='482'/>
<call method='875' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='13'/>
<call method='877' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.204'/>
</parse>
<bc code='183' bci='485'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='497'/>
<call method='877' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.205'/>
</parse>
<phase name='optimize_blocks' stamp='1.205'>
<phase_done name='optimize_blocks' stamp='1.205'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.205'>
<phase_done name='rangeCheckElimination' stamp='1.205'/>
</phase>
<phase name='optimize_null_checks' stamp='1.205'>
<phase_done name='optimize_null_checks' stamp='1.205'/>
</phase>
<phase_done name='buildIR' stamp='1.205'/>
</phase>
<phase name='emit_lir' stamp='1.205'>
<phase name='lirGeneration' stamp='1.205'>
<phase_done name='lirGeneration' stamp='1.205'/>
</phase>
<phase name='linearScan' stamp='1.205'>
<phase_done name='linearScan' stamp='1.205'/>
</phase>
<phase_done name='emit_lir' stamp='1.205'/>
</phase>
<phase name='codeemit' stamp='1.205'>
<phase_done name='codeemit' stamp='1.206'/>
</phase>
<phase name='codeinstall' stamp='1.206'>
<dependency type='leaf_type' ctxk='846'/>
<dependency type='unique_concrete_method' ctxk='847' x='851'/>
<dependency type='unique_concrete_method' ctxk='847' x='854'/>
<dependency type='unique_implementor' ctxk='847' x='846'/>
<phase_done name='codeinstall' stamp='1.316'/>
</phase>
<code_cache total_blobs='366' nmethods='84' adapters='196' free_code_cache='250411584'/>
<task_done success='1' nmsize='8720' count='603' backedge_count='8610' inlined_bytes='159' stamp='1.317'/>
</task>
<task compile_id='79' method='java/util/ArrayList add (Ljava/lang/Object;)Z' bytes='29' count='434' iicount='434' level='3' stamp='1.317'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='434' stamp='1.317'/>
</task>
<task compile_id='92' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='981' backedge_count='981' iicount='981' level='3' stamp='1.317'>
<phase name='buildIR' stamp='1.317'>
<type id='737' name='void'/>
<klass id='838' name='[B' flags='1041'/>
<type id='735' name='int'/>
<klass id='846' name='java/io/DataInputStream' flags='1'/>
<method id='847' holder='846' name='readFully' return='737' arguments='838 735 735' flags='17' bytes='63' iicount='981'/>
<parse method='847'  stamp='1.317'>
<bc code='183' bci='8'/>
<klass id='850' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='851' holder='850' name='&lt;init&gt;' return='737' unloaded='1'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='34'/>
<klass id='811' name='java/io/InputStream' flags='1025'/>
<method id='853' holder='811' name='read' return='735' arguments='838 735 735' flags='1' bytes='109' iicount='1'/>
<call method='853' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='48'/>
<klass id='854' name='java/io/EOFException' unloaded='1'/>
<method id='855' holder='854' name='&lt;init&gt;' return='737' unloaded='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.317'/>
</parse>
<phase name='optimize_blocks' stamp='1.317'>
<phase_done name='optimize_blocks' stamp='1.317'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.317'>
<phase_done name='rangeCheckElimination' stamp='1.317'/>
</phase>
<phase name='optimize_null_checks' stamp='1.317'>
<phase_done name='optimize_null_checks' stamp='1.317'/>
</phase>
<phase_done name='buildIR' stamp='1.317'/>
</phase>
<phase name='emit_lir' stamp='1.317'>
<phase name='lirGeneration' stamp='1.317'>
<phase_done name='lirGeneration' stamp='1.317'/>
</phase>
<phase name='linearScan' stamp='1.317'>
<phase_done name='linearScan' stamp='1.317'/>
</phase>
<phase_done name='emit_lir' stamp='1.317'/>
</phase>
<phase name='codeemit' stamp='1.317'>
<phase_done name='codeemit' stamp='1.317'/>
</phase>
<phase name='codeinstall' stamp='1.317'>
<phase_done name='codeinstall' stamp='1.332'/>
</phase>
<code_cache total_blobs='369' nmethods='87' adapters='196' free_code_cache='250408512'/>
<task_done success='1' nmsize='1136' count='981' backedge_count='981' stamp='1.332'/>
</task>
<task compile_id='89' method='java/io/BufferedInputStream read ()I' bytes='49' count='3695' iicount='3695' level='3' stamp='1.334'>
<phase name='buildIR' stamp='1.334'>
<type id='735' name='int'/>
<klass id='846' name='java/io/BufferedInputStream' flags='1'/>
<method id='847' holder='846' name='read' return='735' flags='33' bytes='49' iicount='3729'/>
<parse method='847'  stamp='1.334'>
<bc code='183' bci='12'/>
<type id='737' name='void'/>
<method id='849' holder='846' name='fill' return='737' flags='2' bytes='233' iicount='13'/>
<call method='849' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='29'/>
<klass id='838' name='[B' flags='1041'/>
<method id='851' holder='846' name='getBufIfOpen' return='838' flags='2' bytes='21' compile_id='86' compiler='C1' level='3' iicount='5958'/>
<call method='851' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='15'/>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='853' name='java/io/IOException' flags='1'/>
<method id='855' holder='853' name='&lt;init&gt;' return='737' arguments='743' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.335'/>
</parse>
<parse_done stamp='1.335'/>
</parse>
<phase name='optimize_blocks' stamp='1.335'>
<phase_done name='optimize_blocks' stamp='1.335'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.335'>
<phase_done name='rangeCheckElimination' stamp='1.335'/>
</phase>
<phase name='optimize_null_checks' stamp='1.335'>
<phase_done name='optimize_null_checks' stamp='1.335'/>
</phase>
<phase_done name='buildIR' stamp='1.335'/>
</phase>
<phase name='emit_lir' stamp='1.335'>
<phase name='lirGeneration' stamp='1.335'>
<phase_done name='lirGeneration' stamp='1.335'/>
</phase>
<phase name='linearScan' stamp='1.335'>
<phase_done name='linearScan' stamp='1.335'/>
</phase>
<phase_done name='emit_lir' stamp='1.335'/>
</phase>
<phase name='codeemit' stamp='1.335'>
<phase_done name='codeemit' stamp='1.335'/>
</phase>
<phase name='codeinstall' stamp='1.335'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='1.352'/>
</phase>
<code_cache total_blobs='372' nmethods='88' adapters='196' free_code_cache='250394560'/>
<task_done success='1' nmsize='1408' count='4533' inlined_bytes='21' stamp='1.352'/>
</task>
<task compile_id='100' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='668' backedge_count='53' iicount='668' level='3' stamp='1.354'>
<phase name='buildIR' stamp='1.354'>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='735' name='int'/>
<type id='729' name='boolean'/>
<klass id='846' name='java/util/HashMap' flags='1'/>
<method id='847' holder='846' name='putVal' return='742' arguments='735 742 742 729 729' flags='16' bytes='300' iicount='668'/>
<parse method='847'  stamp='1.354'>
<bc code='182' bci='20'/>
<klass id='852' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='853' holder='846' name='resize' return='852' flags='16' bytes='359' iicount='50'/>
<call method='853' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='850' name='java/util/HashMap$Node' flags='8'/>
<method id='855' holder='846' name='newNode' return='850' arguments='735 742 742 850' flags='0' bytes='13' iicount='537'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='856' holder='742' name='equals' return='729' arguments='742' flags='1' bytes='11' iicount='215'/>
<call method='856' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='857' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='858' holder='857' name='putTreeVal' return='857' arguments='846 852 735 742 742' flags='16' bytes='314' iicount='1'/>
<call method='858' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='737' name='void'/>
<method id='859' holder='846' name='treeifyBin' return='737' arguments='852 735' flags='16' bytes='110' iicount='1'/>
<call method='859' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='856' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='861' holder='846' name='afterNodeAccess' return='737' arguments='850' flags='0' bytes='1' iicount='2'/>
<call method='861' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='853' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='862' holder='846' name='afterNodeInsertion' return='737' arguments='729' flags='0' bytes='1' iicount='619'/>
<call method='862' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.356'/>
</parse>
<phase name='optimize_blocks' stamp='1.356'>
<phase_done name='optimize_blocks' stamp='1.356'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.356'>
<phase_done name='rangeCheckElimination' stamp='1.356'/>
</phase>
<phase name='optimize_null_checks' stamp='1.356'>
<phase_done name='optimize_null_checks' stamp='1.356'/>
</phase>
<phase_done name='buildIR' stamp='1.356'/>
</phase>
<phase name='emit_lir' stamp='1.356'>
<phase name='lirGeneration' stamp='1.356'>
<phase_done name='lirGeneration' stamp='1.356'/>
</phase>
<phase name='linearScan' stamp='1.356'>
<phase_done name='linearScan' stamp='1.357'/>
</phase>
<phase_done name='emit_lir' stamp='1.357'/>
</phase>
<phase name='codeemit' stamp='1.357'>
<phase_done name='codeemit' stamp='1.357'/>
</phase>
<phase name='codeinstall' stamp='1.357'>
<phase_done name='codeinstall' stamp='1.409'/>
</phase>
<code_cache total_blobs='374' nmethods='92' adapters='196' free_code_cache='250396416'/>
<task_done success='1' nmsize='4832' count='869' backedge_count='83' stamp='1.409'/>
</task>
<task compile_id='105' method='java/lang/invoke/MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='128' iicount='128' level='1' stamp='1.409'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='128' stamp='1.409'/>
</task>
<task compile_id='94' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='984' backedge_count='12' iicount='984' level='3' stamp='1.409'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='984' backedge_count='12' stamp='1.409'/>
</task>
<task compile_id='91' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='996' iicount='996' level='3' stamp='1.409'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='996' stamp='1.409'/>
</task>
<task compile_id='90' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='603' iicount='603' level='3' stamp='1.409'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='603' stamp='1.409'/>
</task>
<task compile_id='95' method='java/io/DataInputStream readShort ()S' bytes='40' count='2013' iicount='2013' level='3' stamp='1.409'>
<phase name='buildIR' stamp='1.410'>
<type id='734' name='short'/>
<klass id='846' name='java/io/DataInputStream' flags='1'/>
<method id='847' holder='846' name='readShort' return='734' flags='17' bytes='40' iicount='2013'/>
<parse method='847'  stamp='1.410'>
<bc code='182' bci='4'/>
<type id='735' name='int'/>
<klass id='811' name='java/io/InputStream' flags='1025'/>
<method id='851' holder='811' name='read' return='735' flags='1025' bytes='0' iicount='1'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='12'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='26'/>
<type id='737' name='void'/>
<klass id='852' name='java/io/EOFException' unloaded='1'/>
<method id='853' holder='852' name='&lt;init&gt;' return='737' unloaded='1'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.410'/>
</parse>
<phase name='optimize_blocks' stamp='1.410'>
<phase_done name='optimize_blocks' stamp='1.410'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.410'>
<phase_done name='rangeCheckElimination' stamp='1.410'/>
</phase>
<phase name='optimize_null_checks' stamp='1.410'>
<phase_done name='optimize_null_checks' stamp='1.410'/>
</phase>
<phase_done name='buildIR' stamp='1.410'/>
</phase>
<phase name='emit_lir' stamp='1.410'>
<phase name='lirGeneration' stamp='1.411'>
<phase_done name='lirGeneration' stamp='1.411'/>
</phase>
<phase name='linearScan' stamp='1.411'>
<phase_done name='linearScan' stamp='1.411'/>
</phase>
<phase_done name='emit_lir' stamp='1.411'/>
</phase>
<phase name='codeemit' stamp='1.411'>
<phase_done name='codeemit' stamp='1.411'/>
</phase>
<phase name='codeinstall' stamp='1.411'>
<phase_done name='codeinstall' stamp='1.422'/>
</phase>
<code_cache total_blobs='376' nmethods='94' adapters='196' free_code_cache='250394112'/>
<task_done success='1' nmsize='976' count='2013' stamp='1.422'/>
</task>
<task compile_id='102' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='2121' iicount='2121' level='3' stamp='1.422'>
<phase name='buildIR' stamp='1.422'>
<type id='735' name='int'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='846' name='java/util/HashMap' flags='1'/>
<method id='847' holder='846' name='hash' return='735' arguments='742' flags='24' bytes='20' iicount='2121'/>
<parse method='847'  stamp='1.422'>
<bc code='182' bci='9'/>
<method id='849' holder='742' name='hashCode' return='735' flags='257' bytes='0' compile_id='21' compile_kind='c2n' level='0' iicount='384'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.422'/>
</parse>
<phase name='optimize_blocks' stamp='1.422'>
<phase_done name='optimize_blocks' stamp='1.422'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.422'>
<phase_done name='rangeCheckElimination' stamp='1.422'/>
</phase>
<phase name='optimize_null_checks' stamp='1.422'>
<phase_done name='optimize_null_checks' stamp='1.422'/>
</phase>
<phase_done name='buildIR' stamp='1.422'/>
</phase>
<phase name='emit_lir' stamp='1.422'>
<phase name='lirGeneration' stamp='1.422'>
<phase_done name='lirGeneration' stamp='1.423'/>
</phase>
<phase name='linearScan' stamp='1.423'>
<phase_done name='linearScan' stamp='1.423'/>
</phase>
<phase_done name='emit_lir' stamp='1.423'/>
</phase>
<phase name='codeemit' stamp='1.423'>
<phase_done name='codeemit' stamp='1.423'/>
</phase>
<phase name='codeinstall' stamp='1.423'>
<phase_done name='codeinstall' stamp='1.430'/>
</phase>
<code_cache total_blobs='378' nmethods='96' adapters='196' free_code_cache='250392384'/>
<task_done success='1' nmsize='592' count='2121' stamp='1.430'/>
</task>
<task compile_id='101' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='867' iicount='867' level='3' stamp='1.430'>
<phase name='buildIR' stamp='1.431'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='846' name='java/util/HashMap$Node' flags='8'/>
<method id='847' holder='846' name='&lt;init&gt;' return='737' arguments='735 742 742 846' flags='0' bytes='26' iicount='867'/>
<parse method='847'  stamp='1.432'>
<bc code='183' bci='1'/>
<method id='849' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='14178'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='846'/>
<parse_done stamp='1.432'/>
</parse>
<parse_done stamp='1.432'/>
</parse>
<phase name='optimize_blocks' stamp='1.432'>
<phase_done name='optimize_blocks' stamp='1.432'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.432'>
<phase_done name='rangeCheckElimination' stamp='1.432'/>
</phase>
<phase name='optimize_null_checks' stamp='1.432'>
<phase_done name='optimize_null_checks' stamp='1.432'/>
</phase>
<phase_done name='buildIR' stamp='1.432'/>
</phase>
<phase name='emit_lir' stamp='1.432'>
<phase name='lirGeneration' stamp='1.432'>
<phase_done name='lirGeneration' stamp='1.432'/>
</phase>
<phase name='linearScan' stamp='1.432'>
<phase_done name='linearScan' stamp='1.432'/>
</phase>
<phase_done name='emit_lir' stamp='1.432'/>
</phase>
<phase name='codeemit' stamp='1.432'>
<phase_done name='codeemit' stamp='1.432'/>
</phase>
<phase name='codeinstall' stamp='1.432'>
<dependency type='no_finalizable_subclasses' ctxk='846'/>
<phase_done name='codeinstall' stamp='1.441'/>
</phase>
<code_cache total_blobs='380' nmethods='98' adapters='196' free_code_cache='250390848'/>
<task_done success='1' nmsize='536' count='867' inlined_bytes='1' stamp='1.441'/>
</task>
<task compile_id='85' method='jdk/internal/org/objectweb/asm/ByteVector putByte (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='39' count='554' iicount='554' level='3' stamp='1.441'>
<phase name='buildIR' stamp='1.441'>
<klass id='846' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<type id='735' name='int'/>
<method id='847' holder='846' name='putByte' return='846' arguments='735' flags='1' bytes='39' iicount='554'/>
<parse method='847'  stamp='1.441'>
<bc code='183' bci='18'/>
<type id='737' name='void'/>
<method id='849' holder='846' name='enlarge' return='737' arguments='735' flags='2' bytes='51' iicount='101'/>
<call method='849' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.442'/>
</parse>
<phase name='optimize_blocks' stamp='1.442'>
<phase_done name='optimize_blocks' stamp='1.442'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.442'>
<phase_done name='rangeCheckElimination' stamp='1.442'/>
</phase>
<phase name='optimize_null_checks' stamp='1.442'>
<phase_done name='optimize_null_checks' stamp='1.442'/>
</phase>
<phase_done name='buildIR' stamp='1.442'/>
</phase>
<phase name='emit_lir' stamp='1.442'>
<phase name='lirGeneration' stamp='1.442'>
<phase_done name='lirGeneration' stamp='1.442'/>
</phase>
<phase name='linearScan' stamp='1.442'>
<phase_done name='linearScan' stamp='1.442'/>
</phase>
<phase_done name='emit_lir' stamp='1.442'/>
</phase>
<phase name='codeemit' stamp='1.442'>
<phase_done name='codeemit' stamp='1.442'/>
</phase>
<phase name='codeinstall' stamp='1.442'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='1.452'/>
</phase>
<code_cache total_blobs='381' nmethods='99' adapters='196' free_code_cache='250389440'/>
<task_done success='1' nmsize='592' count='589' stamp='1.452'/>
</task>
<task compile_id='87' method='jdk/internal/org/objectweb/asm/ClassWriter newUTF8 (Ljava/lang/String;)I' bytes='70' count='562' iicount='562' level='3' stamp='1.452'>
<phase name='buildIR' stamp='1.452'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/ClassWriter' flags='1'/>
<method id='847' holder='846' name='newUTF8' return='735' arguments='743' flags='1' bytes='70' iicount='562'/>
<parse method='847'  stamp='1.452'>
<bc code='182' bci='8'/>
<type id='737' name='void'/>
<klass id='850' name='jdk/internal/org/objectweb/asm/Item' flags='16'/>
<method id='851' holder='850' name='set' return='737' arguments='735 743 743 743' flags='0' bytes='143' compile_id='64' compiler='C1' level='3' iicount='918'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='16'/>
<method id='853' holder='846' name='get' return='850' arguments='850' flags='2' bytes='49' compile_id='65' compiler='C1' level='3' iicount='922'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='29'/>
<klass id='849' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<method id='855' holder='849' name='putByte' return='849' arguments='735' flags='1' bytes='39' compile_id='85' compiler='C1' level='3' iicount='600'/>
<call method='855' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='849'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='849'/>
<bc code='182' bci='33'/>
<method id='857' holder='849' name='putUTF8' return='849' arguments='743' flags='1' bytes='142' compile_id='61' compiler='C1' level='3' iicount='479'/>
<call method='857' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='849'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='849'/>
<bc code='183' bci='56'/>
<method id='859' holder='850' name='&lt;init&gt;' return='737' arguments='735 850' flags='0' bytes='66' iicount='754'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='62'/>
<method id='861' holder='846' name='put' return='737' arguments='850' flags='2' bytes='152' iicount='754'/>
<call method='861' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.452'/>
</parse>
<phase name='optimize_blocks' stamp='1.452'>
<phase_done name='optimize_blocks' stamp='1.452'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.452'>
<phase_done name='rangeCheckElimination' stamp='1.452'/>
</phase>
<phase name='optimize_null_checks' stamp='1.452'>
<phase_done name='optimize_null_checks' stamp='1.452'/>
</phase>
<phase_done name='buildIR' stamp='1.452'/>
</phase>
<phase name='emit_lir' stamp='1.452'>
<phase name='lirGeneration' stamp='1.452'>
<phase_done name='lirGeneration' stamp='1.452'/>
</phase>
<phase name='linearScan' stamp='1.452'>
<phase_done name='linearScan' stamp='1.452'/>
</phase>
<phase_done name='emit_lir' stamp='1.452'/>
</phase>
<phase name='codeemit' stamp='1.452'>
<phase_done name='codeemit' stamp='1.453'/>
</phase>
<phase name='codeinstall' stamp='1.453'>
<dependency type='leaf_type' ctxk='846'/>
<dependency type='leaf_type' ctxk='849'/>
<phase_done name='codeinstall' stamp='1.470'/>
</phase>
<code_cache total_blobs='384' nmethods='102' adapters='196' free_code_cache='250386304'/>
<task_done success='1' nmsize='1088' count='571' stamp='1.470'/>
</task>
<task compile_id='99' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='869' iicount='869' level='3' stamp='1.470'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='869' stamp='1.470'/>
</task>
<task compile_id='110' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='525' iicount='525' level='3' stamp='1.470'>
<phase name='buildIR' stamp='1.472'>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<type id='730' name='char'/>
<method id='846' holder='809' name='append' return='809' arguments='730' flags='1' bytes='8' iicount='525'/>
<parse method='846'  stamp='1.472'>
<bc code='183' bci='2'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='848' holder='807' name='append' return='807' arguments='730' flags='1' bytes='29' compile_id='15' compiler='C2' level='4' iicount='34504'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='7'/>
<type id='737' name='void'/>
<type id='735' name='int'/>
<method id='850' holder='807' name='ensureCapacityInternal' return='737' arguments='735' flags='2' bytes='27' compile_id='6' compiler='C2' level='4' iicount='36599'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='17'/>
<method id='852' holder='807' name='newCapacity' return='735' arguments='735' flags='2' bytes='39' compile_id='58' compiler='C1' level='3' iicount='843'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='854' name='java/util/Arrays' flags='1'/>
<method id='855' holder='854' name='copyOf' return='835' arguments='835 735' flags='9' bytes='19' compile_id='5' compiler='C1' level='3' iicount='923'/>
<call method='855' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='184' bci='11'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='735' arguments='735 735' flags='9' bytes='11' compile_id='1' compiler='C2' level='4' iicount='7293'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='1.472'/>
</parse>
<bc code='184' bci='14'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='860' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.472'/>
</parse>
<parse_done stamp='1.472'/>
</parse>
<parse_done stamp='1.472'/>
</parse>
<parse_done stamp='1.472'/>
</parse>
<phase name='optimize_blocks' stamp='1.472'>
<phase_done name='optimize_blocks' stamp='1.472'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.472'>
<phase_done name='rangeCheckElimination' stamp='1.473'/>
</phase>
<phase name='optimize_null_checks' stamp='1.473'>
<phase_done name='optimize_null_checks' stamp='1.473'/>
</phase>
<phase_done name='buildIR' stamp='1.473'/>
</phase>
<phase name='emit_lir' stamp='1.473'>
<phase name='lirGeneration' stamp='1.473'>
<phase_done name='lirGeneration' stamp='1.473'/>
</phase>
<phase name='linearScan' stamp='1.473'>
<phase_done name='linearScan' stamp='1.473'/>
</phase>
<phase_done name='emit_lir' stamp='1.473'/>
</phase>
<phase name='codeemit' stamp='1.473'>
<phase_done name='codeemit' stamp='1.473'/>
</phase>
<phase name='codeinstall' stamp='1.473'>
<phase_done name='codeinstall' stamp='1.496'/>
</phase>
<code_cache total_blobs='385' nmethods='103' adapters='196' free_code_cache='250383488'/>
<task_done success='1' nmsize='1440' count='569' inlined_bytes='86' stamp='1.496'/>
</task>
<task compile_id='115' method='jdk/internal/org/objectweb/asm/Item &lt;init&gt; (ILjdk/internal/org/objectweb/asm/Item;)V' bytes='66' count='811' iicount='811' level='3' stamp='1.496'>
<phase name='buildIR' stamp='1.496'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/Item' flags='16'/>
<method id='847' holder='846' name='&lt;init&gt;' return='737' arguments='735 846' flags='0' bytes='66' iicount='811'/>
<parse method='847'  stamp='1.496'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='849' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='14370'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='1.496'/>
</parse>
<parse_done stamp='1.496'/>
</parse>
<phase name='optimize_blocks' stamp='1.496'>
<phase_done name='optimize_blocks' stamp='1.496'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.496'>
<phase_done name='rangeCheckElimination' stamp='1.496'/>
</phase>
<phase name='optimize_null_checks' stamp='1.496'>
<phase_done name='optimize_null_checks' stamp='1.496'/>
</phase>
<phase_done name='buildIR' stamp='1.496'/>
</phase>
<phase name='emit_lir' stamp='1.496'>
<phase name='lirGeneration' stamp='1.496'>
<phase_done name='lirGeneration' stamp='1.496'/>
</phase>
<phase name='linearScan' stamp='1.496'>
<phase_done name='linearScan' stamp='1.496'/>
</phase>
<phase_done name='emit_lir' stamp='1.496'/>
</phase>
<phase name='codeemit' stamp='1.496'>
<phase_done name='codeemit' stamp='1.497'/>
</phase>
<phase name='codeinstall' stamp='1.497'>
<phase_done name='codeinstall' stamp='1.506'/>
</phase>
<code_cache total_blobs='387' nmethods='105' adapters='196' free_code_cache='250381632'/>
<task_done success='1' nmsize='568' count='811' inlined_bytes='1' stamp='1.506'/>
</task>
<task compile_id='116' method='jdk/internal/org/objectweb/asm/ClassWriter put (Ljdk/internal/org/objectweb/asm/Item;)V' bytes='152' count='812' iicount='812' level='3' stamp='1.506'>
<phase name='buildIR' stamp='1.506'>
<type id='737' name='void'/>
<klass id='847' name='jdk/internal/org/objectweb/asm/Item' flags='16'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/ClassWriter' flags='1'/>
<method id='848' holder='846' name='put' return='737' arguments='847' flags='2' bytes='152' iicount='818'/>
<parse method='848'  stamp='1.506'>
<parse_done stamp='1.506'/>
</parse>
<phase name='optimize_blocks' stamp='1.506'>
<phase_done name='optimize_blocks' stamp='1.506'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.506'>
<phase_done name='rangeCheckElimination' stamp='1.506'/>
</phase>
<phase name='optimize_null_checks' stamp='1.506'>
<phase_done name='optimize_null_checks' stamp='1.506'/>
</phase>
<phase_done name='buildIR' stamp='1.506'/>
</phase>
<phase name='emit_lir' stamp='1.506'>
<phase name='lirGeneration' stamp='1.506'>
<phase_done name='lirGeneration' stamp='1.506'/>
</phase>
<phase name='linearScan' stamp='1.506'>
<phase_done name='linearScan' stamp='1.506'/>
</phase>
<phase_done name='emit_lir' stamp='1.506'/>
</phase>
<phase name='codeemit' stamp='1.506'>
<phase_done name='codeemit' stamp='1.506'/>
</phase>
<phase name='codeinstall' stamp='1.506'>
<phase_done name='codeinstall' stamp='1.536'/>
</phase>
<code_cache total_blobs='390' nmethods='108' adapters='196' free_code_cache='250377088'/>
<task_done success='1' nmsize='1944' count='840' stamp='1.536'/>
</task>
<task compile_id='112' method='java/lang/Class getClassLoader ()Ljava/lang/ClassLoader;' bytes='28' count='690' iicount='690' level='3' stamp='1.536'>
<phase name='buildIR' stamp='1.538'>
<klass id='746' name='java/lang/ClassLoader' flags='1025'/>
<klass id='744' name='java/lang/Class' flags='17'/>
<method id='846' holder='744' name='getClassLoader' return='746' flags='1' bytes='28' iicount='692'/>
<parse method='846'  stamp='1.538'>
<bc code='182' bci='1'/>
<method id='848' holder='744' name='getClassLoader0' return='746' flags='0' bytes='5' compile_id='30' compiler='C1' level='1' iicount='136'/>
<call method='848' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='1.538'/>
</parse>
<bc code='184' bci='11'/>
<klass id='754' name='java/lang/SecurityManager' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='850' holder='748' name='getSecurityManager' return='754' flags='9' bytes='4' compile_id='20' compiler='C1' level='3' iicount='1457'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.538'/>
</parse>
<bc code='184' bci='20'/>
<klass id='853' name='sun/reflect/Reflection' flags='1'/>
<method id='854' holder='853' name='getCallerClass' return='744' flags='265' bytes='0' iicount='72'/>
<call method='854' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='184' bci='23'/>
<type id='737' name='void'/>
<method id='855' holder='746' name='checkClassLoaderPermission' return='737' arguments='746 744' flags='8' bytes='29' iicount='1'/>
<call method='855' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='184' bci='0'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.538'/>
</parse>
<bc code='184' bci='9'/>
<method id='857' holder='746' name='getClassLoader' return='746' arguments='744' flags='8' bytes='11' iicount='8'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='182' bci='7'/>
<call method='848' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='1.538'/>
</parse>
<parse_done stamp='1.538'/>
</parse>
<bc code='184' bci='15'/>
<type id='729' name='boolean'/>
<method id='859' holder='746' name='needsClassLoaderPermissionCheck' return='729' arguments='746 746' flags='10' bytes='27' iicount='1'/>
<call method='859' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='182' bci='15'/>
<method id='861' holder='746' name='isAncestor' return='729' arguments='746' flags='0' bytes='20' iicount='1'/>
<call method='861' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='746' x='861'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<parse_done stamp='1.538'/>
</parse>
<parse_done stamp='1.539'/>
</parse>
<bc code='182' bci='25'/>
<klass id='866' name='java/security/Permission' flags='1025'/>
<method id='867' holder='754' name='checkPermission' return='737' arguments='866' flags='1' bytes='5' iicount='1'/>
<call method='867' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.539'/>
</parse>
<parse_done stamp='1.539'/>
</parse>
<phase name='optimize_blocks' stamp='1.539'>
<phase_done name='optimize_blocks' stamp='1.539'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.539'>
<phase_done name='rangeCheckElimination' stamp='1.539'/>
</phase>
<phase name='optimize_null_checks' stamp='1.539'>
<phase_done name='optimize_null_checks' stamp='1.539'/>
</phase>
<phase_done name='buildIR' stamp='1.539'/>
</phase>
<phase name='emit_lir' stamp='1.539'>
<phase name='lirGeneration' stamp='1.539'>
<phase_done name='lirGeneration' stamp='1.539'/>
</phase>
<phase name='linearScan' stamp='1.539'>
<phase_done name='linearScan' stamp='1.539'/>
</phase>
<phase_done name='emit_lir' stamp='1.539'/>
</phase>
<phase name='codeemit' stamp='1.539'>
<phase_done name='codeemit' stamp='1.539'/>
</phase>
<phase name='codeinstall' stamp='1.539'>
<dependency type='unique_concrete_method' ctxk='746' x='861'/>
<phase_done name='codeinstall' stamp='1.570'/>
</phase>
<code_cache total_blobs='393' nmethods='110' adapters='196' free_code_cache='250370368'/>
<task_done success='1' nmsize='2592' count='734' inlined_bytes='105' stamp='1.570'/>
</task>
<task compile_id='127' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='798' backedge_count='35127' iicount='798' level='3' stamp='1.571'>
<phase name='buildIR' stamp='1.571'>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='846' name='java/io/WinNTFileSystem' flags='0'/>
<method id='847' holder='846' name='normalize' return='743' arguments='743' flags='1' bytes='143' iicount='799'/>
<parse method='847'  stamp='1.571'>
<bc code='182' bci='1'/>
<type id='735' name='int'/>
<method id='849' holder='743' name='length' return='735' flags='1' bytes='6' compile_id='4' compiler='C2' level='4' iicount='32711'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='1.571'/>
</parse>
<bc code='182' bci='31'/>
<type id='730' name='char'/>
<method id='851' holder='743' name='charAt' return='730' arguments='735' flags='1' bytes='29' compile_id='10' compiler='C2' level='4' iicount='186300'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='18'/>
<type id='737' name='void'/>
<klass id='853' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='854' holder='853' name='&lt;init&gt;' return='737' arguments='735' unloaded='1'/>
<call method='854' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.571'/>
</parse>
<bc code='183' bci='61'/>
<method id='855' holder='846' name='normalize' return='743' arguments='743 735 735' flags='2' bytes='231' iicount='381'/>
<call method='855' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='90'/>
<call method='855' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='111'/>
<call method='855' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='137'/>
<call method='855' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.571'/>
</parse>
<phase name='optimize_blocks' stamp='1.571'>
<phase_done name='optimize_blocks' stamp='1.571'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.571'>
<phase_done name='rangeCheckElimination' stamp='1.571'/>
</phase>
<phase name='optimize_null_checks' stamp='1.571'>
<phase_done name='optimize_null_checks' stamp='1.571'/>
</phase>
<phase_done name='buildIR' stamp='1.571'/>
</phase>
<phase name='emit_lir' stamp='1.571'>
<phase name='lirGeneration' stamp='1.571'>
<phase_done name='lirGeneration' stamp='1.571'/>
</phase>
<phase name='linearScan' stamp='1.571'>
<phase_done name='linearScan' stamp='1.572'/>
</phase>
<phase_done name='emit_lir' stamp='1.572'/>
</phase>
<phase name='codeemit' stamp='1.572'>
<phase_done name='codeemit' stamp='1.572'/>
</phase>
<phase name='codeinstall' stamp='1.572'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='1.600'/>
</phase>
<code_cache total_blobs='396' nmethods='113' adapters='196' free_code_cache='250365568'/>
<task_done success='1' nmsize='2096' count='806' backedge_count='35221' inlined_bytes='35' stamp='1.600'/>
</task>
<task compile_id='133' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='735' backedge_count='14637' iicount='735' level='3' stamp='1.600'>
<phase name='buildIR' stamp='1.600'>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='846' name='java/util/Locale' flags='17'/>
<method id='847' holder='743' name='toLowerCase' return='743' arguments='846' flags='1' bytes='439' iicount='735'/>
<parse method='847'  stamp='1.600'>
<bc code='183' bci='8'/>
<type id='737' name='void'/>
<klass id='842' name='java/lang/NullPointerException' flags='1'/>
<method id='849' holder='842' name='&lt;init&gt;' return='737' flags='1' bytes='5' iicount='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='49'/>
<type id='735' name='int'/>
<method id='851' holder='743' name='codePointAt' return='735' arguments='735' flags='1' bytes='36' iicount='1'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='58'/>
<klass id='824' name='java/lang/Character' flags='17'/>
<method id='853' holder='824' name='toLowerCase' return='735' arguments='735' flags='9' bytes='9' compile_id='26' compiler='C2' level='4' iicount='14595'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='1'/>
<klass id='856' name='java/lang/CharacterData' flags='1024'/>
<method id='857' holder='856' name='of' return='856' arguments='735' flags='24' bytes='120' iicount='15278'/>
<call method='857' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='859' holder='856' name='toLowerCase' return='735' arguments='735' flags='1024' bytes='0' iicount='1'/>
<call method='859' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.600'/>
</parse>
<bc code='184' bci='70'/>
<method id='860' holder='824' name='charCount' return='735' arguments='735' flags='9' bytes='12' iicount='12'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<parse_done stamp='1.600'/>
</parse>
<bc code='184' bci='82'/>
<type id='730' name='char'/>
<method id='862' holder='824' name='toLowerCase' return='730' arguments='730' flags='9' bytes='6' iicount='2066'/>
<call method='862' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='862'>
<bc code='184' bci='1'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='1'/>
<call method='857' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<call method='859' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.600'/>
</parse>
<parse_done stamp='1.600'/>
</parse>
<bc code='184' bci='116'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='864' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='864' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='120'/>
<method id='866' holder='846' name='getLanguage' return='743' flags='1' bytes='8' iicount='170'/>
<call method='866' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='866'>
<bc code='182' bci='4'/>
<klass id='868' name='sun/util/locale/BaseLocale' flags='17'/>
<method id='869' holder='868' name='getLanguage' return='743' flags='1' bytes='5' iicount='170'/>
<call method='869' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='869'>
<parse_done stamp='1.600'/>
</parse>
<parse_done stamp='1.600'/>
</parse>
<bc code='182' bci='190'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='197'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<parse_done stamp='1.601'/>
</parse>
<bc code='184' bci='243'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='1'/>
<call method='857' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<call method='859' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.601'/>
</parse>
<bc code='184' bci='233'/>
<klass id='874' name='java/lang/ConditionalSpecialCasing' unloaded='1'/>
<method id='875' holder='874' name='toLowerCaseEx' return='735' arguments='743 735 846' unloaded='1'/>
<call method='875' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='271'/>
<klass id='835' name='[C' flags='1041'/>
<method id='876' holder='874' name='toLowerCaseCharArray' return='835' arguments='743 735 846' unloaded='1'/>
<call method='876' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='296'/>
<method id='877' holder='824' name='toChars' return='735' arguments='735 835 735' flags='9' bytes='37' iicount='1'/>
<call method='877' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='310'/>
<method id='879' holder='824' name='toChars' return='835' arguments='735' flags='9' bytes='43' iicount='1'/>
<call method='879' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='351'/>
<call method='864' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='435'/>
<method id='881' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' compile_id='47' compiler='C1' level='3' iicount='3083'/>
<call method='881' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.601'/>
</parse>
<phase name='optimize_blocks' stamp='1.601'>
<phase_done name='optimize_blocks' stamp='1.601'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.601'>
<phase_done name='rangeCheckElimination' stamp='1.601'/>
</phase>
<phase name='optimize_null_checks' stamp='1.601'>
<phase_done name='optimize_null_checks' stamp='1.601'/>
</phase>
<phase_done name='buildIR' stamp='1.601'/>
</phase>
<phase name='emit_lir' stamp='1.601'>
<phase name='lirGeneration' stamp='1.601'>
<phase_done name='lirGeneration' stamp='1.602'/>
</phase>
<phase name='linearScan' stamp='1.602'>
<phase_done name='linearScan' stamp='1.602'/>
</phase>
<phase_done name='emit_lir' stamp='1.602'/>
</phase>
<phase name='codeemit' stamp='1.602'>
<phase_done name='codeemit' stamp='1.603'/>
</phase>
<phase name='codeinstall' stamp='1.603'>
<phase_done name='codeinstall' stamp='1.678'/>
</phase>
<code_cache total_blobs='399' nmethods='116' adapters='196' free_code_cache='250353280'/>
<task_done success='1' nmsize='6304' count='740' backedge_count='14657' inlined_bytes='70' stamp='1.678'/>
</task>
<task compile_id='119' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='652' iicount='652' level='3' stamp='1.678'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='652' stamp='1.678'/>
</task>
<task compile_id='118' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='652' iicount='652' level='3' stamp='1.678'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='652' stamp='1.678'/>
</task>
<task compile_id='117' method='sun/invoke/util/Wrapper basicTypeChar ()C' bytes='5' count='146' iicount='146' level='1' stamp='1.678'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='146' stamp='1.678'/>
</task>
<task compile_id='135' method='java/lang/Character toLowerCase (C)C' bytes='6' count='2070' iicount='2070' level='3' stamp='1.678'>
<phase name='buildIR' stamp='1.681'>
<type id='730' name='char'/>
<klass id='824' name='java/lang/Character' flags='17'/>
<method id='846' holder='824' name='toLowerCase' return='730' arguments='730' flags='9' bytes='6' iicount='2070'/>
<parse method='846'  stamp='1.681'>
<bc code='184' bci='1'/>
<type id='735' name='int'/>
<method id='848' holder='824' name='toLowerCase' return='735' arguments='735' flags='9' bytes='9' compile_id='26' compiler='C2' level='4' iicount='14595'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='184' bci='1'/>
<klass id='851' name='java/lang/CharacterData' flags='1024'/>
<method id='852' holder='851' name='of' return='851' arguments='735' flags='24' bytes='120' iicount='15278'/>
<call method='852' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='854' holder='851' name='toLowerCase' return='735' arguments='735' flags='1024' bytes='0' iicount='1'/>
<call method='854' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.681'/>
</parse>
<parse_done stamp='1.681'/>
</parse>
<phase name='optimize_blocks' stamp='1.681'>
<phase_done name='optimize_blocks' stamp='1.681'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.681'>
<phase_done name='rangeCheckElimination' stamp='1.681'/>
</phase>
<phase name='optimize_null_checks' stamp='1.681'>
<phase_done name='optimize_null_checks' stamp='1.681'/>
</phase>
<phase_done name='buildIR' stamp='1.681'/>
</phase>
<phase name='emit_lir' stamp='1.681'>
<phase name='lirGeneration' stamp='1.681'>
<phase_done name='lirGeneration' stamp='1.681'/>
</phase>
<phase name='linearScan' stamp='1.681'>
<phase_done name='linearScan' stamp='1.681'/>
</phase>
<phase_done name='emit_lir' stamp='1.681'/>
</phase>
<phase name='codeemit' stamp='1.681'>
<phase_done name='codeemit' stamp='1.681'/>
</phase>
<phase name='codeinstall' stamp='1.681'>
<phase_done name='codeinstall' stamp='1.690'/>
</phase>
<code_cache total_blobs='400' nmethods='117' adapters='196' free_code_cache='250351936'/>
<task_done success='1' nmsize='672' count='2070' inlined_bytes='9' stamp='1.690'/>
</task>
<task compile_id='129' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='1342' iicount='1342' level='1' stamp='1.690'>
<phase name='buildIR' stamp='1.690'>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='813' name='java/io/File' flags='1'/>
<method id='846' holder='813' name='getPath' return='743' flags='1' bytes='5' iicount='1342'/>
<parse method='846'  stamp='1.690'>
<parse_done stamp='1.690'/>
</parse>
<phase name='optimize_blocks' stamp='1.690'>
<phase_done name='optimize_blocks' stamp='1.690'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.690'>
<phase_done name='rangeCheckElimination' stamp='1.690'/>
</phase>
<phase name='optimize_null_checks' stamp='1.690'>
<phase_done name='optimize_null_checks' stamp='1.690'/>
</phase>
<phase_done name='buildIR' stamp='1.690'/>
</phase>
<phase name='emit_lir' stamp='1.690'>
<phase name='lirGeneration' stamp='1.690'>
<phase_done name='lirGeneration' stamp='1.690'/>
</phase>
<phase name='linearScan' stamp='1.690'>
<phase_done name='linearScan' stamp='1.690'/>
</phase>
<phase_done name='emit_lir' stamp='1.690'/>
</phase>
<phase name='codeemit' stamp='1.690'>
<phase_done name='codeemit' stamp='1.690'/>
</phase>
<phase name='codeinstall' stamp='1.690'>
<phase_done name='codeinstall' stamp='1.694'/>
</phase>
<code_cache total_blobs='401' nmethods='118' adapters='196' free_code_cache='250351168'/>
<task_done success='1' nmsize='280' count='1347' stamp='1.694'/>
</task>
<task compile_id='75' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;)V' bytes='7' count='481' iicount='481' level='3' stamp='1.694'>
<phase name='buildIR' stamp='1.694'>
<type id='737' name='void'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='768' name='java/lang/ref/Reference' flags='1025'/>
<method id='846' holder='768' name='&lt;init&gt;' return='737' arguments='742' flags='0' bytes='7' iicount='481'/>
<parse method='846'  stamp='1.694'>
<bc code='183' bci='3'/>
<klass id='775' name='java/lang/ref/ReferenceQueue' flags='1'/>
<method id='848' holder='768' name='&lt;init&gt;' return='737' arguments='742 775' flags='0' bytes='25' compile_id='34' compiler='C1' level='3' iicount='1210'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<method id='850' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='15137'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='768'/>
<parse_done stamp='1.695'/>
</parse>
<parse_done stamp='1.695'/>
</parse>
<parse_done stamp='1.695'/>
</parse>
<phase name='optimize_blocks' stamp='1.695'>
<phase_done name='optimize_blocks' stamp='1.695'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.695'>
<phase_done name='rangeCheckElimination' stamp='1.695'/>
</phase>
<phase name='optimize_null_checks' stamp='1.695'>
<phase_done name='optimize_null_checks' stamp='1.695'/>
</phase>
<phase_done name='buildIR' stamp='1.695'/>
</phase>
<phase name='emit_lir' stamp='1.695'>
<phase name='lirGeneration' stamp='1.695'>
<phase_done name='lirGeneration' stamp='1.695'/>
</phase>
<phase name='linearScan' stamp='1.695'>
<phase_done name='linearScan' stamp='1.695'/>
</phase>
<phase_done name='emit_lir' stamp='1.695'/>
</phase>
<phase name='codeemit' stamp='1.695'>
<phase_done name='codeemit' stamp='1.695'/>
</phase>
<phase name='codeinstall' stamp='1.695'>
<dependency type='no_finalizable_subclasses' ctxk='768'/>
<phase_done name='codeinstall' stamp='1.711'/>
</phase>
<code_cache total_blobs='405' nmethods='122' adapters='196' free_code_cache='250348416'/>
<task_done success='1' nmsize='664' count='490' inlined_bytes='26' stamp='1.711'/>
</task>
<task compile_id='141' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;II)Ljava/lang/String;' bytes='231' count='388' backedge_count='33903' iicount='388' level='3' stamp='1.714'>
<phase name='buildIR' stamp='1.714'>
<klass id='743' name='java/lang/String' flags='17'/>
<type id='735' name='int'/>
<klass id='846' name='java/io/WinNTFileSystem' flags='0'/>
<method id='847' holder='846' name='normalize' return='743' arguments='743 735 735' flags='2' bytes='231' iicount='388'/>
<parse method='847'  stamp='1.714'>
<bc code='183' bci='24'/>
<type id='737' name='void'/>
<klass id='808' name='java/lang/StringBuffer' flags='17'/>
<method id='849' holder='808' name='&lt;init&gt;' return='737' arguments='735' flags='1' bytes='6' iicount='541'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='2'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='851' holder='807' name='&lt;init&gt;' return='737' arguments='735' flags='0' bytes='12' compile_id='57' compiler='C1' level='3' iicount='1495'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='853' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='15257'/>
<call method='853' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<parse_done stamp='1.714'/>
</parse>
<parse_done stamp='1.714'/>
</parse>
<parse_done stamp='1.714'/>
</parse>
<bc code='183' bci='38'/>
<method id='855' holder='846' name='normalizePrefix' return='735' arguments='743 735 808' flags='2' bytes='132' iicount='391'/>
<call method='855' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='54'/>
<method id='857' holder='743' name='substring' return='743' arguments='735 735' flags='1' bytes='79' compile_id='48' compiler='C1' level='3' iicount='835'/>
<call method='857' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='57'/>
<method id='859' holder='808' name='append' return='808' arguments='743' flags='33' bytes='13' iicount='453'/>
<call method='859' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='7'/>
<method id='861' holder='807' name='append' return='807' arguments='743' flags='1' bytes='50' compile_id='28' compiler='C1' level='3' iicount='2273'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.717'/>
</parse>
<bc code='182' bci='73'/>
<type id='730' name='char'/>
<method id='863' holder='743' name='charAt' return='730' arguments='735' flags='1' bytes='29' compile_id='10' compiler='C2' level='4' iicount='189648'/>
<call method='863' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='18'/>
<klass id='865' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='866' holder='865' name='&lt;init&gt;' return='737' arguments='735' unloaded='1'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.717'/>
</parse>
<bc code='183' bci='81'/>
<type id='729' name='boolean'/>
<method id='867' holder='846' name='isSlash' return='729' arguments='730' flags='2' bytes='18' compile_id='13' compiler='C2' level='4' iicount='37563'/>
<call method='867' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<parse_done stamp='1.717'/>
</parse>
<bc code='182' bci='97'/>
<call method='863' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='18'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.717'/>
</parse>
<bc code='183' bci='100'/>
<call method='867' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<parse_done stamp='1.717'/>
</parse>
<bc code='182' bci='120'/>
<method id='869' holder='808' name='length' return='735' flags='33' bytes='5' iicount='4'/>
<call method='869' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='869'>
<parse_done stamp='1.717'/>
</parse>
<bc code='182' bci='134'/>
<method id='871' holder='808' name='charAt' return='730' arguments='735' flags='33' bytes='28' iicount='1'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='17'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.717'/>
</parse>
<bc code='182' bci='146'/>
<method id='873' holder='808' name='append' return='808' arguments='730' flags='33' bytes='13' compile_id='14' compiler='C2' level='4' iicount='34381'/>
<call method='873' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='183' bci='7'/>
<method id='875' holder='807' name='append' return='807' arguments='730' flags='1' bytes='29' compile_id='15' compiler='C2' level='4' iicount='34740'/>
<call method='875' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='7'/>
<method id='877' holder='807' name='ensureCapacityInternal' return='737' arguments='735' flags='2' bytes='27' compile_id='6' compiler='C2' level='4' iicount='37077'/>
<call method='877' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='877'>
<bc code='183' bci='17'/>
<method id='879' holder='807' name='newCapacity' return='735' arguments='735' flags='2' bytes='39' compile_id='58' compiler='C1' level='3' iicount='933'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='881' name='java/util/Arrays' flags='1'/>
<method id='882' holder='881' name='copyOf' return='835' arguments='835 735' flags='9' bytes='19' compile_id='5' compiler='C1' level='3' iicount='1029'/>
<call method='882' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='882'>
<bc code='184' bci='11'/>
<klass id='884' name='java/lang/Math' flags='17'/>
<method id='885' holder='884' name='min' return='735' arguments='735 735' flags='9' bytes='11' compile_id='1' compiler='C2' level='4' iicount='7993'/>
<call method='885' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='885'>
<parse_done stamp='1.718'/>
</parse>
<bc code='184' bci='14'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='887' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='887' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.718'/>
</parse>
<parse_done stamp='1.718'/>
</parse>
<parse_done stamp='1.718'/>
</parse>
<parse_done stamp='1.718'/>
</parse>
<bc code='182' bci='162'/>
<call method='873' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='183' bci='7'/>
<call method='875' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='7'/>
<call method='877' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='877'>
<bc code='183' bci='17'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<call method='882' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='882'>
<bc code='184' bci='11'/>
<call method='885' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='885'>
<parse_done stamp='1.718'/>
</parse>
<bc code='184' bci='14'/>
<call method='887' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.718'/>
</parse>
<parse_done stamp='1.718'/>
</parse>
<parse_done stamp='1.718'/>
</parse>
<parse_done stamp='1.718'/>
</parse>
<bc code='182' bci='179'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='17'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.718'/>
</parse>
<bc code='183' bci='182'/>
<call method='867' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<parse_done stamp='1.718'/>
</parse>
<bc code='182' bci='192'/>
<call method='873' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='183' bci='7'/>
<call method='875' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='7'/>
<call method='877' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='877'>
<bc code='183' bci='17'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<call method='882' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='882'>
<bc code='184' bci='11'/>
<call method='885' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='885'>
<parse_done stamp='1.718'/>
</parse>
<bc code='184' bci='14'/>
<call method='887' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.718'/>
</parse>
<parse_done stamp='1.718'/>
</parse>
<parse_done stamp='1.719'/>
</parse>
<parse_done stamp='1.719'/>
</parse>
<bc code='182' bci='203'/>
<call method='873' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='183' bci='7'/>
<call method='875' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='7'/>
<call method='877' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='877'>
<bc code='183' bci='17'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<call method='882' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='882'>
<bc code='184' bci='11'/>
<call method='885' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='885'>
<parse_done stamp='1.719'/>
</parse>
<bc code='184' bci='14'/>
<call method='887' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.719'/>
</parse>
<parse_done stamp='1.719'/>
</parse>
<parse_done stamp='1.719'/>
</parse>
<parse_done stamp='1.719'/>
</parse>
<bc code='182' bci='214'/>
<call method='873' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='183' bci='7'/>
<call method='875' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='7'/>
<call method='877' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='877'>
<bc code='183' bci='17'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<call method='882' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='882'>
<bc code='184' bci='11'/>
<call method='885' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='885'>
<parse_done stamp='1.719'/>
</parse>
<bc code='184' bci='14'/>
<call method='887' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.719'/>
</parse>
<parse_done stamp='1.719'/>
</parse>
<parse_done stamp='1.719'/>
</parse>
<parse_done stamp='1.719'/>
</parse>
<bc code='182' bci='223'/>
<method id='889' holder='808' name='toString' return='743' flags='33' bytes='36' iicount='691'/>
<call method='889' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.719'/>
</parse>
<phase name='optimize_blocks' stamp='1.719'>
<phase_done name='optimize_blocks' stamp='1.719'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.719'>
<phase_done name='rangeCheckElimination' stamp='1.719'/>
</phase>
<phase name='optimize_null_checks' stamp='1.719'>
<phase_done name='optimize_null_checks' stamp='1.720'/>
</phase>
<phase_done name='buildIR' stamp='1.720'/>
</phase>
<phase name='emit_lir' stamp='1.720'>
<phase name='lirGeneration' stamp='1.720'>
<phase_done name='lirGeneration' stamp='1.720'/>
</phase>
<phase name='linearScan' stamp='1.720'>
<phase_done name='linearScan' stamp='1.722'/>
</phase>
<phase_done name='emit_lir' stamp='1.722'/>
</phase>
<phase name='codeemit' stamp='1.722'>
<phase_done name='codeemit' stamp='1.723'/>
</phase>
<phase name='codeinstall' stamp='1.723'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='1.919'/>
</phase>
<code_cache total_blobs='411' nmethods='127' adapters='197' free_code_cache='250318144'/>
<task_done success='1' nmsize='16032' count='391' backedge_count='34006' inlined_bytes='700' stamp='1.919'/>
</task>
<task compile_id='143' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1284' backedge_count='31' iicount='1284' level='3' stamp='1.919'>
<phase name='buildIR' stamp='1.922'>
<klass id='847' name='java/util/HashMap$Node' flags='8'/>
<type id='735' name='int'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='846' name='java/util/HashMap' flags='1'/>
<method id='848' holder='846' name='getNode' return='847' arguments='735 742' flags='16' bytes='148' iicount='1284'/>
<parse method='848'  stamp='1.922'>
<bc code='182' bci='59'/>
<type id='729' name='boolean'/>
<method id='852' holder='742' name='equals' return='729' arguments='742' flags='1' bytes='11' iicount='668'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='94'/>
<klass id='853' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='854' holder='853' name='getTreeNode' return='853' arguments='735 742' flags='16' bytes='22' iicount='1'/>
<call method='854' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='126'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.922'/>
</parse>
<phase name='optimize_blocks' stamp='1.922'>
<phase_done name='optimize_blocks' stamp='1.922'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.922'>
<phase_done name='rangeCheckElimination' stamp='1.922'/>
</phase>
<phase name='optimize_null_checks' stamp='1.922'>
<phase_done name='optimize_null_checks' stamp='1.922'/>
</phase>
<phase_done name='buildIR' stamp='1.922'/>
</phase>
<phase name='emit_lir' stamp='1.922'>
<phase name='lirGeneration' stamp='1.922'>
<phase_done name='lirGeneration' stamp='1.922'/>
</phase>
<phase name='linearScan' stamp='1.922'>
<phase_done name='linearScan' stamp='1.923'/>
</phase>
<phase_done name='emit_lir' stamp='1.923'/>
</phase>
<phase name='codeemit' stamp='1.923'>
<phase_done name='codeemit' stamp='1.923'/>
</phase>
<phase name='codeinstall' stamp='1.923'>
<phase_done name='codeinstall' stamp='1.947'/>
</phase>
<code_cache total_blobs='412' nmethods='128' adapters='197' free_code_cache='250313920'/>
<task_done success='1' nmsize='2480' count='1284' backedge_count='31' stamp='1.947'/>
</task>
<task compile_id='146' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='1212' iicount='1212' level='3' stamp='1.947'>
<phase name='buildIR' stamp='1.947'>
<type id='737' name='void'/>
<klass id='835' name='[C' flags='1041'/>
<type id='729' name='boolean'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='&lt;init&gt;' return='737' arguments='835 729' flags='0' bytes='10' iicount='1212'/>
<parse method='846'  stamp='1.947'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='848' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='15680'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='1.947'/>
</parse>
<parse_done stamp='1.947'/>
</parse>
<phase name='optimize_blocks' stamp='1.947'>
<phase_done name='optimize_blocks' stamp='1.947'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.947'>
<phase_done name='rangeCheckElimination' stamp='1.947'/>
</phase>
<phase name='optimize_null_checks' stamp='1.947'>
<phase_done name='optimize_null_checks' stamp='1.947'/>
</phase>
<phase_done name='buildIR' stamp='1.947'/>
</phase>
<phase name='emit_lir' stamp='1.947'>
<phase name='lirGeneration' stamp='1.947'>
<phase_done name='lirGeneration' stamp='1.947'/>
</phase>
<phase name='linearScan' stamp='1.947'>
<phase_done name='linearScan' stamp='1.947'/>
</phase>
<phase_done name='emit_lir' stamp='1.947'/>
</phase>
<phase name='codeemit' stamp='1.947'>
<phase_done name='codeemit' stamp='1.948'/>
</phase>
<phase name='codeinstall' stamp='1.948'>
<phase_done name='codeinstall' stamp='1.955'/>
</phase>
<code_cache total_blobs='414' nmethods='130' adapters='197' free_code_cache='250312512'/>
<task_done success='1' nmsize='472' count='1224' inlined_bytes='1' stamp='1.955'/>
</task>
<task compile_id='131' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='943' iicount='943' level='3' stamp='1.955'>
<phase name='buildIR' stamp='1.955'>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='846' name='java/util/HashMap' flags='1'/>
<method id='847' holder='846' name='put' return='742' arguments='742 742' flags='1' bytes='13' iicount='943'/>
<parse method='847'  stamp='1.955'>
<bc code='184' bci='2'/>
<type id='735' name='int'/>
<method id='849' holder='846' name='hash' return='735' arguments='742' flags='24' bytes='20' compile_id='102' compiler='C1' level='3' iicount='2230'/>
<call method='849' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='182' bci='9'/>
<method id='851' holder='742' name='hashCode' return='735' flags='257' bytes='0' compile_id='21' compile_kind='c2n' level='0' iicount='384'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.956'/>
</parse>
<bc code='182' bci='9'/>
<type id='729' name='boolean'/>
<method id='852' holder='846' name='putVal' return='742' arguments='735 742 742 729 729' flags='16' bytes='300' compile_id='100' compiler='C1' level='3' iicount='943'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.956'/>
</parse>
<phase name='optimize_blocks' stamp='1.956'>
<phase_done name='optimize_blocks' stamp='1.956'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.956'>
<phase_done name='rangeCheckElimination' stamp='1.956'/>
</phase>
<phase name='optimize_null_checks' stamp='1.956'>
<phase_done name='optimize_null_checks' stamp='1.956'/>
</phase>
<phase_done name='buildIR' stamp='1.956'/>
</phase>
<phase name='emit_lir' stamp='1.956'>
<phase name='lirGeneration' stamp='1.956'>
<phase_done name='lirGeneration' stamp='1.956'/>
</phase>
<phase name='linearScan' stamp='1.956'>
<phase_done name='linearScan' stamp='1.956'/>
</phase>
<phase_done name='emit_lir' stamp='1.956'/>
</phase>
<phase name='codeemit' stamp='1.956'>
<phase_done name='codeemit' stamp='1.956'/>
</phase>
<phase name='codeinstall' stamp='1.956'>
<phase_done name='codeinstall' stamp='1.968'/>
</phase>
<code_cache total_blobs='417' nmethods='133' adapters='197' free_code_cache='250309952'/>
<task_done success='1' nmsize='960' count='943' inlined_bytes='20' stamp='1.968'/>
</task>
<task compile_id='138' method='java/lang/String toCharArray ()[C' bytes='25' count='1159' iicount='1159' level='3' stamp='1.968'>
<phase name='buildIR' stamp='1.970'>
<klass id='835' name='[C' flags='1041'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='toCharArray' return='835' flags='1' bytes='25' iicount='1159'/>
<parse method='846'  stamp='1.970'>
<bc code='184' bci='20'/>
<type id='737' name='void'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='735' name='int'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='848' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.970'/>
</parse>
<phase name='optimize_blocks' stamp='1.970'>
<phase_done name='optimize_blocks' stamp='1.970'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.970'>
<phase_done name='rangeCheckElimination' stamp='1.970'/>
</phase>
<phase name='optimize_null_checks' stamp='1.970'>
<phase_done name='optimize_null_checks' stamp='1.970'/>
</phase>
<phase_done name='buildIR' stamp='1.970'/>
</phase>
<phase name='emit_lir' stamp='1.970'>
<phase name='lirGeneration' stamp='1.970'>
<phase_done name='lirGeneration' stamp='1.970'/>
</phase>
<phase name='linearScan' stamp='1.970'>
<phase_done name='linearScan' stamp='1.970'/>
</phase>
<phase_done name='emit_lir' stamp='1.970'/>
</phase>
<phase name='codeemit' stamp='1.970'>
<phase_done name='codeemit' stamp='1.970'/>
</phase>
<phase name='codeinstall' stamp='1.970'>
<phase_done name='codeinstall' stamp='1.979'/>
</phase>
<code_cache total_blobs='418' nmethods='134' adapters='197' free_code_cache='250308608'/>
<task_done success='1' nmsize='656' count='1159' stamp='1.979'/>
</task>
<task compile_id='153' method='java/lang/Object equals (Ljava/lang/Object;)Z' bytes='11' count='780' iicount='780' level='3' stamp='1.979'>
<phase name='buildIR' stamp='1.979'>
<type id='729' name='boolean'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='846' holder='742' name='equals' return='729' arguments='742' flags='1' bytes='11' iicount='780'/>
<parse method='846'  stamp='1.979'>
<parse_done stamp='1.980'/>
</parse>
<phase name='optimize_blocks' stamp='1.980'>
<phase_done name='optimize_blocks' stamp='1.980'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.980'>
<phase_done name='rangeCheckElimination' stamp='1.980'/>
</phase>
<phase name='optimize_null_checks' stamp='1.980'>
<phase_done name='optimize_null_checks' stamp='1.980'/>
</phase>
<phase_done name='buildIR' stamp='1.980'/>
</phase>
<phase name='emit_lir' stamp='1.980'>
<phase name='lirGeneration' stamp='1.980'>
<phase_done name='lirGeneration' stamp='1.980'/>
</phase>
<phase name='linearScan' stamp='1.980'>
<phase_done name='linearScan' stamp='1.980'/>
</phase>
<phase_done name='emit_lir' stamp='1.980'/>
</phase>
<phase name='codeemit' stamp='1.980'>
<phase_done name='codeemit' stamp='1.980'/>
</phase>
<phase name='codeinstall' stamp='1.980'>
<phase_done name='codeinstall' stamp='1.984'/>
</phase>
<code_cache total_blobs='419' nmethods='135' adapters='197' free_code_cache='250307456'/>
<task_done success='1' nmsize='440' count='780' stamp='1.984'/>
</task>
<task compile_id='155' method='java/lang/invoke/MemberName testAllFlags (I)Z' bytes='7' count='642' iicount='642' level='3' stamp='1.984'>
<phase name='buildIR' stamp='1.984'>
<type id='729' name='boolean'/>
<type id='735' name='int'/>
<klass id='798' name='java/lang/invoke/MemberName' flags='16'/>
<method id='846' holder='798' name='testAllFlags' return='729' arguments='735' flags='2' bytes='7' iicount='642'/>
<parse method='846'  stamp='1.984'>
<bc code='183' bci='3'/>
<method id='848' holder='798' name='testFlags' return='729' arguments='735 735' flags='2' bytes='16' compile_id='66' compiler='C1' level='3' iicount='1883'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='1.984'/>
</parse>
<parse_done stamp='1.984'/>
</parse>
<phase name='optimize_blocks' stamp='1.984'>
<phase_done name='optimize_blocks' stamp='1.984'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.984'>
<phase_done name='rangeCheckElimination' stamp='1.984'/>
</phase>
<phase name='optimize_null_checks' stamp='1.984'>
<phase_done name='optimize_null_checks' stamp='1.984'/>
</phase>
<phase_done name='buildIR' stamp='1.984'/>
</phase>
<phase name='emit_lir' stamp='1.984'>
<phase name='lirGeneration' stamp='1.984'>
<phase_done name='lirGeneration' stamp='1.984'/>
</phase>
<phase name='linearScan' stamp='1.984'>
<phase_done name='linearScan' stamp='1.984'/>
</phase>
<phase_done name='emit_lir' stamp='1.984'/>
</phase>
<phase name='codeemit' stamp='1.984'>
<phase_done name='codeemit' stamp='1.984'/>
</phase>
<phase name='codeinstall' stamp='1.984'>
<phase_done name='codeinstall' stamp='1.989'/>
</phase>
<code_cache total_blobs='420' nmethods='136' adapters='197' free_code_cache='250306240'/>
<task_done success='1' nmsize='536' count='649' inlined_bytes='16' stamp='1.989'/>
</task>
<task compile_id='154' method='java/lang/invoke/LambdaForm$BasicType basicType (Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='19' count='656' iicount='656' level='3' stamp='1.990'>
<phase name='buildIR' stamp='1.990'>
<klass id='846' name='java/lang/invoke/LambdaForm$BasicType' flags='16408'/>
<klass id='744' name='java/lang/Class' flags='17'/>
<method id='847' holder='846' name='basicType' return='846' arguments='744' flags='8' bytes='19' iicount='656'/>
<parse method='847'  stamp='1.990'>
<bc code='182' bci='1'/>
<type id='729' name='boolean'/>
<method id='849' holder='744' name='isPrimitive' return='729' flags='257' bytes='0' compile_id='72' compile_kind='c2n' level='0' iicount='384'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<bc code='184' bci='12'/>
<klass id='852' name='sun/invoke/util/Wrapper' flags='16401'/>
<method id='853' holder='852' name='forPrimitiveType' return='852' arguments='744' flags='9' bytes='49' iicount='97'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='15'/>
<method id='855' holder='846' name='basicType' return='846' arguments='852' flags='8' bytes='10' iicount='18'/>
<call method='855' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='182' bci='1'/>
<type id='730' name='char'/>
<method id='857' holder='852' name='basicTypeChar' return='730' flags='1' bytes='5' iicount='230'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<parse_done stamp='1.990'/>
</parse>
<bc code='184' bci='6'/>
<method id='859' holder='846' name='basicType' return='846' arguments='730' flags='8' bytes='172' iicount='303'/>
<call method='859' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.990'/>
</parse>
<parse_done stamp='1.990'/>
</parse>
<phase name='optimize_blocks' stamp='1.990'>
<phase_done name='optimize_blocks' stamp='1.990'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.990'>
<phase_done name='rangeCheckElimination' stamp='1.990'/>
</phase>
<phase name='optimize_null_checks' stamp='1.990'>
<phase_done name='optimize_null_checks' stamp='1.990'/>
</phase>
<phase_done name='buildIR' stamp='1.990'/>
</phase>
<phase name='emit_lir' stamp='1.990'>
<phase name='lirGeneration' stamp='1.990'>
<phase_done name='lirGeneration' stamp='1.990'/>
</phase>
<phase name='linearScan' stamp='1.990'>
<phase_done name='linearScan' stamp='1.990'/>
</phase>
<phase_done name='emit_lir' stamp='1.990'/>
</phase>
<phase name='codeemit' stamp='1.990'>
<phase_done name='codeemit' stamp='1.990'/>
</phase>
<phase name='codeinstall' stamp='1.990'>
<phase_done name='codeinstall' stamp='2.005'/>
</phase>
<code_cache total_blobs='423' nmethods='139' adapters='197' free_code_cache='250303104'/>
<task_done success='1' nmsize='944' count='692' inlined_bytes='15' stamp='2.005'/>
</task>
<task compile_id='157' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='588' iicount='588' level='1' stamp='2.005'>
<phase name='buildIR' stamp='2.005'>
<type id='729' name='boolean'/>
<klass id='847' name='java/util/Map$Entry' flags='1545'/>
<klass id='846' name='java/util/LinkedHashMap' flags='1'/>
<method id='848' holder='846' name='removeEldestEntry' return='729' arguments='847' flags='4' bytes='2' iicount='588'/>
<parse method='848'  stamp='2.005'>
<parse_done stamp='2.005'/>
</parse>
<phase name='optimize_blocks' stamp='2.005'>
<phase_done name='optimize_blocks' stamp='2.005'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.005'>
<phase_done name='rangeCheckElimination' stamp='2.005'/>
</phase>
<phase name='optimize_null_checks' stamp='2.005'>
<phase_done name='optimize_null_checks' stamp='2.005'/>
</phase>
<phase_done name='buildIR' stamp='2.005'/>
</phase>
<phase name='emit_lir' stamp='2.005'>
<phase name='lirGeneration' stamp='2.005'>
<phase_done name='lirGeneration' stamp='2.005'/>
</phase>
<phase name='linearScan' stamp='2.005'>
<phase_done name='linearScan' stamp='2.005'/>
</phase>
<phase_done name='emit_lir' stamp='2.005'/>
</phase>
<phase name='codeemit' stamp='2.005'>
<phase_done name='codeemit' stamp='2.005'/>
</phase>
<phase name='codeinstall' stamp='2.005'>
<phase_done name='codeinstall' stamp='2.010'/>
</phase>
<code_cache total_blobs='426' nmethods='142' adapters='197' free_code_cache='250301632'/>
<task_done success='1' nmsize='280' count='588' stamp='2.010'/>
</task>
<task compile_id='166' method='java/lang/StringBuffer toString ()Ljava/lang/String;' bytes='36' count='815' iicount='815' level='3' stamp='2.012'>
<phase name='buildIR' stamp='2.012'>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='808' name='java/lang/StringBuffer' flags='17'/>
<method id='846' holder='808' name='toString' return='743' flags='33' bytes='36' iicount='816'/>
<parse method='846'  stamp='2.012'>
<bc code='184' bci='17'/>
<klass id='835' name='[C' flags='1041'/>
<type id='735' name='int'/>
<klass id='848' name='java/util/Arrays' flags='1'/>
<method id='849' holder='848' name='copyOfRange' return='835' arguments='835 735 735' flags='9' bytes='63' compile_id='44' compiler='C1' level='3' iicount='4220'/>
<call method='849' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='32'/>
<type id='737' name='void'/>
<type id='729' name='boolean'/>
<method id='851' holder='743' name='&lt;init&gt;' return='737' arguments='835 729' flags='0' bytes='10' compile_id='146' compiler='C1' level='3' iicount='1370'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='853' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='16984'/>
<call method='853' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<parse_done stamp='2.012'/>
</parse>
<parse_done stamp='2.012'/>
</parse>
<parse_done stamp='2.012'/>
</parse>
<phase name='optimize_blocks' stamp='2.012'>
<phase_done name='optimize_blocks' stamp='2.012'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.012'>
<phase_done name='rangeCheckElimination' stamp='2.012'/>
</phase>
<phase name='optimize_null_checks' stamp='2.012'>
<phase_done name='optimize_null_checks' stamp='2.012'/>
</phase>
<phase_done name='buildIR' stamp='2.012'/>
</phase>
<phase name='emit_lir' stamp='2.012'>
<phase name='lirGeneration' stamp='2.012'>
<phase_done name='lirGeneration' stamp='2.012'/>
</phase>
<phase name='linearScan' stamp='2.012'>
<phase_done name='linearScan' stamp='2.012'/>
</phase>
<phase_done name='emit_lir' stamp='2.012'/>
</phase>
<phase name='codeemit' stamp='2.012'>
<phase_done name='codeemit' stamp='2.012'/>
</phase>
<phase name='codeinstall' stamp='2.012'>
<phase_done name='codeinstall' stamp='2.022'/>
</phase>
<code_cache total_blobs='427' nmethods='143' adapters='197' free_code_cache='250299456'/>
<task_done success='1' nmsize='1200' count='898' inlined_bytes='11' stamp='2.022'/>
</task>
<task compile_id='160' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='839' iicount='839' level='3' stamp='2.022'>
<phase name='buildIR' stamp='2.022'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='847' name='java/util/HashMap$Node' flags='8'/>
<klass id='846' name='java/util/LinkedHashMap$Entry' flags='8'/>
<method id='848' holder='846' name='&lt;init&gt;' return='737' arguments='735 742 742 847' flags='0' bytes='10' iicount='839'/>
<parse method='848'  stamp='2.022'>
<bc code='183' bci='6'/>
<method id='850' holder='847' name='&lt;init&gt;' return='737' arguments='735 742 742 847' flags='0' bytes='26' compile_id='101' compiler='C1' level='3' iicount='1523'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='1'/>
<method id='852' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='17241'/>
<call method='852' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='846'/>
<parse_done stamp='2.023'/>
</parse>
<parse_done stamp='2.023'/>
</parse>
<parse_done stamp='2.023'/>
</parse>
<phase name='optimize_blocks' stamp='2.023'>
<phase_done name='optimize_blocks' stamp='2.023'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.023'>
<phase_done name='rangeCheckElimination' stamp='2.023'/>
</phase>
<phase name='optimize_null_checks' stamp='2.023'>
<phase_done name='optimize_null_checks' stamp='2.023'/>
</phase>
<phase_done name='buildIR' stamp='2.023'/>
</phase>
<phase name='emit_lir' stamp='2.023'>
<phase name='lirGeneration' stamp='2.023'>
<phase_done name='lirGeneration' stamp='2.023'/>
</phase>
<phase name='linearScan' stamp='2.023'>
<phase_done name='linearScan' stamp='2.023'/>
</phase>
<phase_done name='emit_lir' stamp='2.023'/>
</phase>
<phase name='codeemit' stamp='2.023'>
<phase_done name='codeemit' stamp='2.023'/>
</phase>
<phase name='codeinstall' stamp='2.023'>
<dependency type='no_finalizable_subclasses' ctxk='846'/>
<phase_done name='codeinstall' stamp='2.028'/>
</phase>
<code_cache total_blobs='428' nmethods='144' adapters='197' free_code_cache='250298176'/>
<task_done success='1' nmsize='600' count='839' inlined_bytes='27' stamp='2.028'/>
</task>
<task compile_id='161' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='839' iicount='839' level='3' stamp='2.028'>
<phase name='buildIR' stamp='2.029'>
<type id='737' name='void'/>
<klass id='847' name='java/util/LinkedHashMap$Entry' flags='8'/>
<klass id='846' name='java/util/LinkedHashMap' flags='1'/>
<method id='848' holder='846' name='linkNodeLast' return='737' arguments='847' flags='2' bytes='33' iicount='839'/>
<parse method='848'  stamp='2.029'>
<parse_done stamp='2.029'/>
</parse>
<phase name='optimize_blocks' stamp='2.029'>
<phase_done name='optimize_blocks' stamp='2.029'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.029'>
<phase_done name='rangeCheckElimination' stamp='2.029'/>
</phase>
<phase name='optimize_null_checks' stamp='2.029'>
<phase_done name='optimize_null_checks' stamp='2.029'/>
</phase>
<phase_done name='buildIR' stamp='2.029'/>
</phase>
<phase name='emit_lir' stamp='2.029'>
<phase name='lirGeneration' stamp='2.029'>
<phase_done name='lirGeneration' stamp='2.029'/>
</phase>
<phase name='linearScan' stamp='2.029'>
<phase_done name='linearScan' stamp='2.029'/>
</phase>
<phase_done name='emit_lir' stamp='2.029'/>
</phase>
<phase name='codeemit' stamp='2.029'>
<phase_done name='codeemit' stamp='2.029'/>
</phase>
<phase name='codeinstall' stamp='2.029'>
<phase_done name='codeinstall' stamp='2.034'/>
</phase>
<code_cache total_blobs='429' nmethods='145' adapters='197' free_code_cache='250296832'/>
<task_done success='1' nmsize='568' count='839' stamp='2.034'/>
</task>
<task compile_id='156' method='java/lang/invoke/MethodType parameterType (I)Ljava/lang/Class;' bytes='7' count='793' iicount='793' level='3' stamp='2.034'>
<phase name='buildIR' stamp='2.034'>
<klass id='744' name='java/lang/Class' flags='17'/>
<type id='735' name='int'/>
<klass id='801' name='java/lang/invoke/MethodType' flags='17'/>
<method id='846' holder='801' name='parameterType' return='744' arguments='735' flags='1' bytes='7' iicount='793'/>
<parse method='846'  stamp='2.034'>
<parse_done stamp='2.034'/>
</parse>
<phase name='optimize_blocks' stamp='2.034'>
<phase_done name='optimize_blocks' stamp='2.034'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.034'>
<phase_done name='rangeCheckElimination' stamp='2.034'/>
</phase>
<phase name='optimize_null_checks' stamp='2.034'>
<phase_done name='optimize_null_checks' stamp='2.034'/>
</phase>
<phase_done name='buildIR' stamp='2.034'/>
</phase>
<phase name='emit_lir' stamp='2.034'>
<phase name='lirGeneration' stamp='2.034'>
<phase_done name='lirGeneration' stamp='2.034'/>
</phase>
<phase name='linearScan' stamp='2.034'>
<phase_done name='linearScan' stamp='2.034'/>
</phase>
<phase_done name='emit_lir' stamp='2.034'/>
</phase>
<phase name='codeemit' stamp='2.034'>
<phase_done name='codeemit' stamp='2.034'/>
</phase>
<phase name='codeinstall' stamp='2.034'>
<phase_done name='codeinstall' stamp='2.043'/>
</phase>
<code_cache total_blobs='431' nmethods='147' adapters='197' free_code_cache='250295488'/>
<task_done success='1' nmsize='376' count='851' stamp='2.043'/>
</task>
<task compile_id='159' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='839' iicount='839' level='3' stamp='2.043'>
<phase name='buildIR' stamp='2.043'>
<klass id='847' name='java/util/HashMap$Node' flags='8'/>
<type id='735' name='int'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='846' name='java/util/LinkedHashMap' flags='1'/>
<method id='848' holder='846' name='newNode' return='847' arguments='735 742 742 847' flags='0' bytes='23' iicount='839'/>
<parse method='848'  stamp='2.043'>
<bc code='183' bci='9'/>
<type id='737' name='void'/>
<klass id='850' name='java/util/LinkedHashMap$Entry' flags='8'/>
<method id='851' holder='850' name='&lt;init&gt;' return='737' arguments='735 742 742 847' flags='0' bytes='10' compile_id='160' compiler='C1' level='3' iicount='839'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='6'/>
<method id='853' holder='847' name='&lt;init&gt;' return='737' arguments='735 742 742 847' flags='0' bytes='26' compile_id='101' compiler='C1' level='3' iicount='1523'/>
<call method='853' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='1'/>
<method id='855' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='17387'/>
<call method='855' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<parse_done stamp='2.043'/>
</parse>
<parse_done stamp='2.043'/>
</parse>
<parse_done stamp='2.043'/>
</parse>
<bc code='183' bci='17'/>
<method id='857' holder='846' name='linkNodeLast' return='737' arguments='850' flags='2' bytes='33' compile_id='161' compiler='C1' level='3' iicount='839'/>
<call method='857' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<parse_done stamp='2.043'/>
</parse>
<parse_done stamp='2.043'/>
</parse>
<phase name='optimize_blocks' stamp='2.043'>
<phase_done name='optimize_blocks' stamp='2.043'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.043'>
<phase_done name='rangeCheckElimination' stamp='2.043'/>
</phase>
<phase name='optimize_null_checks' stamp='2.043'>
<phase_done name='optimize_null_checks' stamp='2.043'/>
</phase>
<phase_done name='buildIR' stamp='2.043'/>
</phase>
<phase name='emit_lir' stamp='2.043'>
<phase name='lirGeneration' stamp='2.043'>
<phase_done name='lirGeneration' stamp='2.043'/>
</phase>
<phase name='linearScan' stamp='2.043'>
<phase_done name='linearScan' stamp='2.043'/>
</phase>
<phase_done name='emit_lir' stamp='2.043'/>
</phase>
<phase name='codeemit' stamp='2.043'>
<phase_done name='codeemit' stamp='2.043'/>
</phase>
<phase name='codeinstall' stamp='2.043'>
<phase_done name='codeinstall' stamp='2.057'/>
</phase>
<code_cache total_blobs='434' nmethods='149' adapters='198' free_code_cache='250292160'/>
<task_done success='1' nmsize='1112' count='839' inlined_bytes='70' stamp='2.057'/>
</task>
<task compile_id='162' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='839' iicount='839' level='3' stamp='2.057'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='839' stamp='2.057'/>
</task>
<task compile_id='170' method='java/util/Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='945' iicount='945' level='3' stamp='2.057'>
<phase name='buildIR' stamp='2.057'>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='846' name='java/util/Objects' flags='17'/>
<method id='847' holder='846' name='requireNonNull' return='742' arguments='742' flags='9' bytes='14' iicount='945'/>
<parse method='847'  stamp='2.057'>
<bc code='183' bci='8'/>
<type id='737' name='void'/>
<klass id='842' name='java/lang/NullPointerException' flags='1'/>
<method id='849' holder='842' name='&lt;init&gt;' return='737' flags='1' bytes='5' iicount='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='2.058'/>
</parse>
<phase name='optimize_blocks' stamp='2.058'>
<phase_done name='optimize_blocks' stamp='2.058'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.058'>
<phase_done name='rangeCheckElimination' stamp='2.058'/>
</phase>
<phase name='optimize_null_checks' stamp='2.058'>
<phase_done name='optimize_null_checks' stamp='2.058'/>
</phase>
<phase_done name='buildIR' stamp='2.058'/>
</phase>
<phase name='emit_lir' stamp='2.058'>
<phase name='lirGeneration' stamp='2.058'>
<phase_done name='lirGeneration' stamp='2.058'/>
</phase>
<phase name='linearScan' stamp='2.058'>
<phase_done name='linearScan' stamp='2.058'/>
</phase>
<phase_done name='emit_lir' stamp='2.058'/>
</phase>
<phase name='codeemit' stamp='2.058'>
<phase_done name='codeemit' stamp='2.058'/>
</phase>
<phase name='codeinstall' stamp='2.058'>
<phase_done name='codeinstall' stamp='2.064'/>
</phase>
<code_cache total_blobs='435' nmethods='150' adapters='198' free_code_cache='250290944'/>
<task_done success='1' nmsize='560' count='946' stamp='2.064'/>
</task>
<task compile_id='167' method='sun/invoke/util/Wrapper basicTypeChar ()C' bytes='5' count='284' iicount='284' level='1' stamp='2.064'>
<phase name='buildIR' stamp='2.064'>
<type id='730' name='char'/>
<klass id='846' name='sun/invoke/util/Wrapper' flags='16401'/>
<method id='847' holder='846' name='basicTypeChar' return='730' flags='1' bytes='5' iicount='284'/>
<parse method='847'  stamp='2.064'>
<parse_done stamp='2.064'/>
</parse>
<phase name='optimize_blocks' stamp='2.064'>
<phase_done name='optimize_blocks' stamp='2.064'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.064'>
<phase_done name='rangeCheckElimination' stamp='2.064'/>
</phase>
<phase name='optimize_null_checks' stamp='2.064'>
<phase_done name='optimize_null_checks' stamp='2.064'/>
</phase>
<phase_done name='buildIR' stamp='2.064'/>
</phase>
<phase name='emit_lir' stamp='2.064'>
<phase name='lirGeneration' stamp='2.064'>
<phase_done name='lirGeneration' stamp='2.064'/>
</phase>
<phase name='linearScan' stamp='2.064'>
<phase_done name='linearScan' stamp='2.065'/>
</phase>
<phase_done name='emit_lir' stamp='2.065'/>
</phase>
<phase name='codeemit' stamp='2.065'>
<phase_done name='codeemit' stamp='2.065'/>
</phase>
<phase name='codeinstall' stamp='2.065'>
<phase_done name='codeinstall' stamp='2.067'/>
</phase>
<code_cache total_blobs='436' nmethods='151' adapters='198' free_code_cache='250290176'/>
<task_done success='1' nmsize='280' count='284' stamp='2.067'/>
</task>
<task compile_id='111' method='java/lang/invoke/LambdaForm$Name index ()I' bytes='5' count='447' iicount='447' level='1' stamp='2.067'>
<phase name='buildIR' stamp='2.067'>
<type id='735' name='int'/>
<klass id='846' name='java/lang/invoke/LambdaForm$Name' flags='24'/>
<method id='847' holder='846' name='index' return='735' flags='0' bytes='5' iicount='447'/>
<parse method='847'  stamp='2.067'>
<parse_done stamp='2.067'/>
</parse>
<phase name='optimize_blocks' stamp='2.067'>
<phase_done name='optimize_blocks' stamp='2.067'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.067'>
<phase_done name='rangeCheckElimination' stamp='2.067'/>
</phase>
<phase name='optimize_null_checks' stamp='2.067'>
<phase_done name='optimize_null_checks' stamp='2.067'/>
</phase>
<phase_done name='buildIR' stamp='2.067'/>
</phase>
<phase name='emit_lir' stamp='2.067'>
<phase name='lirGeneration' stamp='2.067'>
<phase_done name='lirGeneration' stamp='2.067'/>
</phase>
<phase name='linearScan' stamp='2.067'>
<phase_done name='linearScan' stamp='2.067'/>
</phase>
<phase_done name='emit_lir' stamp='2.067'/>
</phase>
<phase name='codeemit' stamp='2.067'>
<phase_done name='codeemit' stamp='2.068'/>
</phase>
<phase name='codeinstall' stamp='2.068'>
<phase_done name='codeinstall' stamp='2.071'/>
</phase>
<code_cache total_blobs='438' nmethods='153' adapters='198' free_code_cache='250289024'/>
<task_done success='1' nmsize='280' count='454' stamp='2.071'/>
</task>
<task compile_id='124' method='java/lang/invoke/LambdaForm$Name access$000 (Ljava/lang/invoke/LambdaForm$Name;)S' bytes='5' count='336' iicount='336' level='1' stamp='2.071'>
<phase name='buildIR' stamp='2.071'>
<type id='734' name='short'/>
<klass id='846' name='java/lang/invoke/LambdaForm$Name' flags='24'/>
<method id='847' holder='846' name='access$000' return='734' arguments='846' flags='4104' bytes='5' iicount='336'/>
<parse method='847'  stamp='2.071'>
<parse_done stamp='2.071'/>
</parse>
<phase name='optimize_blocks' stamp='2.071'>
<phase_done name='optimize_blocks' stamp='2.071'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.071'>
<phase_done name='rangeCheckElimination' stamp='2.071'/>
</phase>
<phase name='optimize_null_checks' stamp='2.071'>
<phase_done name='optimize_null_checks' stamp='2.071'/>
</phase>
<phase_done name='buildIR' stamp='2.071'/>
</phase>
<phase name='emit_lir' stamp='2.071'>
<phase name='lirGeneration' stamp='2.071'>
<phase_done name='lirGeneration' stamp='2.071'/>
</phase>
<phase name='linearScan' stamp='2.071'>
<phase_done name='linearScan' stamp='2.071'/>
</phase>
<phase_done name='emit_lir' stamp='2.071'/>
</phase>
<phase name='codeemit' stamp='2.071'>
<phase_done name='codeemit' stamp='2.071'/>
</phase>
<phase name='codeinstall' stamp='2.071'>
<phase_done name='codeinstall' stamp='2.074'/>
</phase>
<code_cache total_blobs='441' nmethods='154' adapters='198' free_code_cache='250282496'/>
<task_done success='1' nmsize='248' count='336' stamp='2.074'/>
</task>
<task compile_id='173' method='java/lang/invoke/MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='269' iicount='269' level='1' stamp='2.074'>
<phase name='buildIR' stamp='2.074'>
<klass id='846' name='java/lang/invoke/MethodTypeForm' flags='16'/>
<klass id='801' name='java/lang/invoke/MethodType' flags='17'/>
<method id='847' holder='801' name='form' return='846' flags='0' bytes='5' iicount='269'/>
<parse method='847'  stamp='2.074'>
<parse_done stamp='2.074'/>
</parse>
<phase name='optimize_blocks' stamp='2.074'>
<phase_done name='optimize_blocks' stamp='2.074'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.074'>
<phase_done name='rangeCheckElimination' stamp='2.074'/>
</phase>
<phase name='optimize_null_checks' stamp='2.074'>
<phase_done name='optimize_null_checks' stamp='2.074'/>
</phase>
<phase_done name='buildIR' stamp='2.074'/>
</phase>
<phase name='emit_lir' stamp='2.074'>
<phase name='lirGeneration' stamp='2.074'>
<phase_done name='lirGeneration' stamp='2.074'/>
</phase>
<phase name='linearScan' stamp='2.074'>
<phase_done name='linearScan' stamp='2.074'/>
</phase>
<phase_done name='emit_lir' stamp='2.074'/>
</phase>
<phase name='codeemit' stamp='2.074'>
<phase_done name='codeemit' stamp='2.074'/>
</phase>
<phase name='codeinstall' stamp='2.074'>
<phase_done name='codeinstall' stamp='2.079'/>
</phase>
<code_cache total_blobs='443' nmethods='156' adapters='198' free_code_cache='250274880'/>
<task_done success='1' nmsize='280' count='271' stamp='2.079'/>
</task>
<task compile_id='121' method='java/lang/invoke/LambdaForm$Name type ()Ljava/lang/invoke/LambdaForm$BasicType;' bytes='5' count='369' iicount='369' level='1' stamp='2.079'>
<phase name='buildIR' stamp='2.079'>
<klass id='847' name='java/lang/invoke/LambdaForm$BasicType' flags='16408'/>
<klass id='846' name='java/lang/invoke/LambdaForm$Name' flags='24'/>
<method id='848' holder='846' name='type' return='847' flags='0' bytes='5' iicount='369'/>
<parse method='848'  stamp='2.079'>
<parse_done stamp='2.079'/>
</parse>
<phase name='optimize_blocks' stamp='2.079'>
<phase_done name='optimize_blocks' stamp='2.079'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.079'>
<phase_done name='rangeCheckElimination' stamp='2.079'/>
</phase>
<phase name='optimize_null_checks' stamp='2.079'>
<phase_done name='optimize_null_checks' stamp='2.079'/>
</phase>
<phase_done name='buildIR' stamp='2.079'/>
</phase>
<phase name='emit_lir' stamp='2.079'>
<phase name='lirGeneration' stamp='2.079'>
<phase_done name='lirGeneration' stamp='2.079'/>
</phase>
<phase name='linearScan' stamp='2.079'>
<phase_done name='linearScan' stamp='2.079'/>
</phase>
<phase_done name='emit_lir' stamp='2.079'/>
</phase>
<phase name='codeemit' stamp='2.079'>
<phase_done name='codeemit' stamp='2.079'/>
</phase>
<phase name='codeinstall' stamp='2.079'>
<phase_done name='codeinstall' stamp='2.082'/>
</phase>
<code_cache total_blobs='444' nmethods='157' adapters='198' free_code_cache='250274112'/>
<task_done success='1' nmsize='280' count='369' stamp='2.082'/>
</task>
<task compile_id='176' method='java/lang/invoke/MethodType checkPtype (Ljava/lang/Class;)V' bytes='19' count='773' iicount='773' level='3' stamp='2.102'>
<phase name='buildIR' stamp='2.102'>
<type id='737' name='void'/>
<klass id='744' name='java/lang/Class' flags='17'/>
<klass id='801' name='java/lang/invoke/MethodType' flags='17'/>
<method id='846' holder='801' name='checkPtype' return='737' arguments='744' flags='10' bytes='19' iicount='773'/>
<parse method='846'  stamp='2.102'>
<bc code='184' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='848' name='java/util/Objects' flags='17'/>
<method id='849' holder='848' name='requireNonNull' return='742' arguments='742' flags='9' bytes='14' compile_id='170' compiler='C1' level='3' iicount='1032'/>
<call method='849' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='8'/>
<klass id='842' name='java/lang/NullPointerException' flags='1'/>
<method id='851' holder='842' name='&lt;init&gt;' return='737' flags='1' bytes='5' iicount='1'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='2.102'/>
</parse>
<bc code='184' bci='14'/>
<klass id='753' name='java/lang/RuntimeException' flags='1'/>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='857' name='java/lang/invoke/MethodHandleStatics' flags='0'/>
<method id='858' holder='857' name='newIllegalArgumentException' return='753' arguments='743' flags='8' bytes='9' iicount='1'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<bc code='183' bci='5'/>
<klass id='860' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='861' holder='860' name='&lt;init&gt;' return='737' arguments='743' flags='1' bytes='6' iicount='1'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='2.102'/>
</parse>
<parse_done stamp='2.102'/>
</parse>
<phase name='optimize_blocks' stamp='2.102'>
<phase_done name='optimize_blocks' stamp='2.102'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.102'>
<phase_done name='rangeCheckElimination' stamp='2.102'/>
</phase>
<phase name='optimize_null_checks' stamp='2.102'>
<phase_done name='optimize_null_checks' stamp='2.102'/>
</phase>
<phase_done name='buildIR' stamp='2.102'/>
</phase>
<phase name='emit_lir' stamp='2.102'>
<phase name='lirGeneration' stamp='2.102'>
<phase_done name='lirGeneration' stamp='2.102'/>
</phase>
<phase name='linearScan' stamp='2.102'>
<phase_done name='linearScan' stamp='2.102'/>
</phase>
<phase_done name='emit_lir' stamp='2.102'/>
</phase>
<phase name='codeemit' stamp='2.102'>
<phase_done name='codeemit' stamp='2.102'/>
</phase>
<phase name='codeinstall' stamp='2.102'>
<phase_done name='codeinstall' stamp='2.112'/>
</phase>
<code_cache total_blobs='444' nmethods='159' adapters='198' free_code_cache='250281344'/>
<task_done success='1' nmsize='992' count='775' inlined_bytes='23' stamp='2.112'/>
</task>
<task compile_id='177' method='java/lang/invoke/MethodType checkSlotCount (I)V' bytes='33' count='649' iicount='649' level='3' stamp='2.112'>
<phase name='buildIR' stamp='2.112'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='801' name='java/lang/invoke/MethodType' flags='17'/>
<method id='846' holder='801' name='checkSlotCount' return='737' arguments='735' flags='8' bytes='33' iicount='649'/>
<parse method='846'  stamp='2.112'>
<bc code='183' bci='13'/>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<method id='848' holder='809' name='&lt;init&gt;' return='737' flags='1' bytes='7' compile_id='67' compiler='C1' level='3' iicount='915'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='3'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='850' holder='807' name='&lt;init&gt;' return='737' arguments='735' flags='0' bytes='12' compile_id='57' compiler='C1' level='3' iicount='1916'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='852' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='17771'/>
<call method='852' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<parse_done stamp='2.112'/>
</parse>
<parse_done stamp='2.112'/>
</parse>
<parse_done stamp='2.112'/>
</parse>
<bc code='182' bci='18'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='855' holder='809' name='append' return='809' arguments='743' flags='1' bytes='8' compile_id='46' compiler='C1' level='3' iicount='2320'/>
<call method='855' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='183' bci='2'/>
<method id='857' holder='807' name='append' return='807' arguments='743' flags='1' bytes='50' compile_id='28' compiler='C1' level='3' iicount='2772'/>
<call method='857' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.112'/>
</parse>
<bc code='182' bci='22'/>
<method id='859' holder='809' name='append' return='809' arguments='735' flags='1' bytes='8' iicount='34'/>
<call method='859' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='2'/>
<method id='861' holder='807' name='append' return='807' arguments='735' flags='1' bytes='62' iicount='34'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.112'/>
</parse>
<bc code='182' bci='25'/>
<method id='863' holder='809' name='toString' return='743' flags='1' bytes='17' compile_id='62' compiler='C1' level='3' iicount='982'/>
<call method='863' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='13'/>
<klass id='835' name='[C' flags='1041'/>
<method id='865' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' compile_id='47' compiler='C1' level='3' iicount='3599'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.112'/>
</parse>
<bc code='184' bci='28'/>
<klass id='753' name='java/lang/RuntimeException' flags='1'/>
<klass id='867' name='java/lang/invoke/MethodHandleStatics' flags='0'/>
<method id='868' holder='867' name='newIllegalArgumentException' return='753' arguments='743' flags='8' bytes='9' iicount='1'/>
<call method='868' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='183' bci='5'/>
<klass id='870' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='871' holder='870' name='&lt;init&gt;' return='737' arguments='743' flags='1' bytes='6' iicount='1'/>
<call method='871' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='2.112'/>
</parse>
<parse_done stamp='2.112'/>
</parse>
<phase name='optimize_blocks' stamp='2.112'>
<phase_done name='optimize_blocks' stamp='2.112'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.112'>
<phase_done name='rangeCheckElimination' stamp='2.112'/>
</phase>
<phase name='optimize_null_checks' stamp='2.112'>
<phase_done name='optimize_null_checks' stamp='2.112'/>
</phase>
<phase_done name='buildIR' stamp='2.112'/>
</phase>
<phase name='emit_lir' stamp='2.112'>
<phase name='lirGeneration' stamp='2.112'>
<phase_done name='lirGeneration' stamp='2.112'/>
</phase>
<phase name='linearScan' stamp='2.112'>
<phase_done name='linearScan' stamp='2.113'/>
</phase>
<phase_done name='emit_lir' stamp='2.113'/>
</phase>
<phase name='codeemit' stamp='2.113'>
<phase_done name='codeemit' stamp='2.113'/>
</phase>
<phase name='codeinstall' stamp='2.113'>
<phase_done name='codeinstall' stamp='2.132'/>
</phase>
<code_cache total_blobs='445' nmethods='160' adapters='198' free_code_cache='250277760'/>
<task_done success='1' nmsize='2144' count='654' inlined_bytes='62' stamp='2.132'/>
</task>
<task compile_id='179' method='java/lang/invoke/MemberName isStatic ()Z' bytes='8' count='640' iicount='640' level='3' stamp='2.132'>
<phase name='buildIR' stamp='2.132'>
<type id='729' name='boolean'/>
<klass id='798' name='java/lang/invoke/MemberName' flags='16'/>
<method id='846' holder='798' name='isStatic' return='729' flags='1' bytes='8' iicount='640'/>
<parse method='846'  stamp='2.132'>
<bc code='184' bci='4'/>
<type id='735' name='int'/>
<klass id='848' name='java/lang/reflect/Modifier' flags='1'/>
<method id='849' holder='848' name='isStatic' return='729' arguments='735' flags='9' bytes='13' iicount='642'/>
<call method='849' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='2.133'/>
</parse>
<parse_done stamp='2.133'/>
</parse>
<phase name='optimize_blocks' stamp='2.133'>
<phase_done name='optimize_blocks' stamp='2.133'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.133'>
<phase_done name='rangeCheckElimination' stamp='2.133'/>
</phase>
<phase name='optimize_null_checks' stamp='2.133'>
<phase_done name='optimize_null_checks' stamp='2.133'/>
</phase>
<phase_done name='buildIR' stamp='2.133'/>
</phase>
<phase name='emit_lir' stamp='2.133'>
<phase name='lirGeneration' stamp='2.133'>
<phase_done name='lirGeneration' stamp='2.133'/>
</phase>
<phase name='linearScan' stamp='2.133'>
<phase_done name='linearScan' stamp='2.133'/>
</phase>
<phase_done name='emit_lir' stamp='2.133'/>
</phase>
<phase name='codeemit' stamp='2.133'>
<phase_done name='codeemit' stamp='2.133'/>
</phase>
<phase name='codeinstall' stamp='2.133'>
<phase_done name='codeinstall' stamp='2.140'/>
</phase>
<code_cache total_blobs='446' nmethods='161' adapters='198' free_code_cache='250276608'/>
<task_done success='1' nmsize='536' count='643' inlined_bytes='13' stamp='2.140'/>
</task>
<task compile_id='178' method='java/lang/reflect/Modifier isStatic (I)Z' bytes='13' count='644' iicount='644' level='3' stamp='2.140'>
<phase name='buildIR' stamp='2.140'>
<type id='729' name='boolean'/>
<type id='735' name='int'/>
<klass id='846' name='java/lang/reflect/Modifier' flags='1'/>
<method id='847' holder='846' name='isStatic' return='729' arguments='735' flags='9' bytes='13' iicount='644'/>
<parse method='847'  stamp='2.140'>
<parse_done stamp='2.140'/>
</parse>
<phase name='optimize_blocks' stamp='2.140'>
<phase_done name='optimize_blocks' stamp='2.140'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.140'>
<phase_done name='rangeCheckElimination' stamp='2.140'/>
</phase>
<phase name='optimize_null_checks' stamp='2.140'>
<phase_done name='optimize_null_checks' stamp='2.140'/>
</phase>
<phase_done name='buildIR' stamp='2.140'/>
</phase>
<phase name='emit_lir' stamp='2.140'>
<phase name='lirGeneration' stamp='2.140'>
<phase_done name='lirGeneration' stamp='2.140'/>
</phase>
<phase name='linearScan' stamp='2.140'>
<phase_done name='linearScan' stamp='2.140'/>
</phase>
<phase_done name='emit_lir' stamp='2.140'/>
</phase>
<phase name='codeemit' stamp='2.140'>
<phase_done name='codeemit' stamp='2.140'/>
</phase>
<phase name='codeinstall' stamp='2.140'>
<phase_done name='codeinstall' stamp='2.146'/>
</phase>
<code_cache total_blobs='447' nmethods='162' adapters='198' free_code_cache='250275648'/>
<task_done success='1' nmsize='408' count='646' stamp='2.146'/>
</task>
<task compile_id='180' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1537' iicount='1537' level='1' stamp='2.146'>
<phase name='buildIR' stamp='2.146'>
<klass id='754' name='java/lang/SecurityManager' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='846' holder='748' name='getSecurityManager' return='754' flags='9' bytes='4' compile_id='20' compiler='C1' level='3' iicount='1537'/>
<parse method='846'  stamp='2.146'>
<parse_done stamp='2.146'/>
</parse>
<phase name='optimize_blocks' stamp='2.146'>
<phase_done name='optimize_blocks' stamp='2.146'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.146'>
<phase_done name='rangeCheckElimination' stamp='2.146'/>
</phase>
<phase name='optimize_null_checks' stamp='2.146'>
<phase_done name='optimize_null_checks' stamp='2.146'/>
</phase>
<phase_done name='buildIR' stamp='2.146'/>
</phase>
<phase name='emit_lir' stamp='2.146'>
<phase name='lirGeneration' stamp='2.146'>
<phase_done name='lirGeneration' stamp='2.146'/>
</phase>
<phase name='linearScan' stamp='2.146'>
<phase_done name='linearScan' stamp='2.146'/>
</phase>
<phase_done name='emit_lir' stamp='2.146'/>
</phase>
<phase name='codeemit' stamp='2.146'>
<phase_done name='codeemit' stamp='2.146'/>
</phase>
<phase name='codeinstall' stamp='2.146'>
<phase_done name='codeinstall' stamp='2.148'/>
</phase>
<code_cache total_blobs='448' nmethods='163' adapters='198' free_code_cache='250274944'/>
<task_done success='1' nmsize='248' count='1541' stamp='2.148'/>
</task>
<task compile_id='181' method='java/lang/invoke/MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='233' count='770' iicount='770' level='3' stamp='2.148'>
<phase name='buildIR' stamp='2.148'>
<klass id='744' name='java/lang/Class' flags='17'/>
<type id='735' name='int'/>
<klass id='846' name='java/lang/invoke/MethodTypeForm' flags='16'/>
<method id='847' holder='846' name='canonicalize' return='744' arguments='744 735' flags='8' bytes='233' iicount='770'/>
<parse method='847'  stamp='2.148'>
<bc code='182' bci='10'/>
<type id='729' name='boolean'/>
<method id='850' holder='744' name='isPrimitive' return='729' flags='257' bytes='0' compile_id='72' compile_kind='c2n' level='0' iicount='384'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<bc code='184' bci='53'/>
<klass id='851' name='sun/invoke/util/Wrapper' flags='16401'/>
<method id='852' holder='851' name='asPrimitiveType' return='744' arguments='744' flags='9' bytes='20' iicount='1'/>
<call method='852' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='184' bci='1'/>
<method id='854' holder='851' name='findWrapperType' return='851' arguments='744' flags='8' bytes='25' iicount='5'/>
<call method='854' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='184' bci='4'/>
<method id='859' holder='851' name='hashWrap' return='735' arguments='744' flags='10' bytes='59' iicount='15'/>
<call method='859' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.148'/>
</parse>
<bc code='182' bci='10'/>
<method id='861' holder='851' name='primitiveType' return='744' flags='1' bytes='5' iicount='20'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<parse_done stamp='2.148'/>
</parse>
<bc code='184' bci='14'/>
<method id='863' holder='851' name='forceType' return='744' arguments='744 744' flags='8' bytes='165' iicount='1'/>
<call method='863' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.149'/>
</parse>
<bc code='184' bci='149'/>
<method id='870' holder='851' name='asWrapperType' return='744' arguments='744' flags='9' bytes='18' iicount='1'/>
<call method='870' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='182' bci='1'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<bc code='184' bci='8'/>
<method id='872' holder='851' name='forPrimitiveType' return='851' arguments='744' flags='9' bytes='49' iicount='133'/>
<call method='872' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='12'/>
<method id='874' holder='851' name='wrapperType' return='744' arguments='744' flags='1' bytes='52' iicount='1'/>
<call method='874' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.149'/>
</parse>
<parse_done stamp='2.149'/>
</parse>
<phase name='optimize_blocks' stamp='2.149'>
<phase_done name='optimize_blocks' stamp='2.149'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.149'>
<phase_done name='rangeCheckElimination' stamp='2.149'/>
</phase>
<phase name='optimize_null_checks' stamp='2.149'>
<phase_done name='optimize_null_checks' stamp='2.149'/>
</phase>
<phase_done name='buildIR' stamp='2.149'/>
</phase>
<phase name='emit_lir' stamp='2.149'>
<phase name='lirGeneration' stamp='2.149'>
<phase_done name='lirGeneration' stamp='2.149'/>
</phase>
<phase name='linearScan' stamp='2.149'>
<phase_done name='linearScan' stamp='2.149'/>
</phase>
<phase_done name='emit_lir' stamp='2.149'/>
</phase>
<phase name='codeemit' stamp='2.149'>
<phase_done name='codeemit' stamp='2.149'/>
</phase>
<phase name='codeinstall' stamp='2.149'>
<phase_done name='codeinstall' stamp='2.176'/>
</phase>
<code_cache total_blobs='450' nmethods='165' adapters='198' free_code_cache='250269120'/>
<task_done success='1' nmsize='3040' count='770' inlined_bytes='68' stamp='2.176'/>
</task>
<task compile_id='183' method='java/lang/invoke/MethodType$ConcurrentWeakInternSet expungeStaleElements ()V' bytes='27' count='643' iicount='643' level='3' stamp='2.176'>
<phase name='buildIR' stamp='2.176'>
<type id='737' name='void'/>
<klass id='846' name='java/lang/invoke/MethodType$ConcurrentWeakInternSet' flags='10'/>
<method id='847' holder='846' name='expungeStaleElements' return='737' flags='2' bytes='27' iicount='644'/>
<parse method='847'  stamp='2.176'>
<bc code='182' bci='4'/>
<klass id='768' name='java/lang/ref/Reference' flags='1025'/>
<klass id='775' name='java/lang/ref/ReferenceQueue' flags='1'/>
<method id='849' holder='775' name='poll' return='768' flags='1' bytes='28' compile_id='31' compiler='C1' level='3' iicount='1035'/>
<call method='849' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='775' x='849'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='17'/>
<method id='852' holder='775' name='reallyPoll' return='768' flags='2' bytes='65' iicount='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.177'/>
</parse>
<bc code='185' bci='17'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='854' name='java/util/concurrent/ConcurrentMap' flags='1537'/>
<method id='855' holder='854' name='remove' return='742' arguments='742' flags='4161' bytes='10' iicount='1'/>
<call method='855' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='2.177'/>
</parse>
<phase name='optimize_blocks' stamp='2.177'>
<phase_done name='optimize_blocks' stamp='2.177'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.177'>
<phase_done name='rangeCheckElimination' stamp='2.177'/>
</phase>
<phase name='optimize_null_checks' stamp='2.177'>
<phase_done name='optimize_null_checks' stamp='2.177'/>
</phase>
<phase_done name='buildIR' stamp='2.177'/>
</phase>
<phase name='emit_lir' stamp='2.177'>
<phase name='lirGeneration' stamp='2.177'>
<phase_done name='lirGeneration' stamp='2.177'/>
</phase>
<phase name='linearScan' stamp='2.177'>
<phase_done name='linearScan' stamp='2.177'/>
</phase>
<phase_done name='emit_lir' stamp='2.177'/>
</phase>
<phase name='codeemit' stamp='2.177'>
<phase_done name='codeemit' stamp='2.177'/>
</phase>
<phase name='codeinstall' stamp='2.177'>
<dependency type='unique_concrete_method' ctxk='775' x='849'/>
<phase_done name='codeinstall' stamp='2.191'/>
</phase>
<code_cache total_blobs='452' nmethods='167' adapters='198' free_code_cache='250265984'/>
<task_done success='1' nmsize='1504' count='646' inlined_bytes='28' stamp='2.191'/>
</task>
<task compile_id='184' method='jdk/internal/org/objectweb/asm/ByteVector put12 (II)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='64' count='649' iicount='649' level='3' stamp='2.192'>
<phase name='buildIR' stamp='2.192'>
<klass id='846' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<type id='735' name='int'/>
<method id='847' holder='846' name='put12' return='846' arguments='735 735' flags='0' bytes='64' iicount='649'/>
<parse method='847'  stamp='2.192'>
<bc code='183' bci='18'/>
<type id='737' name='void'/>
<method id='849' holder='846' name='enlarge' return='737' arguments='735' flags='2' bytes='51' iicount='227'/>
<call method='849' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.192'/>
</parse>
<phase name='optimize_blocks' stamp='2.192'>
<phase_done name='optimize_blocks' stamp='2.192'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.193'>
<phase_done name='rangeCheckElimination' stamp='2.193'/>
</phase>
<phase name='optimize_null_checks' stamp='2.193'>
<phase_done name='optimize_null_checks' stamp='2.193'/>
</phase>
<phase_done name='buildIR' stamp='2.193'/>
</phase>
<phase name='emit_lir' stamp='2.193'>
<phase name='lirGeneration' stamp='2.193'>
<phase_done name='lirGeneration' stamp='2.193'/>
</phase>
<phase name='linearScan' stamp='2.193'>
<phase_done name='linearScan' stamp='2.193'/>
</phase>
<phase_done name='emit_lir' stamp='2.193'/>
</phase>
<phase name='codeemit' stamp='2.193'>
<phase_done name='codeemit' stamp='2.193'/>
</phase>
<phase name='codeinstall' stamp='2.193'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='2.201'/>
</phase>
<code_cache total_blobs='454' nmethods='169' adapters='198' free_code_cache='250264000'/>
<task_done success='1' nmsize='656' count='655' stamp='2.201'/>
</task>
<task compile_id='186' method='java/lang/invoke/MemberName isConstructor ()Z' bytes='7' count='649' iicount='649' level='3' stamp='2.201'>
<phase name='buildIR' stamp='2.201'>
<type id='729' name='boolean'/>
<klass id='798' name='java/lang/invoke/MemberName' flags='16'/>
<method id='846' holder='798' name='isConstructor' return='729' flags='1' bytes='7' iicount='649'/>
<parse method='846'  stamp='2.201'>
<bc code='183' bci='3'/>
<type id='735' name='int'/>
<method id='848' holder='798' name='testAllFlags' return='729' arguments='735' flags='2' bytes='7' compile_id='155' compiler='C1' level='3' iicount='932'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='3'/>
<method id='850' holder='798' name='testFlags' return='729' arguments='735 735' flags='2' bytes='16' compile_id='66' compiler='C1' level='3' iicount='2619'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='2.201'/>
</parse>
<parse_done stamp='2.201'/>
</parse>
<parse_done stamp='2.201'/>
</parse>
<phase name='optimize_blocks' stamp='2.201'>
<phase_done name='optimize_blocks' stamp='2.201'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.201'>
<phase_done name='rangeCheckElimination' stamp='2.201'/>
</phase>
<phase name='optimize_null_checks' stamp='2.201'>
<phase_done name='optimize_null_checks' stamp='2.201'/>
</phase>
<phase_done name='buildIR' stamp='2.201'/>
</phase>
<phase name='emit_lir' stamp='2.201'>
<phase name='lirGeneration' stamp='2.201'>
<phase_done name='lirGeneration' stamp='2.201'/>
</phase>
<phase name='linearScan' stamp='2.201'>
<phase_done name='linearScan' stamp='2.201'/>
</phase>
<phase_done name='emit_lir' stamp='2.201'/>
</phase>
<phase name='codeemit' stamp='2.201'>
<phase_done name='codeemit' stamp='2.201'/>
</phase>
<phase name='codeinstall' stamp='2.201'>
<phase_done name='codeinstall' stamp='2.207'/>
</phase>
<code_cache total_blobs='455' nmethods='170' adapters='198' free_code_cache='250262656'/>
<task_done success='1' nmsize='632' count='652' inlined_bytes='23' stamp='2.207'/>
</task>
<task compile_id='189' method='java/lang/invoke/MethodType hashCode ()I' bytes='53' count='662' backedge_count='2609' iicount='662' level='3' stamp='2.207'>
<phase name='buildIR' stamp='2.207'>
<type id='735' name='int'/>
<klass id='801' name='java/lang/invoke/MethodType' flags='17'/>
<method id='846' holder='801' name='hashCode' return='735' flags='1' bytes='53' iicount='662'/>
<parse method='846'  stamp='2.207'>
<bc code='182' bci='6'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='848' holder='742' name='hashCode' return='735' flags='257' bytes='0' compile_id='21' compile_kind='c2n' level='0' iicount='384'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<bc code='182' bci='40'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<parse_done stamp='2.207'/>
</parse>
<phase name='optimize_blocks' stamp='2.207'>
<phase_done name='optimize_blocks' stamp='2.207'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.207'>
<phase_done name='rangeCheckElimination' stamp='2.207'/>
</phase>
<phase name='optimize_null_checks' stamp='2.207'>
<phase_done name='optimize_null_checks' stamp='2.207'/>
</phase>
<phase_done name='buildIR' stamp='2.207'/>
</phase>
<phase name='emit_lir' stamp='2.207'>
<phase name='lirGeneration' stamp='2.207'>
<phase_done name='lirGeneration' stamp='2.207'/>
</phase>
<phase name='linearScan' stamp='2.207'>
<phase_done name='linearScan' stamp='2.207'/>
</phase>
<phase_done name='emit_lir' stamp='2.207'/>
</phase>
<phase name='codeemit' stamp='2.207'>
<phase_done name='codeemit' stamp='2.207'/>
</phase>
<phase name='codeinstall' stamp='2.207'>
<phase_done name='codeinstall' stamp='2.215'/>
</phase>
<code_cache total_blobs='456' nmethods='171' adapters='198' free_code_cache='250260672'/>
<task_done success='1' nmsize='992' count='668' backedge_count='2616' stamp='2.215'/>
</task>
<task compile_id='190' method='jdk/internal/org/objectweb/asm/Frame execute (IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' bytes='2252' count='652' iicount='652' level='3' stamp='2.216'>
<phase name='buildIR' stamp='2.216'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='847' name='jdk/internal/org/objectweb/asm/ClassWriter' flags='1'/>
<klass id='848' name='jdk/internal/org/objectweb/asm/Item' flags='16'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/Frame' flags='16'/>
<method id='849' holder='846' name='execute' return='737' arguments='735 735 847 848' flags='0' bytes='2252' iicount='653'/>
<parse method='849'  stamp='2.216'>
<bc code='183' bci='822'/>
<method id='851' holder='846' name='push' return='737' arguments='735' flags='2' bytes='110' iicount='541'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='955'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='979'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='964'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='970'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='988'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='994'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='1006'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='854' holder='847' name='addType' return='735' arguments='743' flags='0' bytes='39' iicount='460'/>
<call method='854' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='847'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='847'/>
<bc code='183' bci='1010'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='1022'/>
<call method='854' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='847'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='847'/>
<bc code='183' bci='1026'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='1038'/>
<call method='854' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='847'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='847'/>
<bc code='183' bci='1042'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='1054'/>
<call method='854' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='847'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='847'/>
<bc code='183' bci='1058'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='831'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='840'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='846'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='855'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='864'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='870'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1067'/>
<method id='859' holder='846' name='get' return='735' arguments='735' flags='2' bytes='46' iicount='388'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1070'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1112'/>
<method id='861' holder='846' name='pop' return='737' arguments='735' flags='2' bytes='45' iicount='176'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1118'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1146'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1150'/>
<method id='863' holder='846' name='pop' return='735' flags='2' bytes='43' iicount='159'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1161'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1078'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1084'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1246'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1250'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1259'/>
<method id='865' holder='846' name='set' return='737' arguments='735 735' flags='2' bytes='65' iicount='112'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1268'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1279'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1329'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1304'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1168'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1177'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1188'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1238'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1213'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1345'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1337'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1368'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1376'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1382'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1389'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1395'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1403'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1409'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1415'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1422'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1428'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1434'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1442'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1448'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1454'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1460'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1467'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1473'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1481'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1487'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1493'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1499'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1506'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1512'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1518'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1526'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1532'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1538'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1544'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1550'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1557'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1563'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1569'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1575'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1583'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1589'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1595'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1601'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1607'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1613'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1620'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1626'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1634'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1640'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1696'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1702'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1708'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1716'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1722'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1728'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1662'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1668'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1674'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1738'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1766'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1772'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1126'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1132'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1138'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1746'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1752'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1758'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1780'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1786'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1792'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1092'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1098'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1104'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1682'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1688'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1648'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1654'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1814'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1820'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1832'/>
<klass id='753' name='java/lang/RuntimeException' flags='1'/>
<method id='868' holder='753' name='&lt;init&gt;' return='737' arguments='743' flags='1' bytes='6' iicount='1'/>
<call method='868' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='183' bci='1361'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1843'/>
<method id='870' holder='846' name='push' return='737' arguments='847 743' flags='2' bytes='34' iicount='120'/>
<call method='870' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='184' bci='2'/>
<method id='872' holder='846' name='type' return='735' arguments='847 743' flags='10' bytes='416' iicount='430'/>
<call method='872' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='30'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.217'/>
</parse>
<bc code='183' bci='1855'/>
<method id='874' holder='846' name='pop' return='737' arguments='743' flags='2' bytes='53' iicount='112'/>
<call method='874' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1863'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1873'/>
<call method='870' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='184' bci='2'/>
<call method='872' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='30'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.217'/>
</parse>
<bc code='183' bci='1885'/>
<call method='874' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1889'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1902'/>
<call method='874' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1913'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='1931'/>
<type id='730' name='char'/>
<method id='876' holder='743' name='charAt' return='730' arguments='735' flags='1' bytes='29' compile_id='10' compiler='C2' level='4' iicount='201164'/>
<call method='876' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='876'>
<bc code='183' bci='18'/>
<klass id='878' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='879' holder='878' name='&lt;init&gt;' return='737' arguments='735' unloaded='1'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='2.217'/>
</parse>
<bc code='183' bci='1942'/>
<method id='880' holder='846' name='init' return='737' arguments='735' flags='2' bytes='77' iicount='1'/>
<call method='880' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1952'/>
<call method='870' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='184' bci='2'/>
<call method='872' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='30'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.218'/>
</parse>
<bc code='183' bci='1964'/>
<call method='874' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1974'/>
<call method='870' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='184' bci='2'/>
<call method='872' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='30'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.218'/>
</parse>
<bc code='182' bci='1990'/>
<method id='882' holder='847' name='addUninitializedType' return='735' arguments='743 735' flags='0' bytes='71' iicount='1'/>
<call method='882' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='847'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='847'/>
<bc code='183' bci='1994'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2001'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2051'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2060'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2096'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2105'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2069'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2078'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2087'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2114'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2128'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='2135'/>
<call method='876' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='876'>
<bc code='183' bci='18'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='2.218'/>
</parse>
<bc code='183' bci='2149'/>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<method id='884' holder='809' name='&lt;init&gt;' return='737' flags='1' bytes='7' compile_id='67' compiler='C1' level='3' iicount='949'/>
<call method='884' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='884'>
<bc code='183' bci='3'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='886' holder='807' name='&lt;init&gt;' return='737' arguments='735' flags='0' bytes='12' compile_id='57' compiler='C1' level='3' iicount='1993'/>
<call method='886' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='886'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='888' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='18437'/>
<call method='888' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='888'>
<parse_done stamp='2.218'/>
</parse>
<parse_done stamp='2.218'/>
</parse>
<parse_done stamp='2.218'/>
</parse>
<bc code='182' bci='2154'/>
<method id='890' holder='809' name='append' return='809' arguments='730' flags='1' bytes='8' compile_id='110' compiler='C1' level='3' iicount='1377'/>
<call method='890' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='890'>
<bc code='183' bci='2'/>
<method id='892' holder='807' name='append' return='807' arguments='730' flags='1' bytes='29' compile_id='15' compiler='C2' level='4' iicount='35313'/>
<call method='892' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='892'>
<bc code='183' bci='7'/>
<method id='894' holder='807' name='ensureCapacityInternal' return='737' arguments='735' flags='2' bytes='27' compile_id='6' compiler='C2' level='4' iicount='38202'/>
<call method='894' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='894'>
<bc code='183' bci='17'/>
<method id='896' holder='807' name='newCapacity' return='735' arguments='735' flags='2' bytes='39' compile_id='58' compiler='C1' level='3' iicount='1121'/>
<call method='896' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='898' name='java/util/Arrays' flags='1'/>
<method id='899' holder='898' name='copyOf' return='835' arguments='835 735' flags='9' bytes='19' compile_id='5' compiler='C1' level='3' iicount='1234'/>
<call method='899' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='899'>
<bc code='184' bci='11'/>
<klass id='901' name='java/lang/Math' flags='17'/>
<method id='902' holder='901' name='min' return='735' arguments='735 735' flags='9' bytes='11' compile_id='1' compiler='C2' level='4' iicount='9202'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='2.219'/>
</parse>
<bc code='184' bci='14'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='904' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='904' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='2.219'/>
</parse>
<parse_done stamp='2.219'/>
</parse>
<parse_done stamp='2.219'/>
</parse>
<parse_done stamp='2.219'/>
</parse>
<bc code='182' bci='2159'/>
<method id='906' holder='809' name='append' return='809' arguments='743' flags='1' bytes='8' compile_id='46' compiler='C1' level='3' iicount='2436'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<bc code='183' bci='2'/>
<method id='908' holder='807' name='append' return='807' arguments='743' flags='1' bytes='50' compile_id='28' compiler='C1' level='3' iicount='2890'/>
<call method='908' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.219'/>
</parse>
<bc code='182' bci='2162'/>
<method id='910' holder='809' name='toString' return='743' flags='1' bytes='17' compile_id='62' compiler='C1' level='3' iicount='1049'/>
<call method='910' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='183' bci='13'/>
<method id='912' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' compile_id='47' compiler='C1' level='3' iicount='3792'/>
<call method='912' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.219'/>
</parse>
<bc code='183' bci='2165'/>
<call method='870' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='184' bci='2'/>
<call method='872' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='30'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.219'/>
</parse>
<bc code='182' bci='2177'/>
<call method='854' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='847'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='847'/>
<bc code='183' bci='2181'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2195'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='2202'/>
<call method='876' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='876'>
<bc code='183' bci='18'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='2.219'/>
</parse>
<bc code='183' bci='2214'/>
<call method='870' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='184' bci='2'/>
<call method='872' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='30'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.219'/>
</parse>
<bc code='182' bci='2226'/>
<call method='854' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='847'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='847'/>
<bc code='183' bci='2230'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1800'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1806'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='1353'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2238'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='2248'/>
<call method='870' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='184' bci='2'/>
<call method='872' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='30'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.220'/>
</parse>
<parse_done stamp='2.220'/>
</parse>
<phase name='optimize_blocks' stamp='2.220'>
<phase_done name='optimize_blocks' stamp='2.220'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.220'>
<phase_done name='rangeCheckElimination' stamp='2.220'/>
</phase>
<phase name='optimize_null_checks' stamp='2.220'>
<phase_done name='optimize_null_checks' stamp='2.221'/>
</phase>
<phase_done name='buildIR' stamp='2.221'/>
</phase>
<phase name='emit_lir' stamp='2.221'>
<phase name='lirGeneration' stamp='2.221'>
<phase_done name='lirGeneration' stamp='2.222'/>
</phase>
<phase name='linearScan' stamp='2.222'>
<phase_done name='linearScan' stamp='2.225'/>
</phase>
<phase_done name='emit_lir' stamp='2.225'/>
</phase>
<phase name='codeemit' stamp='2.225'>
<phase_done name='codeemit' stamp='2.227'/>
</phase>
<phase name='codeinstall' stamp='2.227'>
<dependency type='leaf_type' ctxk='847'/>
<phase_done name='codeinstall' stamp='2.447'/>
</phase>
<code_cache total_blobs='458' nmethods='172' adapters='199' free_code_cache='250218688'/>
<task_done success='1' nmsize='22240' count='1102' inlined_bytes='464' stamp='2.448'/>
</task>
<task compile_id='194' method='jdk/internal/org/objectweb/asm/Item isEqualTo (Ljdk/internal/org/objectweb/asm/Item;)Z' bytes='354' count='1147' iicount='1147' level='3' stamp='2.448'>
<phase name='buildIR' stamp='2.448'>
<type id='729' name='boolean'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/Item' flags='16'/>
<method id='847' holder='846' name='isEqualTo' return='729' arguments='846' flags='0' bytes='354' iicount='1147'/>
<parse method='847'  stamp='2.448'>
<bc code='182' bci='234'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='849' holder='743' name='equals' return='729' arguments='742' flags='1' bytes='81' compile_id='36' compiler='C2' level='4' iicount='13705'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='248'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='280'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='294'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='156'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='214'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='314'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='328'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='342'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.448'/>
</parse>
<phase name='optimize_blocks' stamp='2.448'>
<phase_done name='optimize_blocks' stamp='2.448'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.448'>
<phase_done name='rangeCheckElimination' stamp='2.448'/>
</phase>
<phase name='optimize_null_checks' stamp='2.448'>
<phase_done name='optimize_null_checks' stamp='2.448'/>
</phase>
<phase_done name='buildIR' stamp='2.448'/>
</phase>
<phase name='emit_lir' stamp='2.448'>
<phase name='lirGeneration' stamp='2.448'>
<phase_done name='lirGeneration' stamp='2.448'/>
</phase>
<phase name='linearScan' stamp='2.448'>
<phase_done name='linearScan' stamp='2.449'/>
</phase>
<phase_done name='emit_lir' stamp='2.449'/>
</phase>
<phase name='codeemit' stamp='2.449'>
<phase_done name='codeemit' stamp='2.449'/>
</phase>
<phase name='codeinstall' stamp='2.449'>
<phase_done name='codeinstall' stamp='2.487'/>
</phase>
<code_cache total_blobs='459' nmethods='173' adapters='199' free_code_cache='250212480'/>
<task_done success='1' nmsize='3344' count='1182' stamp='2.487'/>
</task>
<task compile_id='193' method='jdk/internal/org/objectweb/asm/Frame push (I)V' bytes='110' count='964' iicount='964' level='3' stamp='2.487'>
<phase name='buildIR' stamp='2.487'>
<type id='737' name='void'/>
<type id='735' name='int'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/Frame' flags='16'/>
<method id='847' holder='846' name='push' return='737' arguments='735' flags='2' bytes='110' iicount='964'/>
<parse method='847'  stamp='2.487'>
<bc code='184' bci='38'/>
<klass id='849' name='java/lang/Math' flags='17'/>
<method id='850' holder='849' name='max' return='735' arguments='735 735' flags='9' bytes='11' compile_id='74' compiler='C2' level='4' iicount='17557'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='2.487'/>
</parse>
<bc code='184' bci='52'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='852' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='852' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='2.487'/>
</parse>
<phase name='optimize_blocks' stamp='2.487'>
<phase_done name='optimize_blocks' stamp='2.487'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.487'>
<phase_done name='rangeCheckElimination' stamp='2.487'/>
</phase>
<phase name='optimize_null_checks' stamp='2.487'>
<phase_done name='optimize_null_checks' stamp='2.488'/>
</phase>
<phase_done name='buildIR' stamp='2.488'/>
</phase>
<phase name='emit_lir' stamp='2.488'>
<phase name='lirGeneration' stamp='2.488'>
<phase_done name='lirGeneration' stamp='2.488'/>
</phase>
<phase name='linearScan' stamp='2.488'>
<phase_done name='linearScan' stamp='2.488'/>
</phase>
<phase_done name='emit_lir' stamp='2.488'/>
</phase>
<phase name='codeemit' stamp='2.488'>
<phase_done name='codeemit' stamp='2.488'/>
</phase>
<phase name='codeinstall' stamp='2.488'>
<phase_done name='codeinstall' stamp='2.501'/>
</phase>
<code_cache total_blobs='461' nmethods='174' adapters='200' free_code_cache='250209088'/>
<task_done success='1' nmsize='1328' count='964' inlined_bytes='11' stamp='2.501'/>
</task>
<task compile_id='195' method='jdk/internal/org/objectweb/asm/ClassWriter addType (Ljava/lang/String;)I' bytes='39' count='750' iicount='750' level='3' stamp='2.501'>
<phase name='buildIR' stamp='2.501'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/ClassWriter' flags='1'/>
<method id='847' holder='846' name='addType' return='735' arguments='743' flags='0' bytes='39' iicount='750'/>
<parse method='847'  stamp='2.501'>
<bc code='182' bci='9'/>
<type id='737' name='void'/>
<klass id='849' name='jdk/internal/org/objectweb/asm/Item' flags='16'/>
<method id='850' holder='849' name='set' return='737' arguments='735 743 743 743' flags='0' bytes='143' compile_id='64' compiler='C1' level='3' iicount='3343'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='17'/>
<method id='852' holder='846' name='get' return='849' arguments='849' flags='2' bytes='49' compile_id='65' compiler='C1' level='3' iicount='3349'/>
<call method='852' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='30'/>
<method id='854' holder='846' name='addType' return='849' arguments='849' flags='2' bytes='103' iicount='188'/>
<call method='854' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.502'/>
</parse>
<phase name='optimize_blocks' stamp='2.502'>
<phase_done name='optimize_blocks' stamp='2.502'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.502'>
<phase_done name='rangeCheckElimination' stamp='2.502'/>
</phase>
<phase name='optimize_null_checks' stamp='2.502'>
<phase_done name='optimize_null_checks' stamp='2.502'/>
</phase>
<phase_done name='buildIR' stamp='2.502'/>
</phase>
<phase name='emit_lir' stamp='2.502'>
<phase name='lirGeneration' stamp='2.502'>
<phase_done name='lirGeneration' stamp='2.502'/>
</phase>
<phase name='linearScan' stamp='2.502'>
<phase_done name='linearScan' stamp='2.502'/>
</phase>
<phase_done name='emit_lir' stamp='2.502'/>
</phase>
<phase name='codeemit' stamp='2.502'>
<phase_done name='codeemit' stamp='2.502'/>
</phase>
<phase name='codeinstall' stamp='2.502'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='2.510'/>
</phase>
<code_cache total_blobs='462' nmethods='175' adapters='200' free_code_cache='250207424'/>
<task_done success='1' nmsize='784' count='750' stamp='2.510'/>
</task>
<task compile_id='188' method='java/lang/invoke/MemberName getMethodType ()Ljava/lang/invoke/MethodType;' bytes='208' count='827' iicount='827' level='3' stamp='2.511'>
<phase name='buildIR' stamp='2.511'>
<klass id='801' name='java/lang/invoke/MethodType' flags='17'/>
<klass id='798' name='java/lang/invoke/MemberName' flags='16'/>
<method id='846' holder='798' name='getMethodType' return='801' flags='1' bytes='208' iicount='827'/>
<parse method='846'  stamp='2.511'>
<bc code='183' bci='8'/>
<type id='737' name='void'/>
<method id='850' holder='798' name='expandFromVM' return='737' flags='2' bytes='21' iicount='36'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='182' bci='9'/>
<type id='729' name='boolean'/>
<method id='852' holder='798' name='isResolved' return='729' flags='1' bytes='13' iicount='305'/>
<call method='852' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<parse_done stamp='2.511'/>
</parse>
<bc code='184' bci='17'/>
<klass id='799' name='java/lang/invoke/MethodHandleNatives' flags='0'/>
<method id='854' holder='799' name='expand' return='737' arguments='798' flags='264' bytes='0' iicount='36'/>
<call method='854' instr='invokestatic'/>
<inline_fail reason='native method'/>
<parse_done stamp='2.511'/>
</parse>
<bc code='182' bci='21'/>
<method id='855' holder='798' name='isInvocable' return='729' flags='1' bytes='7' compile_id='81' compiler='C1' level='3' iicount='1840'/>
<call method='855' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='183' bci='3'/>
<type id='735' name='int'/>
<method id='857' holder='798' name='testAnyFlags' return='729' arguments='735' flags='2' bytes='15' iicount='1908'/>
<call method='857' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='3'/>
<method id='859' holder='798' name='testFlags' return='729' arguments='735 735' flags='2' bytes='16' compile_id='66' compiler='C1' level='3' iicount='2967'/>
<call method='859' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<parse_done stamp='2.511'/>
</parse>
<parse_done stamp='2.511'/>
</parse>
<parse_done stamp='2.511'/>
</parse>
<bc code='184' bci='29'/>
<klass id='753' name='java/lang/RuntimeException' flags='1'/>
<klass id='743' name='java/lang/String' flags='17'/>
<klass id='862' name='java/lang/invoke/MethodHandleStatics' flags='0'/>
<method id='863' holder='862' name='newIllegalArgumentException' return='753' arguments='743' flags='8' bytes='9' iicount='1'/>
<call method='863' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='5'/>
<klass id='865' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='866' holder='865' name='&lt;init&gt;' return='737' arguments='743' flags='1' bytes='6' iicount='1'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='2.511'/>
</parse>
<bc code='182' bci='74'/>
<klass id='746' name='java/lang/ClassLoader' flags='1025'/>
<method id='868' holder='798' name='getClassLoader' return='746' flags='1' bytes='8' iicount='36'/>
<call method='868' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='182' bci='4'/>
<klass id='744' name='java/lang/Class' flags='17'/>
<method id='870' holder='744' name='getClassLoader' return='746' flags='1' bytes='28' compile_id='112' compiler='C1' level='3' iicount='1427'/>
<call method='870' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='182' bci='1'/>
<method id='872' holder='744' name='getClassLoader0' return='746' flags='0' bytes='5' compile_id='30' compiler='C1' level='1' iicount='136'/>
<call method='872' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='872'>
<parse_done stamp='2.511'/>
</parse>
<bc code='184' bci='11'/>
<klass id='754' name='java/lang/SecurityManager' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='874' holder='748' name='getSecurityManager' return='754' flags='9' bytes='4' compile_id='180' compiler='C1' level='1' iicount='1541'/>
<call method='874' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='874'>
<parse_done stamp='2.511'/>
</parse>
<bc code='184' bci='20'/>
<klass id='877' name='sun/reflect/Reflection' flags='1'/>
<method id='878' holder='877' name='getCallerClass' return='744' flags='265' bytes='0' iicount='98'/>
<call method='878' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='184' bci='23'/>
<method id='879' holder='746' name='checkClassLoaderPermission' return='737' arguments='746 744' flags='8' bytes='29' iicount='1'/>
<call method='879' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.511'/>
</parse>
<parse_done stamp='2.511'/>
</parse>
<bc code='184' bci='77'/>
<method id='881' holder='801' name='fromMethodDescriptorString' return='801' arguments='743 746' flags='9' bytes='97' iicount='40'/>
<call method='881' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='131'/>
<klass id='849' name='[Ljava/lang/Class;' flags='1041'/>
<method id='883' holder='801' name='methodType' return='801' arguments='744 849' flags='9' bytes='7' iicount='90'/>
<call method='883' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='883'>
<bc code='184' bci='3'/>
<method id='885' holder='801' name='makeImpl' return='801' arguments='744 849 729' flags='8' bytes='66' iicount='601'/>
<call method='885' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.512'/>
</parse>
<parse_done stamp='2.512'/>
</parse>
<phase name='optimize_blocks' stamp='2.512'>
<phase_done name='optimize_blocks' stamp='2.512'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.512'>
<phase_done name='rangeCheckElimination' stamp='2.512'/>
</phase>
<phase name='optimize_null_checks' stamp='2.512'>
<phase_done name='optimize_null_checks' stamp='2.512'/>
</phase>
<phase_done name='buildIR' stamp='2.512'/>
</phase>
<phase name='emit_lir' stamp='2.512'>
<phase name='lirGeneration' stamp='2.512'>
<phase_done name='lirGeneration' stamp='2.512'/>
</phase>
<phase name='linearScan' stamp='2.512'>
<phase_done name='linearScan' stamp='2.512'/>
</phase>
<phase_done name='emit_lir' stamp='2.512'/>
</phase>
<phase name='codeemit' stamp='2.512'>
<phase_done name='codeemit' stamp='2.513'/>
</phase>
<phase name='codeinstall' stamp='2.513'>
<phase_done name='codeinstall' stamp='2.565'/>
</phase>
<code_cache total_blobs='463' nmethods='176' adapters='200' free_code_cache='250197696'/>
<task_done success='1' nmsize='6144' count='828' inlined_bytes='133' stamp='2.565'/>
</task>
<task compile_id='191' method='java/lang/invoke/LambdaForm arity ()I' bytes='5' count='145' iicount='145' level='1' stamp='2.565'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='145' stamp='2.565'/>
</task>
<task compile_id='168' method='java/lang/invoke/MethodTypeForm erasedType ()Ljava/lang/invoke/MethodType;' bytes='5' count='165' iicount='165' level='1' stamp='2.565'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='165' stamp='2.565'/>
</task>
<task compile_id='145' method='java/lang/invoke/MethodHandle type ()Ljava/lang/invoke/MethodType;' bytes='5' count='365' iicount='365' level='1' stamp='2.565'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='365' stamp='2.565'/>
</task>
<task compile_id='128' method='java/lang/invoke/LambdaForm$BasicType basicTypeClass ()Ljava/lang/Class;' bytes='5' count='475' iicount='475' level='1' stamp='2.565'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='475' stamp='2.565'/>
</task>
<task compile_id='126' method='java/lang/invoke/LambdaForm$BasicType access$100 (Ljava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/Class;' bytes='5' count='409' iicount='409' level='1' stamp='2.565'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='409' stamp='2.565'/>
</task>
<task compile_id='125' method='java/lang/invoke/LambdaForm$BasicType basicTypeChar ()C' bytes='5' count='427' iicount='427' level='1' stamp='2.565'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='427' stamp='2.565'/>
</task>
<task compile_id='107' method='java/lang/invoke/MethodType ptypes ()[Ljava/lang/Class;' bytes='5' count='234' iicount='234' level='1' stamp='2.565'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='234' stamp='2.565'/>
</task>
<task compile_id='192' method='java/lang/invoke/MemberName getMethodOrFieldType ()Ljava/lang/invoke/MethodType;' bytes='72' count='708' iicount='708' level='3' stamp='2.565'>
<phase name='buildIR' stamp='2.565'>
<klass id='801' name='java/lang/invoke/MethodType' flags='17'/>
<klass id='798' name='java/lang/invoke/MemberName' flags='16'/>
<method id='846' holder='798' name='getMethodOrFieldType' return='801' flags='1' bytes='72' iicount='708'/>
<parse method='846'  stamp='2.565'>
<bc code='182' bci='1'/>
<type id='729' name='boolean'/>
<method id='848' holder='798' name='isInvocable' return='729' flags='1' bytes='7' compile_id='81' compiler='C1' level='3' iicount='1842'/>
<call method='848' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='3'/>
<type id='735' name='int'/>
<method id='850' holder='798' name='testAnyFlags' return='729' arguments='735' flags='2' bytes='15' iicount='1910'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='3'/>
<method id='852' holder='798' name='testFlags' return='729' arguments='735 735' flags='2' bytes='16' compile_id='66' compiler='C1' level='3' iicount='2970'/>
<call method='852' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<parse_done stamp='2.565'/>
</parse>
<parse_done stamp='2.565'/>
</parse>
<parse_done stamp='2.565'/>
</parse>
<bc code='182' bci='8'/>
<method id='854' holder='798' name='getMethodType' return='801' flags='1' bytes='208' compile_id='188' compiler='C1' level='3' iicount='828'/>
<call method='854' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='13'/>
<method id='858' holder='798' name='isGetter' return='729' flags='1' bytes='8' iicount='44'/>
<call method='858' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<bc code='182' bci='1'/>
<type id='733' name='byte'/>
<method id='860' holder='798' name='getReferenceKind' return='733' flags='1' bytes='12' iicount='402'/>
<call method='860' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<parse_done stamp='2.565'/>
</parse>
<bc code='184' bci='4'/>
<klass id='799' name='java/lang/invoke/MethodHandleNatives' flags='0'/>
<method id='862' holder='799' name='refKindIsGetter' return='729' arguments='733' flags='8' bytes='32' iicount='44'/>
<call method='862' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.565'/>
</parse>
<bc code='182' bci='20'/>
<klass id='744' name='java/lang/Class' flags='17'/>
<method id='864' holder='798' name='getFieldType' return='744' flags='1' bytes='177' iicount='81'/>
<call method='864' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='23'/>
<method id='866' holder='801' name='methodType' return='801' arguments='744' flags='9' bytes='9' iicount='52'/>
<call method='866' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='866'>
<bc code='184' bci='5'/>
<klass id='857' name='[Ljava/lang/Class;' flags='1041'/>
<method id='870' holder='801' name='makeImpl' return='801' arguments='744 857 729' flags='8' bytes='66' iicount='602'/>
<call method='870' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.565'/>
</parse>
<bc code='182' bci='28'/>
<method id='873' holder='798' name='isSetter' return='729' flags='1' bytes='8' iicount='1'/>
<call method='873' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='182' bci='1'/>
<call method='860' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<parse_done stamp='2.565'/>
</parse>
<bc code='184' bci='4'/>
<method id='875' holder='799' name='refKindIsSetter' return='729' arguments='733' flags='8' bytes='20' iicount='1'/>
<call method='875' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='184' bci='1'/>
<method id='877' holder='799' name='refKindIsField' return='729' arguments='733' flags='8' bytes='32' iicount='10'/>
<call method='877' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='8'/>
<call method='862' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.566'/>
</parse>
<parse_done stamp='2.566'/>
</parse>
<bc code='182' bci='38'/>
<call method='864' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='41'/>
<method id='882' holder='801' name='methodType' return='801' arguments='744 744' flags='9' bytes='14' iicount='8'/>
<call method='882' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='882'>
<bc code='184' bci='10'/>
<call method='870' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.566'/>
</parse>
<bc code='183' bci='53'/>
<type id='737' name='void'/>
<klass id='809' name='java/lang/StringBuilder' flags='17'/>
<method id='885' holder='809' name='&lt;init&gt;' return='737' flags='1' bytes='7' compile_id='67' compiler='C1' level='3' iicount='1094'/>
<call method='885' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='885'>
<bc code='183' bci='3'/>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='887' holder='807' name='&lt;init&gt;' return='737' arguments='735' flags='0' bytes='12' compile_id='57' compiler='C1' level='3' iicount='2299'/>
<call method='887' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='887'>
<bc code='183' bci='1'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<method id='889' holder='742' name='&lt;init&gt;' return='737' flags='1' bytes='1' compile_id='11' compiler='C2' level='4' iicount='19964'/>
<call method='889' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='889'>
<parse_done stamp='2.566'/>
</parse>
<parse_done stamp='2.566'/>
</parse>
<parse_done stamp='2.566'/>
</parse>
<bc code='182' bci='58'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='892' holder='809' name='append' return='809' arguments='743' flags='1' bytes='8' compile_id='46' compiler='C1' level='3' iicount='2782'/>
<call method='892' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='892'>
<bc code='183' bci='2'/>
<method id='894' holder='807' name='append' return='807' arguments='743' flags='1' bytes='50' compile_id='28' compiler='C1' level='3' iicount='3234'/>
<call method='894' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.566'/>
</parse>
<bc code='182' bci='62'/>
<method id='896' holder='809' name='append' return='809' arguments='742' flags='1' bytes='9' iicount='147'/>
<call method='896' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='896'>
<bc code='184' bci='2'/>
<method id='898' holder='743' name='valueOf' return='743' arguments='742' flags='9' bytes='14' iicount='149'/>
<call method='898' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='898'>
<bc code='182' bci='10'/>
<method id='901' holder='742' name='toString' return='743' flags='1' bytes='36' iicount='1'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.566'/>
</parse>
<bc code='182' bci='5'/>
<call method='892' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='892'>
<bc code='183' bci='2'/>
<call method='894' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.566'/>
</parse>
<parse_done stamp='2.566'/>
</parse>
<bc code='182' bci='65'/>
<method id='904' holder='809' name='toString' return='743' flags='1' bytes='17' compile_id='62' compiler='C1' level='3' iicount='1227'/>
<call method='904' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<bc code='183' bci='13'/>
<klass id='835' name='[C' flags='1041'/>
<method id='906' holder='743' name='&lt;init&gt;' return='737' arguments='835 735 735' flags='1' bytes='82' compile_id='47' compiler='C1' level='3' iicount='4217'/>
<call method='906' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.566'/>
</parse>
<bc code='183' bci='68'/>
<klass id='884' name='java/lang/InternalError' flags='1'/>
<method id='908' holder='884' name='&lt;init&gt;' return='737' arguments='743' flags='1' bytes='6' iicount='1'/>
<call method='908' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='2.566'/>
</parse>
<phase name='optimize_blocks' stamp='2.566'>
<phase_done name='optimize_blocks' stamp='2.566'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.566'>
<phase_done name='rangeCheckElimination' stamp='2.566'/>
</phase>
<phase name='optimize_null_checks' stamp='2.566'>
<phase_done name='optimize_null_checks' stamp='2.566'/>
</phase>
<phase_done name='buildIR' stamp='2.566'/>
</phase>
<phase name='emit_lir' stamp='2.566'>
<phase name='lirGeneration' stamp='2.566'>
<phase_done name='lirGeneration' stamp='2.566'/>
</phase>
<phase name='linearScan' stamp='2.566'>
<phase_done name='linearScan' stamp='2.567'/>
</phase>
<phase_done name='emit_lir' stamp='2.567'/>
</phase>
<phase name='codeemit' stamp='2.567'>
<phase_done name='codeemit' stamp='2.567'/>
</phase>
<phase name='codeinstall' stamp='2.567'>
<phase_done name='codeinstall' stamp='2.626'/>
</phase>
<code_cache total_blobs='466' nmethods='179' adapters='200' free_code_cache='250186432'/>
<task_done success='1' nmsize='5904' count='712' inlined_bytes='197' stamp='2.626'/>
</task>
<task compile_id='199' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='120433' backedge_count='49795' iicount='120437' level='2' stamp='2.627'>
<phase name='buildIR' stamp='2.627'>
<type id='735' name='int'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='736' name='long'/>
<klass id='810' name='sun/misc/Unsafe' flags='17'/>
<method id='846' holder='810' name='getAndAddInt' return='735' arguments='742 736 735' flags='17' bytes='27' iicount='120514'/>
<parse method='846'  stamp='2.627'>
<bc code='182' bci='3'/>
<method id='848' holder='810' name='getIntVolatile' return='735' arguments='742 736' flags='257' bytes='0' compile_id='200' compile_kind='c2n' level='0' iicount='385'/>
<call method='848' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='18'/>
<type id='729' name='boolean'/>
<method id='849' holder='810' name='compareAndSwapInt' return='729' arguments='742 736 735 735' flags='273' bytes='0' compile_id='198' compile_kind='c2n' level='0' iicount='440'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='2.627'/>
</parse>
<phase name='optimize_blocks' stamp='2.627'>
<phase_done name='optimize_blocks' stamp='2.627'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.627'>
<phase_done name='rangeCheckElimination' stamp='2.627'/>
</phase>
<phase name='optimize_null_checks' stamp='2.627'>
<phase_done name='optimize_null_checks' stamp='2.627'/>
</phase>
<phase_done name='buildIR' stamp='2.627'/>
</phase>
<phase name='emit_lir' stamp='2.627'>
<phase name='lirGeneration' stamp='2.627'>
<phase_done name='lirGeneration' stamp='2.627'/>
</phase>
<phase name='linearScan' stamp='2.627'>
<phase_done name='linearScan' stamp='2.627'/>
</phase>
<phase_done name='emit_lir' stamp='2.627'/>
</phase>
<phase name='codeemit' stamp='2.627'>
<phase_done name='codeemit' stamp='2.627'/>
</phase>
<phase name='codeinstall' stamp='2.627'>
<phase_done name='codeinstall' stamp='2.631'/>
</phase>
<code_cache total_blobs='467' nmethods='180' adapters='200' free_code_cache='250185408'/>
<task_done success='1' nmsize='440' count='146799' backedge_count='55008' stamp='2.631'/>
</task>
<task compile_id='202' compile_kind='osr' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='149144' iicount='2' osr_bci='2' level='3' stamp='2.631'>
<phase name='buildIR' stamp='2.631'>
<type id='737' name='void'/>
<klass id='846' name='pers/mine/scratchpad/other/SafepointTest' flags='1'/>
<method id='847' holder='846' name='lambda$main$0' return='737' flags='4106' bytes='23' iicount='2'/>
<parse method='847'  stamp='2.631'>
<bc code='182' bci='12'/>
<type id='735' name='int'/>
<klass id='849' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='851' holder='849' name='getAndAdd' return='735' arguments='735' flags='17' bytes='12' iicount='149279'/>
<call method='851' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='849'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='182' bci='8'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='736' name='long'/>
<klass id='810' name='sun/misc/Unsafe' flags='17'/>
<method id='855' holder='810' name='getAndAddInt' return='735' arguments='742 736 735' flags='17' bytes='27' compile_id='199' compiler='C1' level='2' iicount='149695'/>
<call method='855' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='2.631'/>
</parse>
<parse_done stamp='2.631'/>
</parse>
<phase name='optimize_blocks' stamp='2.631'>
<phase_done name='optimize_blocks' stamp='2.631'/>
</phase>
<phase name='optimize_null_checks' stamp='2.631'>
<phase_done name='optimize_null_checks' stamp='2.631'/>
</phase>
<phase_done name='buildIR' stamp='2.631'/>
</phase>
<phase name='emit_lir' stamp='2.631'>
<phase name='lirGeneration' stamp='2.631'>
<phase_done name='lirGeneration' stamp='2.631'/>
</phase>
<phase name='linearScan' stamp='2.631'>
<phase_done name='linearScan' stamp='2.631'/>
</phase>
<phase_done name='emit_lir' stamp='2.631'/>
</phase>
<phase name='codeemit' stamp='2.631'>
<phase_done name='codeemit' stamp='2.632'/>
</phase>
<phase name='codeinstall' stamp='2.632'>
<dependency type='leaf_type' ctxk='849'/>
<phase_done name='codeinstall' stamp='2.638'/>
</phase>
<code_cache total_blobs='469' nmethods='181' adapters='200' free_code_cache='250178432'/>
<task_done success='1' nmsize='792' count='2' backedge_count='266886' inlined_bytes='12' stamp='2.638'/>
</task>
<task compile_id='204' method='pers/mine/scratchpad/other/SafepointTest lambda$main$0 ()V' bytes='23' count='2' backedge_count='447460' iicount='2' level='3' stamp='2.641'>
<phase name='buildIR' stamp='2.641'>
<type id='737' name='void'/>
<klass id='846' name='pers/mine/scratchpad/other/SafepointTest' flags='1'/>
<method id='847' holder='846' name='lambda$main$0' return='737' flags='4106' bytes='23' iicount='2'/>
<parse method='847'  stamp='2.641'>
<bc code='182' bci='12'/>
<type id='735' name='int'/>
<klass id='849' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='851' holder='849' name='getAndAdd' return='735' arguments='735' flags='17' bytes='12' iicount='453669'/>
<call method='851' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='849'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='182' bci='8'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='736' name='long'/>
<klass id='810' name='sun/misc/Unsafe' flags='17'/>
<method id='855' holder='810' name='getAndAddInt' return='735' arguments='742 736 735' flags='17' bytes='27' compile_id='203' compiler='C2' level='4' iicount='267108'/>
<call method='855' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='2.641'/>
</parse>
<parse_done stamp='2.641'/>
</parse>
<phase name='optimize_blocks' stamp='2.641'>
<phase_done name='optimize_blocks' stamp='2.641'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.641'>
<phase_done name='rangeCheckElimination' stamp='2.641'/>
</phase>
<phase name='optimize_null_checks' stamp='2.641'>
<phase_done name='optimize_null_checks' stamp='2.641'/>
</phase>
<phase_done name='buildIR' stamp='2.641'/>
</phase>
<phase name='emit_lir' stamp='2.641'>
<phase name='lirGeneration' stamp='2.641'>
<phase_done name='lirGeneration' stamp='2.641'/>
</phase>
<phase name='linearScan' stamp='2.641'>
<phase_done name='linearScan' stamp='2.641'/>
</phase>
<phase_done name='emit_lir' stamp='2.641'/>
</phase>
<phase name='codeemit' stamp='2.641'>
<phase_done name='codeemit' stamp='2.641'/>
</phase>
<phase name='codeinstall' stamp='2.641'>
<dependency type='leaf_type' ctxk='849'/>
<phase_done name='codeinstall' stamp='2.647'/>
</phase>
<code_cache total_blobs='470' nmethods='183' adapters='200' free_code_cache='250181696'/>
<task_done success='1' nmsize='728' count='2' backedge_count='554575' inlined_bytes='12' stamp='2.647'/>
</task>
<task compile_id='201' method='java/util/concurrent/atomic/AtomicInteger getAndAdd (I)I' bytes='12' count='556492' iicount='556503' level='2' stamp='2.647'>
<phase name='buildIR' stamp='2.647'>
<type id='735' name='int'/>
<klass id='846' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='847' holder='846' name='getAndAdd' return='735' arguments='735' flags='17' bytes='12' iicount='556700'/>
<parse method='847'  stamp='2.647'>
<bc code='182' bci='8'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='736' name='long'/>
<klass id='810' name='sun/misc/Unsafe' flags='17'/>
<method id='851' holder='810' name='getAndAddInt' return='735' arguments='742 736 735' flags='17' bytes='27' compile_id='203' compiler='C2' level='4' iicount='267108'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='2.647'/>
</parse>
<phase name='optimize_blocks' stamp='2.647'>
<phase_done name='optimize_blocks' stamp='2.647'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.647'>
<phase_done name='rangeCheckElimination' stamp='2.648'/>
</phase>
<phase name='optimize_null_checks' stamp='2.648'>
<phase_done name='optimize_null_checks' stamp='2.648'/>
</phase>
<phase_done name='buildIR' stamp='2.648'/>
</phase>
<phase name='emit_lir' stamp='2.648'>
<phase name='lirGeneration' stamp='2.648'>
<phase_done name='lirGeneration' stamp='2.648'/>
</phase>
<phase name='linearScan' stamp='2.648'>
<phase_done name='linearScan' stamp='2.648'/>
</phase>
<phase_done name='emit_lir' stamp='2.648'/>
</phase>
<phase name='codeemit' stamp='2.648'>
<phase_done name='codeemit' stamp='2.648'/>
</phase>
<phase name='codeinstall' stamp='2.648'>
<phase_done name='codeinstall' stamp='2.651'/>
</phase>
<code_cache total_blobs='471' nmethods='184' adapters='200' free_code_cache='250180864'/>
<task_done success='1' nmsize='344' count='585172' stamp='2.651'/>
</task>
<task compile_id='196' method='jdk/internal/org/objectweb/asm/ByteVector putInt (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='74' count='526' iicount='526' level='3' stamp='2.651'>
<phase name='buildIR' stamp='2.651'>
<klass id='846' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<type id='735' name='int'/>
<method id='847' holder='846' name='putInt' return='846' arguments='735' flags='1' bytes='74' iicount='526'/>
<parse method='847'  stamp='2.651'>
<bc code='183' bci='18'/>
<type id='737' name='void'/>
<method id='849' holder='846' name='enlarge' return='737' arguments='735' flags='2' bytes='51' iicount='290'/>
<call method='849' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='846'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.651'/>
</parse>
<phase name='optimize_blocks' stamp='2.651'>
<phase_done name='optimize_blocks' stamp='2.651'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.651'>
<phase_done name='rangeCheckElimination' stamp='2.651'/>
</phase>
<phase name='optimize_null_checks' stamp='2.651'>
<phase_done name='optimize_null_checks' stamp='2.651'/>
</phase>
<phase_done name='buildIR' stamp='2.651'/>
</phase>
<phase name='emit_lir' stamp='2.651'>
<phase name='lirGeneration' stamp='2.651'>
<phase_done name='lirGeneration' stamp='2.651'/>
</phase>
<phase name='linearScan' stamp='2.651'>
<phase_done name='linearScan' stamp='2.651'/>
</phase>
<phase_done name='emit_lir' stamp='2.651'/>
</phase>
<phase name='codeemit' stamp='2.651'>
<phase_done name='codeemit' stamp='2.651'/>
</phase>
<phase name='codeinstall' stamp='2.651'>
<dependency type='leaf_type' ctxk='846'/>
<phase_done name='codeinstall' stamp='2.661'/>
</phase>
<code_cache total_blobs='473' nmethods='185' adapters='200' free_code_cache='250173824'/>
<task_done success='1' nmsize='688' count='526' stamp='2.661'/>
</task>
<task compile_id='197' method='jdk/internal/org/objectweb/asm/Frame pop ()I' bytes='43' count='289' iicount='289' level='3' stamp='2.661'>
<phase name='buildIR' stamp='2.661'>
<type id='735' name='int'/>
<klass id='846' name='jdk/internal/org/objectweb/asm/Frame' flags='16'/>
<method id='847' holder='846' name='pop' return='735' flags='2' bytes='43' iicount='289'/>
<parse method='847'  stamp='2.661'>
<parse_done stamp='2.669'/>
</parse>
<phase name='optimize_blocks' stamp='2.669'>
<phase_done name='optimize_blocks' stamp='2.669'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.669'>
<phase_done name='rangeCheckElimination' stamp='2.669'/>
</phase>
<phase name='optimize_null_checks' stamp='2.669'>
<phase_done name='optimize_null_checks' stamp='2.669'/>
</phase>
<phase_done name='buildIR' stamp='2.669'/>
</phase>
<phase name='emit_lir' stamp='2.669'>
<phase name='lirGeneration' stamp='2.669'>
<phase_done name='lirGeneration' stamp='2.669'/>
</phase>
<phase name='linearScan' stamp='2.669'>
<phase_done name='linearScan' stamp='2.669'/>
</phase>
<phase_done name='emit_lir' stamp='2.669'/>
</phase>
<phase name='codeemit' stamp='2.669'>
<phase_done name='codeemit' stamp='2.669'/>
</phase>
<phase name='codeinstall' stamp='2.669'>
<phase_done name='codeinstall' stamp='2.676'/>
</phase>
<code_cache total_blobs='474' nmethods='187' adapters='200' free_code_cache='250176512'/>
<task_done success='1' nmsize='504' count='289' stamp='2.676'/>
</task>
<task compile_id='71' method='java/util/SubList access$200 (Ljava/util/SubList;)I' bytes='5' count='201' iicount='201' level='1' stamp='2.676'>
<phase name='buildIR' stamp='2.676'>
<type id='735' name='int'/>
<klass id='846' name='java/util/SubList' flags='0'/>
<method id='847' holder='846' name='access$200' return='735' arguments='846' flags='4104' bytes='5' iicount='201'/>
<parse method='847'  stamp='2.676'>
<parse_done stamp='2.676'/>
</parse>
<phase name='optimize_blocks' stamp='2.676'>
<phase_done name='optimize_blocks' stamp='2.676'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.676'>
<phase_done name='rangeCheckElimination' stamp='2.677'/>
</phase>
<phase name='optimize_null_checks' stamp='2.677'>
<phase_done name='optimize_null_checks' stamp='2.677'/>
</phase>
<phase_done name='buildIR' stamp='2.677'/>
</phase>
<phase name='emit_lir' stamp='2.677'>
<phase name='lirGeneration' stamp='2.677'>
<phase_done name='lirGeneration' stamp='2.677'/>
</phase>
<phase name='linearScan' stamp='2.677'>
<phase_done name='linearScan' stamp='2.677'/>
</phase>
<phase_done name='emit_lir' stamp='2.677'/>
</phase>
<phase name='codeemit' stamp='2.677'>
<phase_done name='codeemit' stamp='2.677'/>
</phase>
<phase name='codeinstall' stamp='2.677'>
<phase_done name='codeinstall' stamp='2.680'/>
</phase>
<code_cache total_blobs='475' nmethods='188' adapters='200' free_code_cache='250175744'/>
<task_done success='1' nmsize='248' count='201' stamp='2.680'/>
</task>
<task compile_id='206' method='java/nio/Buffer position ()I' bytes='5' count='130' iicount='130' level='1' stamp='45.556'>
<phase name='buildIR' stamp='45.556'>
<type id='735' name='int'/>
<klass id='822' name='java/nio/Buffer' flags='1025'/>
<method id='846' holder='822' name='position' return='735' flags='17' bytes='5' iicount='130'/>
<parse method='846'  stamp='45.556'>
<parse_done stamp='45.556'/>
</parse>
<phase name='optimize_blocks' stamp='45.556'>
<phase_done name='optimize_blocks' stamp='45.556'/>
</phase>
<phase name='rangeCheckElimination' stamp='45.556'>
<phase_done name='rangeCheckElimination' stamp='45.556'/>
</phase>
<phase name='optimize_null_checks' stamp='45.556'>
<phase_done name='optimize_null_checks' stamp='45.556'/>
</phase>
<phase_done name='buildIR' stamp='45.556'/>
</phase>
<phase name='emit_lir' stamp='45.556'>
<phase name='lirGeneration' stamp='45.556'>
<phase_done name='lirGeneration' stamp='45.556'/>
</phase>
<phase name='linearScan' stamp='45.556'>
<phase_done name='linearScan' stamp='45.556'/>
</phase>
<phase_done name='emit_lir' stamp='45.556'/>
</phase>
<phase name='codeemit' stamp='45.556'>
<phase_done name='codeemit' stamp='45.556'/>
</phase>
<phase name='codeinstall' stamp='45.556'>
<phase_done name='codeinstall' stamp='45.566'/>
</phase>
<code_cache total_blobs='476' nmethods='189' adapters='200' free_code_cache='250174976'/>
<task_done success='1' nmsize='280' count='130' stamp='45.566'/>
</task>
</compilation_log>
<compilation_log thread='13612'>
<start_compile_thread name='C2 CompilerThread2' thread='13612' process='11764' stamp='0.546'/>
<task compile_id='7' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1835' backedge_count='111823' iicount='1835' osr_bci='37' stamp='0.596'>
<phase name='parse' nodes='3' live='3' stamp='0.596'>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='indexOf' return='735' arguments='735 735' flags='1' bytes='70' iicount='1835'/>
<parse method='846' uses='1835' osr_bci='37' stamp='0.596'>
<uncommon_trap bci='37' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='37' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='37' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1376' not_taken='106642' cnt='108018' prob='0.0127386'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='106639' not_taken='3' cnt='106642' prob='0.999972'/>
<parse_done nodes='169' live='162' memory='48088' stamp='0.597'/>
</parse>
<phase_done name='parse' nodes='170' live='125' stamp='0.597'/>
</phase>
<phase name='optimizer' nodes='170' live='125' stamp='0.597'>
<phase name='idealLoop' nodes='175' live='117' stamp='0.597'>
<loop_tree>
<loop idx='175' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='124' stamp='0.597'/>
</phase>
<phase name='idealLoop' nodes='227' live='124' stamp='0.597'>
<loop_tree>
<loop idx='232' main_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='331' live='187' stamp='0.597'/>
</phase>
<phase name='idealLoop' nodes='331' live='187' stamp='0.598'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='371' inner_loop='1' main_loop='371' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='394' live='210' stamp='0.598'/>
</phase>
<phase name='ccp' nodes='394' live='210' stamp='0.598'>
<phase_done name='ccp' nodes='394' live='210' stamp='0.598'/>
</phase>
<phase name='idealLoop' nodes='396' live='205' stamp='0.598'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='371' inner_loop='1' main_loop='371' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='400' live='200' stamp='0.598'/>
</phase>
<phase name='idealLoop' nodes='400' live='200' stamp='0.598'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='424' inner_loop='1' main_loop='424' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='446' live='236' stamp='0.599'/>
</phase>
<phase name='idealLoop' nodes='446' live='236' stamp='0.599'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='489' inner_loop='1' main_loop='489' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='522' live='298' stamp='0.599'/>
</phase>
<phase name='idealLoop' nodes='522' live='298' stamp='0.599'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='489' inner_loop='1' main_loop='489' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='522' live='291' stamp='0.599'/>
</phase>
<phase_done name='optimizer' nodes='588' live='284' stamp='0.599'/>
</phase>
<phase name='matcher' nodes='588' live='284' stamp='0.599'>
<phase_done name='matcher' nodes='219' live='219' stamp='0.600'/>
</phase>
<phase name='regalloc' nodes='302' live='302' stamp='0.600'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='321' live='318' stamp='0.601'/>
</phase>
<phase name='output' nodes='321' live='318' stamp='0.601'>
<phase_done name='output' nodes='356' live='330' stamp='0.606'/>
</phase>
<code_cache total_blobs='271' nmethods='11' adapters='171' free_code_cache='250521280'/>
<task_done success='1' nmsize='504' count='1844' backedge_count='112138' stamp='0.618'/>
</task>
<task compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='175304' iicount='175304' stamp='0.628'>
<phase name='parse' nodes='3' live='3' stamp='0.628'>
<type id='730' name='char'/>
<type id='735' name='int'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='charAt' return='730' arguments='735' flags='1' bytes='29' iicount='175304'/>
<klass id='848' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='846' bci='13' reason='unloaded' action='reinterpret' index='6' klass='848'/>
<parse method='846' uses='175304' stamp='0.628'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='175304' cnt='175304' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='175304' not_taken='0' cnt='175304' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35048' stamp='0.628'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.628'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.628'>
<phase name='ccp' nodes='103' live='63' stamp='0.628'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.628'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.628'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.629'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.629'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.629'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.629'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.629'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.629'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.629'>
<phase_done name='output' nodes='93' live='85' stamp='0.635'/>
</phase>
<code_cache total_blobs='275' nmethods='15' adapters='173' free_code_cache='250527936'/>
<task_done success='1' nmsize='216' count='175304' stamp='0.640'/>
</task>
<task compile_id='15' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='34502' iicount='34502' stamp='0.640'>
<phase name='parse' nodes='3' live='3' stamp='0.640'>
<klass id='807' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='730' name='char'/>
<method id='846' holder='807' name='append' return='807' arguments='730' flags='1' bytes='29' iicount='34502'/>
<parse method='846' uses='34502' stamp='0.640'>
<bc code='183' bci='7'/>
<type id='737' name='void'/>
<type id='735' name='int'/>
<method id='848' holder='807' name='ensureCapacityInternal' return='737' arguments='735' flags='2' bytes='27' iicount='36313'/>
<call method='848' count='33990' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='34502' stamp='0.640'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='35818' not_taken='495' cnt='36313' prob='0.986369'/>
<bc code='183' bci='17'/>
<method id='849' holder='807' name='newCapacity' return='735' arguments='735' flags='2' bytes='39' iicount='729'/>
<call method='849' count='488' prof_factor='0.950128' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='470' stamp='0.644'>
<bc code='183' bci='31'/>
<method id='853' holder='807' name='hugeCapacity' return='735' arguments='735' flags='2' bytes='28' iicount='1'/>
<call method='853' count='-1' prof_factor='0.644719' inline='1'/>
<klass id='765' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='853' bci='7' reason='unloaded' action='reinterpret' index='12' klass='765'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='147' live='145' memory='44880' stamp='0.644'/>
</parse>
<bc code='184' bci='20'/>
<klass id='835' name='[C' flags='1041'/>
<klass id='850' name='java/util/Arrays' flags='1'/>
<method id='851' holder='850' name='copyOf' return='835' arguments='835 735' flags='9' bytes='19' compile_id='5' compiler='C1' level='3' iicount='787'/>
<call method='851' count='488' prof_factor='0.950128' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='470' stamp='0.644'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='735' arguments='735 735' flags='9' bytes='11' iicount='5729'/>
<call method='856' count='-1' prof_factor='0.597205' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='748' name='java/lang/System' flags='17'/>
<method id='857' holder='748' name='arraycopy' return='737' arguments='742 735 742 735 735' flags='265' bytes='0' compile_id='2' compile_kind='c2n' level='0' iicount='7173'/>
<call method='857' count='-1' prof_factor='0.597205' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='338' live='334' memory='84456' stamp='0.645'/>
</parse>
<parse_done nodes='365' live='360' memory='89752' stamp='0.645'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='414' live='406' memory='98456' stamp='0.645'/>
</parse>
<phase_done name='parse' nodes='416' live='259' stamp='0.645'/>
</phase>
<phase name='optimizer' nodes='416' live='259' stamp='0.645'>
<phase name='escapeAnalysis' nodes='420' live='255' stamp='0.645'>
<phase name='connectionGraph' nodes='421' live='256' stamp='0.645'>
<phase_done name='connectionGraph' nodes='421' live='256' stamp='0.645'/>
</phase>
<phase_done name='escapeAnalysis' nodes='421' live='256' stamp='0.645'/>
</phase>
<phase name='ccp' nodes='421' live='256' stamp='0.645'>
<phase_done name='ccp' nodes='421' live='256' stamp='0.645'/>
</phase>
<phase name='idealLoop' nodes='421' live='255' stamp='0.646'>
<phase_done name='idealLoop' nodes='439' live='246' stamp='0.646'/>
</phase>
<phase name='idealLoop' nodes='439' live='246' stamp='0.646'>
<phase_done name='idealLoop' nodes='445' live='246' stamp='0.646'/>
</phase>
<phase_done name='optimizer' nodes='504' live='285' stamp='0.646'/>
</phase>
<phase name='matcher' nodes='504' live='285' stamp='0.646'>
<phase_done name='matcher' nodes='283' live='283' stamp='0.647'/>
</phase>
<phase name='regalloc' nodes='352' live='351' stamp='0.647'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='461' live='418' stamp='0.650'/>
</phase>
<phase name='output' nodes='461' live='418' stamp='0.650'>
<phase_done name='output' nodes='479' live='430' stamp='0.653'/>
</phase>
<code_cache total_blobs='284' nmethods='21' adapters='176' free_code_cache='250515968'/>
<task_done success='1' nmsize='840' count='34504' inlined_bytes='96' stamp='0.701'/>
</task>
<task compile_id='27' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='14593' iicount='14593' stamp='0.701'>
<phase name='parse' nodes='3' live='3' stamp='0.701'>
<type id='735' name='int'/>
<klass id='846' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='847' holder='846' name='toLowerCase' return='735' arguments='735' flags='0' bytes='39' iicount='14593'/>
<parse method='847' uses='14593' stamp='0.701'>
<bc code='182' bci='4'/>
<method id='849' holder='846' name='getProperties' return='735' arguments='735' flags='0' bytes='11' iicount='15271'/>
<dependency type='unique_concrete_method' ctxk='846' x='849'/>
<call method='849' count='14081' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='14593' stamp='0.701'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='65' live='63' memory='30400' stamp='0.701'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='13707' not_taken='886' cnt='14593' prob='0.939286'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='886' cnt='886' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='97' live='93' memory='35424' stamp='0.701'/>
</parse>
<phase_done name='parse' nodes='98' live='58' stamp='0.701'/>
</phase>
<phase name='optimizer' nodes='98' live='58' stamp='0.701'>
<phase name='ccp' nodes='98' live='57' stamp='0.701'>
<phase_done name='ccp' nodes='98' live='57' stamp='0.701'/>
</phase>
<phase name='idealLoop' nodes='98' live='57' stamp='0.701'>
<phase_done name='idealLoop' nodes='98' live='57' stamp='0.702'/>
</phase>
<phase_done name='optimizer' nodes='98' live='56' stamp='0.702'/>
</phase>
<phase name='matcher' nodes='98' live='56' stamp='0.702'>
<phase_done name='matcher' nodes='49' live='49' stamp='0.702'/>
</phase>
<phase name='regalloc' nodes='61' live='61' stamp='0.702'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='72' live='70' stamp='0.702'/>
</phase>
<phase name='output' nodes='72' live='70' stamp='0.702'>
<phase_done name='output' nodes='83' live='77' stamp='0.706'/>
</phase>
<dependency type='unique_concrete_method' ctxk='846' x='849'/>
<code_cache total_blobs='290' nmethods='23' adapters='176' free_code_cache='250490688'/>
<task_done success='1' nmsize='216' count='14595' inlined_bytes='11' stamp='0.710'/>
</task>
<task compile_id='1' method='java/lang/Math min (II)I' bytes='11' count='5774' iicount='5774' stamp='0.721'>
<phase name='parse' nodes='3' live='3' stamp='0.721'>
<type id='735' name='int'/>
<klass id='846' name='java/lang/Math' flags='17'/>
<method id='847' holder='846' name='min' return='735' arguments='735 735' flags='9' bytes='11' iicount='5774'/>
<parse method='847' uses='5774' stamp='0.721'>
<bc code='163' bci='2'/>
<branch target_bci='9' taken='2489' not_taken='3285' cnt='5774' prob='0.43107'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.721'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.721'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.721'>
<phase name='ccp' nodes='33' live='18' stamp='0.721'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.721'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.721'>
<phase_done name='idealLoop' nodes='34' live='14' stamp='0.721'/>
</phase>
<phase_done name='optimizer' nodes='34' live='14' stamp='0.721'/>
</phase>
<phase name='matcher' nodes='34' live='14' stamp='0.721'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.721'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.721'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='18' live='18' stamp='0.721'/>
</phase>
<phase name='output' nodes='18' live='18' stamp='0.721'>
<phase_done name='output' nodes='23' live='23' stamp='0.721'/>
</phase>
<code_cache total_blobs='289' nmethods='26' adapters='176' free_code_cache='250510720'/>
<task_done success='1' nmsize='88' count='5775' stamp='0.723'/>
</task>
<task compile_id='36' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='13696' backedge_count='10853' iicount='13696' stamp='0.780'>
<phase name='parse' nodes='3' live='3' stamp='0.780'>
<type id='729' name='boolean'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<klass id='743' name='java/lang/String' flags='17'/>
<method id='846' holder='743' name='equals' return='729' arguments='742' flags='1' bytes='81' iicount='13696'/>
<parse method='846' uses='13696' stamp='0.781'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='13042' not_taken='654' cnt='13696' prob='0.952249'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='0' not_taken='13042' cnt='13042' prob='never'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='12754' not_taken='288' cnt='13042' prob='0.977917'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='42' not_taken='9587' cnt='9629' prob='0.00436182'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='9341' not_taken='246' cnt='9587' prob='0.97434'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='42' not_taken='9587' cnt='9341' prob='0.00436182'/>
<parse_done nodes='272' live='258' memory='71384' stamp='0.788'/>
</parse>
<phase_done name='parse' nodes='273' live='183' stamp='0.788'/>
</phase>
<phase name='optimizer' nodes='273' live='183' stamp='0.788'>
<phase name='idealLoop' nodes='277' live='171' stamp='0.788'>
<loop_tree>
<loop idx='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='302' live='151' stamp='0.788'/>
</phase>
<phase name='idealLoop' nodes='302' live='151' stamp='0.788'>
<loop_tree>
<loop idx='487' inner_loop='1' main_loop='487' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='557' live='274' stamp='0.789'/>
</phase>
<phase name='idealLoop' nodes='557' live='274' stamp='0.789'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='589' inner_loop='1' main_loop='589' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='609' live='311' stamp='0.789'/>
</phase>
<phase name='ccp' nodes='609' live='311' stamp='0.789'>
<phase_done name='ccp' nodes='609' live='311' stamp='0.789'/>
</phase>
<phase name='idealLoop' nodes='609' live='310' stamp='0.789'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='589' inner_loop='1' main_loop='589' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='612' live='289' stamp='0.790'/>
</phase>
<phase name='idealLoop' nodes='612' live='289' stamp='0.790'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='589' inner_loop='1' main_loop='589' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='615' live='286' stamp='0.790'/>
</phase>
<phase_done name='optimizer' nodes='715' live='286' stamp='0.790'/>
</phase>
<phase name='matcher' nodes='715' live='286' stamp='0.790'>
<phase_done name='matcher' nodes='226' live='226' stamp='0.791'/>
</phase>
<phase name='regalloc' nodes='306' live='303' stamp='0.791'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='350' live='331' stamp='0.792'/>
</phase>
<phase name='output' nodes='350' live='331' stamp='0.792'>
<phase_done name='output' nodes='374' live='343' stamp='0.804'/>
</phase>
<code_cache total_blobs='307' nmethods='38' adapters='182' free_code_cache='250490816'/>
<task_done success='1' nmsize='600' count='13705' backedge_count='10869' stamp='0.815'/>
</task>
<task compile_id='98' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='5646' iicount='5648' stamp='1.334'>
<phase name='parse' nodes='3' live='3' stamp='1.334'>
<klass id='838' name='[B' flags='1041'/>
<klass id='846' name='java/io/BufferedInputStream' flags='1'/>
<method id='847' holder='846' name='getBufIfOpen' return='838' flags='2' bytes='21' compile_id='86' compiler='C1' level='3' iicount='5690'/>
<klass id='849' name='java/io/IOException' flags='1'/>
<uncommon_trap method='847' bci='9' reason='unloaded' action='reinterpret' index='2' klass='849'/>
<parse method='847' uses='5690' stamp='1.334'>
<bc code='199' bci='6'/>
<branch target_bci='19' taken='5688' not_taken='0' cnt='5688' prob='always'/>
<uncommon_trap bci='6' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='46' live='44' memory='26160' stamp='1.334'/>
</parse>
<phase_done name='parse' nodes='47' live='28' stamp='1.334'/>
</phase>
<phase name='optimizer' nodes='47' live='28' stamp='1.334'>
<phase name='ccp' nodes='47' live='28' stamp='1.334'>
<phase_done name='ccp' nodes='47' live='28' stamp='1.335'/>
</phase>
<phase name='idealLoop' nodes='47' live='28' stamp='1.335'>
<phase_done name='idealLoop' nodes='47' live='28' stamp='1.335'/>
</phase>
<phase_done name='optimizer' nodes='50' live='28' stamp='1.335'/>
</phase>
<phase name='matcher' nodes='50' live='28' stamp='1.335'>
<phase_done name='matcher' nodes='29' live='29' stamp='1.335'/>
</phase>
<phase name='regalloc' nodes='34' live='34' stamp='1.335'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='33' stamp='1.335'/>
</phase>
<phase name='output' nodes='36' live='33' stamp='1.335'>
<phase_done name='output' nodes='45' live='41' stamp='1.335'/>
</phase>
<code_cache total_blobs='372' nmethods='89' adapters='196' free_code_cache='250399936'/>
<task_done success='1' nmsize='120' count='6538' stamp='1.354'/>
</task>
<task compile_id='203' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='148892' backedge_count='57113' iicount='148914' stamp='2.631'>
<phase name='parse' nodes='3' live='3' stamp='2.631'>
<type id='735' name='int'/>
<klass id='742' name='java/lang/Object' flags='1'/>
<type id='736' name='long'/>
<klass id='810' name='sun/misc/Unsafe' flags='17'/>
<method id='846' holder='810' name='getAndAddInt' return='735' arguments='742 736 735' flags='17' bytes='27' compile_id='199' compiler='C1' level='2' iicount='149422'/>
<parse method='846' uses='149422' stamp='2.631'>
<bc code='182' bci='3'/>
<method id='848' holder='810' name='getIntVolatile' return='735' arguments='742 736' flags='257' bytes='0' compile_id='200' compile_kind='c2n' level='0' iicount='385'/>
<call method='848' count='191723' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='15'/>
<bc code='182' bci='18'/>
<type id='729' name='boolean'/>
<method id='849' holder='810' name='compareAndSwapInt' return='729' arguments='742 736 735 735' flags='273' bytes='0' compile_id='198' compile_kind='c2n' level='0' iicount='440'/>
<call method='849' count='192001' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='21'/>
<branch target_bci='0' taken='55941' not_taken='152991' cnt='208932' prob='0.267747'/>
<uncommon_trap bci='0' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='loop_limit_check' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='3'/>
<call method='848' count='191723' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='18'/>
<call method='849' count='192001' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='21'/>
<branch target_bci='0' taken='55941' not_taken='152991' cnt='208932' prob='0.267747'/>
<parse_done nodes='178' live='173' memory='48320' stamp='2.634'/>
</parse>
<phase_done name='parse' nodes='179' live='124' stamp='2.634'/>
</phase>
<phase name='optimizer' nodes='179' live='124' stamp='2.634'>
<phase name='idealLoop' nodes='179' live='119' stamp='2.634'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='2.634'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='2.634'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='2.634'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='2.634'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='2.634'/>
</phase>
<phase name='ccp' nodes='180' live='102' stamp='2.634'>
<phase_done name='ccp' nodes='180' live='102' stamp='2.634'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='2.634'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='86' stamp='2.634'/>
</phase>
<phase name='idealLoop' nodes='180' live='86' stamp='2.634'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='86' stamp='2.634'/>
</phase>
<phase_done name='optimizer' nodes='180' live='86' stamp='2.634'/>
</phase>
<phase name='matcher' nodes='180' live='86' stamp='2.634'>
<phase_done name='matcher' nodes='90' live='90' stamp='2.634'/>
</phase>
<phase name='regalloc' nodes='100' live='100' stamp='2.635'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='109' live='107' stamp='2.635'/>
</phase>
<phase name='output' nodes='109' live='107' stamp='2.635'>
<phase_done name='output' nodes='119' live='115' stamp='2.638'/>
</phase>
<code_cache total_blobs='470' nmethods='182' adapters='200' free_code_cache='250177792'/>
<task_done success='1' nmsize='152' count='267108' backedge_count='180989' stamp='2.641'/>
</task>
</compilation_log>
<hotspot_log_done stamp='46.085'/>
</hotspot_log>
